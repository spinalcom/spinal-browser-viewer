{"mappings":"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;Y,0B,S,C,qB;gB,M,C,G,oB,A;gB,c,E;gB,U,C,S,U;oB,I,C,mB,G;oB,I,C,oB,G;oB,I,C,iB,G;gB;Y;Q;IAqXf;IAEA,MAAA;QACA,MAAA,UAAA,MAAA,CAAA,GAAA,+DAAA,AAAA,EAAA,oBAAA;QACA,MAAA,WAAA,MAAA,CAAA,GAAA,+DAAA,AAAA,EAAA,qBAAA;QACA,MAAA,QAAA,MAAA,CAAA,GAAA,+DAAA,AAAA,EAAA,kBAAA;QAEA,IAAA,CAAA,mBAAA,GAAA,QAAA,IAAA,CAAA,GAAA;Q,I,C,oB,G,S,I,C,G;QAEA,IAAA,CAAA,iBAAA,GAAA,MAAA,IAAA,CAAA,GAAA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,c;Y,a;Y,O;gB,gB;Y;Q,G;Y,G,O;gB,a;Y,G;gB,I,mB,I,I,oB,I,I,iB,G,G,O;oB,G,O;wB,G,Q;4B,a;wB,G;4B,I,E,C,I,E,C,I,mB,C,I;yB;wB,I,E,C;wB,G,Q;4B,a;wB,G;4B,I,E,C;yB;wB,I,E,C;wB,G,Q;4B,a;wB,G;4B,I,E,C,I,E,C,I,oB,C,I;yB;wB,I,E,C;wB,G,Q;4B,a;wB,G;4B,I,E,C;yB;wB,I,E,C;wB,G,Q;4B,a;wB,G;4B,I,E,C,I,E,C,I,iB,C,I;yB;qB;iB,I,I,E;a;Y,I,E,C;Y,G,O;gB,a;Y,G;gB,G,a;oB,a;oB,I;wB,S,I,c;oB;gB,G;oB,G,W;wB,I,E,C;qB;iB,E;a,E;S;Q,I,E,C;Q,G,O;Y,a;Q,G;Y,G,qB;gB,O;oB,Y,I,Q;oB,uB,I,mB;oB,wB,I,oB;oB,qB,I,iB;gB;Y;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAjZA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACLA;;AACA;;kBAEe;IACb,MAAM;IACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,sCAAa,AAAD;IAC1C,iBAAiB,SAAS,IAAI;AAChC;;;;;ACNA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAsC,MAAM;IAC1D,OAAO,eAAe,GAAG,QAAQ,oBAAsC,eAAe;IACtF,OAAO,QAAQ,GAAG;IAG5B,QAAQ,oBAAoC,OAAO,CAAC;IACpD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A;;A,I,gB;I,M;I,O;Q;K;I,Y;Q,qB,C,G,0B,A;I;I;Q,O;Y,Y;Y,U,E;Q;I;I,S;Q,M,Q,M;Y,I,C,Q,G,M,I,C,W,C,O,M,E,O,S;Q;Q,M,a,M,E,S;Y,M,W,C,G,+C,A,E,W,C;Y,M,O,Y,S,O,G,G;Y,I,C,M,O,E;Y,O,C,G,+C,A,E,a,C,Q,W,C;gB,C,G,+C,A,E,Q,C;gB,O,K,O,G,G,O,C,G,oB,A;Y,G,I,C,C;gB,M,W,O,G,C,O;oB,M,O,C,G,+C,A,E,W,C,G,E,C,G;oB,M,U,M,K,U;oB,O;gB;gB,O,Q,G,C;Y;Q;Q,S,M;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y,I,C,S,C;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;gB,c;Y;Q;Q,I,E,C;Q,G,qB;Y,a;Q,G;Y,G,M,I,E,C,I,Q,E,S,I,E,K;gB,O,G,qB;oB,K;oB,O;wB,Q,K,I,C,G;wB,Y,K,Q,C,G;wB,W,K,O,C,G;wB,Q,K,I,C,G;wB,Q,K,I;oB;gB;Y,I;S;Q,I,E,C;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;4DC6Ba;AAmBb,yDAAa;AA8Bb,oGAAoG;AACpG,oGAAoG;AACpG,oGAAoG;AAGpG,yDAAa;0DA2DA;iEAqB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L,IAAI,OAAO,WAAW,EACpB,KAAK,IAAI,CAAC;oBACR,OAAO;oBACP,QAAQ;wBACN,MAAM,SAAS,OAAO,YAAY;wBAClC,IAAI,eAAe,CAAA,GAAA,2BAAS,AAAD,EAAE,eAAe,CAC1C;wBAEF,MAAM,YAAY;4BAChB,MAAM;wBACR;wBACA,0BAA0B,SAAS,CACjC,mBACA;oBAEJ;gBACF;YAEJ;YAEF,cAAc;QAChB;IACF,GAAG;AACL;;;;;ACtTA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAyC,MAAM;IAC7D,OAAO,eAAe,GAAG,QAAQ,oBAAyC,eAAe;IACzF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,mBAAsC,OAAO;IAC3E,QAAQ,oBAAuC,OAAO,CAAC;IACvD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A;;A;;A;A;A,I,gB;I,M;I;Q,O;Y,W;Y,c;Y,M;Y,Q;Y,Y,E;Y,a;Q;I;I,Y;kB,C,G,2B,A;mB,C,G,4B,A;yB,C,G,kC,A;I;I,S;Q,gB,S,K;Y,I,I,C,S,I,O,O;gB,Y;gB,Q;Y;iB,O;gB,Y;gB,Q;Y;Q;Q,yB,M;Y,I,C,M,G,C;Y,O,M,C,I,C,M,E;Y,I,C,Y,G,I,C,M,C,I;Q;Q,Q,M;Y,I,C,M,G;Y,I,Q,I;Y,I,O,Y,K,W;gB,I,O,Y,Y,C,G,uC,A,G,O,I,G,O,Y;qB,O,I,G,C,G,+C,A,E,W,C,O,Y,C,E,C,G;gB,I,C,Y,G,O,I;gB,O,K,G;Y,O,I,O,I,K,W;gB,I,C,Y,G,O,I;gB,I,C,I,G,O,I;Y,O;gB,I,C,Y,G;gB,I,C,I,G,O,I;Y;Y,8B;Y,C,G,+D,A,E,gC,C,I,C,Y;Y,qB;Y,2B;Y,C,G,+D,A,E,c,C,I,C,Y,E,I,C,C;gB,M,W,G,O,mB,c,iB,E;Y;Q;Q,S,M,E,M,G;Q,Q,M,E,M,G;I;AAwDf;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;;;AC1EA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA2B,MAAM;IAC/C,OAAO,eAAe,GAAG,QAAQ,oBAA2B,eAAe;IAC3E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAwB,OAAO;IAC7D,QAAQ,oBAAyB,OAAO,CAAC;IACzC,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A;A;A;;A;A,I;A,I,gB;I,M;I;Q,O;Y,sB;Y,O;Y,K;Y,gB,E;Y,Q;Y,qB,E;Y,c;Y,kB;Q;I;I,Y;iB,C,G,0B,A;I;I,O;Q;Q;K;I,S;Q,a,O,E,S;Y,Q,O,C,I,C,G,C,U,K;Y,Q,O,C,G,C,G,C,U,G;Q;Q,e,O;Y,C,G,+D,A,E,U,C;Q;Q,M;Y,I,I,C,M,C,I,I,W,I,C,c,G,M,C,G,+D,A,E,M,C,I,C,M,C,I;iB,I,C,c,G,E;Q;Q,M;Y,I,C,mB,G,E;Y,I,O,C;Y,I,I,I,G,I,I,C,W,C,M,E,I;gB,M,O,I,C,W,C,E;gB,I,M;oB,O;wB,W,K,I,C,I,C,G;wB,K,M,C,G,+D,A,E,M,C;oB;oB,I,C,mB,C,I,C;gB;Y;Q;Q;Y,I,Q,I;Y,I,Q,I,C,K;Y,I,M,I,C,G;Y,O,K,C,a,C,I,C,M,C,I,E,S,G;gB,I,S,C,G,sB,A,E,O,C,M,M,E,I,I,E,O;gB,O,I,C,C;oB,I,M,M,C,K,I,O;wB,M,M,C,K,G;wB,M,K,C,qB;oB;gB;Y;Y,I,C,K,G;Y,I,C,G,G;Y,I,C,oB,G;Q;Q;Y,I,I,C,M,C,I,I,W;gB,I,I,C,M,I,W;oB,I,I,C,M,I,W;wB,I,C,M,C,I,C,M,C,I,C,M;wB,I,C,M,G;oB;oB,I,I,C,M,I,W,I,C,M,G,I,C,M,C,I,C,I,C,I,C,a,C,I,C,I;gB;Y;Q;Q;Y,wC;Y,I,C,I,C,gB,E,I,C,gB,G,I;Y,I,I,C,gB,C,M,K,I,C,W,C,M,E;gB,I,C,gB,C,M,C,G,I,C,gB,C,M;gB,I,I,I,G,I,I,C,W,C,M,E,I;oB,M,U,I,C,W,C,E;oB,I,C,gB,C,I,C;gB;Y;Y,I,I,C,Y,I,W,I,C,gB,C,I,C,I,C,e,C,I,C,I;Q;I;I;Q,S,O,M,C,W,C,M;Q,I,C,S;Q,I,C,e;I;I,O;Q,Q;Y,I,C,S;Q;Q,a;Y,I,C,e;Q;I;I;Q,I,I,C,M,C,I,I,a,I,C,M,I,W,I,C,M,C,I,C,M,C,I,C,M;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;;;ACff,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA0B,MAAM;IAC9C,OAAO,eAAe,GAAG,QAAQ,oBAA0B,eAAe;IAC1E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAuB,OAAO;IAC5D,QAAQ,oBAAwB,OAAO,CAAC;IACxC,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,mB;Y,W;gB,O;gB,K;Y;Q;I;I,S;Q;Y,I,C,K,C,e,I,C,G,E,I,C,S;Y,I,C,iB,G;Q;Q;Y,I,C,K,C,iB,I,C,G,C,I;Q;I;I;Q,I,C,S,C,K,G,I,C,G,C,O,C,I,C,G;Q,I,C,S,C,G,G,I,C,G,C,O,C,G,C,G;I;I,O;Q;Y,I,I,C,iB,E;gB,I,C,S,C,K,G,I,C,G,C,O,C,I,C,G;gB,I,C,S,C,G,G,I,C,G,C,O,C,G,C,G;Y;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,G,W;Y,O;gB,gB;gB,oB;Y;Q,G;Y,G,a;gB,a;gB,O;oB,mB;gB;Y,G;gB,G,W;oB,I,E,C;iB;a,E;Y,I,E,C;Y,G,mB;gB,G,gB;oB,I;wB,S,S,M;4B,I,iB,G;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,gB;oB,I;wB,S,S,M;4B,O,I,M;wB;oB;gB,G;oB,I,E,C;iB;a,E;S,E;Q,I,E,C;Q,G,a;Y,O;gB,a,I,iB;Y;Y,I;gB,mB,S,M;oB,I,iB,G;gB;gB,oB,S,M;oB,I,iB,G;gB;Y;Q,G;Y,G,mB;gB,I,E,C;a;Y,I,E,C;Y,G,Y;gB,a;oB,S;oB,e;oB,gB;gB;gB,O;oB,a;gB;Y,G;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,O,I,S,C,K;wB,U,S,G;4B,I,I,C,I,S,E,S;wB;wB,Y;oB;gB;a,E;Y,I,E,C;Y,G,Y;gB,a;oB,S;oB,e;oB,gB;gB;gB,O;oB,a;gB;Y,G;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,O,I,S,C,G;wB,U,S,G;4B,I,I,C,I,S,E,O;wB;wB,Y;oB;gB;a,E;Y,I,E,C;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,I,iB,G;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,a;oB,a;oB,I;wB,S,I,I;oB;gB,G;oB,I,E,C;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;ACLA,qEAAqE;AACrE,yBAAyB;AAEzB,sDAAsD;AACtD,EAAE;AACF,0EAA0E;AAC1E,gEAAgE;AAChE,sEAAsE;AACtE,sEAAsE;AACtE,4EAA4E;AAC5E,qEAAqE;AACrE,wBAAwB;AACxB,EAAE;AACF,0EAA0E;AAC1E,yDAAyD;AACzD,EAAE;AACF,0EAA0E;AAC1E,6DAA6D;AAC7D,4EAA4E;AAC5E,2EAA2E;AAC3E,wEAAwE;AACxE,4EAA4E;AAC5E,yCAAyC;;AAEzC;AAEA,SAAS,WAAW,IAAI;IACtB,IAAI,OAAO,SAAS,UAClB,MAAM,IAAI,UAAU,qCAAqC,KAAK,SAAS,CAAC;AAE5E;AAEA,4DAA4D;AAC5D,SAAS,qBAAqB,IAAI,EAAE,cAAc;IAChD,IAAI,MAAM;IACV,IAAI,oBAAoB;IACxB,IAAI,YAAY;IAChB,IAAI,OAAO;IACX,IAAI;IACJ,IAAK,IAAI,IAAI,GAAG,KAAK,KAAK,MAAM,EAAE,EAAE,EAAG;QACrC,IAAI,IAAI,KAAK,MAAM,EACjB,OAAO,KAAK,UAAU,CAAC;aACpB,IAAI,SAAS,GAAG,GAAG,KACtB;aAEA,OAAO,GAAG,GAAG;QACf,IAAI,SAAS,GAAG,GAAG,KAAI;YACrB,IAAI,cAAc,IAA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B,G,K;wB,a;oB,G;wB,I,E,C;qB;iB;a,E;Y,I,E,C;Y,G,c;gB,G,W;oB,G,gB;wB,a;oB,G;wB,I,E,C;qB;oB,I,E,C;oB,I,E,C,I,c,E,S,G,E,K;wB,O,G,gB;4B,K;4B,a;wB,G;4B,G,Q;gC,a;4B,G;gC,I,E,C,I,E,C,I,O,C,I,C,G;6B;4B,I,E,C;4B,G,K;gC,Y;oC;wC,M;wC,S;wC,O,I,O,C,G,C,G;wC,Y;oC;iC;gC,a;gC,O;oC,Q,I,O,C,G,C,G;oC,U;gC;4B,G;gC,I,E,C,yB,I,E,C,I,O,C,G,C,G;6B;4B,I,E,C;4B,G,W;gC,O;oC,O;gC;gC,I;oC,e,I,W;oC,iB,I,a;gC;4B;yB,E;oB;iB,E;gB,I,E,C;gB,I,mB,C,M,G,I,G,O;oB,G,gB;wB,a;oB,G;wB,I,E,C;qB;oB,I,E,C;oB,I,E,C,I,mB,E,S,G;wB,O,G,O;4B,K,I,S;4B,a;wB,G;4B,G,gB;gC,a;4B,G;gC,I,E,C,I,E,C,I,S,I;6B;4B,I,E,C;4B,G,W;gC,a;4B,G,I,E,C,I,G,E,S,G,E,K;gC,O,G,gB;oC,K;oC,a;gC,G;oC,G,Q;wC,a;oC,G;wC,I,E,C,I,E,C,I,O,C,I,C,G;qC;oC,I,E,C;oC,G,K;wC,Y;4C;gD,M;gD,S;gD,O,I,O,C,G,C,G;gD,Y;4C;yC;wC,a;wC,O;4C,Q,I,O,C,G,C,G;4C,U;wC;oC,G;wC,I,E,C,+B,I,E,C,I,O,C,G,C,G;qC;iC;4B,I;yB,E;oB;iB,E,K,I,E;a,E;S,E;Q,I,E,C;Q,G,a;Y,O;gB,a,I,oB;Y;Y,I;gB,mB,S,M;oB,I,oB,G;gB;gB,oB,S,M;oB,I,oB,G;gB;Y;Q,G;Y,G,mB;gB,I,E,C;a;Y,I,E,C;Y,G,qB;gB,a;Y,G;gB,G,Y;oB,O;wB,a;oB;gB,G;oB,G,S;wB,I,E,C;qB;oB,I,E,C;oB,G,Y;wB,O;4B,O,I,K;4B,U,S,G;gC,I,K,G;4B;4B,Y;wB;oB;iB,E;gB,I,E,C;gB,G,Y;oB,O;wB,a;oB;gB,G;oB,G,S;wB,I,E,C;qB;oB,I,E,C;oB,G,Y;wB,O;4B,O,I,G;4B,U,S,G;gC,I,G,G;4B;4B,Y;wB;oB;iB,E;a,E;Y,I,E,C;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,I,oB,G;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,a;oB,a;oB,I;wB,S,I,O;oB;gB,G;oB,I,E,C;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AF/gBjB,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AGJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA4B,MAAM;IAChD,OAAO,eAAe,GAAG,QAAQ,oBAA4B,eAAe;IAC5E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAyB,OAAO;IAC9D,QAAQ,oBAA0B,OAAO,CAAC;IAC1C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;;A;;A;A,I,gB;I,M;I;Q,O;Y,oB;Y,e;Y,oB;Y,mB;Y,c;Y,a,E;Y,c;Y,Q;Y,S,E;Y,kB,I;Y,sB,E;Y,c;Y,iB;Q;I;I,Y;e,C,G,wB,A;kB,C,G,2B,A;I;I,O;Q;Q;K;I,S;Q,c,I,E,K;Y,I,K,K,C,U,C,G,M,a,K,I,C,I,C,C;gB,I,K,K,C,U,C,G,M,Y;oB,M,U,S,a,C;oB,M,Q,K,I,C,G,K,W,mB,K,Y,C,G,M,M,mB,K,Q,C,G;oB,Q,Y,C,Q;oB,Q,Y,C,Y,K,I,C,G;oB,Q,K,C,O,G;oB,S,I,C,W,C;oB,Q,K;oB,S,I,C,W,C;gB,O;oB,I,U,S,a,C;oB,Q,Y,C,Q,gB,K,U;oB,Q,Y,C,Y,K,I;oB,Q,K;gB;Y;Q;Q,Y,I,E,K;Y,I,C,iB,C,M,C,O;Q;Q,iB,K;Y,mH;Y,yG;Y,I,C,a,G;Q;Q,0B,K;Y,I,C,kB,G;Q;Q;Y,I,C,a,G;Y,I,C,kB,G;Y,I,C,Y,G;Q;Q,a,I;Y,O,C,G,kC,A,E,W,C;Q;Q,W,K;Y,I,S,I,C,O,C,M,G;iB;gB,I,C,iB,G,I,C,O,C,M,C,S;gB,I,S,I,C,O,C,M,G;gB,I,C,O,C,M,C,Q,G,S;gB,I,C,S;gB,I,I,C,O,C,M,I,G;oB,I,C,Y,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,CAAC,KAAK,IAAI,CAAC,CAAC;oBAC5B,OAAO,CAAC,MAAM,QAAQ,CAAC;gBACzB;YACF,OACE,OAAO;QAEX;aAEA,OAAO,QAAQ,OAAO,CAAC;IAE3B;IACA,aAAa,YAAY,EAAE;QACzB,QAAQ,GAAG,CAAC;IACd;IACA,YAAY,IAAI,EAAE;QAChB,IAAI;QACJ,IAAI,KAAK,IAAI,IAAI,WACf,WAAW,KAAK,IAAI;aAEpB,WAAW,KAAK,KAAK,CAAC,UAAU,CAAC,GAAG;QAEtC,IAAI,aAAa,aAAa,OAAO;aAChC,IAAI,aAAa,gBAAgB,OAAO;aACxC,IAAI,aAAa,QAAQ,OAAO;aAChC,IAAI,aAAa,0BAA0B,OAAO;aAClD,IAAI,aAAa,YAAY,OAAO;aACpC,OAAO;IACd;AAEF;AACO,MAAM,eAAe,IAAI;;;;;ACxKhC,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAwB,MAAM;IAC5C,OAAO,eAAe,GAAG,QAAQ,oBAAwB,eAAe;IACxE,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAqB,OAAO;IAC1D,QAAQ,oBAAsB,OAAO,CAAC;IACtC,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A,c;A,I,gB;I,M;I;Q,O;Y,S,E;Y,a;Y,Y,E;Y,U,E;Q;I;I,Y,C;I,O,E;I,S;Q,mB,S,K;Y,I,C,Q,G;Y,I,C,K,C,4B;Q;Q,a,I;Y,O,C,G,kC,A,E,W,C;Q;Q,W,S,U;Y,I,C,Q,G,E;Y,I,O,W,I;Y,I,Q,e,Q,0B;gB,I,Q,C,G,kC,A,E,gB,C,I,C,W,E;gB,I,C,O,C,I,C;gB,I,C,W,G,M,I;gB,I,C,O;Y;Q;Q,S;Y,C,G,kC,A,E,a,C,I,C,W,E,I,C,C;gB,I,C,U,G;Y;Q;Q,W,S,S;Y,I,C,Q,G,E;Y,I,C,W,G,I,C,O,C,U,C,I;Y,I,C,O,C,M,C,Y,G,I,C,O,C,M,G,C,Y,C;Y,I,C,O;Q;I;IAmCf;QACA,IAAA,QAAA,CAAA,GAAA,kCAAA,AAAA,EAAA,gBAAA;QACA,IAAA,CAAA,WAAA,GAAA,MAAA,IAAA;QACA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA;QACA,IAAA,CAAA,OAAA;QACA,IAAA,CAAA,KAAA,CAAA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,O;Y,a;Q,G,I,E,C,I,O,E,S,I,E,K;Y,O,G,Q;gB,K;gB,I;oB,S,S,M;wB,O,I,S,C;oB;gB;Y,G;gB,I,E,C,I,E,C,K,I,I;a;Q,I;Q,I,E,C;Q,G,O;Y,a;Q,G;Y,G,Y;gB,O;oB,mB;gB;gB,I;oB,e,I,iB;gB;gB,a,I,E,C;oB;wB,K;wB,I,S,G;4B,I,a,I,I;4B,O,G,gB;gC,O;oC,kB;oC,iB;gC;gC,U;oC,Y,S,M;wC,O,I,S,C;oC;gC;4B,G;gC,G,iB;oC,O;wC,Y;oC;gC,G;oC,G,W;wC,I,E,C,I,E,C,I,W,C;qC;oC,I,E,C,6C,I,E,C,W,I,I;iC,E;gC,I,E,C;gC,G,iB;oC,O;wC,Y;oC;gC,G;oC,I,E,C,I,E,C,W,I;iC;6B,E;wB;oB;iB;gB,O;oB,O,I,U;oB,U,S,G;wB,I,U,G;oB;oB,Y;gB;Y;S,E;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AA5DA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA2B,MAAM;IAC/C,OAAO,eAAe,GAAG,QAAQ,oBAA2B,eAAe;IAC3E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAwB,OAAO;IAC7D,QAAQ,oBAAyB,OAAO,CAAC;IACzC,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q;Q;Q;K;I;Q,O,C;I;I,S;Q;Y,I,C,K,C,gB,I,C,I,E,I,C,K;Q;Q;Y,I,C,K,C,c,I,C,I,E,I,C,K;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,W;Q,O;Y,gB;Y,oB;Q;I,G;Q,G,a;Y,a;Y,O;gB,mB;Y;Q,G;Y,G,W;gB,I,E,C;a;S,E;Q,I,E,C;Q,G,mB;Y,I,I,C,K,C,U,C,G,M,c,G,gB;gB,I;oB,S,I,Q;gB;Y,G;gB,I,E,C;a,I,I,E;Y,I,E,C;Y,I,Y,I,O,G,gB;gB,I;oB,S,I,M;gB;Y,G;gB,I,E,C;a,I,I,E;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,c;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,O;gB,a;Y,G,I,E,C,I,O,E,S,I,E,K;gB,O,G,Q;oB,K;oB,I;wB,S,S,M;4B,O,I,S,C;wB;oB;gB,G;oB,I,E,C,mB,I,E,C,K,I,I;iB;Y,I;Y,I,E,C;Y,G,a;gB,a;gB,O;oB,Y,C,I,Y;gB;gB,I;oB,S,S,M;wB,I,kB,G;oB;gB;Y,G;gB,G,K;oB,a;gB,G;oB,I,E,C;iB;a;S,E;Q,I,E,C;Q,I,Y,I,O,G,gB;Y,a;Q,G;Y,I,E,C;S,I,G,gB;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,I,W,C,M,I,I,G,Y,I,E,C,I,W,E,S,K,E,K;Y,O,G,gB;gB,K;gB,U;oB,Y,S,M;wB,O,I,gB,C;oB;gB;Y,G;gB,G,iB;oB,G,O;wB,a;oB,G;wB,G,W;4B,I,E,C,I,E,C,I,W,C;yB;wB,I,E,C;wB,G,O;4B,a;wB,G;4B,I,E,C,I,E,C,M,I,C,G;yB;qB,E;iB;gB,I,E,C;gB,G,iB;oB,G,Y;wB,O;4B,Q;4B,gB,I,Y;4B,S;wB;wB,I;4B,gB,I,Y;4B,c,I,U;wB;oB;iB,E;a,E;Q,I,K,I,E;Q,I,E,C;Q,I,Y,I,Q,C,I,e,I,I,oB,C,M,G,I,G,O;Y,G,gB;gB,a;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,Y,I,E,C,I,oB,E,S,K,E,K;gB,O,G,gB;oB,K;oB,U;wB,Y,S,M;4B,O,I,sB,C;wB;oB;gB,G;oB,G,iB;wB,G,O;4B,a;wB,G;4B,G,W;gC,I,E,C;6B;4B,I,E,C;4B,G,O;gC,a;4B,G;gC,I,E,C,I,E,C,M,S;6B;yB,E;qB;oB,I,E,C;oB,G;iB,E;Y,I;S,E,K,I,E;Q,I,E,C;Q,G,a;Y,a;Y,O;gB,a,I,kB;Y;Y,I;gB,mB,S,M;oB,I,kB,G;gB;gB,oB,S,M;oB,I,kB,G;gB;Y;Q,G;Y,G,qB;gB,a;Y,G;gB,G,W;oB,a;oB,O;wB,gB;oB;oB,I;wB,c,I,kB;oB;gB,G;oB,G,U;wB,O;4B,Y;wB;oB,G;wB,G,Y;4B,G,W;gC,O;oC,Y;gC;gC,I;oC,a,I,e;gC;gC,O;oC,O,I,Y;oC,U,S,G;wC,I,Y,G;oC;oC,Y;gC;4B;yB,E;qB,E;oB,I,E,C;oB,G,U;wB,O;4B,Y;wB;oB,G;wB,G,S;4B,I;gC,4B,I,wB;4B;wB;qB,E;iB,E;a,E;Y,I,E,C;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,I,kB,G;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,a;oB,a;oB,I;wB,S,I,Q;oB;gB,G;oB,I,E,C;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AHJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AIJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAkC,MAAM;IACtD,OAAO,eAAe,GAAG,QAAQ,oBAAkC,eAAe;IAClF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,mBAA+B,OAAO;IACpE,QAAQ,oBAAgC,OAAO,CAAC;IAChD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;A,oC;;;A;;A;A;;A;;A;;A;A;A,mB;A,I;A,I,gB;I,M;I;Q,O;Y,oB;Y,sB;Y,O;Y,O;Y,kB;Y,gB;Y,U;Y,qB,E;Y,gB,E;Y,Q;Y,sB,E;Y,c;Y,kB;Q;I;I,Y;wB,C,G,iC,A;gC,C,G,yC,A;0B,C,G,mC,A;I;I,O;Q;Q;K;I,S;Q,iC;Q,gD;Q,yB;Q,yD;Q,gC;Q,+B;Q,U;Q,oE;Q,wB;Q,qB;Q,O;Q,2B;Q,gD;Q,K;Q,a,U,E,S;Y,W,K,C,G,C,U,K;Y,W,K,C,G,C,U,K;Y,I,C,S;Q;Q,e,U,E,Q;Y,I,I,I,G,I,S,O,C,M,E,I;gB,M,U,S,O,C,E;gB,I,Q,K,C,G,M,W,K,C,G,I,S,O,C,M,C,G;Y;Q;Q,kB,Q,E,M;Y,S,I,C,I,C,I,C,G,C,O,I;Q;Q,oB,Q;Y,C,G,+D,A,E,U,C,S,I;Q;Q,wB,U;Y,I,C,uB,G;Q,yD;Q;Q,wB,gB;Y,I,C,gB,G;Q;Q,M;Y,I,I,C,M,C,I,I,W,I,C,mB,G,M,C,G,+D,A,E,W,C,I,C,M,C,I;Q;Q,M;Y,I,C,oB,G,E;Y,I,O,C;Y,I,I,I,G,I,I,C,W,C,M,E,I;gB,M,O,I,C,W,C,E;gB,I,M;oB,O;wB,W,K,I,C,I,C,G;wB,W,M,C,G,+D,A,E,W,C;oB;oB,I,C,oB,C,I,C;gB;Y;Q;Q,oB,G;Y,I,M,E;Y,I,I,O,I,W,I,I,I,G,I,I,O,C,M,E,I;gB,M,U,I,O,C,E;gB,I,I,C;Y;Y,O;Q;Q,M;Y,I,I,C,gB,I,a,I,C,gB,I;gB,I,I,C,K,I,a,I,C,K,I,W;oB,I,M,M,C,G,+D,A,E,iB,C,I,C,M,C,I,E,I,C,gB;oB,I,I,I,G,I,I,C,uB,C,M,E,I;wB,M,U,I,C,uB,C,E;wB,C,G,+D,A,E,sB,C,I,C,M,C,I,E,K,Q,W,E,Q,Y;oB;gB,O;oB,I,Q,I,C,K;oB,I,Q,I,C,K;oB,I,M,M,C,G,+D,A,E,iB,C,I,C,M,C,I,E,I,C,gB;oB,C,G,+D,A,E,sB,C,I,C,M,C,I,E,K,I,C,K,E,I,C,K;gB;mB,Q,G,C;Q;Q,M;Y,I,I,C,M,C,K,I,O,O,M,C,W,C,M,C,K,C,a,C,I,C,M,C,I,E,O;gB,I,gB,M,O,M,C,gB,C,e,C,I,C,M,C,I,E,I,I,E,I,C,M,C,O;gB,I,e;oB,I,Y,M,O,M,C,gB,C,Y,C,I,C,M,C,I,E,I,C,M,C,O;oB,I,C,M,C,I,G,C,G,+C,A,E,W,C,U,E;gB;gB,M,I,C,c;gB,I,C,e;gB,I,C,S;Y;iB;gB,M,I,C,c;gB,I,C,e;Y;Y,uE;Y,+D;Y,0C;Y,oB;Y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,G;Q;Q;Y,I,C,K,C,iB,I,C,G,E,I,C,Q;Q;I;I;Q,I,I,C,G,K,W;Y,I,C,S,C,K,G,I,C,G,C,K,C,G;Y,I,C,S,C,K,G,I,C,G,C,K,C,G;Q;I;I,O;Q;Y,I,I,C,wB,E;gB,I,I,C,G,K,W;oB,I,C,S,C,K,G,I,C,G,C,K,C,G;oB,I,C,S,C,K,G,I,C,G,C,K,C,G;gB;Y;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,G,W;Y,O;gB,gB;gB,oB;Y;Q,G;Y,G,a;gB,a;gB,O;oB,mB;gB;Y,G;gB,G,W;oB,I,E,C;iB;a,E;Y,I,E,C;Y,G,mB;gB,G,gB;oB,I;wB,S,S,M;4B,I,wB,G;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,gB;oB,I;wB,S,S,M;4B,O,I,M;wB;oB;gB,G;oB,I,E,C;iB;a,E;S,E;Q,I,E,C;Q,G,a;Y,O;gB,a,I,wB;Y;Y,I;gB,mB,S,M;oB,I,wB,G;gB;gB,oB,S,M;oB,I,wB,G;gB;Y;Q,G;Y,G,mB;gB,I,E,C;a;Y,I,E,C;Y,G,Y;gB,a;oB,S;oB,e;oB,gB;gB;gB,O;oB,a;gB;Y,G;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,O,I,S,C,K;wB,U,S,G;4B,I,I,C,I,S,E,S;wB;wB,Y;oB;gB;a,E;Y,I,E,C;Y,G,Y;gB,a;oB,S;oB,e;oB,gB;gB;gB,O;oB,a;gB;Y,G;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,O,I,S,C,K;wB,U,S,G;4B,I,I,C,I,S,E,S;wB;wB,Y;oB;gB;a,E;Y,I,E,C;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,I,wB,G;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,a;oB,a;oB,I;wB,S,I,I;oB;gB,G;oB,I,E,C;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAyC,MAAM;IAC7D,OAAO,eAAe,GAAG,QAAQ,oBAAyC,eAAe;IACzF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAsC,OAAO;IAC3E,QAAQ,oBAAuC,OAAO,CAAC;IACvD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,0B;Y,W;gB,M;Y;Q;I;I,S;Q;Y,I,C,K,C,oB,I,C,Q,E,I,C,S;Y,I,C,wB,G;Q;Q;Y,I,C,K,C,sB,I,C,Q;Q;I;I;Q,I,I,C,Q,K,W,I,C,S,C,I,G,I,C,Q,C,I,C,I,C,I,C,G;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,G,W;Y,O;gB,gB;gB,oB;Y;Q,G;Y,G,a;gB,a;gB,O;oB,mB;gB;Y,G;gB,G,W;oB,I,E,C;iB;a,E;Y,I,E,C;Y,G,mB;gB,G,gB;oB,I;wB,S,S,M;4B,I,wB,G;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,gB;oB,I;wB,S,S,M;4B,O,I,M;wB;oB;gB,G;oB,I,E,C;iB;a,E;S,E;Q,I,E,C;Q,G,a;Y,O;gB,a,I,wB;Y;Y,I;gB,mB,S,M;oB,I,wB,G;gB;gB,oB,S,M;oB,I,wB,G;gB;Y;Q,G;Y,G,mB;gB,I,E,C;a;Y,I,E,C;Y,G,Y;gB,a;oB,S;oB,e;oB,gB;gB;gB,O;oB,a;gB;Y,G;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,O,I,S,C,I;wB,U,S,G;4B,I,I,C,I,S,E,Q;wB;wB,Y;oB;gB;a,E;Y,I,E,C;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,I,wB,G;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,a;oB,a;oB,I;wB,S,I,I;oB;gB,G;oB,I,E,C;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAmC,MAAM;IACvD,OAAO,eAAe,GAAG,QAAQ,oBAAmC,eAAe;IACnF,OAAO,QAAQ,GAAG;IAG5B,QAAQ,oBAAiC,OAAO,CAAC;IACjD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I;Q,O;Y,kB;Y,uB,E;Y,e,E;Y,uB,E;Q;I;I,Y,C;I,O;Q;Q;K;I,S;Q,M;Y,4B;Y,I,C,Y,G,I,C,M,C,I;Y,I,I,C,M,C,I,E,I,C,I,G,I,C,M,C,I;iB,I,I,C,M,C,I,C,I,C,I,C,G,M,a,I,C,I,G,I,C,M,C,I,C,I,C,I,C,G;Y,I,C,K,G,I,C,M,C,K;Y,I,C,a,G,M,I,C,oB,C,I,C,I;Y,8B;Y,I,C,2B;Q;Q;Y,I,C,qB,G,E;Y,I,I,I,G,I,I,C,a,C,U,C,M,E,I;gB,M,kB,I,C,a,C,U,C,E;gB,I,C,qB,C,I,C;Y;Q;Q;Y,I,C,K,C,0B,I,C,gB;QAuBf;QACA,mBAAA,KAAA;YACA,IAAA,CAAA,KAAA,CAAA,0BAAA;QACA;QACA,sBAAA,IAAA;YACA,OAAA,IAAA,QAAA,CAAA;gBACA,OAAA,MAAA,CAAA,WAAA,CAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,MAAA;YACA;QACA;IACA;IACA;QACA,IAAA,CAAA,gBAAA,GAAA;QACA,IAAA,CAAA,KAAA;IACA;IACA,OAAA;QACA,kBAAA;YACA,IAAA,CAAA,sBAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,c;Q,a;Q,a;Y,c;Y,c;Y,U;Q;I,G;Q,G,O;Y,a;Q,G;Y,G,Y;gB,a;oB,S;oB,e;oB,gB;gB;Y,G;gB,G,a;oB,O;wB,e,I,sB;wB,Q;wB,M;wB,e;oB;oB,O;wB,O,I,gB;wB,U,S,G;4B,I,gB,G;wB;wB,Y;oB;gB,G,I,E,C,I,mB,E,S,Q,E,K;oB,O,G,a;wB,K;wB,O;4B,S,S,I,C,I,C,I,C,G;wB;oB,G;wB,I,E,C,I,E,C,S,I,C,I,C,I,C,G;qB;gB,I;a,E;S,E;Q,I,E,C;Q,G,O;Y,G,Y;gB,O;oB,W;gB;gB,I;oB,e,I,iB;gB;gB,a,I,E,C;oB;wB,K;wB,I,S,G;4B,I,kB,I,I;4B,O,G,gB;gC,a;gC,O;oC,kB;oC,iB;gC;4B,G;gC,G,iB;oC,G,Q;wC,a;oC,G;wC,I,E,C,I,E,C,gB,a;qC;iC;gC,I,E,C;gC,G,iB;oC,G,Q;wC,a;oC,G;wC,I,E,C,I,E,C,gB,Y;qC;iC;6B,E;wB;oB;iB;gB,O;oB,O,I,qB;oB,U,S,G;wB,I,qB,G;oB;oB,Y;gB;Y;S,E;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AA5DA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,c;Q,a;I,G;Q,G,O;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,I,oB,G;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,I,kB,G;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,gB;gB,a;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,W;gB,a;Y,G,I,E,C,I,mB,E,S,G;gB,O,G,gB;oB,K,I,O;oB,a;oB,O;wB,a;oB;gB,G;oB,G,Q;wB,a;oB,G;wB,I,E,C,I,E,C,I,O;qB;oB,I,E,C;oB,G,0B;wB,a;wB,O;4B,Y;wB;wB,I;4B,oB,I,gB;4B,sB,I,kB;wB;oB;oB,I,E,C;oB,G,W;wB,a;wB,O;4B,Q;wB;wB,M;oB,G,I,E,C,I,kB,C,M,S,W,E,K;wB,O,G,gB;4B,K;4B,a;wB,G;4B,G,Q;gC,a;oC,S;gC;4B,G;gC,I,E,C,I,E,C,Y,K,C,G;6B;4B,I,E,C;4B,G,Q;gC,a;oC,S;gC;4B,G;gC,I,E,C,I,E,C,Y,K,C,G;6B;4B,I,E,C;4B,G,mB;gC,O;oC,O;oC,Y;gC;gC,I;oC,e,I,W;oC,iB,I,a;gC;4B;yB,E;oB,I;iB,E;Y,I;Y,I,E,C;Y,I,oB,C,M,G,I,G,O;gB,G,gB;oB,a;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,I,E,C,I,oB,E,S,K;oB,O,G,W;wB,K,M,S;wB,a;oB,G;wB,G,gB;4B,a;wB,G;4B,I,E,C,I,E,C,M,S,I;yB;wB,I,E,C;wB,I,E,C,M,S,E,S,G;4B,O,G,gB;gC,K,I,O;gC,a;gC,O;oC,a;gC;4B,G;gC,G,Q;oC,a;gC,G;oC,I,E,C,I,E,C,I,O;iC;gC,I,E,C;gC,G,W;oC,a;oC,O;wC,Q;oC;oC,M;gC,G,I,E,C,I,kB,C,M,S,W,E,K;oC,O,G,gB;wC,K;wC,a;oC,G;wC,G,Q;4C,a;gD,S;4C;wC,G;4C,I,E,C,I,E,C,Y,K,C,G;yC;wC,I,E,C;wC,G,Q;4C,a;gD,S;4C;wC,G;4C,I,E,C,I,E,C,Y,K,C,G;yC;qC;gC,I;6B,E;wB;qB,E;gB;a,E,K,I,E;S,E;Q,I,E,C;Q,G,a;Y,a;Y,O;gB,a,I,kB;Y;Y,I;gB,mB,S,M;oB,I,kB,G;gB;gB,oB,S,M;oB,I,kB,G;gB;Y;Q,G;Y,G,mB;gB,I,E,C;a;Y,I,E,C;Y,G,qB;gB,a;Y,G;gB,G,W;oB,a;oB,O;wB,gB;oB;oB,I;wB,c,I,e;oB;gB,G;oB,G,U;wB,O;4B,Y;wB;oB,G;wB,G,Y;4B,G,a;gC,O;oC,Q;oC,M;oC,e;gC;gC,O;oC,O,I,gB;oC,U,S,G;wC,I,gB,G;oC;oC,Y;gC;4B,G,I,E,C,I,mB,E,S,Q,E,K;gC,O,G,a;oC,K;oC,O;wC,S,S,I,C,I,C,I,C,G;oC;gC,G;oC,I,E,C,+B,I,E,C,S,I,C,I,C,I,C,G;iC;4B,I;yB,E;wB,I,E,C;wB,G,Y;4B,O;gC,a;4B;wB,G;4B,G,S;gC,I,E,C;6B;4B,I,E,C;4B,G,Y;gC,O;oC,O,I,K;oC,U,S,G;wC,I,K,G;oC;oC,Y;gC;4B;yB,E;wB,I,E,C;wB,G,Y;4B,O;gC,a;4B;wB,G;4B,G,S;gC,I,E,C;6B;4B,I,E,C;4B,G,Y;gC,O;oC,O,I,K;oC,U,S,G;wC,I,K,G;oC;oC,Y;gC;4B;yB,E;qB,E;oB,I,E,C;oB,G,U;wB,O;4B,Y;wB;oB,G;wB,G,oB;4B,O;gC,U,I,M;gC,uB,I,mB;4B;4B,I;gC,0B,I,sB;gC,0B,I,sB;4B;wB;qB,E;iB,E;a,E;Y,I,E,C;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,I,kB,G;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,a;oB,a;oB,I;wB,S,I,a;oB;gB,G;oB,I,E,C;iB;a,E;S,E;Q,I,E,C;Q,G,a;Y,O;gB,a,I,oB;Y;Y,I;gB,mB,S,M;oB,I,oB,G;gB;gB,oB,S,M;oB,I,oB,G;gB;Y;Q,G;Y,G,mB;gB,I,E,C;a;Y,I,E,C;Y,G,Y;gB,a;oB,S;oB,e;oB,gB;gB;gB,O;oB,a;gB;Y,G;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,O,I,Q;wB,U,S,G;4B,I,Q,G;wB;wB,Y;oB;gB;a,E;Y,I,E,C;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,I,oB,G;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,a;oB,a;oB,I;wB,S,I,W;oB;gB,G;oB,I,E,C;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AHJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,c;Y,a;Y,O;gB,gB;Y;Q,G;Y,I,Y,K,Y,G,O;gB,a;Y,G;gB,I,E,C,I,E,C,I,Y,C,I,C,I,C,G;a,I,G,O;gB,a;Y,G;gB,I,E,C;a;S;Q,I,E,C;Q,G,c;Y,a;Y,O;gB,U;gB,gB;Y;Q,G;Y,G,a;gB,a;gB,O,I,c,C;gB,I;oB,S,S,M;wB,I,S,G;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,O,I,c,C;gB,I;oB,S,S,M;wB,I,S,G;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,O,I,c,C;gB,I;oB,S,S,M;wB,I,S,G;oB;gB;Y,G;gB,I,E,C;a;S,E;Q,I,E,C;Q,G,c;Y,O;gB,Q;Y;Q,G;Y,I,S,I,I,G,a;gB,O;oB,U,I,M;oB,e,I,W;oB,gB,I,Y;oB,Q,I,I;gB;gB,I;oB,qB,I,uB;gB;Y,K,A,I,S,I,I,G,Y;gB,O;oB,U,I,M;oB,e,I,W;oB,gB,I,Y;oB,Q,I,I;gB;gB,I;oB,qB,I,uB;gB;Y,K,G,mB;gB,O;oB,gB,I,Y;oB,U,I,M;oB,e,I,W;oB,Q,I,I;gB;gB,I;oB,qB,I,uB;gB;Y;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ARJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AYJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAuC,MAAM;IAC3D,OAAO,eAAe,GAAG,QAAQ,oBAAuC,eAAe;IACvF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAoC,OAAO;IACzE,QAAQ,oBAAqC,OAAO,CAAC;IACrD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A;A,I,gB;I,M;I;Q,O;Y,mB,E;Y,a,E;Y,kB;Y,O;Y,O;Y,gB;Q;I;I,Y,C;I,S;Q;Y,I,C,M,C,M,C,I,C,iB;Q;Q;Y,I,sB,I,C,gB;Y,I,wB,Q,sB,I,C,c;Y,I,C,iB,C,O,C,C;gB,C,G,qD,A,E,Y,C,M,I,C,C;oB,I,S,W,wC;oB,oC;oB,O,M,C,W,C,M,C,K,C,a,C,M,C;wB,C,G,qD,A,E,e,C,M,I,I,E,I,C,C;4B,C,G,+D,A,E,0B,C,a,qB,I,C,K,E,I,C,K;wB;oB;yB,gD;oB,mC;oB,C,G,+D,A,E,0B,C,M,qB,I,C,K,E,I,C,K;gB;Y;Q;Q,Q,K,E,M;Y,I,C,M,G;Y,I,C,iB,G,M,I;Y,I,C,W,G,M,Q;Q;Q,S,M,E,M,G;Q,Q,M,E,M,G;I;A;A,I,U,O,kB,a,c,O,G;kBAkDf,SAAA,wCAAA;;;A;A,O,c,C,S,c;I,O;A;A,I,c,A,C;IEpDA,IAAA,OAAA,kBAAA;QACE,MAAMA,YAAY,MAAMC,OAAOC,MAAP,CAAcC,YAAd,CAA2BC,QAA3B;QAExB,IAAI,CAACJ,UAAUK,cAAV,CAAyB,UAC5BL,UAAUM,QAAV,CAAmB;YACjBC,OAAO,IAAIC,kBAAAA,WAAJ;QADU;QAKrB,OAAOR,UAAUO,KAAjB;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IAAA;QAAA,OAAA,kBAAA;YAC3C,IAAIe;YAEJ,IAAID,gBAAgBT,kBAAAA,UAApB,EACEU,OAAOD;iBACF;gBACLC,OAAO,MAAM,OAAKb,YAAL,CAAkBY;gBAE/B,IAAIC,SAAS5B,WACX4B,OAAO,MAAM,OAAKjB,eAAL,CAAqBgB,MAAMd;YAE3C;YAED,MAAMa,OAAOa,QAAP,CACJX,MACAtB,gCACAC;YAGF,OAAOqB;QAnBoC;IAoB5C;IACDY,uBAAsBd,MAAtB,EAA8BI,KAA9B;QACE,OAAOJ,OAAOK,WAAP,CACLD,OACAxB,gCACAC;IAEH;AAvHsB;AA0HzBE,iBAAiBgC,SAAjB,GAA6B;IAC3B1C;IACAK;IACAC;IACAC;IACAC;AAL2B;AAQdE,QAAAA,OAAAA,GAAAA;;;;A;A,O,c,C,S,c;I,O;A;AExKf,MAAMiC,aAAaC,QAAQ;AAC3B,MAAMC,aAAa,OAAOzD,WAAW,cAAc0D,SAAS1D;AAK5D,MAAM8B,wBAAwB2B,WAAWE,KAAzC;IACEC,YAAYC,GAAZ,EAAiBC,KAAjB,CAAwB;QACtB,KAAA;QACA,IAAIC,WAAWC,WAAf,EACE,IAAA,CAAK3D,QAAL,CAAc;YACZ4D,IAAIJ;YACJnC,MAAMoC;QAFM;IAKjB;AAT4C;AAahChC,QAAAA,OAAAA,GAAAA;AACfyB,WAAWW,eAAX,CAA2B;IAACpC;CAA5B;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,c;Q,a;I,G;Q,G,a;Y,I;gB,S,I,c;Y;Q,G;Y,I,E,C,W,I,E,C,I,iB,C,M,I;S;Q,I,E,C;Q,G,O;Y,a;Q,G;Y,G,Y;gB,a;oB,S;oB,e;oB,gB;gB;Y,G;gB,G,a;oB,O;wB,Q;wB,M;wB,e;oB;oB,O;wB,O,I,gB;wB,U,S,G;4B,I,gB,G;wB;wB,Y;oB;gB,G;oB,G,a;wB,O;4B,S;wB;oB,G;wB,I,E,C;qB;oB,I,E,C;oB,I,E,C,I,W,E,S,Q,E,K;wB,O,G,a;4B,K;4B,O;gC,S,S,I,C,I,C,I,C,G;4B;wB,G;4B,I,E,C,I,E,C,S,I,C,I,C,I,C,G;yB;oB;iB,E;a,E;Y,I,E,C;Y,I,gB,K,S,G,Y;gB,a;oB,S;oB,e;oB,gB;gB;gB,O;oB,a;gB;Y,G;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,O,I,c;wB,U,S,G;4B,I,c,G;wB;wB,Y;oB;gB;a,E,K,I,E;S,E;Q,I,E,C;Q,G,Y;Y,a;gB,S;gB,e;gB,gB;Y;Y,O;gB,a;Y;Q,G;Y,G,S;gB,I,E,C;a;Y,I,E,C;Y,G,Y;gB,O;oB,O,I,K;oB,U,S,G;wB,I,K,G;oB;oB,Y;gB;Y;S,E;Q,I,E,C;Q,G,Y;Y,a;gB,S;gB,e;gB,gB;Y;Y,O;gB,a;Y;Q,G;Y,G,S;gB,I,E,C;a;Y,I,E,C;Y,G,Y;gB,O;oB,O,I,K;oB,U,S,G;wB,I,K,G;oB;oB,Y;gB;Y;S,E;Q,I,E,C;Q,G,a;Y,a;Y,I;gB,S,I,a;Y;Q,G;Y,I,E,C;S;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AJnBA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AKJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAsC,MAAM;IAC1D,OAAO,eAAe,GAAG,QAAQ,oBAAsC,eAAe;IACtF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAmC,OAAO;IACxE,QAAQ,oBAAoC,OAAO,CAAC;IACpD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A;A,I,gB;I,M;I;Q,O;Y,mB,E;Y,O;Y,O;Q;I;I,Y,C;I,S;Q;Y,I,C,M,C,M,C,I,C,iB;Q;Q;Y,I,C,iB,C,O,C,C;gB,C,G,qD,A,E,Y,C,M,I,C,C;oB,I,S;yB,gD;oB,C,G,+D,A,E,S,C,M,I,C,K;gB;Y;Q;Q,Y;Q;Y,I,C,iB,C,O,C,C;gB,C,G,qD,A,E,Y,C,M,I,C,C;oB,I,S,W,wC;oB,oC;oB,O,M,C,W,C,M,C,K,C,a,C,M,C;wBAiCf,CAAA,GAAA,qDAAA,AAAA,EACA,eAAA,CAAA,MAAA,IAAA,IAAA,EACA,IAAA,CAAA,CAAA;4BACA,CAAA,GAAA,+DAAA,AAAA,EAAA,MAAA,CACA,aACA,IAAA,CAAA,KAAA,EACA,IAAA,CAAA,KAAA;wBAEA;oBACA;yBAEA,gDAAA;oBACA,CAAA,GAAA,+DAAA,AAAA,EAAA,MAAA,CAAA,MAAA,IAAA,CAAA,KAAA,EAAA,IAAA,CAAA,KAAA;gBAEA;YACA;QACA;QACA,QAAA,KAAA,EAAA,MAAA;YACA,IAAA,CAAA,MAAA,GAAA;YACA,IAAA,CAAA,iBAAA,GAAA,MAAA,IAAA;QACA;QACA,SAAA,MAAA,EAAA,MAAA,GAAA;QACA,QAAA,MAAA,EAAA,MAAA,GAAA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,c;Q,a;I,G;Q,G,a;Y,I;gB,S,I,c;Y;Q,G;Y,I,E,C,W,I,E,C,I,iB,C,M,I;S;Q,I,E,C;Q,G,Y;Y,a;gB,S;gB,e;gB,gB;Y;Y,O;gB,a;Y;Q,G;Y,G,S;gB,I,E,C;a;Y,I,E,C;Y,G,Y;gB,O;oB,O,I,K;oB,U,S,G;wB,I,K,G;oB;oB,Y;gB;Y;S,E;Q,I,E,C;Q,G,Y;Y,a;gB,S;gB,e;gB,gB;Y;Y,O;gB,a;Y;Q,G;Y,G,S;gB,I,E,C;a;Y,I,E,C;Y,G,Y;gB,O;oB,O,I,K;oB,U,S,G;wB,I,K,G;oB;oB,Y;gB;Y;S,E;Q,I,E,C;Q,G,a;Y,a;Y,I;gB,S,I,O;Y;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,a;Y,a;Y,I;gB,S,I,S;Y;Q,G;Y,I,E,C;S;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AA3EA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAgC,MAAM;IACpD,OAAO,eAAe,GAAG,QAAQ,oBAAgC,eAAe;IAChF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA6B,OAAO;IAClE,QAAQ,oBAA8B,OAAO,CAAC;IAC9C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A;A,I,gB;I,M;I;Q,O;Y,mB,E;Y,O;Y,O;Y,gB;Q;I;I,Y,C;I,S;Q;Y,I,C,M,C,M,C,I,C,iB;Q;Q;Y,I,sB,I,C,gB;Y,I,C,iB,C,O,C,C;gB,C,G,qD,A,E,Y,C,M,I,C,C;oB,I,S,W,wC;oB,oC;oB,O,M,C,W,C,M,C,K,C,a,C,M,C;wB,C,G,qD,A,E,e,C,M,I,I,E,I,C,C;4B,C,G,+D,A,E,M,C,a,I,C,K,E,I,C,K;wB;oB;yB,gD;oB,C,G,+D,A,E,M,C,M,I,C,K,E,I,C,K;gB;Y;Q;Q,Q,K,E,M;Y,I,C,M,G;Y,I,C,iB,G,M,I;Q;QA+Bf,SAAA,MAAA,EAAA,MAAA,GAAA;QACA,QAAA,MAAA,EAAA,MAAA,GAAA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,c;Q,a;I,G;Q,G,a;Y,I;gB,S,I,c;Y;Q,G;Y,I,E,C,W,I,E,C,I,iB,C,M,I;S;Q,I,E,C;Q,G,Y;Y,a;gB,S;gB,e;gB,gB;Y;Y,O;gB,a;Y;Q,G;Y,G,S;gB,I,E,C;a;Y,I,E,C;Y,G,Y;gB,O;oB,O,I,K;oB,U,S,G;wB,I,K,G;oB;oB,Y;gB;Y;S,E;Q,I,E,C;Q,G,Y;Y,a;gB,S;gB,e;gB,gB;Y;Y,O;gB,a;Y;Q,G;Y,G,S;gB,I,E,C;a;Y,I,E,C;Y,G,Y;gB,O;oB,O,I,K;oB,U,S,G;wB,I,K,G;oB;oB,Y;gB;Y;S,E;Q,I,E,C;Q,G,a;Y,a;Y,I;gB,S,I,M;Y;Q,G;Y,I,E,C;S;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AApDA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACLA;;AACA;AAGA;kBAGe;IACb,iBAAgB,QAAQ;QACtB,MAAM,OAAO,IAAI,CAAC,eAAe;QACjC,MAAM,SAAS,KAAK,SAAS;QAC7B,IAAI,WAAW,EAAE;QACjB,IAAI,MAAM,EAAE;QAEZ,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,I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","sources":["node_modules/spinal-env-viewer-plugin-documentation/index.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/index.js","node_modules/spinal-env-viewer-panel-manager-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelManagerService.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelApp.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalMountExtention.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/SpinalForgeExtention.js","node_modules/spinal-env-viewer-plugin-documentation/buttonClass/standard_buttons/findMessageParent.js","node_modules/spinal-env-viewer-plugin-standard_button/js/selectBIMObjectButton.js","node_modules/spinal-env-viewer-plugin-standard_button/js/utilities.js","node_modules/spinal-env-viewer-plugin-standard_button/js/fitToViewerButton.js","node_modules/spinal-env-viewer-plugin-documentation/service/utilities.js","node_modules/spinal-env-viewer-plugin-documentation/buttonClass/standard_buttons/isolateMessageParent.js","node_modules/spinal-env-viewer-plugin-documentation/buttonClass/standard_buttons/zoomMessageParent.js","node_modules/spinal-env-viewer-plugin-documentation/buttonClass/messageDetail.js","node_modules/spinal-env-viewer-plugin-documentation/buttonClass/seeMessage.js","node_modules/spinal-env-viewer-plugin-documentation/buttonClass/notesPanel.js","node_modules/spinal-env-viewer-plugin-documentation/view/notes/components/notesComponent.vue","node_modules/spinal-env-viewer-plugin-documentation/view/notes/dialogs/registerDialogs.js","node_modules/spinal-env-viewer-plugin-documentation/view/notes/dialogs/messageDetailDialog.vue","node_modules/spinal-env-viewer-plugin-documentation/buttonClass/documentationPanel.js","node_modules/spinal-env-viewer-plugin-documentation/documentationComponent.vue","node_modules/spinal-env-viewer-plugin-documentation/view/documentation/URLPanel.vue","node_modules/spinal-env-viewer-plugin-documentation/view/documentation/component/menuURL.vue","node_modules/path-browserify/index.js","node_modules/spinal-env-viewer-plugin-documentation/view/documentation/FilePanel.vue","node_modules/spinal-env-viewer-plugin-documentation/service/fileSystemExplorer.js","node_modules/spinal-env-viewer-plugin-documentation/view/documentation/component/drive.vue","node_modules/spinal-env-viewer-plugin-documentation/view/documentation/component/menuFile.vue","node_modules/spinal-env-viewer-plugin-documentation/view/documentation/AttributesPanel.vue","node_modules/spinal-env-viewer-plugin-documentation/view/documentation/component/menuAttributes.vue","node_modules/spinal-env-viewer-plugin-documentation/view/documentation/component/menuCategoryAttributes.vue","node_modules/spinal-env-viewer-plugin-documentation/view/documentation/component/attributesImport.vue","node_modules/spinal-env-viewer-plugin-documentation/view/rightClick/attributesRightClick.vue","node_modules/spinal-env-viewer-plugin-bimobjectservice/build/createGraphBimObject.js","node_modules/spinal-env-viewer-plugin-bimobjectservice/createGraphBimObject.js","node_modules/spinal-models-bimobject/build/BIMObject.js","node_modules/spinal-models-bimobject/BIMObject.js","node_modules/spinal-env-viewer-plugin-documentation/view/rightClick/deleteUrlRightClick.vue","node_modules/spinal-env-viewer-plugin-documentation/view/rightClick/urlRightClick.vue","node_modules/spinal-env-viewer-plugin-documentation/service/forgeTree.js","node_modules/spinal-env-viewer-bim-manager-service/dist/index.js","node_modules/spinal-env-viewer-bim-manager-service/src/index.ts","node_modules/spinal-env-viewer-bim-manager-service/dist/bimObjects/bimService.js","node_modules/spinal-env-viewer-bim-manager-service/src/bimObjects/bimService.ts","node_modules/@parcel/node-resolver-core/lib/_empty.js"],"sourcesContent":["const circularMenuHookName = 'circularMenu';\nconst SideBarHookName = 'GraphManagerSideBar';\nconst namePanel = 'panel-documentation'\nconst documentationGroupPanel = 'panel-documentationgroup'\nconst nameAttributesRightClickPanel = 'attributes-right-click'\n\n\nconst {\n  spinalContextMenuService,\n} = require('spinal-env-viewer-context-menu-service');\n\nconst {\n  SpinalForgeExtention,\n} = require('spinal-env-viewer-panel-manager-service_spinalforgeextention');\n\n\nimport FindMessageParentBtn from \"./buttonClass/standard_buttons/findMessageParent.js\"\nimport IsolateMessageParentBtn from \"./buttonClass/standard_buttons/isolateMessageParent.js\"\nimport ZoomMessageParentBtn from \"./buttonClass/standard_buttons/zoomMessageParent.js\"\n\nimport MessageDetail from \"./buttonClass/messageDetail.js\";\n\nimport ColorMessageParent from \"./buttonClass/seeMessage.js\";\n\nimport {\n  NotesButton\n} from './buttonClass/notesPanel.js'\n\nimport messageDialog from \"./view/notes/dialogs/registerDialogs.js\";\n\n\nimport {\n  DocumentationButton,\n  DocumentationExtension,\n  ExportToDriveButton,\n  addAutoAttributesRightClick,\n  registerRightClickButton,\n  addAutoUrlRightClick,\n  deleteAutoUrlRightClick\n} from './buttonClass/documentationPanel.js'\n// import {\n//   DocumentationGroupButton\n// } from \"./buttonClass/documentationGroup\";\nimport attributesRightClick from './view/rightClick/attributesRightClick.vue'\nimport {\n  SpinalMountExtention\n} from \"spinal-env-viewer-panel-manager-service\";\n\n\n// deleteAutoUrlRightClick\n//////////////////////////////////////////////////////////////////////////////////////\n//                               Documentation\n//////////////////////////////////////////////////////////////////////////////////////\nSpinalForgeExtention.registerExtention(namePanel, DocumentationExtension);\n\nspinalContextMenuService.registerApp(\n  circularMenuHookName,\n  new DocumentationButton(),\n  [7]\n);\nspinalContextMenuService.registerApp(\n  SideBarHookName,\n  new DocumentationButton(), [7]\n);\n\nspinalContextMenuService.registerApp(\n  SideBarHookName,\n  new FindMessageParentBtn(), [7]\n);\n\nspinalContextMenuService.registerApp(\n  SideBarHookName,\n  new IsolateMessageParentBtn(), [7]\n);\n\nspinalContextMenuService.registerApp(\n  SideBarHookName,\n  new ZoomMessageParentBtn(), [7]\n);\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                Documentation group\n//////////////////////////////////////////////////////////////////////////////////////\n// SpinalForgeExtention.registerExtention(documentationGroupPanel,\n//   DocumentationExtension);\n\n// spinalContextMenuService.registerApp(\n//   SideBarHookName,\n//   new DocumentationGroupButton(), [7]\n// );\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                Notes\n//////////////////////////////////////////////////////////////////////////////////////\nspinalContextMenuService.registerApp(\n  circularMenuHookName,\n  new NotesButton(), [7]\n);\n\nspinalContextMenuService.registerApp(\n  SideBarHookName,\n  new NotesButton(), [7]\n);\n\nspinalContextMenuService.registerApp(\n  SideBarHookName,\n  new MessageDetail(), [7]\n);\n\nspinalContextMenuService.registerApp(SideBarHookName, new ColorMessageParent(),\n  [7]);\n\nSpinalMountExtention.mount(messageDialog);\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                Export to drive button\n//////////////////////////////////////////////////////////////////////////////////////\n// spinalContextMenuService.registerApp(\n//   SideBarHookName,\n//   new ExportToDriveButton(), [7]\n// );\n\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                Right click register\n//////////////////////////////////////////////////////////////////////////////////////\n\nSpinalForgeExtention.registerExtention(\"attributes-right-click\",\n  addAutoAttributesRightClick);\nSpinalForgeExtention.registerExtention(\"url-right-click\",\n  addAutoUrlRightClick);\nSpinalForgeExtention.registerExtention(\"delete-right-click\",\n  deleteAutoUrlRightClick);\nregisterRightClickButton();","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst {\n  spinalPanelManagerService,\n  SpinalPanelApp\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst SpinalForgeExtention = require(\"./SpinalForgeExtention.js\")(\n  spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  SpinalForgeExtention\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalPanelManagerService = require(\"./SpinalPanelManagerService\");\nconst SpinalPanelApp = require(\"./SpinalPanelApp\");\n\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalPanelManagerService === \"undefined\")\n  G_root.spinal.spinalPanelManagerService = new SpinalPanelManagerService();\nconst SpinalMountExtention = require(\"./SpinalMountExtention.js\")(\n  G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  spinalPanelManagerService: G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp,\n  SpinalMountExtention,\n  install(Vue) {\n    Vue.prototype.$spinalPanelManagerService =\n      G_root.spinal.spinalPanelManagerService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} panels key = panelName, value = an instance of SpinalPanelApp\n * @class SpinalPanelManagerService\n */\nclass SpinalPanelManagerService {\n  /**\n   *Creates an instance of SpinalPanelManagerService.\n   * @memberof SpinalPanelManagerService\n   */\n  constructor() {\n    this.panels = {};\n  }\n\n  /**\n   * method to register an Panel Application\n   *\n   * @param {string} panelName the name of the panel\n   * @param {SpinalPanelApp} spinalPanelApp the application\n   * @memberof SpinalPanelManagerService\n   */\n  registerPanel(panelName, spinalPanelApp) {\n    this.panels[panelName] = spinalPanelApp;\n  }\n\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  openPanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].openPanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  closePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].closePanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  tooglePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].tooglePanel(option);\n    return false;\n  }\n}\n\nmodule.exports = SpinalPanelManagerService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n * Base interface like class of a panel\n *\n * @class SpinalPanelApp\n */\nclass SpinalPanelApp {\n  constructor() {}\n\n  openPanel(option) {}\n  closePanel(option) {}\n  tooglePanel(option) {}\n}\n\nmodule.exports = SpinalPanelApp;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (!option.vueMountComponent) {\n    throw new Error(\"mount : missing option vueMountComponent\");\n  }\n\n  cfg.name = option.name || \"SpinalMount\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.parentContainer = option.parentContainer || document.body;\n  return cfg;\n}\n\nfunction getDialog() {\n  if (!this.dialog) {\n    this.dialog = document.createElement(\"div\");\n    const _compo = document.createElement(\"div\");\n    this.dialog.className = \"spinal-modal-container\";\n    this.cfg.parentContainer.appendChild(this.dialog);\n    this.dialog.appendChild(_compo);\n    this.compoment = new this.cfg.vueMountComponent({\n      propsData: {\n        onFinised: this.onFinised.bind(this)\n      }\n    }).$mount(_compo);\n  }\n  return this.dialog;\n}\n\n/**\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { mount }\n */\nmodule.exports = function(spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n```js\n{\n  name: \"myCustomDialogName\",\n  vueMountComponent: Vue.extend(aVueCompomentDialog),\n  parentContainer: document.body\n}```\n     *\n     * @param {*} option\n     */\n    mount(option) {\n      let cfg = configInit(option);\n      const SpinalMount = class extends SpinalPanelApp {\n        constructor() {\n          super();\n          this.cfg = cfg;\n          this.dialog = null;\n          this.compoment = null;\n        }\n\n        openPanel(opt) {\n          getDialog.call(this);\n          this.compoment.opened(opt);\n        }\n        closePanel(opt) {\n          if (this.dialog !== null) {\n            this.compoment.removed(opt);\n            this.dialog.remove();\n            this.dialog = null;\n            this.compoment = null;\n          }\n        }\n\n        tooglePanel(opt) {\n          if (this.dialog !== null) {\n            this.closePanel(opt);\n          } else {\n            this.openPanel(opt);\n          }\n        }\n\n        /**\n         * called when dialog closed by the dialog itself\n         */\n        onFinised(closeResult) {\n          this.closePanel(closeResult);\n        }\n      };\n      let SpinalMountInstance = new SpinalMount();\n      spinalPanelManagerService.registerPanel(cfg.name, SpinalMountInstance);\n    }\n  };\n};\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (typeof option.toolbar !== \"undefined\") {\n    cfg.toolbar = {\n      icon: option.toolbar.icon || \"done\",\n      label: option.toolbar.label || \"label\",\n      subToolbarName: option.toolbar.subToolbarName || \"spinalcom\",\n      styleBtn: {},\n      styleIcon: {}\n    };\n    Object.assign(cfg.toolbar.styleBtn, option.toolbar.styleBtn);\n    Object.assign(cfg.toolbar.styleIcon, option.toolbar.styleIcon);\n  }\n  if (typeof option.panel !== \"undefined\") {\n    cfg.panel = {\n      title: option.panel.title || \"Spinalcom Panel\",\n      classname: option.panel.classname || \"spinal-pannel\",\n      closeBehaviour: option.panel.closeBehaviour || \"hide\"\n    };\n    if (typeof option.style !== \"undefined\") {\n      cfg.style = {};\n      Object.assign(cfg.style, option.style);\n    }\n  }\n  cfg.name = option.name || \"spinalExtention\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.onLoad = option.onLoad;\n  cfg.onUnLoad = option.onUnLoad;\n  return cfg;\n}\n\nfunction onToolbarCreated() {\n  this.viewer.removeEventListener(\n    window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n    this.onToolbarCreatedBinded\n  );\n  this.onToolbarCreatedBinded = null;\n  createToolbar.call(this);\n}\n\nfunction createToolbar() {\n  this.toolbarButton = new window.Autodesk.Viewing.UI.Button(\n    this.cfg.toolbar.label\n  );\n  this.toolbarButton.onClick = () => {\n    this.tooglePanel(this.cfg);\n  };\n  var icon = this.toolbarButton.container.firstChild;\n  icon.className = \"adsk-button-icon md-icon md-icon-font md-theme-default\";\n  icon.innerHTML = this.cfg.toolbar.icon;\n\n  for (var key in this.cfg.toolbar.styleIcon) {\n    if (this.cfg.toolbar.styleIcon.hasOwnProperty(key)) {\n      icon.style[key] = this.cfg.toolbar.styleIcon[key];\n    }\n  }\n  for (var key in this.cfg.toolbar.styleBtn) {\n    if (this.cfg.toolbar.styleBtn.hasOwnProperty(key)) {\n      this.toolbarButton.container.style[key] = this.cfg.toolbar.styleBtn[key];\n    }\n  }\n\n  this.toolbarButton.setToolTip(this.cfg.toolbar.label);\n  this.subToolbar = this.viewer.toolbar.getControl(\n    this.cfg.toolbar.subToolbarName\n  );\n  if (!this.subToolbar) {\n    this.subToolbar = new window.Autodesk.Viewing.UI.ControlGroup(\n      this.cfg.toolbar.subToolbarName\n    );\n    this.viewer.toolbar.addControl(this.subToolbar);\n  }\n  this.subToolbar.addControl(this.toolbarButton);\n}\n\nfunction closeComponent() {\n  if (this.cfg.panel.closeBehaviour !== \"hide\") {\n    try {\n      this.component.removed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n    this.panel.container.remove();\n    this.panel = null;\n  } else {\n    try {\n      this.component.closed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction getPanel() {\n  if (this.panel === null) {\n    this.panel = new window.PanelClass(this.viewer, this.cfg.panel.title);\n    var _container = document.createElement(\"div\");\n    var _scrollContainer = this.panel.createScrollContainer();\n\n    _container.className +=\n      this.panel.container.id + \"-panelcontainer \" + this.cfg.panel.classname;\n    for (var key in this.cfg.style) {\n      if (this.cfg.style.hasOwnProperty(key)) {\n        this.panel.container.style[key] = this.cfg.style[key];\n      }\n    }\n\n    if (this.panel.container.style.left) {\n      this.panel.container.style.left = \"0\";\n    }\n\n    this.panel.container.appendChild(_scrollContainer);\n    _scrollContainer.style.height = \"calc(100% - 52px)\";\n    _scrollContainer.appendChild(_container);\n\n    var _footer = this.panel.createFooter();\n    this.panel.container.appendChild(_footer);\n\n    if (this.cfg.vueMountComponent) {\n      this.component = new this.cfg.vueMountComponent().$mount(_container);\n    }\n\n    const _this = this;\n    this.panel.addVisibilityListener(open => {\n      if (!open) {\n        closeComponent.call(_this);\n      }\n    });\n  }\n  return this.panel;\n}\n\n/**\n *\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { createExtention, registerExtention }\n */\nmodule.exports = function (spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n     * factory function to create a dynamic class that extends the `SpinalPanelApp` class\n     *```js\n{\n  name: \"extention_name\",\n  vueMountComponent: Vue.extend(aVueCompoment),\n  onLoad: () => {console.log(\"onLoad\");},\n  onUnLoad: () => {console.log(\"onUnLoad\");},\n  toolbar: {\n    icon: \"done\",\n    label: \"testLabel\",\n    subToolbarName: \"spinalcom\"\n  },\n  panel: {\n    title: \"Spinalcom Panel\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"hide\"\n  },\n  style: {}\n}\n```\n     * @param {object} option see description\n     * @returns SpinalForgeExtention\n     */\n    createExtention(option) {\n      const cfg = configInit(option);\n      /**\n       * class returned by createExtention\n       * this extention is also registered in autodesk viweer\n       * @extends SpinalPanelApp\n       * @property {AutodeskViewer} viewer the autodesk view\n       * @property {AutodeskPanel} panel the panel\n       * @property {Vue.component} component the component mounted\n       * @property {Object} cfg the option given on creation\n       */\n      const SpinalForgeExtention = class extends SpinalPanelApp {\n        constructor(viewer, options) {\n          super();\n          window.Autodesk.Viewing.Extension.call(this, viewer, options);\n          this.viewer = viewer;\n          this.panel = null;\n          this.cfg = cfg;\n          spinalPanelManagerService.registerPanel(cfg.name, this);\n        }\n        /**\n         * method called on load of the extention (managed by the autodesk viewer)\n         * the method create a button in the toolbar if put in the option of `createExtention`.\n         */\n        load() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            // add toolbar\n            if (this.viewer.toolbar) {\n              createToolbar.call(this);\n            } else {\n              this.onToolbarCreatedBinded = onToolbarCreated.bind(this);\n              this.viewer.addEventListener(\n                window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n                this.onToolbarCreatedBinded\n              );\n            }\n          }\n          if (typeof cfg.onLoad !== \"undefined\") cfg.onLoad.call(this);\n          return true;\n        }\n        /**\n         * method called when the viewer unload of the extention\n         * (managed by the autodesk viewer)\n         */\n        unload() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            this.viewer.subToolbar.removeControl(this.toolbarButton);\n          }\n          if (typeof cfg.onUnLoad !== \"undefined\") cfg.onUnLoad.call(this);\n          return true;\n        }\n\n        activate() {\n          return this.load();\n        }\n\n        deactivate() {\n          return this.unload();\n        }\n\n        /**\n         *\n         * @param {*} option\n         */\n        openPanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(true);\n          try {\n            this.component.opened.call(this.component, option, this.viewer);\n          } catch (e) {\n            console.error(e);\n          }\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        closePanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(false);\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        tooglePanel(option) {\n          if (this.panel === null || this.panel.isVisible() === false) {\n            this.openPanel.call(this, option);\n          } else { this.closePanel.call(this, option); }\n        }\n      };\n      return SpinalForgeExtention;\n    },\n\n    /**\n     * Method to register an extention to the viewer and the forge viewer\n     * @param {string} name name of the extention\n     * @param {*} classExtention an extention created by `createExtention`\n     */\n    registerExtention(name, classExtention) {\n      // register to forge\n      window.Autodesk.Viewing.theExtensionManager.registerExtension(\n        name,\n        classExtention\n      );\n      // register to viewer\n      window.spinal.ForgeExtentionManager.addExtention(name);\n    }\n  };\n};\n","const {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\n\nimport {\n  NOTE_TYPE,\n  NOTE_RELATION,\n} from \"spinal-env-viewer-plugin-documentation-service/dist/Models/constants\";\n\nimport {\n  GEOGRAPHIC_TYPES_ORDER\n} from \"spinal-env-viewer-context-geographic-service/build/constants\";\n\nimport {\n  SpinalContextSelectBIMObject\n} from \"spinal-env-viewer-plugin-standard_button/js/selectBIMObjectButton\";\n\nimport {\n  SpinalContextFitToViewer\n} from \"spinal-env-viewer-plugin-standard_button/js/fitToViewerButton\";\n\nimport {\n  isShownParam\n} from \"spinal-env-viewer-plugin-standard_button/js/utilities\";\n\nimport {\n  SpinalGraphService\n} from \"spinal-env-viewer-graph-service\";\nimport {\n  utilities\n} from \"../../service/utilities\";\n\nclass FindMessageParent extends SpinalContextApp {\n  constructor() {\n    super(\"Find Message Parent\", \"Find message Parent\", {\n      icon: \"find_in_page\",\n      icon_type: \"in\",\n      backgroundColor: \"#356BAB\",\n      fontColor: \"#FFFFFF\",\n    });\n  }\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const type = option.selectedNode.type.get();\n\n    return contextType === `${NOTE_TYPE}GroupContext` ? Promise.resolve(\n        true) :\n      Promise.resolve(-1);\n  }\n\n  async action(option) {\n    const nodeId = option.selectedNode.id.get();\n    const contextId = option.context.id.get();\n\n    const parents = await utilities.getNoteParentsBim(nodeId, contextId);\n\n\n    if (!parents || (parents && parents.length === 0)) {\n      window.alert(\"No parent on bimMaquette\");\n      return;\n    }\n\n    parents.forEach((el) => {\n      el.model.selector.setSelection(el.ids, el.model, \"selectOnly\");\n    })\n\n  }\n}\n\nexport default FindMessageParent;","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalGraphService } from 'spinal-env-viewer-graph-service';\n\nconst {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\n\nimport {\n  utilities,\n  SELECTrelationList,\n  isShownParam\n} from \"./utilities\";\n\nclass SpinalContextSelectBIMObject extends SpinalContextApp {\n  constructor() {\n    super(\"select BIMObject button\", \"select BIMObject button\", {\n      icon: \"devices\",\n      icon_type: \"in\"\n    });\n  }\n\n  isShown(option) {\n    const type = option.selectedNode.type.get();\n    if (isShownParam.indexOf(type) > -1) { return (Promise.resolve(true)); }\n    return (Promise.resolve(-1));\n  }\n\n  action(option) {\n    let realNode = SpinalGraphService.getRealNode(option.selectedNode.id\n      .get());\n    this.viewer = window.spinal.ForgeViewer.viewer;\n    let self = this;\n    realNode.find(SELECTrelationList,\n      function (node) {\n        if (node.info.type.get() === \"BIMObject\") {\n          return true;\n        }\n      }).then(lst => {\n      self.viewer.clearSelection();\n      utilities.sortBIMObjectByModel(lst).then(lstByModel => {\n        for (let i = 0; i < lstByModel.length; i++) {\n          const element = lstByModel[i];\n          for (let j = 0; j < element.model.modelScene.length; j++) {\n            const scene = element.model.modelScene[j];\n            // console.log(\"hello select\", element.dbid, scene.model);\n            scene.model.selector.setSelection(element.dbid, scene.model, \"selectOnly\");\n          }\n        }\n      });\n    });\n  }\n}\n\nexport {\n  SpinalContextSelectBIMObject\n};\n","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n// import {\n//   // ROOMS_CATEGORY_RELATION,\n//   // ROOMS_TO_ELEMENT_RELATION,\n//   // ROOMS_GROUP_RELATION,\n//   // EQUIPMENTS_CATEGORY_RELATION,\n//   // EQUIPMENTS_TO_ELEMENT_RELATION,\n//   // EQUIPMENTS_GROUP_RELATION,\n//   // ROOMS_GROUP_CONTEXT,\n//   // ROOMS_GROUP,\n//   // ROOMS_CATEGORY,\n//   // EQUIPMENTS_GROUP_CONTEXT,\n//   // EQUIPMENTS_CATEGORY,\n//   // EQUIPMENTS_GROUP\n\n//   groupService\n\n// } from 'spinal-env-viewer-room-manager/services/service';\n\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\n\nimport {\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  EQUIPMENT_TYPE,\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n  REFERENCE_RELATION,\n} from \"spinal-env-viewer-context-geographic-service/build/constants\";\n\nimport { SpinalBmsEndpoint } from \"spinal-model-bmsnetwork\";\n\nimport { CONSTANTS } from \"spinal-env-viewer-plugin-network-tree-service\";\n\n\nconst SELECTrelationList = [\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n  REFERENCE_RELATION,\n  `${REFERENCE_RELATION}.ROOM`,\n  \"hasBIMObject\", // for old system\n  // groupService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  // groupService.constants.CATEGORY_TO_GROUP_RELATION,\n  // groupService.constants.GROUP_TO_ROOMS_RELATION,\n  // groupService.constants.GROUP_TO_EQUIPMENTS_RELATION,\n  // groupService.constants.GROUP_TO_ENDPOINT_RELATION,\n  groupManagerService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  groupManagerService.constants.CATEGORY_TO_GROUP_RELATION,\n  ...Object.values(groupManagerService.constants.OLD_RELATIONS_TYPES),\n  `groupHas${ROOM_TYPE}`,\n  `groupHas${EQUIPMENT_TYPE}`,\n  `groupHas${SITE_TYPE}`,\n  `groupHas${BUILDING_TYPE}`,\n  `groupHas${FLOOR_TYPE}`,\n  `groupHas${ZONE_TYPE}`,\n  `groupHas${SpinalBmsEndpoint.nodeTypeName}`,\n  // CONSTANTS.NETWORK_RELATION,\n  // CONSTANTS.NETWORK_BIMOJECT_RELATION\n];\n\nconst isShownParam = [\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  EQUIPMENT_TYPE,\n  // ...groupService.constants.CONTEXTS_TYPES,\n  // ...groupService.constants.GROUPS_TYPES,\n  // groupService.constants.CATEGORY_TYPE\n  ...Object.values(groupManagerService.constants.OLD_CONTEXTS_TYPES),\n  ...Object.values(groupManagerService.constants.OLD_GROUPS_TYPES),\n  groupManagerService.constants.CATEGORY_TYPE,\n  `${ROOM_TYPE}Group`,\n  `${EQUIPMENT_TYPE}Group`,\n  `${SITE_TYPE}Group`,\n  `${BUILDING_TYPE}Group`,\n  `${FLOOR_TYPE}Group`,\n  `${ZONE_TYPE}Group`,\n  `${ROOM_TYPE}GroupContext`,\n  `${EQUIPMENT_TYPE}GroupContext`,\n  `${SITE_TYPE}GroupContext`,\n  `${BUILDING_TYPE}GroupContext`,\n  `${FLOOR_TYPE}GroupContext`,\n  `${ZONE_TYPE}GroupContext`,\n  // CONSTANTS.CONTEXT_TYPE,\n  // CONSTANTS.NETWORK_TYPE,\n];\n\nconst utilities = {\n  async sortBIMObjectByModel(arrayOfBIMObject) {\n    let arrayModel = [];\n    for (const key in spinal.BimObjectService.mappingBimFileIdModelId) {\n      if (spinal.BimObjectService.mappingBimFileIdModelId.hasOwnProperty(key)) {\n        const element = spinal.BimObjectService.mappingBimFileIdModelId[key];\n        let obj = {\n          dbid: [],\n          model: element,\n        };\n        arrayModel.push(obj);\n      }\n    }\n    for (let i = 0; i < arrayOfBIMObject.length; i++) {\n      SpinalGraphService._addNode(arrayOfBIMObject[i]);\n      let bim = SpinalGraphService.getNode(arrayOfBIMObject[i].info.id.get());\n      try {\n        let spinalModel =\n          window.spinal.BimObjectService.mappingBimFileIdModelId[\n            bim.bimFileId.get()\n          ];\n        if (spinalModel) {\n          for (let j = 0; j < arrayModel.length; j++) {\n            const element = arrayModel[j];\n            if (element.model.modelId === spinalModel.modelId) {\n              element.dbid.push(bim.dbid.get());\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"skip node because bimFileId is not defined\", error);\n      }\n    }\n    return arrayModel;\n  },\n};\n\nmodule.exports = {\n  SELECTrelationList,\n  isShownParam,\n  utilities,\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport {\n  SpinalGraphService\n} from 'spinal-env-viewer-graph-service';\n\nconst {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\nimport {\n  SELECTrelationList,\n  utilities,\n  isShownParam\n} from \"./utilities\";\n\n\nclass SpinalContextFitToViewer extends SpinalContextApp {\n  constructor() {\n    super(\"fit button\", \"fit to viewer button\", {\n      icon: \"zoom_in\",\n      icon_type: \"in\"\n    });\n  }\n\n  isShown(option) {\n    const type = option.selectedNode.type.get();\n    if (isShownParam.indexOf(type) > -1)\n      return (Promise.resolve(true));\n    return (Promise.resolve(-1))\n  }\n\n  action(option) {\n    this.viewer = window.spinal.ForgeViewer.viewer\n    let self = this;\n    let realNode = SpinalGraphService.getRealNode(option.selectedNode.id\n      .get());\n    this.viewer = window.spinal.ForgeViewer.viewer\n\n    realNode.find(SELECTrelationList,\n      function(node) {\n        if (node.info.type.get() === \"BIMObject\") return true;\n      }).then(lst => {\n      utilities.sortBIMObjectByModel(lst).then(lstByModel => {\n        let arrayToFit = []\n        for (let i = 0; i < lstByModel.length; i++) {\n          const element = lstByModel[i];\n          let obj = {\n            model: element.model.modelScene[0].model,\n            selection: element.dbid\n          }\n          arrayToFit.push(obj);\n          obj.model.selector.setSelection(element.dbid, obj\n            .model,\n            \"selectOnly\")\n        }\n        self.viewer.fitToView(arrayToFit);\n      })\n    });\n  }\n}\n\n\nexport {\n  SpinalContextFitToViewer\n};","import {\n  serviceDocumentation\n} from \"spinal-env-viewer-plugin-documentation-service\";\n\nimport {\n  SpinalGraphService\n} from \"spinal-env-viewer-graph-service\";\n\nimport geographicService from \"spinal-env-viewer-context-geographic-service\";\n\nimport {\n  groupManagerService\n} from \"spinal-env-viewer-plugin-group-manager-service\";\n\nimport {\n  BIM_OBJECT_TYPE\n} from \"spinal-env-viewer-plugin-forge/dist/Constants\";\n\nimport {\n  isShownParam\n} from \"spinal-env-viewer-plugin-standard_button/js/utilities\";\n\nimport {\n  NOTE_TYPE,\n  NOTE_RELATION,\n} from \"spinal-env-viewer-plugin-documentation-service/dist/Models/constants\";\n\nimport {\n  SELECTrelationList\n} from \"spinal-env-viewer-plugin-standard_button/js/utilities\";\n\nlet ItemColoredMap = new Map();\nlet BimElementsColor = new Map();\n\nclass DocumentationUtilities {\n  constructor() {}\n\n  async addLink(option, BIMObjectName, label = undefined, URL = undefined) {\n    if (label != undefined && URL != undefined && URL != \"\" && label != \"\") {\n      if (option.info != undefined) {\n        serviceDocumentation.addURL(option.info, label, URL);\n        return option;\n      } else if (option.dbid != undefined) {\n        let boolIsCreated = await window.spinal.BimObjectService\n          .createBIMObject(\n            option.dbid,\n            BIMObjectName,\n            option.model3d\n          );\n        if (boolIsCreated) {\n          let bimObject = await window.spinal.BimObjectService.getBIMObject(\n            option.dbid,\n            option.model3d\n          );\n          option.info = SpinalGraphService.getRealNode(bimObject.id);\n        }\n\n        serviceDocumentation.addURL(option.info, label, URL);\n        return option;\n      }\n    } else {\n      return option;\n    }\n  }\n\n  async addAttributes(\n    option,\n    BIMObjectName,\n    label = undefined,\n    value = undefined\n  ) {\n    if (\n      label != undefined &&\n      value != undefined &&\n      value != \"\" &&\n      label != \"\"\n    ) {\n      if (option.info != undefined) {\n        serviceDocumentation.addAttribute(option.info, label, value);\n        return option;\n      } else if (option.dbid != undefined) {\n        let boolIsCreated = await window.spinal.BimObjectService\n          .createBIMObject(\n            option.dbid,\n            BIMObjectName,\n            option.model3d\n          );\n        if (boolIsCreated) {\n          let bimObject = await window.spinal.BimObjectService.getBIMObject(\n            option.dbid,\n            option.model3d\n          );\n          option.info = SpinalGraphService.getRealNode(bimObject.id);\n        }\n\n        serviceDocumentation.addAttribute(option.info, label, value);\n        return option;\n      }\n    } else {\n      return option;\n    }\n  }\n\n  ///////////////////////////////////////////////////////////\n  //                      NOTES                            //\n  ///////////////////////////////////////////////////////////\n\n  getIcon(nodeInfo, contextInfo) {\n    return this._isColored(nodeInfo, contextInfo).then((isColored) => {\n      return isColored;\n    });\n  }\n\n  restoreItem(nodeInfo, contextInfo) {\n    this.getGroups(nodeInfo, contextInfo).then((res) => {\n      res.forEach((el) => {\n        let id = el.id;\n        this._restoreGroup(contextInfo.id, id);\n      });\n    });\n  }\n\n  colorItem(nodeInfo, contextInfo) {\n    this.getGroups(nodeInfo, contextInfo).then((res) => {\n      res.forEach((el) => {\n        let id = el.id;\n        let color = el.color ? el.color : undefined;\n        this._colorGroup(contextInfo.id, id, color);\n      });\n    });\n  }\n\n  getGroups(selectedNode, contextInfo) {\n    const type = selectedNode.type;\n    const nodeId = selectedNode.id;\n    const contextId = contextInfo.id;\n\n    if (groupManagerService.isGroup(type)) {\n      return Promise.resolve([selectedNode]);\n    }\n\n    return SpinalGraphService.findInContext(nodeId, contextId, (node) => {\n      SpinalGraphService._addNode(node);\n      let argType = node.getType().get();\n\n      return groupManagerService.isGroup(argType);\n    }).then((res) => {\n      return res.map((el) => {\n        return el.get();\n      });\n    });\n  }\n\n  async getBimObjects(contextId, groupId) {\n    const notes = await this._getNotes(groupId, contextId);\n    const parents = await this._getParents(notes);\n\n    const promises = parents.map((el) => this._getItemsBim(el));\n\n    return Promise.all(promises).then((result) => {\n      const res = [];\n      result.forEach((el) => res.push(...el));\n      return res;\n    });\n  }\n\n  ////////////////////////////////////////////////////////////\n  //                    PRIVATE                             //\n  ////////////////////////////////////////////////////////////\n\n  _isColored(selectedNode, contextInfo) {\n    return this.getGroups(selectedNode, contextInfo).then((res) => {\n      if (res.length === 0) return false;\n\n      for (let index = 0; index < res.length; index++) {\n        const id = res[index].id;\n\n        if (typeof ItemColoredMap.get(id) === \"undefined\") {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  _colorGroup(contextId, groupId, argColor) {\n    return this.getBimObjects(contextId, groupId).then((res) => {\n      let color =\n        typeof argColor !== \"undefined\" ?\n        this._convertHexColorToRGB(argColor) :\n        this._convertHexColorToRGB(\"#000000\");\n\n      ItemColoredMap.set(groupId, groupId);\n\n      res.forEach((child) => {\n        let BimColors = BimElementsColor.get(child.dbid) ?\n          BimElementsColor.get(child.dbid) :\n          [];\n\n        BimColors.push({\n          id: groupId, //node.id,\n          color: color,\n        });\n\n        BimElementsColor.set(child.dbid, BimColors);\n\n        let model = window.spinal.BimObjectService.getModelByBimfile(\n          child.bimFileId\n        );\n\n        model.setThemingColor(\n          child.dbid,\n          new THREE.Vector4(\n            color.r / 255,\n            color.g / 255,\n            color.b / 255,\n            0.7,\n            true\n          )\n        );\n      });\n    });\n  }\n\n  _restoreGroup(contextId, groupId) {\n    ItemColoredMap.delete(groupId);\n    return this.getBimObjects(contextId, groupId).then((res) => {\n      res.forEach((child) => {\n        let model = window.spinal.BimObjectService.getModelByBimfile(\n          child.bimFileId\n        );\n\n        model.setThemingColor(\n          child.dbid,\n          // eslint-disable-next-line no-undef\n          new THREE.Vector4(0, 0, 0, 0),\n          true\n        );\n\n        let allColors = BimElementsColor.get(child.dbid);\n\n        if (allColors) {\n          //   allColors = allColors.filter(el => el.id !== node.id.get());\n          allColors = allColors.filter((el) => el.id !== groupId);\n          BimElementsColor.set(child.dbid, allColors);\n\n          if (allColors.length > 0) {\n            let color = allColors[0].color;\n            model.setThemingColor(\n              child.dbid,\n              // eslint-disable-next-line no-undef\n              new THREE.Vector4(\n                color.r / 255,\n                color.g / 255,\n                color.b / 255,\n                0.7\n              ),\n              true\n            );\n          }\n        }\n      });\n    });\n  }\n\n  _getNotes(nodeId, contextId) {\n    return SpinalGraphService.findInContext(nodeId, contextId, (node) => {\n      SpinalGraphService._addNode(node);\n      let argType = node.getType().get();\n      return argType === NOTE_TYPE;\n    }).then((res) => {\n      return res.map((el) => {\n        return el.get();\n      });\n    });\n  }\n\n  _convertHexColorToRGB(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ?\n      {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      } :\n      null;\n  }\n\n  _getParents(notes) {\n    const promises = notes.map((el) => {\n      const realNode = SpinalGraphService.getRealNode(el.id);\n      return realNode.getParents(NOTE_RELATION);\n    });\n\n    return Promise.all(promises).then((result) => {\n      const res = [];\n\n      result.forEach((element) => {\n        const infos = element.map((el) => {\n          SpinalGraphService._addNode(el);\n          return el.info.get();\n        });\n\n        res.push(...infos);\n      });\n\n      return res;\n    });\n  }\n\n  _getItemsBim(nodeInfo) {\n    const type = nodeInfo.type;\n    const nodeId = nodeInfo.id;\n\n    if (type === BIM_OBJECT_TYPE) {\n      return Promise.resolve([nodeInfo]);\n    } else if (type === geographicService.constants.ROOM_TYPE) {\n      return SpinalGraphService.getChildren(nodeId, [\n        geographicService.constants.REFERENCE_RELATION,\n        geographicService.constants.EQUIPMENT_RELATION,\n      ]);\n    } else {\n      // let relations = [\n      //   ...geographicService.constants.GEOGRAPHIC_RELATIONS,\n      //   geographicService.constants.REFERENCE_RELATION\n      // ];\n\n      return SpinalGraphService.findNodes(\n        nodeId,\n        SELECTrelationList,\n        (node) => {\n          return node.getType().get() === BIM_OBJECT_TYPE;\n        }\n      ).then((res) => {\n        return res.map((el) => {\n          SpinalGraphService._addNode(el);\n          return el.info.get();\n        });\n      });\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////\n  //                    Standard Buttons functions                  //\n  ////////////////////////////////////////////////////////////////////\n\n  async getGeographicElement(noteId) {\n    const realNode = SpinalGraphService.getRealNode(noteId);\n    const parents = await realNode.getParents(NOTE_RELATION);\n\n    return parents\n      .filter((el) => {\n        SpinalGraphService._addNode(el);\n        return isShownParam.indexOf(el.getType().get()) !== -1;\n      })\n      .map((el) => el.info);\n  }\n\n  async getNoteParentsBim(nodeId, contextId) {\n    const notes = await this._getNotes(nodeId, contextId);\n\n    const promises = notes.map((el) => this.getGeographicElement(el.id));\n\n    return Promise.all(promises).then(async (noteParents) => {\n      const el = noteParents.flat();\n      const promises = el.map((v) => this._getItemsBim(v));\n      let bims = await Promise.all(promises);\n      bims = bims.flat();\n\n      const bimMap = new Map();\n\n      for (const bimObject of bims) {\n        const bimFileId = bimObject.bimFileId;\n        const dbid = bimObject.dbid;\n\n        if (typeof bimMap.get(bimFileId) === \"undefined\") {\n          bimMap.set(bimFileId, new Set());\n        }\n\n        bimMap.get(bimFileId).add(dbid);\n      }\n      const res = [];\n\n      for (const [key, value] of bimMap.entries()) {\n        res.push({\n          model: window.spinal.BimObjectService.getModelByBimfile(\n            key),\n          ids: Array.from(value),\n        });\n      }\n\n      return res;\n    });\n  }\n}\n\nexport const utilities = new DocumentationUtilities();","const {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\n\nimport {\n  NOTE_TYPE,\n  NOTE_RELATION,\n} from \"spinal-env-viewer-plugin-documentation-service/dist/Models/constants\";\n\nimport {\n  utilities\n} from \"../../service/utilities\";\n\nclass FindMessageParent extends SpinalContextApp {\n  constructor() {\n    super(\"Isolate Object on Maquette\", \"Isolate Object on Maquette\", {\n      icon: \"settings_overscan\",\n      icon_type: \"in\",\n      backgroundColor: \"#356BAB\",\n      fontColor: \"#FFFFFF\",\n    });\n  }\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const type = option.selectedNode.type.get();\n\n    return contextType === `${NOTE_TYPE}GroupContext` ? Promise.resolve(\n        true) :\n      Promise.resolve(-1);\n  }\n\n  async action(option) {\n    const nodeId = option.selectedNode.id.get();\n    const contextId = option.context.id.get();\n\n\n    const parents = await utilities.getNoteParentsBim(nodeId, contextId);\n\n    if (!parents || (parents && parents.length === 0)) {\n      window.alert(\"No parent on bimMaquette\");\n      return;\n    }\n\n    parents.forEach((el) => {\n      window.spinal.ForgeViewer.viewer.impl.visibilityManager.isolate(el\n        .ids, el.model)\n    })\n\n  }\n}\n\nexport default FindMessageParent;","const {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\n\nimport {\n  NOTE_TYPE,\n  NOTE_RELATION,\n} from \"spinal-env-viewer-plugin-documentation-service/dist/Models/constants\";\n\nimport {\n  utilities\n} from \"../../service/utilities\";\n\n\nclass FindMessageParent extends SpinalContextApp {\n  constructor() {\n    super(\"Zoom\", \"Find message Parent\", {\n      icon: \"zoom_in\",\n      icon_type: \"in\",\n      backgroundColor: \"#356BAB\",\n      fontColor: \"#FFFFFF\",\n    });\n  }\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const type = option.selectedNode.type.get();\n\n    console.log(contextType, type)\n\n    return contextType === `${NOTE_TYPE}GroupContext` ? Promise.resolve(\n        true) :\n      Promise.resolve(-1);\n  }\n\n  async action(option) {\n    const nodeId = option.selectedNode.id.get();\n    const contextId = option.context.id.get();\n\n    const parents = await utilities.getNoteParentsBim(nodeId, contextId);\n\n    if (!parents || (parents && parents.length === 0)) {\n      window.alert(\"No parent on bimMaquette\");\n      return;\n    }\n\n    const dbIds = parents.map(el => el.ids)\n\n    window.spinal.ForgeViewer.viewer.fitToView(dbIds.flat());\n  }\n}\n\nexport default FindMessageParent;","const {\n  SpinalContextApp\n} = require('spinal-env-viewer-context-menu-service');\n\nimport {\n  NOTE_TYPE,\n} from \"spinal-env-viewer-plugin-documentation-service/dist/Models/constants\";\n\nimport {\n  spinalPanelManagerService\n} from \"spinal-env-viewer-panel-manager-service\";\n\nclass MessageDetail extends SpinalContextApp {\n\n  constructor() {\n    super(\"See message detail\", \"see Message date\", {\n      icon: \"announcement\",\n      icon_type: 'in',\n      backgroundColor: '#356BAB',\n      fontColor: '#FFFFFF'\n    })\n  }\n\n\n  isShown(option) {\n    const type = option.selectedNode.type.get();\n    const contextType = option.context.type.get();\n\n    const isNote = type === NOTE_TYPE;\n    const isNoteGroupContext = contextType == `${NOTE_TYPE}GroupContext`;\n\n    return isNote || isNoteGroupContext ? Promise.resolve(true) : Promise\n      .resolve(-1);\n  }\n\n  async action(option) {\n    const nodeId = option.selectedNode.id.get();\n    const contextId = option.context.id.get();\n\n    spinalPanelManagerService.openPanel('messageDetailDialog', {\n      nodeId: nodeId,\n      contextId: contextId\n    });\n\n  }\n\n}\n\nexport default MessageDetail;","const {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\n\nimport {\n  NOTE_TYPE\n} from \"spinal-env-viewer-plugin-documentation-service/dist/Models/constants\";\n\nimport {\n  utilities\n} from \"../service/utilities\";\n\nclass ColorMessageParent extends SpinalContextApp {\n  constructor() {\n    super(\"See message detail\", \"see Message date\", {\n      icon: \"\",\n      icon_type: \"in\",\n      backgroundColor: \"#356BAB\",\n      fontColor: \"#FFFFFF\",\n    });\n  }\n\n  isShown(option) {\n    const type = option.selectedNode.type.get();\n    const contextType = option.context.type.get();\n\n    const isNote = type === NOTE_TYPE;\n\n    const isNoteGroupContext = contextType == `${NOTE_TYPE}GroupContext`;\n\n    if (!isNoteGroupContext || isNote) return Promise.resolve(-1);\n\n    return utilities.getIcon(option.selectedNode.get(), option.context.get())\n      .then(\n        (isColored) => {\n          this.buttonCfg[\"isColored\"] = isColored;\n          this.buttonCfg.icon = isColored ? \"visibility_off\" : \"visibility\";\n          return true;\n        })\n  }\n\n  async action(option) {\n    const selected = option.selectedNode.get();\n    const context = option.context.get();\n\n    if (this.isColored) {\n      this.icon = \"visibility\";\n      this.isColored = false;\n      utilities.restoreItem(selected, context);\n    } else {\n      this.icon = \"visibility_off\";\n      this.isColored = true;\n      utilities.colorItem(selected, context);\n    }\n\n    window.NOP_VIEWER.impl.invalidate(0, 1, 0);\n\n  }\n}\n\nexport default ColorMessageParent;","const {\n  SpinalContextApp\n} = require('spinal-env-viewer-context-menu-service');\nimport {\n  SpinalGraphService,\n  SpinalNode\n} from 'spinal-env-viewer-graph-service';\n\nconst {\n  spinalPanelManagerService,\n} = require('spinal-env-viewer-panel-manager-service');\n\nconst {\n  SpinalForgeExtention,\n} = require('spinal-env-viewer-panel-manager-service_spinalforgeextention');\n\nimport notesComponent from '../view/notes/components/notesComponent.vue';\nimport Vue from 'vue';\n\nconst noteExtension = SpinalForgeExtention.createExtention({\n  name: 'panel-notes',\n  vueMountComponent: Vue.extend(notesComponent),\n  // toolbar is optional\n\n  panel: {\n    title: 'Notes',\n    classname: 'spinal-pannel',\n    closeBehaviour: 'remove', // if something else panel is deleted\n  },\n  style: {\n    left: '405px',\n    width: '400px',\n    height: \"475px\",\n    minWidth: '510px'\n  },\n  onload: () => {},\n  onUnLoad: () => {},\n});\n\nSpinalForgeExtention.registerExtention(name, noteExtension);\n\nexport class NotesButton extends SpinalContextApp {\n  constructor() {\n    super('Spinal Notes', 'Spinal CDE description', {\n      icon: 'insert_comment',\n      icon_type: 'in',\n      backgroundColor: '#356BAB',\n      fontColor: '#FFFFFF',\n    });\n  }\n\n  isShown(option) {\n    /*\n    if ((option.selectedNode && option.selectedNode.type === 'BIMObject') ||\n      option.dbid)\n      return Promise.resolve(true);\n    // to do : put some restriction to see if the selectedNode is a BIMObject or an element of geographiqueContext\n    // console.log(option)\n    return Promise.resolve(-1);\n    */\n\n    return Promise.resolve(true);\n\n  }\n\n\n  async action(option) {\n\n    let obj = {\n      selectedNode: getSelectedNode(option.selectedNode),\n      dbid: option.dbid ? option.dbid : getDbId(option.selectedNode),\n      exist: option.exist,\n      model: option.model3d\n    }\n\n    spinalPanelManagerService.openPanel('panel-notes', obj);\n\n  }\n\n}\n\nconst getSelectedNode = (selectedNode) => {\n  if (typeof selectedNode === \"undefined\") return;\n\n  if (selectedNode instanceof SpinalNode)\n    return selectedNode;\n\n  return SpinalGraphService.getRealNode(selectedNode.id.get());\n}\n\n\nconst getDbId = (selectedNode) => {\n  if (selectedNode && selectedNode.info && selectedNode.info.dbid)\n    return selectedNode.info.dbid.get();\n\n  else if (selectedNode && selectedNode.dbid) return selectedNode.dbid.get();\n\n}\n\nconst createBimObjectNode = () => {\n\n  const viewer = spinal.ForgeViewer.viewer;\n\n  const aggregateSelection = viewer.getAggregateSelection()[0];\n\n\n  if (aggregateSelection) {\n    const dbid = aggregateSelection.selection[0];\n    const model = aggregateSelection.model;\n\n\n    return new Promise((resolve) => {\n      viewer.model.getProperties(dbid, async res => {\n        const info = await window.spinal.BimObjectService\n          .createBIMObject(dbid, res.name, model)\n\n        if (info instanceof SpinalNode) return resolve(info);\n\n        resolve(SpinalGraphService.getRealNode(info.id.get()));\n      })\n\n    });\n  }\n}","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n\n<template>\n  <div class=\"notesBox\">\n    <md-toolbar class=\"mdToolbar md-dense\"\n                md-elevation=\"0\">\n\n      <!-- <div class=\"md-toolbar-section-start titleDiv\">\n        <div v-if=\"nodeInfo && nodeInfo.selectedNode\">\n          {{nodeInfo.selectedNode.info.name.get()}}\n        </div>\n\n        <div v-else>BIM Object not created</div>\n      </div> -->\n\n      <div class=\"md-toolbar-section-start breadCrumb\">\n        <div\n             v-if=\"noteContextSelected && noteCategorySelected && noteGroupSelected\">\n          <div>\n            <span\n                  class=\"md-primary md-caption\">{{noteContextSelected.name}}</span>\n            <span class=\"md-primary md-caption\">/</span>\n            <span\n                  class=\"md-primary md-caption\">{{noteCategorySelected.name}}</span>\n            <span class=\"md-primary md-caption\">/</span>\n            <span\n                  class=\"md-primary md-caption\">{{noteGroupSelected.name}}</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"md-toolbar-section-end\">\n        <md-button class=\"md-icon-button md-primary\"\n                   @click=\"OpenLinkDialog\">\n          <md-icon>settings_applications</md-icon>\n        </md-button>\n      </div>\n\n    </md-toolbar>\n\n    <div class=\"notes_div\">\n      <message-component :nodeInfo=\"nodeInfo\"\n                         :noteContextSelected=\"noteContextSelected\"\n                         :noteCategorySelected=\"noteCategorySelected\"\n                         :noteGroupSelected=\"noteGroupSelected\">\n      </message-component>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { serviceDocumentation } from \"spinal-env-viewer-plugin-documentation-service\";\nimport { NOTE_TYPE } from \"spinal-env-viewer-plugin-documentation-service/dist/Models/constants\";\n\n// import moment from \"moment\";\n// import messageVue from \"./message.vue\";\n// import attachmentVue from \"./attachment.vue\";\n\nconst {\n  spinalPanelManagerService,\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\n// import { FileExplorer } from \"../../../service/fileSystemExplorer.js\";\n// import { MESSAGE_TYPES } from \"spinal-models-documentation\";\n// import {\n//   SpinalNode,\n//   SpinalGraphService,\n// } from \"spinal-env-viewer-graph-service\";\n\nimport messageComponentVue from \"./messageComponent.vue\";\n\nexport default {\n  name: \"noteComponent\",\n  data() {\n    return {\n      // userConnected: {\n      //   username: window.spinal.spinalSystem.getUser().username,\n      //   userId: FileSystem._user_id,\n      // },\n      // messages: {\n      //   messageUser: \"\",\n      //   pj: [],\n      // },\n      // // messageUser: \"\",\n      // messageUserEdit: \"\",\n      // notesDisplayList: [],\n      // editNodePopup: false,\n      // selectedNote: undefined,\n      // scrollToEnd: false,\n\n      nodeInfo: undefined,\n      noteContextSelected: undefined,\n      noteCategorySelected: undefined,\n      noteGroupSelected: undefined,\n    };\n  },\n  components: {\n    \"message-component\": messageComponentVue,\n    // \"attachment-component\": attachmentVue,\n  },\n  methods: {\n    opened(option) {\n      this.nodeInfo = option;\n      // this.resetBind();\n      // this.updatedd();\n    },\n\n    removed(option, viewer) {},\n\n    closed(option, viewer) {},\n\n    OpenLinkDialog() {\n      spinalPanelManagerService.openPanel(\"linkToGroupDialog\", {\n        type: NOTE_TYPE,\n        itemSelected: [],\n        callback: (context, category, group) => {\n          this.noteContextSelected = context;\n          this.noteCategorySelected = category;\n          this.noteGroupSelected = group;\n        },\n      });\n    },\n    /*\n    async updateNotesList() {\n      this.notesDisplayList = [];\n\n      if (this.nodeInfo.selectedNode) {\n        let notes = await serviceDocumentation.getNotes(\n          this.nodeInfo.selectedNode\n        );\n\n        let i = 0;\n        for (let note of notes) {\n          let obj = {\n            id: i,\n            username: note.element.username.get(),\n            message: note.element.message.get(),\n            date: this.toDate(note.element.date.get()),\n            type: note.element.type ? note.element.type.get() : undefined,\n            file: note.element.file,\n            selectedNode: note.selectedNode,\n            element: note.element,\n            viewPoint: note.element.viewPoint,\n          };\n          this.notesDisplayList.push(obj);\n          i++;\n        }\n      }\n    },\n\n    toDate: function (date) {\n      return moment(date).format(\"MMMM Do YYYY, h:mm:ss a\");\n    },\n\n    async addFilesNote() {\n      if (this.messages.pj.length === 0) return;\n\n      await serviceDocumentation.addFileAsNote(\n        this.nodeInfo.selectedNode,\n        this.messages.pj,\n        this.userConnected,\n        this.noteContextSelected.id,\n        this.noteGroupSelected.id\n      );\n\n      // const promises = this.messages.pj.map(async (file) => {\n      //   return {\n      //     file: file,\n      //     directory: await this._getOrCreateFileDirectory(\n      //       this.nodeInfo.selectedNode\n      //     ),\n      //   };\n      // });\n\n      // return Promise.all(promises).then((res) => {\n      //   return res.map((data) => {\n      //     const type = this._getFileType(data.file);\n\n      //     let files = FileExplorer.addFileUpload(data.directory, [data.file]);\n      //     let file = files.length > 0 ? files[0] : undefined;\n\n      //     this._sendNote(\n      //       this.nodeInfo.selectedNode,\n      //       data.file.name,\n      //       type,\n      //       file\n      //     );\n      //   });\n      // });\n    },\n\n    _sendNote(node, message, type, path) {\n      return serviceDocumentation.addNote(\n        node,\n        this.userConnected,\n        message,\n        type,\n        path,\n        this.noteContextSelected.id,\n        this.noteGroupSelected.id\n      );\n    },\n\n    async addNote() {\n      if (typeof this.nodeInfo.selectedNode === \"undefined\") {\n        this.nodeInfo.selectedNode = await this._createBimObjectNode(\n          this.nodeInfo.model,\n          this.nodeInfo.dbid\n        );\n\n        this.updatedd();\n      }\n\n      await this.addFilesNote();\n      this.messages.pj = [];\n\n      if (this.messages.messageUser.trim().length === 0) return;\n\n      await this._sendNote(\n        this.nodeInfo.selectedNode,\n        this.messages.messageUser\n      );\n      this.messages.messageUser = \"\";\n      this.resetBind();\n      this.updatedd();\n    },\n\n    editNote() {\n      serviceDocumentation.editNote(\n        this.selectedNote.element,\n        this.messageUserEdit\n      );\n      this.selectedNote = undefined;\n      this.editNodePopup = false;\n      this.resetBind();\n    },\n\n    deleteNote(noteNode) {\n      serviceDocumentation.removeNode(noteNode);\n    },\n\n    getUsername() {\n      return window.spinal.spinalSystem.getUser().username;\n    },\n\n    opened(option) {\n      this.nodeInfo = option;\n      this.resetBind();\n      this.updatedd();\n    },\n\n    removed(option, viewer) {},\n\n    closed(option, viewer) {},\n\n    updatedd() {\n      var container = document.querySelector(\"#myList\");\n      setTimeout(() => {\n        container.scrollTop = container.scrollHeight;\n      }, 300);\n    },\n\n    resetBind() {\n      if (this.nodeInfo !== undefined) {\n        if (this.nodeInfo.selectedNode !== undefined) {\n          if (this.myBind !== undefined) {\n            this.nodeInfo.selectedNode.unbind(this.myBind);\n            this.myBind = undefined;\n          }\n          if (this.myBind === undefined) {\n            this.myBind = this.nodeInfo.selectedNode.bind(\n              this.updateNotesList.bind(this)\n            );\n          }\n        }\n      }\n    },\n\n    OpenLinkDialog() {\n      spinalPanelManagerService.openPanel(\"linkToGroupDialog\", {\n        type: NOTE_TYPE,\n        itemSelected: [],\n        callback: (context, category, group) => {\n          this.noteContextSelected = context;\n          this.noteCategorySelected = category;\n          this.noteGroupSelected = group;\n        },\n      });\n    },\n\n    addPJ() {\n      const maxSize = 25000000;\n      const input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.multiple = true;\n\n      input.click();\n\n      input.addEventListener(\n        \"change\",\n        (event) => {\n          const files = event.target.files;\n\n          let filelist = [];\n          for (const file of files) {\n            filelist.push(file);\n          }\n\n          filelist.push(...this.messages.pj);\n\n          const sizes = filelist.map((el) => el.size);\n\n          const filesSize = sizes.reduce((a, b) => a + b);\n\n          if (filesSize > maxSize) {\n            alert(\n              \"The selected file(s) is too large. The maximum size must not exceed 25 MB\"\n            );\n            return;\n          }\n\n          this.messages.pj = filelist;\n        },\n        false\n      );\n    },\n\n    removePJ(file) {\n      this.messages.pj = this.messages.pj.filter((el) => el.name !== file.name);\n    },\n\n    async TakeScreenShot() {\n      const file = await this.getScreenShotFile();\n      this.messages.pj.push(file);\n    },\n\n    getScreenShotFile(isViewPoint = false) {\n      return new Promise(async (resolve, reject) => {\n        window.spinal.ForgeViewer.viewer.getScreenShot(0, 0, async (url) => {\n          let blob = await fetch(url).then((r) => r.blob());\n\n          const name = this.nodeInfo.selectedNote\n            ? this.nodeInfo.selectedNote.getName().get()\n            : await this.getObjectName(this.nodeInfo.model, this.nodeInfo.dbid);\n\n          let file_name;\n\n          if (!isViewPoint) {\n            file_name = `screenshot of ${name} from ${moment().format(\n              \"L\"\n            )}.png`;\n          } else {\n            file_name = `viewPoint of ${name} from ${moment().format(\"L\")}.png`;\n          }\n\n          let file = this.blobToFile(blob, file_name);\n\n          resolve(file);\n        });\n      });\n    },\n\n    getObjectName(model, dbid) {\n      if (model && dbid) {\n        return new Promise((resolve) => {\n          model.getProperties(dbid, async (res) => {\n            console.log(res.name);\n            resolve(res.name);\n          });\n        });\n      }\n      return \"\";\n    },\n\n    blobToFile(theBlob, fileName) {\n      theBlob.lastModifiedDate = new Date();\n      theBlob.name = fileName;\n      return theBlob;\n    },\n\n    _createBimObjectNode(model, dbid) {\n      if (model && dbid) {\n        return new Promise((resolve) => {\n          model.getProperties(dbid, async (res) => {\n            const info = await window.spinal.BimObjectService.createBIMObject(\n              dbid,\n              res.name,\n              model\n            );\n            if (info instanceof SpinalNode) return resolve(info);\n\n            resolve(SpinalGraphService.getRealNode(info.id.get()));\n          });\n        });\n      }\n    },\n\n    async saveViewPoint() {\n      const getCircularReplacer = () => {\n        const seen = new WeakSet();\n        return (key, value) => {\n          if (typeof value === \"object\" && value !== null) {\n            if (seen.has(value)) {\n              return;\n            }\n            seen.add(value);\n          }\n          return value;\n        };\n      };\n\n      const viewer = window.spinal.ForgeViewer.viewer;\n\n      const filter = {\n        guid: true,\n        seedURN: true,\n        overrides: true,\n        objectSet: false,\n        viewport: true,\n        renderOptions: true,\n      };\n      const file = await this.getScreenShotFile();\n      const viewerState = viewer.getState(filter);\n      const objectState = {\n        isolated: viewer\n          .getAggregateIsolation()\n          .map((el) => ({ modelId: el.model.id, ids: el.ids })),\n\n        selected: viewer\n          .getAggregateSelection()\n          .map((el) => ({ modelId: el.model.id, selection: el.selection })),\n      };\n\n      file.viewState = JSON.stringify(viewerState, getCircularReplacer());\n      file.objectState = JSON.stringify(objectState, getCircularReplacer());\n\n      this.messages.pj.push(file);\n    },\n*/\n  },\n\n  async mounted() {\n    const context = await serviceDocumentation.createDefaultContext();\n    const category = await serviceDocumentation.createDefaultCategory();\n    const group = await serviceDocumentation.createDefaultGroup();\n\n    this.noteContextSelected = context.info.get();\n    this.noteCategorySelected = category.info.get();\n    this.noteGroupSelected = group.info.get();\n  },\n};\n</script>\n\n<style scoped>\n.notesBox {\n  width: 100%;\n  height: calc(100% - 15px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: hidden;\n}\n\n.notesBox .mdToolbar {\n  padding: 0px !important;\n}\n\n.notesBox .mdToolbar .breadCrumb {\n  height: 50px;\n  display: flex;\n}\n\n.notesBox .notes_div {\n  width: 100%;\n  height: calc(100% - 50px);\n}\n</style>","import vue from \"vue\";\nimport messageDialog from \"./messageDetailDialog.vue\";\n\nexport default {\n  name: \"messageDetailDialog\",\n  vueMountComponent: vue.extend(messageDialog),\n  parentContainer: document.body\n}","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n\n<template>\n  <md-dialog class=\"mdDialogContainer paramsDialogContainer\"\n             :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title style=\"text-align : center\">\n\n    </md-dialog-title>\n\n    <md-dialog-content class=\"md-scrollbar\">\n      <ul>\n        <message-component v-for=\"(note,index) in messages\"\n                           :key=\"index\"\n                           :date=\"note.date.get()\"\n                           :username=\"note.username.get()\"\n                           :message=\"note.message.get()\"\n                           :type=\"note.type.get()\"\n                           :file=\"note.file\"></message-component>\n      </ul>\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      <!-- <md-button class=\"md-primary\"\n                 @click=\"closeDialog(true)\">Save</md-button> -->\n    </md-dialog-actions>\n  </md-dialog>\n\n</template>\n\n<script>\nimport { NOTE_TYPE } from \"spinal-env-viewer-plugin-documentation-service/dist/Models/constants\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport messageVue from \"../components/message.vue\";\n\nexport default {\n  name: \"messageDetailDialog\",\n  props: [\"onFinised\"],\n  components: { \"message-component\": messageVue },\n  data() {\n    return {\n      showDialog: true,\n      messages: []\n    };\n  },\n  methods: {\n    async opened(params) {\n      this.messages = await this.getAllNotes(params.nodeId, params.contextId);\n    },\n\n    async getAllNotes(nodeId, contextId) {\n      const realNode = SpinalGraphService.getRealNode(nodeId);\n      const type = realNode && realNode.getType().get();\n\n      if (!type) return [];\n\n      return SpinalGraphService.findInContext(nodeId, contextId, node => {\n        SpinalGraphService._addNode(node);\n        return node.getType().get() === NOTE_TYPE;\n      }).then(values => {\n        const promises = values.map(async el => {\n          const node = SpinalGraphService.getRealNode(el.id.get());\n          const element = await node.getElement();\n          return element;\n        });\n\n        return Promise.all(promises);\n      });\n    },\n\n    removed(closed) {\n      this.showDialog = false;\n    },\n\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised(closeResult);\n      }\n    }\n  }\n};\n</script>","import Vue from 'vue';\nconst {\n  SpinalContextApp\n} = require('spinal-env-viewer-context-menu-service');\nimport {\n  SpinalGraphService\n} from 'spinal-env-viewer-graph-service';\nimport {\n  serviceDocumentation,\n} from 'spinal-env-viewer-plugin-documentation-service';\nconst {\n  spinalPanelManagerService,\n} = require('spinal-env-viewer-panel-manager-service');\nconst {\n  SpinalForgeExtention,\n} = require('spinal-env-viewer-panel-manager-service_spinalforgeextention');\nimport documentationComponent from '../documentationComponent.vue';\nimport attributesRightClick from '../view/rightClick/attributesRightClick.vue';\nimport deleteUrlRightClick from '../view/rightClick/deleteUrlRightClick.vue';\nimport urlRightClick from '../view/rightClick/urlRightClick.vue';\nimport {\n  SpinalContext\n} from 'spinal-model-graph';\nimport forgeTree from '../service/forgeTree.js';\n//import {\n//  typeLst\n//} from \"spinal-env-viewer-room-manager/js/service\";\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                Documentation Panel                                             //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nexport const DocumentationExtension = SpinalForgeExtention.createExtention({\n  name: 'panel-documentation',\n  vueMountComponent: Vue.extend(documentationComponent),\n  // toolbar is optional\n\n  panel: {\n    title: 'Documentation',\n    classname: 'spinal-pannel',\n    closeBehaviour: 'remove', // if something else panel is deleted\n  },\n  style: {\n    left: '405px',\n    width: '30vh',\n    height: '40vh'\n  },\n  onload: () => {},\n  onUnLoad: () => {},\n});\n\nexport class DocumentationButton extends SpinalContextApp {\n  constructor() {\n    super('Documentation', 'Spinal Documentation description', {\n      icon: 'folder',\n      icon_type: 'in',\n      backgroundColor: '#356BAB',\n      fontColor: '#FFFFFF',\n    });\n  }\n\n  isShown(option) {\n    // to do : put some restriction to see if the selectedNode is a BIMObject or an element of geographiqueContext\n    if (option.selectedNode) {\n      const type = option.selectedNode.type.get();\n      if (type === \"SpinalService\" || type === \"SpinalContext\" || type ===\n        \"dashboardContext\" ||\n        type === \"BimFile\" ||\n        type === \"scene\")\n        return (Promise.resolve(-1))\n    }\n    return Promise.resolve(true)\n  }\n\n  action(option) {\n    // option.paramSent = \"hello from DocumentationCircularMenuButton\";\n    spinalPanelManagerService.openPanel('panel-documentation', option);\n  }\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                Export to drive button                                          //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nexport class ExportToDriveButton extends SpinalContextApp {\n  constructor() {\n    super('Export File To Drive', 'Spinal Documentation description', {\n      icon: 'folder',\n      icon_type: 'in',\n      backgroundColor: '#356BAB',\n      fontColor: '#FFFFFF',\n    });\n  }\n\n  isShown(option) {\n    // to do : put some restriction to see if the selectedNode is a BIMObject or an element of geographiqueContext\n    const type = option.selectedNode.type.get();\n    if (type === \"SpinalService\" || type === \"SpinalContext\" || type ===\n      \"dashboardContext\" ||\n      type === \"BimFile\")\n      return (Promise.resolve(-1))\n    let selectedNode = option.info;\n    // let dbid = option.dbid\n    // let boolBIMObject = option.exist\n    if (option.selectedNode !== undefined) {\n      // get real node\n      selectedNode = SpinalGraphService.getRealNode(\n        option.selectedNode.id.get()\n      );\n    }\n    if (selectedNode instanceof SpinalContext) return Promise.resolve(true);\n    else return Promise.resolve(-1);\n    // if (selectedNode.info.type.get() == \"geographicContext\")\n    //   return Promise.resolve(true);\n    // else {\n    //   return Promise.resolve(-1);\n    // }\n  }\n\n  action(option) {\n    let selectedNode = option.info;\n    let dbid = option.dbid;\n    let boolBIMObject = option.exist;\n    if (option.selectedNode !== undefined) {\n      // get real node\n      selectedNode = SpinalGraphService.getRealNode(\n        option.selectedNode.id.get()\n      );\n    }\n    let obj = {\n      selectedNode,\n      dbid,\n      boolBIMObject,\n    };\n    serviceDocumentation.exportToDrive(obj.selectedNode);\n    // spinalPanelManagerService.openPanel('panel-notes', obj);\n  }\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                Right click Panel                                     //\n////////////////////////////////////////////////////////////////////////////////////////////////////\nexport const addAutoUrlRightClick = SpinalForgeExtention\n  .createExtention({\n    name: 'url-right-click',\n    vueMountComponent: Vue.extend(urlRightClick),\n    // toolbar is optional\n\n    panel: {\n      title: 'url-right-click',\n      classname: 'spinal-pannel',\n      closeBehaviour: 'remove', // if something else panel is deleted\n    },\n    style: {\n      left: '405px',\n      height: '50vh',\n    },\n    onload: () => {},\n    onUnLoad: () => {},\n  });\n\n\n\nexport const addAutoAttributesRightClick = SpinalForgeExtention\n  .createExtention({\n    name: 'attributes-right-click',\n    vueMountComponent: Vue.extend(attributesRightClick),\n    // toolbar is optional\n\n    panel: {\n      title: 'attributes-right-click',\n      classname: 'spinal-pannel',\n      closeBehaviour: 'remove', // if something else panel is deleted\n    },\n    style: {\n      left: '405px',\n      height: '50vh',\n    },\n    onload: () => {},\n    onUnLoad: () => {},\n  });\n\nexport const deleteAutoUrlRightClick = SpinalForgeExtention\n  .createExtention({\n    name: 'delete-right-click',\n    vueMountComponent: Vue.extend(deleteUrlRightClick),\n    // toolbar is optional\n\n    panel: {\n      title: 'delete attributes',\n      classname: 'spinal-pannel',\n      closeBehaviour: 'remove', // if something else panel is deleted\n    },\n    style: {\n      left: '405px',\n      height: '50vh',\n    },\n    onload: () => {},\n    onUnLoad: () => {},\n  });\n\n\nexport function registerRightClickButton() {\n  var checkExist = setInterval(function() {\n    const viewer = window.spinal.ForgeViewer.viewer;\n    if (viewer !== undefined) {\n      viewer.registerContextMenuCallback(\n        'MyChangingColorMenuItems',\n        (menu, status) => {\n          if (status.hasSelected) {\n            menu.push({\n              title: 'Add Spinal Attributes',\n              target: () => {\n                const selSet = viewer.getSelection();\n                let allChildDbid = forgeTree.getAllLeafDbIds(\n                  selSet);\n                forgeTree\n                  .getAllCategoryByDbidArray(allChildDbid)\n                  .then(mycat => {\n                    const propsData = {\n                      dbid: allChildDbid,\n                      category: mycat,\n                    };\n                    spinalPanelManagerService.openPanel(\n                      'attributes-right-click',\n                      propsData\n                    );\n                  });\n              },\n            });\n            menu.push({\n              title: 'Add Spinal url',\n              target: () => {\n                const selSet = viewer.getSelection();\n                let allChildDbid = forgeTree.getAllLeafDbIds(\n                  selSet);\n\n                const propsData = {\n                  dbid: allChildDbid,\n                };\n                spinalPanelManagerService.openPanel(\n                  'url-right-click',\n                  propsData\n                );\n              },\n            });\n            menu.push({\n              title: 'Delete Spinal url',\n              target: () => {\n                const selSet = viewer.getSelection();\n                let allChildDbid = forgeTree.getAllLeafDbIds(\n                  selSet);\n\n                const propsData = {\n                  dbid: allChildDbid,\n                };\n                spinalPanelManagerService.openPanel(\n                  'delete-right-click',\n                  propsData\n                );\n              },\n            });\n          }\n        }\n      );\n      clearInterval(checkExist);\n    }\n  }, 100);\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                Right click Panel url                                           //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\nexport function registerRightClickurl() {\n  var checkExist = setInterval(function() {\n    const viewer = window.spinal.ForgeViewer.viewer;\n    if (viewer !== undefined) {\n      viewer.registerContextMenuCallback(\n        'MyChangingColorMenuItems',\n        (menu, status) => {\n          if (status.hasSelected) {\n            menu.push({\n              title: 'Add Spinal url',\n              target: () => {\n                const selSet = viewer.getSelection();\n                let allChildDbid = forgeTree.getAllLeafDbIds(\n                  selSet);\n\n                const propsData = {\n                  dbid: allChildDbid,\n                };\n                spinalPanelManagerService.openPanel(\n                  'url-right-click',\n                  propsData\n                );\n              },\n            });\n          }\n        }\n      );\n      clearInterval(checkExist);\n    }\n  }, 100);\n}","<!--\nCopyright 2018 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n\n<template>\n  <div class=\" containerCDE\">\n    <md-toolbar class=\"md-layout md-gutter headerCDE\"\n                layout-align=\"center center\">\n      <div class=\"centerSelectedNodeName\"\n           v-if=\"selectedNode !== undefined\">{{selectedNode.info.name.get()\n        }}</div>\n      <div class=\"centerSelectedNodeName\"\n           v-else>BIM Object not created</div>\n    </md-toolbar>\n    <md-toolbar class=\"md-layout md-gutter headerCDE\"\n                layout=\"row\"\n                layout-align=\"center center\">\n      <md-button @click=\"activeTab = 0\"\n                 :style=\"activeTabColor(0)\"\n                 class=\"md-layout-item toolbarButton\">Files</md-button>\n      <md-button @click=\"activeTab = 1\"\n                 :style=\"activeTabColor(1)\"\n                 class=\"md-layout-item toolbarButton\">URL</md-button>\n      <md-button @click=\"activeTab = 2\"\n                 :style=\"activeTabColor(2)\"\n                 class=\"md-layout-item toolbarButton\">Attributes</md-button>\n    </md-toolbar>\n    <transition name=\"changeTabDocumentation\">\n      <filepanel v-if=\"activeTab == 0\"\n                 :option=\"option\"\n                 @updateMyBIMObject=\"updateSelectedBIMObject\"\n                 :parentGroup=\"parentGroup\"\n                 :selectedNode=\"selectedNode\"\n                 :dbid=\"dbid\"></filepanel>\n      <urlpanel v-else-if=\"activeTab == 1\"\n                :option=\"option\"\n                :parentGroup=\"parentGroup\"\n                :selectedNode=\"selectedNode\"\n                @updateMyBIMObject=\"updateSelectedBIMObject\"\n                :dbid=\"dbid\"></urlpanel>\n      <attributespanel v-else\n                       :selectedNode=\"selectedNode\"\n                       :option=\"option\"\n                       :parentGroup=\"parentGroup\"\n                       @updateMyBIMObject=\"updateSelectedBIMObject\"\n                       :dbid=\"dbid\"></attributespanel>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport urlpanel from \"./view/documentation/URLPanel.vue\";\nimport filepanel from \"./view/documentation/FilePanel.vue\";\nimport attributespanel from \"./view/documentation/AttributesPanel.vue\";\nimport {\n  SpinalGraphService,\n  SpinalNode,\n} from \"spinal-env-viewer-graph-service\";\nimport { serviceDocumentation } from \"spinal-env-viewer-plugin-documentation-service\";\nexport default {\n  name: \"my_compo\",\n  data() {\n    return {\n      activeTab: 0,\n      selectedNode: undefined,\n      dbid: undefined,\n      option: undefined,\n      buttonList: [],\n      parentGroup: undefined,\n    };\n  },\n  components: { urlpanel, filepanel, attributespanel },\n  methods: {\n    activeTabColor: function (value) {\n      if (this.activeTab == value)\n        return { background: \"#356BaB\", border: \"1px solid white\" };\n      else return { background: \"unset\", border: \"1px solid white\" };\n    },\n    updateSelectedBIMObject(option) {\n      this.option = {};\n      Object.assign(this.option, option);\n      this.selectedNode = this.option.info;\n    },\n    opened(option) {\n      this.option = option;\n\n      let _this = this;\n      if (option.selectedNode !== undefined) {\n        if (option.selectedNode instanceof SpinalNode) {\n          option.info = option.selectedNode;\n        } else {\n          option.info = SpinalGraphService.getRealNode(\n            option.selectedNode.id.get()\n          );\n        }\n        this.selectedNode = option.info;\n        option.exist = true;\n      } else {\n        if (option.info !== undefined) {\n          this.selectedNode = option.info;\n          this.dbid = option.dbid;\n        } else {\n          this.selectedNode = undefined;\n          this.dbid = option.dbid;\n        }\n      }\n\n      // set attributes for building\n      serviceDocumentation.setBuildingInformationAttributes(this.selectedNode);\n      // .then(info => {});\n\n      // // get shared attributes\n      serviceDocumentation\n        .getParentGroup(this.selectedNode)\n        .then((allParentGroup) => {\n          _this.parentGroup =\n            typeof allParentGroup !== \"undefined\" ? allParentGroup : [];\n        });\n    },\n    removed(option, viewer) {},\n    closed(option, viewer) {},\n  },\n};\n</script>\n\n<style>\n.headerCDE {\n  box-sizing: border-box;\n  min-height: 5%;\n  margin-left: unset !important;\n  margin: unset;\n  border-top: 1px solid white;\n  border-bottom: 1px solid white;\n}\n.toolbarButton {\n  text-align: center;\n  box-sizing: border-box;\n  padding: unset;\n  width: 30%;\n}\n.centerSelectedNodeName {\n  text-align: center;\n  margin-top: 8px;\n}\n.containerCDE {\n  height: 100%;\n}\n\n.containerCDE .md-ripple {\n  padding: unset;\n}\n.containerCDE .md-content.md-theme-default {\n  background-color: unset;\n}\n.containerCDE ul.md-list.md-theme-default {\n  background-color: unset;\n}\n\n.containerCDE button.md-button.md-layout-item.toolbarButton.md-theme-default {\n  margin-left: 7px;\n  margin-right: unset;\n}\n\n.centerSelectedNodeName {\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: unset;\n  margin-bottom: unset;\n}\n\n/* .commentcutPart {\n  margin: unset\n} */\n\n.filesPaddingPath {\n  padding-left: 17px;\n  display: flex;\n  padding-right: 17px;\n  height: auto;\n}\n.filesPaddingIcon {\n  display: flex;\n  height: auto;\n}\n.sizeOfPathTab {\n  flex-grow: 1;\n  margin-top: auto;\n  margin-left: 15px;\n  margin-bottom: auto;\n}\n.filesBox {\n  background: transparent !important;\n  box-sizing: border-box;\n  height: calc(100% - 50px);\n}\n\n.notesBox {\n  background: transparent !important;\n  box-sizing: border-box;\n  height: 100%;\n}\n/* .commentcutPart {\n  margin: unset\n} */\n\n.container-link * {\n  box-sizing: border-box;\n}\n\n.container-link .md-table-cell-container {\n  white-space: nowrap;\n  overflow: hidden;\n  white-space: initial;\n}\n.container-link .md-ripple.md-list-item-content {\n  box-sizing: border-box;\n  min-height: 20px;\n  height: 25px;\n  font-size: 14px;\n  border-bottom: 1px solid #212121;\n}\n\n.container-link td.md-table-cell {\n  height: unset;\n}\n.size-md-cell {\n  padding-right: unset;\n  padding-left: unset;\n  max-width: 280px;\n}\n.myRowStyle {\n  padding-right: 15px;\n  padding-left: 20px;\n}\n.myRowStyleURLShared {\n  padding-top: 5px;\n}\n.back-line {\n  width: calc(100% - 25px);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n}\n.alignToIconFile {\n  background: #212121;\n}\n.span-opacity {\n  color: white;\n  width: 100%;\n}\n.addURLButtonPanel {\n  box-sizing: border-box;\n  float: right;\n  margin-top: auto;\n  margin-bottom: auto;\n}\n.attributesButtonPanel {\n  width: calc(50% - 16px);\n  border: 1px solid #356bab;\n  box-sizing: border-box;\n}\n.urlBox {\n  height: calc(100% - 90px);\n  box-sizing: border-box;\n}\n.size-md-cell {\n  padding-right: unset;\n  padding-left: unset;\n}\n.heightTabsCreateAttr {\n  height: 30vh;\n}\n\n/* .commentcutPart {\n  margin: unset\n} */\n\n.my-test-panel-container * {\n  box-sizing: border-box;\n}\n.my-test-panel-container-nbr-output {\n  text-align: center;\n}\n\n/* .commentcutPart {\n  margin: unset\n} */\n\n.my-test-panel-container * {\n  box-sizing: border-box;\n}\n.my-test-panel-container-nbr-output {\n  text-align: center;\n}\n\n/* .commentcutPart {\n  margin: unset\n} */\n\n.my-test-panel-container * {\n  box-sizing: border-box;\n}\n.my-test-panel-container-nbr-output {\n  text-align: center;\n}\n\n.hr-sect {\n  display: flex;\n  flex-basis: 100%;\n  align-items: center;\n  color: rgba(204, 204, 204, 0.082);\n  font-size: 12px;\n  margin: 8px 0px;\n}\n.hr-sect::before,\n.hr-sect::after {\n  content: \"\";\n  flex-grow: 1;\n  background: rgba(204, 204, 204, 0.35);\n  height: 1px;\n  font-size: 0px;\n  line-height: 0px;\n  margin: 0px 16px;\n}\n/* .tabulationGroupName {\n  padding-left: 20px;\n  border-top: 2px dotted;\n} */\n.sharedCategoryCss {\n  overflow: hidden;\n  align-items: center;\n}\n\n.sharedCategoryCss:after {\n  content: \"\";\n  display: inline-block;\n  height: 2px;\n  vertical-align: center;\n  width: 100%;\n  margin-right: -100%;\n  margin-left: 11px;\n  border-top: 2px dotted;\n}\n\n.urlBox .md-subheader {\n  padding: unset;\n}\n\n.colorForCategory > .md-list-item-container > .md-list-item-content {\n  background-color: rgba(204, 204, 204, 0.2);\n}\n/* .commentcutPart {\n  margin: unset\n} */\n\n.changeTabDocumentation-enter-active {\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n}\n.changeTabDocumentation-enter {\n  opacity: 0;\n  transform: translateX(-1em);\n  min-width: unset;\n}\n\n.changeTabDocumentation-enter-to {\n  opacity: 1;\n  transform: translateX(0);\n  min-width: unset;\n}\n\n.iconPlusDocumentation {\n  color: #356bab;\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n   <md-content class=\" container-link urlBox\">\n      <div>\n         <div class=\"filesPaddingPath\">\n            <div class=\"sizeOfPathTab\"> </div>\n            <md-button\n               class=\"md-icon-button addURLButtonPanel\"\n               @click=\"addURLDialogueStatus = true\"\n            >\n               <i class=\"material-icons iconPlusDocumentation\">add_circle_outline</i>\n            </md-button>\n         </div>\n         <md-content>\n            <!-- <md-list> -->\n            <!-- <md-list-item md-expand\n                        class=\"myRowStyle\">\n            <span class=\"nameOfCategory md-list-item-text\">Local</span> -->\n\n            <md-list>\n               <md-subheader class=\"hr-sect \">Local URL</md-subheader>\n               <!-- <md-list-item class=\"myRowStyle\">\n                <span class=\"span-opacity\"> Label </span>\n                <span class=\"span-opacity\"> URL </span>\n              </md-list-item> -->\n               <md-list-item\n                  class=\"myRowStyle colorForCategory\"\n                  v-for=\"(url, index) in URLDisplayList\"\n                  :key=\"index\"\n               >\n                  <span class=\"span-opacity\">{{url.element.name.get()}}</span>\n                  <a\n                     class=\"back-line\"\n                     v-tooltip=\"url.element.URL.get()\"\n                     :href=\"url.element.URL.get()\"\n                     target=\"_blank\"\n                  >\n                     {{url.element.URL.get()}}</a>\n                  <menuURL\n                     @editURLNode=\"editURLNode\"\n                     @removeURLNode=\"removeURLNode\"\n                     :url=\"url\"\n                  ></menuURL>\n               </md-list-item>\n            </md-list>\n            <!-- </md-list-item>\n        </md-list> -->\n\n            <div v-if=\"groupURLDisplayList.length > 0\">\n               <md-subheader class=\"hr-sect \">Shared URL</md-subheader>\n               <div\n                  class=\"colorForCategory myRowStyle\"\n                  v-for=\"(cat) in groupURLDisplayList\"\n                  :key=\"cat.groupName\"\n               >\n                  <!-- <md-icon>whatshot</md-icon> -->\n                  <md-subheader class=\"sharedCategoryCss\">{{cat.groupName}}\n                  </md-subheader>\n\n                  <md-list class=\"unsetPadding\">\n                     <md-list-item\n                        class=\" colorForCategory\"\n                        v-for=\"(url, index) in cat.url\"\n                        :key=\"index\"\n                     >\n                        <span class=\"span-opacity\">{{url.element.name.get()}}</span>\n                        <a\n                           class=\"back-line\"\n                           v-tooltip=\"url.element.URL.get()\"\n                           :href=\"url.element.URL.get()\"\n                           target=\"_blank\"\n                        >\n                           {{url.element.URL.get()}}</a>\n                     </md-list-item>\n\n                  </md-list>\n\n               </div>\n            </div>\n         </md-content>\n\n      </div>\n\n      <md-dialog :md-active.sync=\"addURLDialogueStatus\">\n         <md-dialog-title>Add Link</md-dialog-title>\n\n         <md-dialog-content class=\"urlDialogContainer\">\n            <md-field md-inline>\n               <label>Label</label>\n               <md-input v-model=\"label\"></md-input>\n            </md-field>\n\n            <md-field md-inline>\n               <label>Link</label>\n               <md-input v-model=\"URL\"></md-input>\n            </md-field>\n         </md-dialog-content>\n\n         <md-dialog-actions>\n            <md-button\n               class=\"md-primary\"\n               @click=\"addURLDialogueStatus = false\"\n            >Close</md-button>\n            <md-button\n               class=\"md-primary\"\n               @click=\"addLink\"\n            >Save</md-button>\n         </md-dialog-actions>\n      </md-dialog>\n   </md-content>\n</template>\n\n\n<script>\nimport Vue from \"vue\";\nimport { serviceDocumentation } from \"spinal-env-viewer-plugin-documentation-service\";\nimport { utilities } from \"../../service/utilities.js\";\nimport menuURL from \"./component/menuURL.vue\";\nimport { parse } from \"path\";\nvar viewer;\nexport default {\n   name: \"linkPanel\",\n   data() {\n      return {\n         addURLDialogueStatus: false,\n         label: undefined,\n         URL: undefined,\n         URLDisplayList: [],\n         myBind: undefined,\n         groupURLDisplayList: [],\n         myBindParent: undefined,\n         parentListToBind: undefined,\n      };\n   },\n   components: { menuURL },\n   props: [\"option\", \"parentGroup\"],\n   methods: {\n      editURLNode(urlNode, urlChange) {\n         urlNode.element.name.set(urlChange.label);\n         urlNode.element.URL.set(urlChange.URL);\n      },\n      removeURLNode(urlNode) {\n         serviceDocumentation.removeNode(urlNode);\n      },\n      async updateURLList() {\n         if (this.option.info != undefined) {\n            this.URLDisplayList = await serviceDocumentation.getURL(\n               this.option.info\n            );\n         } else this.URLDisplayList = [];\n      },\n      async updateURLParent() {\n         this.groupURLDisplayList = [];\n         let json = {};\n         for (let i = 0; i < this.parentGroup.length; i++) {\n            const node = this.parentGroup[i];\n            if (node) {\n               json = {\n                  groupName: node.info.name.get(),\n                  url: await serviceDocumentation.getURL(node),\n               };\n               this.groupURLDisplayList.push(json);\n            }\n         }\n      },\n      addLink() {\n         let _this = this;\n         let label = this.label;\n         let URL = this.URL;\n         viewer.model.getProperties(this.option.dbid, function (res) {\n            let option = utilities.addLink(_this.option, res.name, label, URL);\n            option.then((option) => {\n               if (_this.option.exist == false) {\n                  _this.option.exist = true;\n                  _this.$emit(\"updateMyBIMObject\", option);\n               }\n            });\n         });\n         this.label = undefined;\n         this.URL = undefined;\n         this.addURLDialogueStatus = false;\n      },\n      resetBind() {\n         if (this.option.info != undefined) {\n            if (this.option != undefined) {\n               if (this.myBind != undefined) {\n                  this.option.info.unbind(this.myBind);\n                  this.myBind = undefined;\n               }\n               if (this.myBind == undefined) {\n                  this.myBind = this.option.info.bind(\n                     this.updateURLList.bind(this)\n                  );\n               }\n            }\n         }\n      },\n      resetBindParent() {\n         // j'ai la liste de tous les node parent\n\n         if (!this.parentListToBind) {\n            this.parentListToBind = new Lst();\n         }\n\n         if (this.parentListToBind.length !== this.parentGroup.length) {\n            this.parentListToBind.splice(0, this.parentListToBind.length);\n            for (let i = 0; i < this.parentGroup.length; i++) {\n               const element = this.parentGroup[i];\n               this.parentListToBind.push(element);\n            }\n         }\n         if (this.myBindParent == undefined)\n            this.parentListToBind.bind(this.updateURLParent.bind(this));\n      },\n   },\n   mounted() {\n      viewer = window.spinal.ForgeViewer.viewer;\n      this.resetBind();\n      this.resetBindParent();\n   },\n   watch: {\n      option: function () {\n         this.resetBind();\n      },\n      parentGroup: function () {\n         this.resetBindParent();\n      },\n   },\n   beforeDestroy() {\n      if (this.option.info != undefined && this.myBind != undefined)\n         this.option.info.unbind(this.myBind);\n   },\n};\n</script>\n\n<style scoped>\n.urlDialogContainer {\n   width: 300px;\n   height: 200px;\n}\n</style>\n","<!--\nCopyright 2018 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div>\n    <md-menu md-direction=\"top-end\"\n             md-align-trigger>\n      <md-button class=\"md-icon-button\"\n                 md-menu-trigger>\n        <md-icon>more_vert</md-icon>\n      </md-button>\n\n      <md-menu-content>\n        <md-menu-item @click=\"activeEditURLNode  = true\">Edit</md-menu-item>\n        <md-menu-item @click=\"remove()\">Remove</md-menu-item>\n      </md-menu-content>\n    </md-menu>\n    <md-dialog :md-active.sync=\"activeEditURLNode\">\n      <md-dialog-title>Edit Link</md-dialog-title>\n      <md-field md-inline\n                style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n        <label>Label</label>\n        <md-input v-model=\"urlChange.label\"></md-input>\n      </md-field>\n      <md-field md-inline\n                style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n        <label>Link</label>\n        <md-input v-model=\"urlChange.URL\"></md-input>\n      </md-field>\n\n      <md-dialog-actions>\n        <md-button class=\"md-primary\"\n                   @click=\"activeEditURLNode = false\">Close</md-button>\n        <md-button class=\"md-primary\"\n                   @click=\"edit\">Save</md-button>\n      </md-dialog-actions>\n    </md-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"my_compo\",\n  props: [\"url\"],\n  data() {\n    return {\n      activeEditURLNode: false,\n      urlChange: { label: \"\", URL: \"\" },\n    };\n  },\n  methods: {\n    edit() {\n      this.$emit(\"editURLNode\", this.url, this.urlChange);\n      this.activeEditURLNode = false;\n    },\n\n    remove() {\n      this.$emit(\"removeURLNode\", this.url.node);\n    },\n  },\n  mounted() {\n    this.urlChange.label = this.url.element.name.get();\n    this.urlChange.URL = this.url.element.URL.get();\n  },\n  watch: {\n    activeEditURLNode() {\n      if (this.activeEditURLNode) {\n        this.urlChange.label = this.url.element.name.get();\n        this.urlChange.URL = this.url.element.URL.get();\n      }\n    },\n  },\n};\n</script>\n\n<style>\n</style>","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","<template>\n   <md-content class=\"md-scrollbar urlBox\">\n\n      <div class=\"filesPaddingPath\">\n         <div class=\"sizeOfPathTab\">\n            <span\n               v-for=\"(path,index) in pathTab\"\n               @click=\"loadRoute(index)\"\n               :key=\"index\"\n            >\n               {{path.name}}\n            </span>\n         </div>\n         <md-button\n            class=\"md-icon-button addURLButtonPanel\"\n            @click=\"activeAddDirectory= true\"\n            :disabled=\"!boolInShared\"\n         >\n            <i class=\"material-icons iconPlusDocumentation\">add_circle_outline</i>\n         </md-button>\n      </div>\n      <md-subheader\n         v-if=\"boolInShared == true\"\n         class=\"hr-sect \"\n      >Local Files</md-subheader>\n      <md-subheader\n         v-else\n         class=\"hr-sect \"\n      >Shared Files</md-subheader>\n\n      <md-table v-if=\"displayList.length != 0\">\n         <md-table-row\n            v-for=\"(files, index) in displayList\"\n            @dblclick.native=\"enterInDirectory(files)\"\n            :key=\"index\"\n         >\n            <md-table-cell>\n               <div class=\"filesPaddingIcon\">\n                  <md-icon>{{getIconFile(files)}}</md-icon>\n                  <div class=\"sizeOfPathTab\">{{files.name.get()}}</div>\n               </div>\n            </md-table-cell>\n            <!-- <md-table-cell md-numeric>{{files.name.get()}}</md-table-cell> -->\n            <md-table-cell>\n               <menuFile\n                  :file=\"files\"\n                  :boolInShared=\"boolInShared\"\n                  :index=\"index\"\n                  @downloadFile=\"downloadFile\"\n                  @removeFile=\"removeFile\"\n               >\n               </menuFile>\n            </md-table-cell>\n         </md-table-row>\n      </md-table>\n      <div v-if=\"boolInShared == true && !boolInDirectory && groupAttrDisplayList.length > 0\">\n         <md-subheader class=\"hr-sect \">Shared Files</md-subheader>\n         <md-table>\n            <!-- <span>{{group.nameGroup}}</span> -->\n            <md-table-row\n               v-for=\"(group, index) in groupAttrDisplayList\"\n               :key=\"index\"\n               @dblclick.native=\"enterInDirectoryParent(group)\"\n            >\n               <md-table-cell>\n                  <div class=\"filesPaddingIcon\">\n                     <md-icon>folder</md-icon>\n                     <div class=\"sizeOfPathTab\">{{group.groupName}}</div>\n                  </div>\n               </md-table-cell>\n               <!-- <md-table-cell md-numeric>{{group.groupName}}</md-table-cell> -->\n               <md-table-cell>\n                  <!-- <menuFile :file=\"files\"\n                    :index=\"index\"\n                    @downloadFile=\"downloadFile\">\n          </menuFile> -->\n               </md-table-cell>\n            </md-table-row>\n         </md-table>\n      </div>\n\n      <md-dialog\n         class=\"fileUploadDialog\"\n         :md-active.sync=\"activeAddDirectory\"\n      >\n\n         <md-dialog-content class=\"dialogContent\">\n            <md-tabs\n               class=\"dialogTabs\"\n               @md-changed=\"resetImportedFiles\"\n               md-alignment=\"fixed\"\n            >\n               <md-tab md-label=\"Upload\">\n                  <md-field>\n                     <md-file\n                        @md-change=\"getFileImported\"\n                        v-model=\"multipleFile\"\n                        multiple\n                     />\n                  </md-field>\n               </md-tab>\n\n               <md-tab md-label=\"Drive\">\n                  <!-- <md-button class=\"md-primary md-raised\" @click=\"getPath\">Get Path</md-button> -->\n                  <drive @getFileImportedFromDrive=\"getFileImportedFromDrive\"></drive>\n               </md-tab>\n            </md-tabs>\n         </md-dialog-content>\n\n         <md-dialog-actions>\n            <md-button\n               class=\"md-primary\"\n               @click=\"activeAddDirectory = false\"\n            >Close</md-button>\n            <md-button\n               class=\"md-primary\"\n               @click=\"saveFile\"\n            >Save</md-button>\n         </md-dialog-actions>\n      </md-dialog>\n   </md-content>\n</template>\n\n<script>\nimport { FileExplorer } from \"../../service/fileSystemExplorer.js\";\nimport drive from \"./component/drive.vue\";\nimport menuFile from \"./component/menuFile.vue\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nexport default {\n   name: \"linkPanel\",\n   data() {\n      return {\n         activeAddDirectory: false,\n         importedFiles: undefined,\n         importedDriveFiles: undefined,\n         selectedDirectory: undefined,\n         oldDirectory: undefined,\n         displayList: [],\n         multipleFile: undefined,\n         myBind: undefined,\n         pathTab: [],\n         parentListToBind: new Lst(),\n         groupAttrDisplayList: [],\n         boolInShared: false,\n         boolInDirectory: false,\n      };\n   },\n   components: { drive, menuFile },\n   props: [\"option\", \"parentGroup\"],\n   methods: {\n      downloadFile(file, index) {\n         if (file._info.model_type.get() != \"Directory\") {\n            file._ptr.load((path) => {\n               if (file._info.model_type.get() == \"HttpPath\") {\n                  const element = document.createElement(\"a\");\n                  const _path =\n                     path.host.get() +\n                     \"/file/\" +\n                     encodeURIComponent(path.httpRootPath.get()) +\n                     \"/\" +\n                     encodeURIComponent(path.httpPath.get());\n                  element.setAttribute(\"href\", _path);\n                  element.setAttribute(\"download\", file.name.get());\n                  element.style.display = \"none\";\n                  document.body.appendChild(element);\n                  element.click();\n                  document.body.removeChild(element);\n               } else {\n                  var element = document.createElement(\"a\");\n                  element.setAttribute(\"href\", \"/sceen/_?u=\" + path._server_id);\n                  element.setAttribute(\"download\", file.name);\n                  element.click();\n               }\n            });\n         } else {\n            // check recursive directory & create a ZIP\n         }\n      },\n      removeFile(file, index) {\n         this.selectedDirectory.splice(index, 1);\n      },\n      getFileImported(files) {\n         // ici il y a un bug sur les fichier importé, quand j'import un fichier toto.txt, que je change vers le drive tabs,\n         // je retourne sur le upload tabs, je ne peux pas ajouter le meme fichier, levent md-change ne triger pas\n         this.importedFiles = files;\n      },\n      getFileImportedFromDrive(files) {\n         this.importedDriveFiles = files;\n      },\n      resetImportedFiles() {\n         this.importedFiles = undefined;\n         this.importedDriveFiles = undefined;\n         this.multipleFile = undefined;\n      },\n      getIconFile(file) {\n         return FileExplorer.getIconFile(file);\n      },\n      loadRoute(index) {\n         if (index == this.pathTab.length - 1) {\n         } else {\n            this.selectedDirectory = this.pathTab[index].directory;\n\n            let length = this.pathTab.length - 1;\n            this.pathTab.splice(index + 1, length - index);\n            this.resetBind();\n            if (this.pathTab.length == 1) {\n               this.boolInShared = true;\n               this.boolInDirectory = false;\n            }\n         }\n      },\n\n      enterInDirectory(file) {\n         if (file._info.model_type.get() == \"Directory\") {\n            file._ptr.load((directory) => {\n               let pathObj = {\n                  name: file.name.get() + \" /\",\n                  directory: directory,\n               };\n               this.pathTab.push(pathObj);\n               this.selectedDirectory = directory;\n\n               this.resetBind();\n            });\n            this.boolInDirectory = true;\n         }\n      },\n      enterInDirectoryParent(group) {\n         let pathObj = {\n            name: group.groupName + \" /\",\n            directory: group.groupAttr,\n         };\n         this.pathTab.push(pathObj);\n         this.selectedDirectory = group.groupAttr;\n         this.boolInShared = false;\n         this.boolSharedDirectory = false;\n         this.updateDisplayList();\n         this.resetBind;\n      },\n      updateDisplayList() {\n         this.displayList = [];\n         if (this.selectedDirectory != undefined) {\n            for (let i = 0; i < this.selectedDirectory.length; i++) {\n               const file = this.selectedDirectory[i];\n               this.displayList.push(file);\n            }\n         }\n      },\n      getFileInDir(directory) {\n         let displayList = [];\n         if (directory != undefined) {\n            for (let i = 0; i < directory.length; i++) {\n               const file = directory[i];\n               displayList.push(file);\n            }\n         }\n         return displayList;\n      },\n      async updateDisplayListParent() {\n         this.groupAttrDisplayList = [];\n         let json = {};\n         for (let i = 0; i < this.parentGroup.length; i++) {\n            const node = this.parentGroup[i];\n            if (node) {\n               const dir = await FileExplorer.getDirectory(node);\n               json = {\n                  groupName: node.info.name.get(),\n                  groupAttr: dir,\n                  files: this.getFileInDir(dir),\n               };\n\n               this.groupAttrDisplayList.push(json);\n            }\n         }\n      },\n      sendAddFile() {\n         // check if imported file come from drive or upload\n         if (this.importedFiles != undefined) {\n            FileExplorer.addFileUpload(\n               this.selectedDirectory,\n               this.importedFiles\n            );\n         } else if (this.importedDriveFiles != undefined) {\n            FileExplorer.addFileDrive(\n               this.selectedDirectory,\n               this.importedDriveFiles,\n               this.pathTab\n            );\n         }\n      },\n      async saveFile() {\n         // check if the node exist\n         // check if node has a directory\n         // if node doesn't exist, i create it\n         // if node haven't a directory, add it\n         let _this = this;\n         if (this.selectedDirectory != undefined) {\n            this.sendAddFile();\n         } else {\n            if (this.option.exist == false) {\n               let option = this.option;\n               window.spinal.ForgeViewer.viewer.model.getProperties(\n                  this.option.dbid,\n                  async function (res) {\n                     let boolIsCreated = await window.spinal.BimObjectService.createBIMObject(\n                        option.dbid,\n                        res.name,\n                        option.model3d\n                     );\n                     if (boolIsCreated) {\n                        let bimObject = await window.spinal.BimObjectService.getBIMObject(\n                           option.dbid,\n                           option.model3d\n                        );\n                        option.info = SpinalGraphService.getRealNode(\n                           bimObject.id\n                        );\n                     }\n                     if (option.exist == false) {\n                        option.exist = true;\n                        _this.$emit(\"updateMyBIMObject\", option);\n                     }\n                     _this.selectedDirectory = await FileExplorer.createDirectory(\n                        option.info\n                     );\n                     _this.sendAddFile();\n                     _this.resetBind();\n                     _this.resetImportedFiles();\n                  }\n               );\n            } else {\n               this.selectedDirectory = await FileExplorer.createDirectory(\n                  this.option.info\n               );\n               this.sendAddFile();\n               this.resetBind();\n               this.resetImportedFiles();\n            }\n         }\n\n         this.activeAddDirectory = false;\n      },\n      deleteBind() {\n         if (this.myBind != undefined) {\n            if (this.oldDirectory != undefined) {\n               this.oldDirectory.unbind(this.myBind);\n               this.myBind = undefined;\n            }\n         }\n      },\n      resetBind() {\n         if (this.option.info != undefined) {\n            if (this.option != undefined) {\n               this.deleteBind();\n               if (this.myBind == undefined) {\n                  if (this.selectedDirectory != undefined) {\n                     this.myBind = this.selectedDirectory.bind(\n                        this.updateDisplayList.bind(this)\n                     );\n                     this.oldDirectory = this.selectedDirectory;\n                  } else {\n                     this.updateDisplayList();\n                  }\n               }\n            }\n         }\n      },\n      resetBindParent() {\n         // j'ai la liste de tous les node parent\n         this.parentListToBind.splice(0, this.parentListToBind.length);\n         for (let i = 0; i < this.parentGroup.length; i++) {\n            const element = this.parentGroup[i];\n            this.parentListToBind.push(element);\n         }\n         if (this.myBindParent == undefined) {\n            this.myBindParent = this.parentListToBind.bind(\n               this.updateDisplayListParent.bind(this)\n            );\n         }\n      },\n   },\n   watch: {\n      option: async function () {\n         let namePath = \"\";\n         this.selectedDirectory = await FileExplorer.getDirectory(\n            this.option.info\n         );\n         if (this.option.info != undefined) {\n            namePath = this.option.info.info.name.get() + \" /\";\n         } else {\n            namePath = \"Home /\";\n         }\n         let pathObj = {\n            name: namePath,\n            directory: this.selectedDirectory,\n         };\n         this.pathTab = [];\n         this.pathTab.push(pathObj);\n         this.boolInShared = true;\n\n         this.resetBind();\n      },\n      parentGroup: function () {\n         this.resetBindParent();\n      },\n   },\n   async mounted() {\n      if (this.option != undefined) {\n         if (this.option.info != undefined) {\n            this.selectedDirectory = await FileExplorer.getDirectory(\n               this.option.info\n            );\n\n            let namePath = this.option.info.info.name.get() + \" /\";\n            let pathObj = {\n               name: namePath,\n               directory: this.selectedDirectory,\n            };\n            this.boolInShared = true;\n            this.pathTab.push(pathObj);\n            this.resetBind();\n            this.resetBindParent();\n         }\n      }\n   },\n   beforeDestroy() {\n      if (this.option.info != undefined && this.myBind != undefined) {\n         this.option.info.unbind(this.myBind);\n      }\n   },\n};\n</script>\n\n<style scoped>\n.fileUploadDialog {\n   width: 700px;\n   height: 520px;\n}\n\n.fileUploadDialog .dialogContent {\n   width: 100%;\n   height: 100%;\n}\n\n.fileUploadDialog .dialogTabs {\n   width: 100%;\n   height: 100%;\n}\n</style>\n\n<style>\n.fileUploadDialog .md-dialog-container {\n   width: 100%;\n   height: 100%;\n}\n\n.fileUploadDialog .dialogTabs .md-tabs-content,\n.fileUploadDialog .dialogTabs .md-tabs-content .md-tabs-container,\n.fileUploadDialog .dialogTabs .md-tabs-content .md-tabs-container .md-tab {\n   width: 100%;\n   height: 100% !important;\n}\n</style>\n","// import ServiceCDE from \"spinal-env-viewer-plugin-documentation-service\";\n// import bimObjectService from 'spinal-env-viewer-plugin-bimobjectservice';\nimport {\n  SPINAL_RELATION_PTR_LST_TYPE\n} from \"spinal-env-viewer-graph-service\";\n\nclass FileSystemExplorer {\n  constructor() {\n    this.spinalSystem = window.spinal.spinalSystem;\n    this.pathForgeFile = this.spinalSystem.getPath();\n  }\n\n  getDrivePathRoot() {\n    var user = this.spinalSystem.getUser();\n    var home = \"/__users__/\" + user.username;\n    this.currentPath = home;\n    var route = {};\n    route.name = \"home\";\n    route.path = home;\n    return route;\n  }\n  createDriveRoute(path, file) {\n    var name = \"/ \" + file.name;\n    var mypath = path + \"/\" + file.name;\n    var route = {};\n    route.name = name;\n    route.path = mypath;\n    return route;\n  }\n  loadDrivePath(currentPath) {\n    let tabDisplay = [];\n    return this.spinalSystem.load(currentPath).then(directory => {\n      for (let i = 0; i < directory.length; i++) {\n        const element = directory[i];\n        let obj = {\n          name: element.name.get(),\n          type: element._info.model_type.get(),\n          serverid: element._server_id,\n          path: currentPath + \"/\" + element.name.get()\n        };\n        tabDisplay.push(obj);\n      }\n      return tabDisplay;\n    });\n  }\n  async getDirectory(selectedNode) {\n    if (selectedNode != undefined) {\n      const fileNode = await selectedNode.getChildren(\"hasFiles\");\n      if (fileNode.length == 0) {\n        return undefined;\n      } else {\n        let directory = await fileNode[0].getElement();\n        return (directory);\n      }\n    }\n  }\n  async getNbChildren(selectedNode) {\n    const fileNode = await selectedNode.getChildren(\"hasFiles\");\n    return fileNode.length;\n  }\n  async createDirectory(selectedNode) {\n    let nbNode = await this.getNbChildren(selectedNode);\n    if (nbNode == 0) {\n      let myDirectory = new Directory();\n      let node = await selectedNode.addChild(\n        myDirectory,\n        'hasFiles',\n        SPINAL_RELATION_PTR_LST_TYPE\n      );\n      node.info.name.set(\"[Files]\");\n      node.info.type.set(\"SpinalFiles\");\n      return myDirectory;\n    } else {\n      return this.getDirectory(selectedNode);\n    }\n  }\n  addFileUpload(directory, uploadFileList) {\n    const files = [];\n\n    for (let i = 0; i < uploadFileList.length; i++) {\n      const element = uploadFileList[i];\n      let filePath = new Path(element);\n      let myFile = new File(element.name, filePath);\n      directory.push(myFile);\n      files.push(myFile);\n    }\n\n    return files\n  }\n  addFileDrive(directory, driveFileList, pathTab) {\n    for (let i = 0; i < driveFileList.length; i++) {\n      const driveFile = driveFileList[i];\n      let test = this.checkInfinitInclusion(FileSystem._objects[driveFile\n          .serverid],\n        pathTab);\n      test.then((res) => {\n        if (res == false) {\n          // return false\n        } else {\n          directory.push(FileSystem._objects[driveFile.serverid]);\n          // return true\n        }\n      });\n    }\n  }\n  getDigitalTwithePath() {\n    return this.spinalSystem.getPath();\n  }\n  pathParse(path) {\n    let arrayOfPath = path.split(\"/\");\n    let nameFile = arrayOfPath[arrayOfPath.length - 1];\n    return nameFile;\n  }\n  callback(file) {\n    return new Promise(resolve => {\n      file._ptr.load(resolve);\n    });\n  }\n  checkInfinitInclusion(file, pathTab) {\n    let DigitalTwinPath = this.spinalSystem.getPath();\n    let nameFile = this.pathParse(DigitalTwinPath);\n    let _this = this;\n    let tab = [];\n    for (let j = 0; j < pathTab.length; j++) {\n      const name = pathTab[j].name.substring(0, pathTab[j].name.length - 2);\n      if (name == file.name.get()) {\n        return Promise.resolve(false);\n      }\n    }\n    if (file.name.get() == nameFile) {\n      return Promise.resolve(false);\n    } else if (file._info.model_type.get() === \"Directory\" || file._info\n      .model_type.get() === \"Synchronized Directory\") {\n      return this.callback(file).then((resdir) => {\n        if (resdir.length > 0) {\n          for (let i = 0; i < resdir.length; i++) {\n            const file = resdir[i];\n            tab.push(_this.checkInfinitInclusion(file, pathTab));\n          }\n          return Promise.all(tab).then((array) => {\n            return !array.includes(false);\n          });\n        } else {\n          return true;\n        }\n      });\n    } else {\n      return Promise.resolve(true);\n    }\n  }\n  addDirectory(selectedNode) {\n    console.log(selectedNode);\n  }\n  getIconFile(file) {\n    let fileType;\n    if (file.type != undefined) {\n      fileType = file.type;\n    } else {\n      fileType = file._info.model_type.get();\n    }\n    if (fileType === \"Directory\") return \"folder\";\n    else if (fileType === \"Digital twin\") return \"location_city\";\n    else if (fileType === \"Path\") return \"insert_drive_file\";\n    else if (fileType === \"Synchronized Directory\") return \"folder_shared\";\n    else if (fileType === \"HttpPath\") return \"file_copy\";\n    else return \"not_listed_location\";\n  }\n\n}\nexport const FileExplorer = new FileSystemExplorer();","<template>\n   <!-- class=\"md-scrollbar\" -->\n   <div class=\"tableDiv\">\n      <div class=\"path\">\n         <span\n            v-for=\"(path,index) in pathTab\"\n            @click=\"loadRoute(index)\"\n            :key=\"index\"\n         >{{path.name}} </span>\n      </div>\n\n      <div class=\"table\">\n         <md-table\n            v-model=\"tabDisplay\"\n            @md-selected=\"onSelectDriveFile\"\n            md-fixed-header\n         >\n            <!-- <md-table-row v-for=\"(driveFiles, index) in tabDisplay\"\n                    @dblclick.native=\"clickPath(driveFiles)\"\n                    :key=\"index\"\n                    md-auto-select\n                    md-selectable=\"multiple\"> -->\n            <md-table-row\n               @dblclick.native=\"clickPath(driveFiles)\"\n               slot=\"md-table-row\"\n               slot-scope=\"{ item:driveFiles }\"\n               md-auto-select\n               md-selectable=\"multiple\"\n            >\n               <!-- <md-table-cell>\n          <md-icon>{{getIconFile(driveFiles)}}</md-icon>\n        </md-table-cell> -->\n               <md-table-cell md-label=\"Name\">\n                  <md-icon>{{getIconFile(driveFiles)}}</md-icon>\n                  &#8287;\n                  {{driveFiles.name}}\n               </md-table-cell>\n               <md-table-cell md-label=\"Type\">{{driveFiles.type}}</md-table-cell>\n            </md-table-row>\n         </md-table>\n      </div>\n\n      <!-- <md-list>\n      <md-list-item @click=\"getPath\" v-for=\"(driveFiles, index) in tabDisplay\" :key=\"index\" >{{driveFiles.name.get()}}</md-list-item>\n    </md-list> -->\n\n   </div>\n</template>\n\n\n<script>\nimport { FileExplorer } from \"../../../service/fileSystemExplorer.js\";\n// var viewer;\nexport default {\n   name: \"addGroup\",\n   data() {\n      return {\n         pathTab: [],\n         currentPath: undefined,\n         tabDisplay: [],\n         selected: [],\n      };\n   },\n   components: {},\n   props: [],\n   methods: {\n      onSelectDriveFile: function (items) {\n         this.selected = items;\n         this.$emit(\"getFileImportedFromDrive\", items);\n      },\n      getIconFile(file) {\n         return FileExplorer.getIconFile(file);\n      },\n      clickPath: function (driveFiles) {\n         this.selected = [];\n         let type = driveFiles.type;\n         if (type == \"Directory\" || type == \"Synchronized Directory\") {\n            let route = FileExplorer.createDriveRoute(\n               this.currentPath,\n               driveFiles\n            );\n            this.pathTab.push(route);\n            this.currentPath = route.path;\n            this.getPath();\n         }\n      },\n      getPath: function () {\n         FileExplorer.loadDrivePath(this.currentPath).then((directory) => {\n            this.tabDisplay = directory;\n         });\n      },\n      loadRoute: function (indexPath) {\n         this.selected = [];\n         this.currentPath = this.pathTab[indexPath].path;\n         this.pathTab.splice(\n            indexPath + 1,\n            this.pathTab.length - (indexPath + 1)\n         );\n         this.getPath();\n      },\n   },\n   mounted() {\n      let route = FileExplorer.getDrivePathRoot();\n      this.currentPath = route.path;\n      this.pathTab.push(route);\n      this.getPath();\n      this.$emit(\"resetImportedFiles\");\n   },\n};\n</script>\n\n\n<style scoped>\n.tableDiv {\n   width: 100%;\n   height: 100%;\n}\n\n.tableDiv .path {\n   width: 100%;\n   height: 50px;\n   display: flex;\n   align-items: center;\n   font-size: 1.2em;\n}\n\n.tableDiv .table {\n   width: 100%;\n   height: calc(100% - 50px);\n}\n</style>","<!--\nCopyright 2018 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-menu md-direction=\"top-end\"\n           md-align-trigger>\n    <md-button class=\"md-icon-button\"\n               md-menu-trigger>\n      <md-icon>more_vert</md-icon>\n    </md-button>\n\n    <md-menu-content>\n      <md-menu-item v-if=\"file._info.model_type.get() != 'Directory'\"\n                    @click=\"download\">Download</md-menu-item>\n      <md-menu-item v-if=\"boolInShared == true\"\n                    @click=\"remove\">Remove</md-menu-item>\n    </md-menu-content>\n  </md-menu>\n</template>\n\n<script>\nexport default {\n  name: \"my_compo\",\n  props: [\"file\", \"index\", \"boolInShared\"],\n  data() {\n    return {};\n  },\n  methods: {\n    download() {\n      this.$emit(\"downloadFile\", this.file, this.index);\n    },\n    remove() {\n      this.$emit(\"removeFile\", this.file, this.index);\n    }\n  }\n};\n</script>\n\n<style>\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n   <md-content class=\"container-link urlBox\">\n      <div>\n         <md-button\n            class=\"attributesButtonPanel\"\n            @click=\"activeDialogCategory = true\"\n         >\n            ADD CATEGORY\n         </md-button>\n         <md-button\n            class=\"attributesButtonPanel\"\n            @click=\"activeDialogStatus = true\"\n         >\n            ADD ATTRIBUTES\n         </md-button>\n         <!-- <md-content>\n      </md-content> -->\n         <md-subheader class=\"hr-sect \">Local Attributes</md-subheader>\n         <md-list class=\"widthOfList\">\n            <md-list-item\n               class=\"colorForCategory\"\n               v-for=\"(cat) in categoryDisplayList\"\n               :key=\"cat.nameCat\"\n               md-expand\n            >\n               <!-- <md-icon>whatshot</md-icon> -->\n               <span class=\"nameOfCategory md-list-item-text\">{{cat.nameCat}}</span>\n               <menuCategoryAttributes\n                  class=\"buttonRight\"\n                  @editCategoryNode=\"editCategoryNode\"\n                  @removeCategoryNode=\"removeCategoryNode\"\n                  :category=\"cat\"\n               >\n               </menuCategoryAttributes>\n               <md-list\n                  class=\"unsetPadding\"\n                  slot=\"md-expand\"\n               >\n                  <md-list-item\n                     v-for=\"(attributess, index) in getLstOfAttributes(cat)\"\n                     :key=\"index\"\n                     class=\"md-inset\"\n                  >\n                     <span style=\"width: 40%\">{{attributess.label.get()}}</span>\n                     <span style=\"width: 40%\">{{attributess.value.get()}}</span>\n                     <menu-attributes\n                        @editURLNode=\"editURLNode\"\n                        @removeURLNode=\"removeURLNode\"\n                        :url=\"attributess\"\n                        :category=\"cat\"\n                     ></menu-attributes>\n                  </md-list-item>\n\n               </md-list>\n\n            </md-list-item>\n         </md-list>\n         <div v-if=\"groupAttrDisplayList.length > 0\">\n            <md-subheader class=\"hr-sect \">Shared Attributes</md-subheader>\n            <md-list\n               class=\"widthOfList\"\n               v-for=\"(group) in groupAttrDisplayList\"\n               :key=\"group.groupName\"\n            >\n               <md-subheader class=\"sharedCategoryCss\">{{group.groupName}}\n               </md-subheader>\n\n               <md-list-item\n                  class=\"colorForCategory\"\n                  v-for=\"(cat) in group.groupAttr\"\n                  :key=\"cat.nameCat\"\n                  md-expand\n               >\n                  <!-- <md-icon>whatshot</md-icon> -->\n                  <span class=\"nameOfCategory md-list-item-text\">{{cat.nameCat}}</span>\n\n                  <md-list\n                     class=\"unsetPadding\"\n                     slot=\"md-expand\"\n                  >\n                     <md-list-item\n                        v-for=\"(attributess, index) in getLstOfAttributes(cat)\"\n                        :key=\"index\"\n                        class=\"md-inset\"\n                     >\n                        <span style=\"width: 40%\">{{attributess.label.get()}}</span>\n                        <span style=\"width: 40%\">{{attributess.value.get()}}</span>\n\n                     </md-list-item>\n\n                  </md-list>\n\n               </md-list-item>\n            </md-list>\n         </div>\n\n      </div>\n      <md-dialog\n         class=\"spinal-dialog-add-attr\"\n         :md-active.sync=\"activeDialogStatus\"\n      >\n         <md-dialog-title>Add Attributes</md-dialog-title>\n\n         <md-dialog-content class=\"attributeDialogContent\">\n            <!-- md-dynamic-height -->\n            <md-tabs\n               class=\"dialogTabs\"\n               @md-changed=\"resetAttributes\"\n               md-alignment=\"fixed\"\n            >\n               <md-tab md-label=\"Create\">\n                  <!-- <div class=\"md-layout-item\"> -->\n                  <md-field>\n                     <md-select\n                        v-model=\"categorySelected\"\n                        name=\"category\"\n                        id=\"category\"\n                        placeholder=\"category\"\n                     >\n                        <!-- <md-option value=\"none\">Create Category</md-option> -->\n                        <md-option\n                           v-for=\"(category, index) in categoryDisplayList\"\n                           :key=\"index\"\n                           :value=\"category.node.info.name.get()\"\n                        >\n                           {{category.node.info.name.get()}}</md-option>\n                     </md-select>\n                  </md-field>\n                  <!-- </div> -->\n\n                  <md-field md-inline>\n                     <label>Label</label>\n                     <md-input v-model=\"label\"></md-input>\n                  </md-field>\n\n                  <md-field md-inline>\n                     <label>Value</label>\n                     <md-input v-model=\"value\"></md-input>\n                  </md-field>\n               </md-tab>\n\n               <md-tab md-label=\"Import\">\n                  <attributesImport\n                     :option=\"option\"\n                     :categoryDisplayList=\"categoryDisplayList\"\n                     @getAttributesFromForge=\"getAttributesFromForge\"\n                     @updatecategorySelected=\"updatecategorySelected\"\n                  >\n                  </attributesImport>\n               </md-tab>\n            </md-tabs>\n         </md-dialog-content>\n\n         <md-dialog-actions>\n            <md-button\n               class=\"md-primary\"\n               @click=\"activeDialogStatus = false\"\n            >Close</md-button>\n            <md-button\n               class=\"md-primary\"\n               @click=\"addAttributes\"\n            >Save</md-button>\n         </md-dialog-actions>\n      </md-dialog>\n\n      <md-dialog :md-active.sync=\"activeDialogCategory\">\n         <md-dialog-title>Add Category</md-dialog-title>\n\n         <md-field\n            md-inline\n            style=\"width: 80%; margin-left: auto; margin-right: auto;\"\n         >\n            <label>category</label>\n            <md-input v-model=\"category\"></md-input>\n         </md-field>\n\n         <md-dialog-actions>\n            <md-button\n               class=\"md-primary\"\n               @click=\"activeDialogCategory = false\"\n            >Close</md-button>\n            <md-button\n               class=\"md-primary\"\n               @click=\"addCategory\"\n            >Save</md-button>\n         </md-dialog-actions>\n      </md-dialog>\n   </md-content>\n</template>\n\n\n<script>\n//import Toasted from \"vue-toasted\";\n\nimport Vue from \"vue\";\nimport { serviceDocumentation } from \"spinal-env-viewer-plugin-documentation-service\";\nimport menuAttributes from \"./component/menuAttributes.vue\";\nimport menuCategoryAttributes from \"./component/menuCategoryAttributes.vue\";\nimport attributesImport from \"./component/attributesImport.vue\";\nimport { utilities } from \"../../service/utilities.js\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n//Vue.use(Toasted);\nlet viewer;\n\nexport default {\n   name: \"linkPanel\",\n   data() {\n      return {\n         activeDialogStatus: false,\n         activeDialogCategory: false,\n         label: undefined,\n         value: undefined,\n         categorySelected: undefined,\n         categoryCreate: \"none\",\n         category: undefined,\n         categoryDisplayList: [],\n         URLDisplayList: [],\n         myBind: undefined,\n         groupAttrDisplayList: [],\n         myBindParent: undefined,\n         parentListToBind: undefined,\n      };\n   },\n   components: { menuAttributes, menuCategoryAttributes, attributesImport },\n   props: [\"option\", \"parentGroup\"],\n   methods: {\n      // async selectAttributes(attr) {\n      //   console.log(\"___________________________\");\n      //   serviceDocumentation\n      //     .getCategoryByName(this.option.info, attr.nameCat)\n      //     .then(async category => {\n      //       console.log(category);\n      //     });\n\n      //   let category = await serviceDocumentation.addCategoryAttribute(\n      //     this.option.info,\n      //     \"categoryName\"\n      //   );\n      //   console.log(category);\n      //   console.log(\"___________________________\");\n      // },\n      editURLNode(attributes, urlChange) {\n         attributes.label.set(urlChange.label);\n         attributes.value.set(urlChange.value);\n         this.resetBind();\n      },\n      removeURLNode(attributes, category) {\n         for (let i = 0; i < category.element.length; i++) {\n            const element = category.element[i];\n            if (element.label.get() == attributes.label.get()) {\n               category.element.splice(i, 1);\n            }\n         }\n      },\n      editCategoryNode(category, change) {\n         category.node.info.name.set(change.name);\n      },\n      removeCategoryNode(category) {\n         serviceDocumentation.removeNode(category.node);\n      },\n      getAttributesFromForge(attributes) {\n         this.selectedAttributesForge = attributes;\n         // get la list d'attributs depuis les attributes de forge\n      },\n      updatecategorySelected(categorySelected) {\n         this.categorySelected = categorySelected;\n      },\n      async updateURLList() {\n         if (this.option.info != undefined) {\n            this.categoryDisplayList = await serviceDocumentation.getCategory(\n               this.option.info\n            );\n         }\n      },\n      async updateAttrParent() {\n         this.groupAttrDisplayList = [];\n         let json = {};\n         for (let i = 0; i < this.parentGroup.length; i++) {\n            const node = this.parentGroup[i];\n            if (node) {\n               json = {\n                  groupName: node.info.name.get(),\n                  groupAttr: await serviceDocumentation.getCategory(node),\n               };\n               this.groupAttrDisplayList.push(json);\n            }\n         }\n      },\n\n      getLstOfAttributes(cat) {\n         let tab = [];\n         if (cat.element != undefined) {\n            for (let i = 0; i < cat.element.length; i++) {\n               const element = cat.element[i];\n               tab.push(element);\n            }\n         }\n         return tab;\n      },\n      async testAttributes() {\n         if (\n            this.categorySelected != undefined ||\n            this.categorySelected != \"\"\n         ) {\n            if (this.label == undefined || this.value == undefined) {\n               let cat = await serviceDocumentation.getCategoryByName(\n                  this.option.info,\n                  this.categorySelected\n               );\n               for (let i = 0; i < this.selectedAttributesForge.length; i++) {\n                  const element = this.selectedAttributesForge[i];\n                  serviceDocumentation.addAttributeByCategory(\n                     this.option.info,\n                     cat,\n                     element.displayName,\n                     element.displayValue\n                  );\n               }\n            } else {\n               let label = this.label;\n               let value = this.value;\n               let cat = await serviceDocumentation.getCategoryByName(\n                  this.option.info,\n                  this.categorySelected\n               );\n               serviceDocumentation.addAttributeByCategory(\n                  this.option.info,\n                  cat,\n                  this.label,\n                  this.value\n               );\n            }\n         } else {\n            console.log(\"error\");\n         }\n      },\n      async addAttributes() {\n         if (this.option.exist == false) {\n            window.spinal.ForgeViewer.viewer.model.getProperties(\n               this.option.dbid,\n               async (res) => {\n                  let boolIsCreated = await window.spinal.BimObjectService.createBIMObject(\n                     this.option.dbid,\n                     res.name,\n                     this.option.model3d\n                  );\n                  if (boolIsCreated) {\n                     let bimObject = await window.spinal.BimObjectService.getBIMObject(\n                        this.option.dbid,\n                        this.option.model3d\n                     );\n                     this.option.info = SpinalGraphService.getRealNode(\n                        bimObject.id\n                     );\n                  }\n\n                  await this.testAttributes();\n                  this.resetAttributes();\n                  this.resetBind();\n               }\n            );\n         } else {\n            await this.testAttributes();\n            this.resetAttributes();\n         }\n         // on check si les attributs viennent de forge ou on créer un attributs\n\n         // viewer.model.getProperties(this.option.dbid, function(res) {\n         //   let option = utilities.addAttributes(\n         //     _this.option,\n         //     res.name,\n         //     label,\n         //     value\n         //   );\n         //   option.then(option => {\n         //     if (_this.option.exist == false) {\n         //       _this.option.exist = true;\n         //       _this.$emit(\"updateMyBIMObject\", option);\n         //     }\n         //   });\n         // });\n         // this.label = undefined;\n         // this.value = undefined;\n         // this.categorySelected = undefined;\n         this.activeDialogStatus = false;\n      },\n      checkCategory() {\n         if (this.category != undefined && this.category != \"\") {\n            serviceDocumentation.addCategoryAttribute(\n               this.option.info,\n               this.category\n            );\n            this.category = \"\";\n         }\n      },\n      addCategory() {\n         let _this = this;\n         if (this.option.exist) {\n            this.checkCategory();\n         } else {\n            // create bim object before add note\n            if (this.option.dbid != undefined) {\n               window.spinal.ForgeViewer.viewer.model.getProperties(\n                  this.option.dbid,\n                  async (res) => {\n                     let boolIsCreated = await window.spinal.BimObjectService.createBIMObject(\n                        _this.option.dbid,\n                        res.name,\n                        _this.option.model3d\n                     );\n                     if (boolIsCreated) {\n                        let bimObject = await window.spinal.BimObjectService.getBIMObject(\n                           _this.option.dbid,\n                           _this.option.model3d\n                        );\n                        _this.option.info = SpinalGraphService.getRealNode(\n                           bimObject.id\n                        );\n                     }\n                     _this.option.exist = true;\n                     _this.$emit(\"updateMyBIMObject\", this.option);\n\n                     _this.checkCategory();\n                     _this.resetBind();\n                  }\n               );\n            }\n         }\n         // this.category = \"\";\n         this.activeDialogCategory = false;\n      },\n      resetAttributes() {\n         this.label = undefined;\n         this.value = undefined;\n         this.categorySelected = undefined;\n         this.selectedAttributesForge = undefined;\n      },\n      resetBind() {\n         if (this.option.info != undefined) {\n            if (this.option != undefined) {\n               if (this.myBind != undefined) {\n                  this.option.info.unbind(this.myBind);\n                  this.myBind = undefined;\n               }\n               if (this.myBind == undefined) {\n                  this.myBind = this.option.info.bind(\n                     this.updateURLList.bind(this)\n                  );\n               }\n            }\n         }\n      },\n      resetBindParent() {\n         // j'ai la liste de tous les node parent\n         if (this.parentListToBind == undefined) {\n            this.parentListToBind = new Lst();\n         }\n         if (!this.parentListToBind.length == this.parentGroup.length) {\n            this.parentListToBind.splice(0, this.parentListToBind.length);\n            for (let i = 0; i < this.parentGroup.length; i++) {\n               const element = this.parentGroup[i];\n               this.parentListToBind.push(element);\n            }\n         }\n         if (this.myBindParent == undefined) {\n            this.parentListToBind.bind(this.updateAttrParent.bind(this));\n         }\n      },\n   },\n   mounted() {\n      viewer = window.spinal.ForgeViewer.viewer;\n      this.resetBind();\n      this.resetBindParent();\n   },\n   watch: {\n      option: function () {\n         this.resetBind();\n      },\n      parentGroup: function () {\n         this.resetBindParent();\n      },\n   },\n   beforeDestroy() {\n      if (this.option.info != undefined && this.myBind != undefined) {\n         this.option.info.unbind(this.myBind);\n      }\n   },\n};\n</script>\n\n<style>\n.container-link\n   i.md-icon.md-icon-font.md-icon-image.md-list-expand-icon.md-theme-default {\n   position: absolute;\n   margin: unset;\n}\n\n.nameOfCategory {\n   position: absolute;\n   left: 26px;\n}\n.unsetPadding {\n   padding: unset;\n}\n.widthOfList {\n   width: 93%;\n   margin-left: auto;\n   margin-right: auto;\n}\n\n.buttonRight {\n   position: absolute;\n   right: 0%;\n}\n\n.titleOfSharedLocal {\n   margin-left: auto;\n   margin-right: auto;\n   width: fit-content;\n}\n.spinal-dialog-add-attr {\n   width: 560px;\n   height: 500px;\n}\n\n.spinal-dialog-add-attr > .md-dialog-container {\n   max-width: 100%;\n}\n\n.spinal-dialog-add-attr .attributeDialogContent {\n   width: 100%;\n   height: 100%;\n   overflow: hidden;\n}\n\n.attributeDialogContent .dialogTabs,\n.attributeDialogContent .dialogTabs .md-tabs-content,\n.attributeDialogContent .dialogTabs .md-tabs-content .md-tabs-container {\n   width: 100%;\n   height: 100% !important;\n}\n\n.spinal-dialog-add-attr\n   .attributeDialogContent\n   .dialogTabs\n   .md-tabs-content\n   .md-tabs-container\n   .md-tab {\n   width: 100%;\n   height: 100% !important;\n   overflow: auto;\n}\n</style>\n","<!--\nimport { constants } from 'http2';\nCopyright 2018 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div>\n    <md-menu md-direction=\"top-end\"\n             md-align-trigger>\n      <md-button class=\"md-icon-button\"\n                 md-menu-trigger>\n        <md-icon>more_vert</md-icon>\n      </md-button>\n\n      <md-menu-content>\n        <md-menu-item @click=\"activeEditAttributesNode  = true\">Edit\n        </md-menu-item>\n        <md-menu-item @click=\"remove()\">Remove</md-menu-item>\n      </md-menu-content>\n    </md-menu>\n\n    <md-dialog :md-active.sync=\"activeEditAttributesNode\">\n      <md-dialog-title>Edit Attribute</md-dialog-title>\n      <md-field md-inline\n                style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n        <label>Label</label>\n        <md-input v-model=\"urlChange.label\"></md-input>\n      </md-field>\n      <md-field md-inline\n                style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n        <label>Link</label>\n        <md-input v-model=\"urlChange.value\"></md-input>\n      </md-field>\n\n      <md-dialog-actions>\n        <md-button class=\"md-primary\"\n                   @click=\"activeEditAttributesNode = false\">Close</md-button>\n        <md-button class=\"md-primary\"\n                   @click=\"edit\">Save</md-button>\n      </md-dialog-actions>\n    </md-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"my_compo\",\n  props: [\"url\", \"category\"],\n  data() {\n    return {\n      activeEditAttributesNode: false,\n      urlChange: { label: \"\", URL: \"\" },\n    };\n  },\n  methods: {\n    edit() {\n      this.$emit(\"editURLNode\", this.url, this.urlChange);\n      this.activeEditAttributesNode = false;\n    },\n\n    remove() {\n      this.$emit(\"removeURLNode\", this.url, this.category);\n    },\n  },\n  mounted() {\n    if (this.url !== undefined) {\n      this.urlChange.label = this.url.label.get();\n      this.urlChange.value = this.url.value.get();\n    }\n  },\n  watch: {\n    activeEditAttributesNode() {\n      if (this.activeEditAttributesNode) {\n        if (this.url !== undefined) {\n          this.urlChange.label = this.url.label.get();\n          this.urlChange.value = this.url.value.get();\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style>\n</style>","<!--\nimport { constants } from 'http2';\nCopyright 2018 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div>\n    <md-menu md-direction=\"top-end\"\n             md-align-trigger>\n      <md-button class=\"md-icon-button\"\n                 md-menu-trigger>\n        <md-icon>more_vert</md-icon>\n      </md-button>\n\n      <md-menu-content>\n        <md-menu-item @click=\"activeEditAttributesNode  = true\">Edit</md-menu-item>\n        <md-menu-item @click=\"remove()\">Remove</md-menu-item>\n      </md-menu-content>\n    </md-menu>\n    <md-dialog :md-active.sync=\"activeEditAttributesNode\">\n      <md-dialog-title>Edit Category</md-dialog-title>\n      <md-field md-inline\n                style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n        <label>Label</label>\n        <md-input v-model=\"urlChange.name\"></md-input>\n      </md-field>\n\n      <md-dialog-actions>\n        <md-button class=\"md-primary\"\n                   @click=\"activeEditAttributesNode = false\">Close</md-button>\n        <md-button class=\"md-primary\"\n                   @click=\"edit\">Save</md-button>\n      </md-dialog-actions>\n    </md-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"my_compo\",\n  props: [\"category\"],\n  data() {\n    return {\n      activeEditAttributesNode: false,\n      urlChange: { name: \"\" }\n    };\n  },\n  methods: {\n    edit() {\n      this.$emit(\"editCategoryNode\", this.category, this.urlChange);\n      this.activeEditAttributesNode = false;\n    },\n\n    remove() {\n      this.$emit(\"removeCategoryNode\", this.category);\n    }\n  },\n  mounted() {\n    if (this.category !== undefined) {\n      this.urlChange.name = this.category.node.info.name.get();\n    }\n  }\n};\n</script>\n\n<style>\n</style>","<template>\n  <md-content class=\" md-scrollbar\"\n              style=\"box-sizing: border-box; overflow-y:auto; height: 40vh\">\n    <div class=\"md-layout-item\">\n      <md-field style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n        <md-select :md-selected=\"updatecategorySelected\"\n                   v-model=\"categorySelected\"\n                   name=\"category\"\n                   id=\"category\"\n                   placeholder=\"category\">\n          <md-option v-for=\"(category, index) in categoryDisplayList\"\n                     :key=\"index\"\n                     :value=\"category.node.info.name.get()\">{{category.node.info.name.get()}}</md-option>\n        </md-select>\n      </md-field>\n    </div>\n    <div>\n      <md-table v-model=\"displayAttributesList\"\n                md-card\n                @md-selected=\"onSelectAttribute\">\n        <md-table-row class=\"myRowStyle\"\n                      slot=\"md-table-row\"\n                      slot-scope=\"{ item:forgeAttributes }\"\n                      md-auto-select\n                      md-selectable=\"multiple\">\n          <md-table-cell>\n            <span class=\"md-list-item-text\">{{forgeAttributes.attributeName}}</span>\n          </md-table-cell>\n          <md-table-cell>\n            <span class=\"md-list-item-text\">{{forgeAttributes.displayValue}}</span>\n          </md-table-cell>\n        </md-table-row>\n      </md-table>\n    </div>\n  </md-content>\n</template>\n\n\n<script>\nexport default {\n  name: \"addGroup\",\n  data() {\n    return {\n      categorySelected: undefined,\n      selectedAttributesTab: [],\n      propertiesTab: [],\n      displayAttributesList: []\n    };\n  },\n  components: {},\n  props: [\"option\", \"categoryDisplayList\"],\n  methods: {\n    async benef() {\n      // console.log(this.option);\n      this.selectedNode = this.option.info;\n      if (this.option.dbid) {\n        this.dbid = this.option.dbid;\n      } else {\n        if (this.option.info.info.type.get() == \"BIMObject\")\n          this.dbid = this.option.info.info.dbid.get();\n      }\n      this.exist = this.option.exist;\n\n      this.propertiesTab = await this.promiseGetPorperties(this.dbid);\n      // console.log(propertiesTab);\n\n      this.updateDisplayAttributesList();\n    },\n    updateDisplayAttributesList() {\n      this.displayAttributesList = [];\n      for (let i = 0; i < this.propertiesTab.properties.length; i++) {\n        const forgeAttributes = this.propertiesTab.properties[i];\n        this.displayAttributesList.push(forgeAttributes);\n      }\n    },\n    updatecategorySelected() {\n      this.$emit(\"updatecategorySelected\", this.categorySelected);\n    },\n    onSelectAttribute(items) {\n      this.$emit(\"getAttributesFromForge\", items);\n    },\n    promiseGetPorperties(dbId) {\n      return new Promise(resolve => {\n        window.spinal.ForgeViewer.viewer.model.getProperties(dbId, resolve);\n      });\n    }\n  },\n  mounted() {\n    this.categorySelected = undefined;\n    this.benef();\n  },\n  watch: {\n    categorySelected: function() {\n      this.updatecategorySelected();\n    }\n  }\n};\n</script>","<!--\nCopyright 2018 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n\n<template>\n  <md-content class=\"unsetBackgroundContent \">\n    <md-button @click=\"forgeSelection\">\n      {{selectedDbidArray.length}} Selected Object\n    </md-button>\n    <div class=\"md-layout-item\">\n      <md-field style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n        <md-select v-model=\"categorySelected\"\n                   name=\"category\"\n                   id=\"category\"\n                   placeholder=\"category\">\n          <md-option value=\"none\">Create Category</md-option>\n          <md-option v-for=\"(category, index) in allCategory\"\n                     :key=\"index\"\n                     :value=\"category.node.info.name.get()\">{{category.node.info.name.get()}}</md-option>\n        </md-select>\n      </md-field>\n      <md-field v-if=\"categorySelected === 'none'\"\n                md-inline\n                style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n        <label>category</label>\n        <md-input v-model=\"categoryCreate\"></md-input>\n      </md-field>\n    </div>\n    <md-field md-inline\n              style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n      <label>Label</label>\n      <md-input v-model=\"label\"></md-input>\n    </md-field>\n\n    <md-field md-inline\n              style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n      <label>Value</label>\n      <md-input v-model=\"value\"></md-input>\n    </md-field>\n    <md-button class=\"md-primary\"\n               @click=\"addAttributes\">Save</md-button>\n  </md-content>\n</template>\n\n<script>\nimport bimObjectService from \"spinal-env-viewer-plugin-bimobjectservice\";\nimport { serviceDocumentation } from \"spinal-env-viewer-plugin-documentation-service\";\nexport default {\n  name: \"my_compo\",\n  data() {\n    return {\n      selectedDbidArray: [],\n      allCategory: [],\n      categorySelected: \"none\",\n      label: undefined,\n      value: undefined,\n      categoryCreate: undefined\n    };\n  },\n  components: {},\n  methods: {\n    forgeSelection() {\n      this.viewer.select(this.selectedDbidArray);\n    },\n    addAttributes() {\n      let myCategoerySelected = this.categorySelected;\n      if (myCategoerySelected === \"none\") {\n        myCategoerySelected = this.categoryCreate;\n      }\n      this.selectedDbidArray.forEach(dbid => {\n        bimObjectService.getBIMObject(dbid).then(node => {\n          if (node === undefined) {\n            // bimobject is not create, we create it\n            // console.log(\"create bim object\");\n            window.spinal.ForgeViewer.viewer.model.getProperties(dbid, res => {\n              bimObjectService\n                .createBIMObject(dbid, res.name)\n                .then(myBIMObject => {\n                  serviceDocumentation.addAttributeByCategoryName(\n                    myBIMObject,\n                    myCategoerySelected,\n                    this.label,\n                    this.value\n                  );\n                });\n            });\n          } else {\n            // bim object is created, node is our bim object\n            // console.log(\"bim object exist\");\n            serviceDocumentation.addAttributeByCategoryName(\n              node,\n              myCategoerySelected,\n              this.label,\n              this.value\n            );\n          }\n        });\n      });\n    },\n    opened(objet, viewer) {\n      this.viewer = viewer;\n      this.selectedDbidArray = objet.dbid;\n      this.allCategory = objet.category;\n    },\n    removed(option, viewer) {},\n    closed(option, viewer) {}\n  }\n};\n</script>\n\n<style>\n.unsetBackgroundContent {\n  background: transparent !important;\n  box-sizing: border-box;\n  height: calc(100% - 50px);\n}\n.unsetBackgroundContent ul.md-list.md-theme-default {\n  background-color: unset;\n}\n.unsetBackgroundContent .md-field.md-theme-default.md-inline {\n  margin: unset;\n}\n</style>\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nlet createGraph = (() => {\n  var _ref = _asyncToGenerator(function* () {\n    const forgeFile = yield window.spinal.spinalSystem.getModel();\n\n    if (!forgeFile.hasOwnProperty(\"graph\")) {\n      forgeFile.add_attr({\n        graph: new _spinalModelGraph.SpinalGraph()\n      });\n    }\n\n    return forgeFile.graph;\n  });\n\n  return function createGraph() {\n    return _ref.apply(this, arguments);\n  };\n})();\n\nlet createContext = (() => {\n  var _ref2 = _asyncToGenerator(function* () {\n    const graph = yield this.getGraph();\n    let context = yield graph.getContext(BIM_OBJECT_CONTEXT_TYPE);\n\n    if (context === undefined) {\n      context = new _spinalModelGraph.SpinalContext(BIM_OBJECT_CONTEXT_TYPE);\n      yield graph.addContext(context);\n    }\n\n    return context;\n  });\n\n  return function createContext() {\n    return _ref2.apply(this, arguments);\n  };\n})();\n\nvar _spinalModelGraph = require(\"spinal-model-graph\");\n\nvar _spinalModelsBimobject = require(\"spinal-models-bimobject\");\n\nvar _spinalModelsBimobject2 = _interopRequireDefault(_spinalModelsBimobject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst BIM_OBJECT_CONTEXT_TYPE = \"BIMObjectContext\";\nconst BIM_OBJECT_NODE_TYPE = \"BIMObject\";\nconst BIM_OBJECT_RELATION_NAME = \"hasBIMObject\";\nconst REFERENCE_OBJECT_RELATION_NAME = \"hasReferenceObject\";\nconst BIM_OBJECT_RELATION_TYPE = _spinalModelGraph.SPINAL_RELATION_PTR_LST_TYPE;\n\nconst bimObjectService = {\n  graph: null,\n  context: null,\n  getGraph() {\n    if (this.graph === null) {\n      this.graph = createGraph();\n    }\n\n    return this.graph;\n  },\n  getContext() {\n    if (this.context === null) {\n      this.context = createContext.call(this);\n    }\n\n    return this.context;\n  },\n  createBIMObject(dbid, name) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let BIMObjNode = yield _this.getBIMObject(dbid);\n\n      if (BIMObjNode === undefined) {\n        const BIMObject = new _spinalModelsBimobject2.default(dbid, name);\n\n        BIMObjNode = new _spinalModelGraph.SpinalNode(name, BIM_OBJECT_NODE_TYPE, BIMObject);\n        BIMObjNode.info.add_attr({\n          dbid: dbid\n        });\n\n        const BIMObjectContext = yield _this.getContext();\n\n        yield BIMObjectContext.addChildInContext(BIMObjNode, BIM_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE, BIMObjectContext);\n      }\n\n      return BIMObjNode;\n    })();\n  },\n  getBIMObject(dbid) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const BIMObjectContext = yield _this2.getContext(BIM_OBJECT_CONTEXT_TYPE);\n      const BIMObjectArray = yield BIMObjectContext.getChildren([BIM_OBJECT_RELATION_NAME]);\n\n      for (let BIMObject of BIMObjectArray) {\n        if (BIMObject.info.dbid.get() === dbid) {\n          return BIMObject;\n        }\n      }\n    })();\n  },\n  addBIMObject(context, parent, dbId, name) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let node;\n\n      if (dbId instanceof _spinalModelGraph.SpinalNode) {\n        node = dbId;\n      } else {\n        node = yield _this3.getBIMObject(dbId);\n\n        if (node === undefined) {\n          node = yield _this3.createBIMObject(dbId, name);\n        }\n      }\n\n      yield parent.addChildInContext(node, BIM_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE, context);\n\n      return node;\n    })();\n  },\n  removeBIMObject(parent, child) {\n    return parent.removeChild(child, BIM_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE);\n  },\n  deleteBIMObject(dbId) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const context = yield _this4.getContext();\n      const children = yield context.getChildrenInContext();\n      const child = children.find(function (node) {\n        return node.info.dbId === dbId;\n      });\n\n      if (child === undefined) {\n        throw Error(\"The dbId has no BIM object\");\n      }\n\n      return child.removeFromGraph();\n    })();\n  },\n  addReferenceObject(parent, dbId, name) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      let node;\n\n      if (dbId instanceof _spinalModelGraph.SpinalNode) {\n        node = dbId;\n      } else {\n        node = yield _this5.getBIMObject(dbId);\n\n        if (node === undefined) {\n          node = yield _this5.createBIMObject(dbId, name);\n        }\n      }\n\n      yield parent.addChild(node, REFERENCE_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE);\n\n      return node;\n    })();\n  },\n  removeReferenceObject(parent, child) {\n    return parent.removeChild(child, REFERENCE_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE);\n  }\n};\n\nbimObjectService.constants = {\n  BIM_OBJECT_CONTEXT_TYPE,\n  BIM_OBJECT_NODE_TYPE,\n  BIM_OBJECT_RELATION_NAME,\n  REFERENCE_OBJECT_RELATION_NAME,\n  BIM_OBJECT_RELATION_TYPE\n};\n\nexports.default = bimObjectService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import {\n  SpinalGraph,\n  SpinalContext,\n  SpinalNode,\n  SPINAL_RELATION_PTR_LST_TYPE\n} from \"spinal-model-graph\";\nimport SpinalBIMObject from \"spinal-models-bimobject\";\n\nconst BIM_OBJECT_CONTEXT_TYPE = \"BIMObjectContext\";\nconst BIM_OBJECT_NODE_TYPE = \"BIMObject\";\nconst BIM_OBJECT_RELATION_NAME = \"hasBIMObject\";\nconst REFERENCE_OBJECT_RELATION_NAME = \"hasReferenceObject\";\nconst BIM_OBJECT_RELATION_TYPE = SPINAL_RELATION_PTR_LST_TYPE;\n\nasync function createGraph() {\n  const forgeFile = await window.spinal.spinalSystem.getModel();\n\n  if (!forgeFile.hasOwnProperty(\"graph\")) {\n    forgeFile.add_attr({\n      graph: new SpinalGraph()\n    });\n  }\n\n  return forgeFile.graph;\n}\n\nasync function createContext() {\n  const graph = await this.getGraph();\n  let context = await graph.getContext(BIM_OBJECT_CONTEXT_TYPE);\n\n  if (context === undefined) {\n    context = new SpinalContext(BIM_OBJECT_CONTEXT_TYPE);\n    await graph.addContext(context);\n  }\n\n  return context;\n}\n\nconst bimObjectService = {\n  graph: null,\n  context: null,\n  getGraph() {\n    if (this.graph === null) {\n      this.graph = createGraph();\n    }\n\n    return this.graph;\n  },\n  getContext() {\n    if (this.context === null) {\n      this.context = createContext.call(this);\n    }\n\n    return this.context;\n  },\n  async createBIMObject(dbid, name) {\n    let BIMObjNode = await this.getBIMObject(dbid);\n\n    if (BIMObjNode === undefined) {\n      const BIMObject = new SpinalBIMObject(dbid, name);\n\n      BIMObjNode = new SpinalNode(name, BIM_OBJECT_NODE_TYPE, BIMObject);\n      BIMObjNode.info.add_attr({\n        dbid: dbid\n      });\n\n      const BIMObjectContext = await this.getContext();\n\n      await BIMObjectContext.addChildInContext(\n        BIMObjNode,\n        BIM_OBJECT_RELATION_NAME,\n        BIM_OBJECT_RELATION_TYPE,\n        BIMObjectContext\n      );\n    }\n\n    return BIMObjNode;\n  },\n  async getBIMObject(dbid) {\n    const BIMObjectContext = await this.getContext(BIM_OBJECT_CONTEXT_TYPE);\n    const BIMObjectArray = await BIMObjectContext.getChildren([\n      BIM_OBJECT_RELATION_NAME\n    ]);\n\n    for (let BIMObject of BIMObjectArray) {\n      if (BIMObject.info.dbid.get() === dbid) {\n        return BIMObject;\n      }\n    }\n  },\n  async addBIMObject(context, parent, dbId, name) {\n    let node;\n\n    if (dbId instanceof SpinalNode) {\n      node = dbId;\n    } else {\n      node = await this.getBIMObject(dbId);\n\n      if (node === undefined) {\n        node = await this.createBIMObject(dbId, name);\n      }\n    }\n\n    await parent.addChildInContext(\n      node,\n      BIM_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE,\n      context\n    );\n\n    return node;\n  },\n  removeBIMObject(parent, child) {\n    return parent.removeChild(\n      child,\n      BIM_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE\n    );\n  },\n  async deleteBIMObject(dbId) {\n    const context = await this.getContext();\n    const children = await context.getChildrenInContext();\n    const child = children.find(node => node.info.dbId === dbId);\n\n    if (child === undefined) {\n      throw Error(\"The dbId has no BIM object\");\n    }\n\n    return child.removeFromGraph();\n  },\n  async addReferenceObject(parent, dbId, name) {\n    let node;\n\n    if (dbId instanceof SpinalNode) {\n      node = dbId;\n    } else {\n      node = await this.getBIMObject(dbId);\n\n      if (node === undefined) {\n        node = await this.createBIMObject(dbId, name);\n      }\n    }\n\n    await parent.addChild(\n      node,\n      REFERENCE_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE\n    );\n\n    return node;\n  },\n  removeReferenceObject(parent, child) {\n    return parent.removeChild(\n      child,\n      REFERENCE_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE\n    );\n  }\n};\n\nbimObjectService.constants = {\n  BIM_OBJECT_CONTEXT_TYPE,\n  BIM_OBJECT_NODE_TYPE,\n  BIM_OBJECT_RELATION_NAME,\n  REFERENCE_OBJECT_RELATION_NAME,\n  BIM_OBJECT_RELATION_TYPE\n};\n\nexport default bimObjectService;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\nexports.default = SpinalBIMObject;\n\nspinalCore.register_models([SpinalBIMObject]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL0JJTU9iamVjdC5qcyJdLCJuYW1lcyI6WyJzcGluYWxDb3JlIiwicmVxdWlyZSIsImdsb2JhbFR5cGUiLCJ3aW5kb3ciLCJnbG9iYWwiLCJTcGluYWxCSU1PYmplY3QiLCJNb2RlbCIsImNvbnN0cnVjdG9yIiwiX2lkIiwiX25hbWUiLCJGaWxlU3lzdGVtIiwiX3NpZ19zZXJ2ZXIiLCJhZGRfYXR0ciIsImlkIiwibmFtZSIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxhQUFhQyxRQUFRLHlCQUFSLENBQW5CO0FBQ0EsTUFBTUMsYUFBYSxPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLEdBQWdDQyxNQUFoQyxHQUF5Q0QsTUFBNUQ7O0FBS0EsTUFBTUUsZUFBTixTQUE4QkgsV0FBV0ksS0FBekMsQ0FBK0M7QUFDN0NDLGNBQVlDLEdBQVosRUFBaUJDLEtBQWpCLEVBQXdCO0FBQ3RCO0FBQ0EsUUFBSUMsV0FBV0MsV0FBZixFQUE0QjtBQUMxQixXQUFLQyxRQUFMLENBQWM7QUFDWkMsWUFBSUwsR0FEUTtBQUVaTSxjQUFNTDtBQUZNLE9BQWQ7QUFJRDtBQUNGO0FBVDRDOztrQkFhaENKLGU7O0FBQ2ZMLFdBQVdlLGVBQVgsQ0FBMkIsQ0FBQ1YsZUFBRCxDQUEzQiIsImZpbGUiOiJCSU1PYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cblxuXG5cbmNsYXNzIFNwaW5hbEJJTU9iamVjdCBleHRlbmRzIGdsb2JhbFR5cGUuTW9kZWwge1xuICBjb25zdHJ1Y3RvcihfaWQsIF9uYW1lKSB7XG4gICAgc3VwZXIoKTtcbiAgICBpZiAoRmlsZVN5c3RlbS5fc2lnX3NlcnZlcikge1xuICAgICAgdGhpcy5hZGRfYXR0cih7XG4gICAgICAgIGlkOiBfaWQsXG4gICAgICAgIG5hbWU6IF9uYW1lXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBTcGluYWxCSU1PYmplY3Q7XG5zcGluYWxDb3JlLnJlZ2lzdGVyX21vZGVscyhbU3BpbmFsQklNT2JqZWN0XSk7Il19","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\n\n\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\n\nexport default SpinalBIMObject;\nspinalCore.register_models([SpinalBIMObject]);","<!--\nCopyright 2018 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n\n<template>\n  <md-content class=\"unsetBackgroundContent \">\n    <md-button @click=\"forgeSelection\">\n      {{selectedDbidArray.length}} Selected Object\n    </md-button>\n    <md-field md-inline\n              style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n      <label>Label</label>\n      <md-input v-model=\"label\"></md-input>\n    </md-field>\n\n    <md-field md-inline\n              style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n      <label>URL</label>\n      <md-input v-model=\"value\"></md-input>\n    </md-field>\n    <md-button class=\"md-primary\"\n               @click=\"editURL\">Edit</md-button>\n    <md-button class=\"md-primary\"\n               @click=\"deleteURL\">Delete</md-button>\n  </md-content>\n</template>\n\n<script>\nimport bimObjectService from \"spinal-env-viewer-plugin-bimobjectservice\";\nimport { serviceDocumentation } from \"spinal-env-viewer-plugin-documentation-service\";\nexport default {\n  name: \"my_compo\",\n  data() {\n    return {\n      selectedDbidArray: [],\n      label: undefined,\n      value: undefined\n    };\n  },\n  components: {},\n  methods: {\n    forgeSelection() {\n      this.viewer.select(this.selectedDbidArray);\n    },\n    deleteURL() {\n      this.selectedDbidArray.forEach(dbid => {\n        bimObjectService.getBIMObject(dbid).then(node => {\n          if (node === undefined) {\n            // bimobject is not create, we create it\n            // console.log(\"create bim object\");\n            // window.spinal.ForgeViewer.viewer.model.getProperties(dbid, res => {\n            //   bimObjectService\n            //     .createBIMObject(dbid, res.name)\n            //     .then(myBIMObject => {\n            //       serviceDocumentation.addURL(\n            //         myBIMObject,\n            //         this.label,\n            //         this.value\n            //       );\n            //     });\n            // });\n          } else {\n            // bim object is created, node is our bim object\n            serviceDocumentation.deleteURL(node, this.label);\n          }\n        });\n      });\n    },\n    editURL() {},\n    addURL() {\n      this.selectedDbidArray.forEach(dbid => {\n        bimObjectService.getBIMObject(dbid).then(node => {\n          if (node === undefined) {\n            // bimobject is not create, we create it\n            // console.log(\"create bim object\");\n            window.spinal.ForgeViewer.viewer.model.getProperties(dbid, res => {\n              bimObjectService\n                .createBIMObject(dbid, res.name)\n                .then(myBIMObject => {\n                  serviceDocumentation.addURL(\n                    myBIMObject,\n                    this.label,\n                    this.value\n                  );\n                });\n            });\n          } else {\n            // bim object is created, node is our bim object\n            serviceDocumentation.addURL(node, this.label, this.value);\n          }\n        });\n      });\n    },\n    opened(objet, viewer) {\n      this.viewer = viewer;\n      this.selectedDbidArray = objet.dbid;\n    },\n    removed(option, viewer) {},\n    closed(option, viewer) {}\n  }\n};\n</script>\n\n<style>\n.unsetBackgroundContent {\n  background: transparent !important;\n  box-sizing: border-box;\n  height: calc(100% - 50px);\n}\n.unsetBackgroundContent ul.md-list.md-theme-default {\n  background-color: unset;\n}\n.unsetBackgroundContent .md-field.md-theme-default.md-inline {\n  margin: unset;\n}\n</style>\n","<!--\nCopyright 2018 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n\n<template>\n  <md-content class=\"unsetBackgroundContent \">\n    <md-button @click=\"forgeSelection\">\n      {{selectedDbidArray.length}} Selected Object\n    </md-button>\n    <md-field md-inline\n              style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n      <label>Label</label>\n      <md-input v-model=\"label\"></md-input>\n    </md-field>\n\n    <md-field md-inline\n              style=\"width: 80%; margin-left: auto; margin-right: auto;\">\n      <label>URL</label>\n      <md-input v-model=\"value\"></md-input>\n    </md-field>\n    <md-button class=\"md-primary\"\n               @click=\"addURL\">Save</md-button>\n  </md-content>\n</template>\n\n<script>\nimport bimObjectService from \"spinal-env-viewer-plugin-bimobjectservice\";\nimport { serviceDocumentation } from \"spinal-env-viewer-plugin-documentation-service\";\nexport default {\n  name: \"my_compo\",\n  data() {\n    return {\n      selectedDbidArray: [],\n      label: undefined,\n      value: undefined,\n      categoryCreate: undefined\n    };\n  },\n  components: {},\n  methods: {\n    forgeSelection() {\n      this.viewer.select(this.selectedDbidArray);\n    },\n    addURL() {\n      let myCategoerySelected = this.categorySelected;\n      this.selectedDbidArray.forEach(dbid => {\n        bimObjectService.getBIMObject(dbid).then(node => {\n          if (node === undefined) {\n            // bimobject is not create, we create it\n            // console.log(\"create bim object\");\n            window.spinal.ForgeViewer.viewer.model.getProperties(dbid, res => {\n              bimObjectService\n                .createBIMObject(dbid, res.name)\n                .then(myBIMObject => {\n                  serviceDocumentation.addURL(\n                    myBIMObject,\n                    this.label,\n                    this.value\n                  );\n                });\n            });\n          } else {\n            // bim object is created, node is our bim object\n            serviceDocumentation.addURL(node, this.label, this.value);\n          }\n        });\n      });\n    },\n    opened(objet, viewer) {\n      this.viewer = viewer;\n      this.selectedDbidArray = objet.dbid;\n    },\n    removed(option, viewer) {},\n    closed(option, viewer) {}\n  }\n};\n</script>\n\n<style>\n.unsetBackgroundContent {\n  background: transparent !important;\n  box-sizing: border-box;\n  height: calc(100% - 50px);\n}\n.unsetBackgroundContent ul.md-list.md-theme-default {\n  background-color: unset;\n}\n.unsetBackgroundContent .md-field.md-theme-default.md-inline {\n  margin: unset;\n}\n</style>\n","import bimObjectService from 'spinal-env-viewer-plugin-bimobjectservice';\nimport {\n  SpinalNode\n} from \"spinal-env-viewer-graph-service\";\nimport {\n  serviceDocumentation\n} from \"spinal-env-viewer-plugin-documentation-service\";\nexport default {\n  getAllLeafDbIds(rootDbid) {\n    const tree = this.getInstanceTree();\n    const rootId = tree.getRootId();\n    let dbidList = [];\n    let tmp = [];\n\n    for (let i = 0; i < rootDbid.length; i++) {\n      const element = rootDbid[i];\n      tmp = this.getLeafDbIds(element)\n      dbidList = dbidList.concat(tmp);\n      // console.log(tmp);\n      // console.log(dbidList);\n    }\n    return dbidList;\n  },\n\n  getInstanceTree() {\n    const model = window.spinal.ForgeViewer.viewer.model;\n    const tree = model.getData().instanceTree;\n\n    return tree;\n  },\n\n  getLeafDbIds(rootId) {\n    const tree = this.getInstanceTree();\n    const queue = [rootId];\n    const dbIds = [];\n    let hasChildren;\n\n    while (queue.length) {\n      let id = queue.shift();\n\n      hasChildren = false;\n\n      tree.enumNodeChildren(id, childId => {\n        hasChildren = true;\n        queue.push(childId);\n      });\n\n      if (!hasChildren) {\n        dbIds.push(id);\n      }\n    }\n\n    return dbIds;\n  },\n\n  getAllCategoryByDbidArray(allChildDbid) {\n    let promiseCategory = [];\n    let allCategory = [];\n    for (let i = 0; i < allChildDbid.length; i++) {\n      const element = allChildDbid[i];\n      promiseCategory.push(bimObjectService.getBIMObject(\n        element).then(node => {\n        // console.log(node);\n        if (node instanceof SpinalNode)\n          return serviceDocumentation.getCategory(\n            node)\n        return undefined;\n      }));\n    }\n    return Promise.all(promiseCategory).then(res => {\n      let check = true;\n      const result = res.filter((node) => node !==\n        undefined)\n      result.forEach(dbid => {\n        dbid.forEach(cat => {\n          allCategory.forEach(alreadyAdded => {\n            if (alreadyAdded.node.info.name.get() === cat.node.info\n              .name.get())\n              check = false\n          })\n          if (check)\n            allCategory.push(cat);\n          check = true;\n        });\n      })\n      return allCategory;\n    })\n  }\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bimService_1 = require(\"./bimObjects/bimService\");\nexports.bimObjectManagerService = bimService_1.default;\n//# sourceMappingURL=index.js.map",null,"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BimObjectManagerService {\n    constructor() { }\n    getAllBimObjectsProperties(model) {\n        return this.getBimObjectProperties([\n            {\n                model: model,\n                selection: this.getLeafDbIds(model).selection\n            }\n        ]);\n    }\n    getBimObjectProperties(argBimObjects) {\n        // let properties = [];\n        let bimOjects = Array.isArray(argBimObjects)\n            ? argBimObjects\n            : [argBimObjects];\n        let promises = bimOjects.map(el => {\n            return this._getProperties(el.model, el.selection);\n        });\n        return Promise.all(promises).then(res => {\n            return res;\n        });\n    }\n    getLeafDbIds(model, rootId) {\n        const tree = model.getInstanceTree();\n        const dbIds = [];\n        if (typeof rootId === \"undefined\") {\n            rootId = [tree.nodeAccess.rootId];\n        }\n        else {\n            rootId = Array.isArray(rootId) ? rootId : [rootId];\n        }\n        rootId.forEach(el => {\n            const queue = [el];\n            let hasChildren;\n            while (queue.length) {\n                let id = queue.pop();\n                hasChildren = false;\n                tree.enumNodeChildren(id, childId => {\n                    hasChildren = true;\n                    queue.push(childId);\n                });\n                if (!hasChildren) {\n                    dbIds.push(id);\n                }\n            }\n        });\n        return { model: model, selection: dbIds };\n    }\n    getBimObjectsByPropertiesName(model, properties) {\n        return this.getAllBimObjectsProperties(model).then(res => {\n            let result = [];\n            for (let i = 0; i < res.length; i++) {\n                const element = res[i];\n                for (let j = 0; j < element.properties.length; j++) {\n                    const property = element.properties[j];\n                    if (typeof this._getLabel(property, properties) !== \"undefined\") {\n                        result.push(property);\n                    }\n                    // }\n                }\n                return result;\n            }\n        });\n    }\n    getBimObjectsValidated(referential, regEx) {\n        return this.getBimObjectProperties(referential).then(res => {\n            return res.map(element => {\n                return {\n                    model: element.model,\n                    properties: element.properties.filter(el => {\n                        return this._isValid(el, regEx);\n                    })\n                };\n            });\n        });\n    }\n    getBimObjectsByName(model, bimObjectName, labelName) {\n        return new Promise(resolve => {\n            model.search(bimObjectName.trim(), (res) => __awaiter(this, void 0, void 0, function* () {\n                let properties = yield this.getBimObjectProperties([\n                    { model: model, selection: res }\n                ]);\n                resolve(properties);\n            }), () => {\n                resolve([]);\n            }, labelName);\n        });\n    }\n    ////////////////////////////////////////////////////////////////////////\n    //                             PRIVATES                               //\n    ////////////////////////////////////////////////////////////////////////\n    _getProperties(model, selection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let properties = selection.map(el => {\n                return new Promise(resolve => {\n                    model.getProperties(el, res => {\n                        // properties.push(res);\n                        resolve(res);\n                    }, err => {\n                        resolve(undefined);\n                    });\n                });\n            });\n            return {\n                model: model,\n                properties: yield Promise.all(properties)\n            };\n        });\n    }\n    _getAllDbIds(model) {\n        var instanceTree = model.getData().instanceTree;\n        var allDbIdsStr = Object.keys(instanceTree.nodeAccess.dbIdToIndex);\n        return allDbIdsStr.map(function (id) {\n            return parseInt(id);\n        });\n    }\n    _getLabel(bim, properties) {\n        for (let i = 0; i < properties.length; i++) {\n            const propertieValue = properties[i].value;\n            const propertyName = properties[i].name;\n            const found = bim.properties.find(el => {\n                return typeof propertieValue === \"undefined\" ||\n                    propertieValue.length === 0\n                    ? el.displayName.toLowerCase() ===\n                        propertyName.trim().toLocaleLowerCase()\n                    : el.displayName.toLowerCase() ===\n                        propertyName.trim().toLocaleLowerCase() &&\n                        propertieValue == el.displayValue;\n            });\n            if (typeof found === \"undefined\") {\n                return undefined;\n            }\n        }\n        return true;\n    }\n    _isValid(el, regEx) {\n        for (let i = 0; i < regEx.length; i++) {\n            let nameRegex = regEx[i].nameRegex;\n            let valueRegex = regEx[i].valueRegex;\n            let found = el.properties.find(res => {\n                if (typeof valueRegex === \"undefined\") {\n                    return nameRegex.test(res.displayName);\n                }\n                return (nameRegex.test(res.displayName) && valueRegex.test(res.displayValue));\n            });\n            if (typeof found === \"undefined\") {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.default = new BimObjectManagerService();\n//# sourceMappingURL=bimService.js.map",null,"\"use strict\";"],"names":["forgeFile","window","spinal","spinalSystem","getModel","hasOwnProperty","add_attr","graph","SpinalGraph","createGraph","getGraph","context","getContext","BIM_OBJECT_CONTEXT_TYPE","undefined","SpinalContext","addContext","createContext","BIM_OBJECT_NODE_TYPE","BIM_OBJECT_RELATION_NAME","REFERENCE_OBJECT_RELATION_NAME","BIM_OBJECT_RELATION_TYPE","SPINAL_RELATION_PTR_LST_TYPE","bimObjectService","call","createBIMObject","dbid","name","BIMObjNode","getBIMObject","BIMObject","SpinalBIMObject","SpinalNode","info","BIMObjectContext","addChildInContext","BIMObjectArray","getChildren","get","addBIMObject","parent","dbId","node","removeBIMObject","child","removeChild","deleteBIMObject","children","getChildrenInContext","find","Error","removeFromGraph","addReferenceObject","addChild","removeReferenceObject","constants","spinalCore","require","globalType","global","Model","constructor","_id","_name","FileSystem","_sig_server","id","register_models"],"version":3,"file":"spinal-env-viewer-plugin-documentation.b77f57cc.js.map"}