{"mappings":"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,OAAO,CAAC,mBAAmB,CAAC,iBAAiB,CAC3D,MACA;YAEF,qBAAqB;YACrB,OAAO,MAAM,CAAC,qBAAqB,CAAC,YAAY,CAAC;QACnD;IACF;AACF;;;;;AC3SA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAoD,MAAM;IACxE,OAAO,eAAe,GAAG,QAAQ,oBAAoD,eAAe;IACpG,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,mBAAiD,OAAO;IACtF,QAAQ,oBAAkD,OAAO,CAAC;IAClE,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;;A;;A,I,gB;I,M;I,Y;4B,C,G,qC,A;2B,C,G,oC,A;I;I,M;Q,O;Y,W;Y,gB;Y,W;Y,Q;Y,Q;Y,U;Y,S;Y,Q;Q;I;I,U;Q;Y,I,I,C,M,K,O,O;Y,I,I,C,O,K,M,O;Y,O,I,C,M;gB,K;oB,O;gB,K;oB,O;gB,K;oB,O;gB,K;oB,O;gB,K;oB,O;gB;oB,O;Y;Q;Q;Y,I,I,C,M,K,O,O;Y,I,I,C,O,K,M,O;Y,O,I,C,M;gB,K;oB,O;gB,K;oB,O;gB,K;oB,O;gB,K;oB,O;gB,K;oB,O;gB;oB,O;Y;Q;Q;Y,I,I,C,O,K,Q,I,C,M,K,K,I,C,M,K,G,O;Y,O;Q;Q;Y,I,I,C,M,K,Q,I,C,I,K,O,O;Y,O;Q;Q;Y,I,I,C,M,K,Q,I,C,M,K,G,O;Y,O;Q;Q;Y,I,I,C,M,K,Q,I,C,M,K,G,O;Y,O;Q;Q;Y,I,I,C,M,K,Q,I,C,M,K,G,O;Y,O;Q;I;I,Y;I,S;Q,M;Y,M,O,C,G,+C,A,E,W,C,I,C,S;Y,I,C,K,O,E,O;Y,M,U,M,K,O,C,I;Y,I,Q,S,I,I,C,S,K,Q,S,C,G,I;gB,I,I,C,S,E,I,C,S;gB,M,S,Q,I,C;oB,I,I,E;wB,I,C,M,G,Q,O,C,W,C,G;wB,Q,G,C,e,I,C,M;wB,I,C,M,G;wB,I,C,Q,G,Q,U;wB,I,C,O,G,Q,O,C,G;oB;gB;gB,I,C,S,G;oB,Q,M,C;gB;gB,O;Y;Y,O;Q;Q,M;Y,M,O,C,G,+C,A,E,W,C,I,C,S;Y,I,C,K,O,E,O;Y,M,U,M,K,O,C,I;Y,Q,O,C,W,C,G,C,I,C,M,K,I,I;Q;Q,M;Y,M,O,C,G,+C,A,E,W,C,I,C,S;Y,I,C,K,O,E,O;Y,M,U,M,K,O,C,I;Y,Q,O,C,G,C;Q;Q,M;Y,M,O,C,G,+C,A,E,W,C,I,C,S;Y,I,C,K,O,E,O;Y,M,U,M,K,O,C,I;Y,Q,O,C,W,C,G,C;Q;Q,M;Y,M,O,C,G,+C,A,E,W,C,I,C,S;YAsHf,IAAA,CAAA,KAAA,OAAA,EACA,OAAA;YAEA,MAAA,UAAA,MAAA,KAAA,OAAA,CAAA,IAAA;YACA,QAAA,OAAA,CAAA,WAAA,CAAA,GAAA,CAAA;QACA;QACA,qBAAA;QACA,UAAA;QACA,MAAA;YACA,IAAA,CAAA,SAAA,GAAA;YACA,MAAA,IAAA,CAAA,cAAA;QACA;QACA,MAAA,QAAA,IAAA;YACA,QAAA,GAAA,CAAA,UAAA;YACA,IAAA,CAAA,SAAA,GAAA;YACA,IAAA,CAAA,MAAA,GAAA;YACA,IAAA,CAAA,MAAA,GAAA;YACA,IAAA,CAAA,QAAA,GAAA;YACA,IAAA,CAAA,OAAA,GAAA;YACA,MAAA,IAAA,CAAA,cAAA;QACA;QACA,YAAA;QACA,UAAA;QACA,gBAAA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;;;ACjKA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAqC,MAAM;IACzD,OAAO,eAAe,GAAG,QAAQ,oBAAqC,eAAe;IACrF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAkC,OAAO;IACvE,QAAQ,mBAAmC,OAAO,CAAC;IACnD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A;;A;;A;;A,M,mB,C,G,uD,A,E,S,C,Y;A,I,gB;I,M;I,Y;sB,C,G,+B,A;I;I,O;Q,W;Y,U;Y,M;Q;I;I,M;Q,M,Q,I;Q,O;Y,M;Y,O,M,W;Y,e;Y,iB,E;Y,U,E;Y,wB;Y,U;Y,U;Y,a;Y,iB;Y,c;Y,gB;Y,U;Y,W,E;Q;I;I,U;Q,e;Y;gB,I,C,I,C,Q,E,O;qB,O,I,K,I,C,Q,E,W;Y;Y,K,K;gB,I,C,Q,G,C,G,sB,A,E,G,C,O;Y;Q;I;I,O;Q,M;Y,M,e,C,G,qC,A,E,Q,C,I,C,a,C;Y,oC;Y,M,O,M,O,Y,C,Y,C;Y,I,C,Q,G,K,O,C,Q,C,G;Y,I,C,Q,G,K,O,C,Q,C,G;Y,I,C,W,G,K,O,C,W,C,G;Y,I,C,Y,G,K,O,C,Y,C,G;Y,I,C,c,G,K,O,C,c,C,G;Y,I,C,Q,G,K,O,C,Q,C,G;Y,I,C,sB,G,K,gB,C,G;Q;I;I,M;Q,oC;Q,M,Q,M,O,Y,C,I,C;Q,M,Q,M,I,C,c;Q,I,I,M,G,M,M,M,E,M;Y,M,O,K,C,I;Y,I,C,S,C,I,C;gB,M,K,I,C,G;gB,I,K,U;gB,K,K,I,C,I,C,K;Y;Y,I,S,M,U,K,K,I,C,I,C,K,E,I,C,a,G,K,U;Q;Q,M,Q,M,O,M,C,Y,C,Q;Q,M,W,M,M,W;Q,I,C,Q,G,S,M,C,C,K;Y,I,I,I,C,I,C,G,O,kB;gB,I,C,e,C,I,C;oB,I,I,I,C,E,C,G;oB,M,I,I,C,I,C,G;gB;gB,O;Y;Y,I,I,C;gB,I,I,I,C,E,C,G;gB,M,I,I,C,I,C,G;Y;Y,O;Q,G,E;I;I,S;Q,M;Y,M,O,C,G,+C,A,E,W,C,I,C,S;Y,I,C,K,O,E,O;Y,M,U,M,K,O,C,I;Y,I,Q,S,I,I,C,S,K,Q,S,C,G,I,O;Y,O;Q;Q;Y,Q,G,C,e,I;Q;Q;Y,I,C,K,C;Q;Q,M;Y,M,e,C,G,qC,A,E,Q,C,I,C,a,C;Y,oC;Y,M,gB,M,O,Y,C,Y,C;Y,M,O,C,G,+C,A,E,W,C,I,C,S;Y,I,K,O,K,W,K,Q,C,W,I,C,G,8C,A,E;iB,I,K,O,C,G,C,I,K,c,U,E,K,O,C,U,C;Y,oC;Y,c,e,C,G,C,O,Y,C,O;Y,c,S,C,G,C,I,C,S;Y,c,gB,C,G,C,I,C,sB;Y,c,O,C,Q,C,G,C,I,C,Q;Y,c,O,C,Q,C,G,C,I,C,Q;YAyHf,cAAA,OAAA,CAAA,WAAA,CAAA,GAAA,CAAA,IAAA,CAAA,WAAA;YACA,cAAA,OAAA,CAAA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,YAAA;YACA,cAAA,OAAA,CAAA,QAAA,CAAA,GAAA,CAAA,IAAA,CAAA,QAAA;YACA,cAAA,OAAA,CAAA,cAAA,CAAA,GAAA,CAAA,IAAA,CAAA,cAAA;YACA,cAAA,OAAA,CAAA,GAAA,CAAA;YACA,IAAA,CAAA,KAAA,CAAA;QACA;IACA;A;AAGA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;;;ACnJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA+B,MAAM;IACnD,OAAO,eAAe,GAAG,QAAQ,oBAA+B,eAAe;IAC/E,OAAO,QAAQ,GAAG;IAG5B,QAAQ,oBAA6B,OAAO,CAAC;IAC7C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q,O;Y,M;Y,U;Y,S;Q;I;I;Q,O,C;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,O;Y,S;Y,Q;Q;I,G;Q,G,S;Y,O;gB,Q;Y;Y,I;gB,S,S,M;oB,O,I,K,C;gB;Y;Q,G;Y,G,U;gB,I,E,C;a;S,E;Q,I,E,C;Q,G,mB;Y,I,E,C,I,E,C,I,K;S;Q,I,E,C;Q,G;Q,I,E,C;Q,G,S;Y,O;gB,Q;Y;Y,I;gB,S,S,M;oB,O,I,K,C;gB;Y;Q,G;Y,G,U;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,U;Q,a;I,G;Q,G,kB;Y,O;gB,S;Y;Y,I;gB,Q,I,I;gB,Q,I,I;Y;Q;Q,I,E,C;Q,G,e;Y,a;Q,G;Y,G,Q;gB,O;oB,U;gB;Y,G;gB,G,Y;oB,G,S;wB,O;4B,O;wB;oB,G;wB,I,E,C;qB;oB,I,E,C;oB,G,a;wB,O;4B,M;4B,Q;4B,Y;wB;wB,O;4B,O,I,a;4B,U,S,G;gC,I,a,G;4B;4B,Y;wB;oB,G,I,E,C,I,S,E,S,Q;wB,O,G,a;4B,K,S,E;4B,O;gC,S,S,E;4B;wB,G;4B,I,E,C,mB,I,E,C,S,I,I;yB;oB,I;iB,E;gB,I,E,C;gB,I,a,G;oB,G,Y;wB,G,S;4B,O;gC,O;4B;wB,G;4B,I,E,C;yB;wB,I,E,C;wB,G,a;4B,O;gC,M;gC,Q;gC,Y;4B;4B,O;gC,O,I,sB;gC,U,S,G;oC,I,sB,G;gC;gC,Y;4B;wB,G;4B,I,e,C,M,G,I,G,e;gC,O;oC,S;gC;4B,G,I,E,C,I,e,E,S,O;gC,O,G,a;oC,K,Q,E;oC,O;wC,S,Q,E;oC;gC,G;oC,I,E,C,uB,I,E,C,Q,I,I;iC;4B,I,K,I,E;4B,I,E,C;4B,I,Q,C,M,G,I,G,e;gC,O;oC,S;gC;4B,G,I,E,C,I,Q,E,S,O;gC,O,G,a;oC,K,Q,E;oC,O;wC,S,Q,E;oC;gC,G;oC,I,E,C,uB,I,E,C,Q,I,I;iC;4B,I,K,I,E;yB,E;qB,E;oB,I,E,C;oB,G,gB;wB,O;4B,e;4B,gB;4B,S;wB;wB,O;4B,O,I,Q;4B,U,S,G;gC,I,Q,G;4B;4B,Y;wB;oB;oB,I,E,C;oB,G,gB;wB,O;4B,gB;4B,e;4B,S;4B,e,I,e,G,e;4B,Q,I,e,G,S;wB;wB,I;4B,gB,S,M;gC,I,e,G,C,I,e;4B;wB;wB,O;4B,O,I,W;4B,U,S,G;gC,I,W,G;4B;4B,Y;wB;oB;oB,I,E,C;oB,G,gB;wB,O;4B,e;4B,gB;4B,S;wB;wB,O;4B,O,I,Q;4B,U,S,G;gC,I,Q,G;4B;4B,Y;wB;oB;oB,I,E,C;oB,G,gB;wB,O;4B,e;4B,gB;4B,S;wB;wB,O;4B,O,I,c;4B,U,S,G;gC,I,c,G;4B;4B,Y;wB;oB;oB,I,E,C;oB,G,gB;wB,O;4B,e;4B,Q;4B,S;wB;wB,O;4B,O,I,Y;4B,U,S,G;gC,I,Y,G;4B;4B,Y;wB;oB;oB,I,E,C;oB,G,wB;wB,O;4B,Q;4B,Y,I,K;4B,S;wB;wB,O;4B,O,I,a;4B,U,S,G;gC,I,a,G;4B;4B,Y;wB;oB;iB,G,I,E;a,E;S;Q,I,E,C;Q,G,gB;Y,O;gB,e;gB,S;Y;Y,O;gB,O,I,Q;gB,U,S,G;oB,I,Q,G;gB;gB,Y;Y;Q;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AEJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAoC,MAAM;IACxD,OAAO,eAAe,GAAG,QAAQ,oBAAoC,eAAe;IACpF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAiC,OAAO;IACtE,QAAQ,oBAAkC,OAAO,CAAC;IAClD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A;;A,I,gB;I,M;I,Y;sB,C,G,+B,A;I;I,O;Q,U;Y,U;Y,M;Q;I;I,M;Q,O;Y,e,E;Y,U,E;Q;I;I,M;Q,M,M,I,C,S;Q,M,Q,C,G,+C,A,E,Q;Q,M,W,M,M,W;Q,I,C,a,G,S,M,C,C,K;Y,I,Q,I,C,I,C,G,O,yB,I,I,C;gB,I,Q,I,C,E,C,G;gB,M,Q,I,C,I,C,G;Y;Y,O;Q,G,E;Q,I,C,Q,G,E;Q,I,C,I,O,C,a,E,I,O,C,Q,C,iB,E;Q,I,I,M,G,M,I,O,C,a,C,M,E,M,I,C,Q,C,I,C,I,O,C,a,C,I,C,G;I;I,S;Q;Y,I,C,K,C;Q;Q,M;Y,M,M,I,C,S;Y,I,C,I,O,C,a,E,I,O,C,Q,C,iB,E;Y,I,O,C,a,C,G,C,I,C,Q;Y,I,O,C,W,C,G,C;Y,I,C,K,C;Q;Q;Y,O,C,G,qC,A,E,Q,C,I,C,Q,C;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,U;Q,a;I,G;Q,G,kB;Y,O;gB,S;Y;Y,I;gB,Q,I,I;gB,Q,I,I;Y;Q;Q,I,E,C;Q,G,e;Y,a;Q,G;Y,G,Q;gB,O;oB,U;gB;Y,G;gB,G,Y;oB,G,S;wB,O;4B,O;wB;oB,G;wB,I,E,C;qB;oB,I,E,C;oB,G,a;wB,O;4B,Q;4B,Y;4B,Y;wB;wB,O;4B,O,I,Q;4B,U,S,G;gC,I,Q,G;4B;4B,Y;wB;oB,G,I,E,C,I,a,E,S,Y;wB,O,G,a;4B,K,a,E;4B,O;gC,S,a,E;4B;wB,G;4B,I,E,C,mB,I,E,C,a,I,I;yB;oB,I;iB,E;a,E;S;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,S;Q,a;Q,O;Y,Q;Q;I,G;Q,I,c,G,G,qB;Y,O;gB,a,I,Q;Y;Y,I;gB,S,S,M;oB,I,c,G;gB;Y;Q,K,A,I,S,G,G,sB;Y,O;gB,c,I,S;Y;Y,I;gB,S,S,M;oB,O,I,Y;gB;Y;Q,K,G,U;Y,a;Q,G;Y,G,a;gB,a;gB,O;oB,S;oB,Q;gB;Y,G;gB,G,mB;oB,I,E,C,e,I,E,C,I,W,I;iB;gB,I,E,C;gB,G;gB,I,E,C;gB,G,S;oB,O;wB,Q;oB;oB,I;wB,S,S,M;4B,I,S,G;wB;oB;gB,G;oB,G,U;wB,I,E,C;qB;iB,E;gB,I,E,C;gB,G,gB;oB,O;wB,a;wB,iB;oB;oB,a,I,E,C;wB;4B,K;4B,I;gC,O;oC,G,S;wC,O;4C,S;4C,S;4C,O;wC;wC,O;4C,O,I,M;4C,U,S,G;gD,I,M,G;4C;4C,Y;wC;oC,G;wC,G,U;4C,I,E,C;yC;wC,I,E,C;wC,G,U;4C,I,E,C;yC;qC,E;iC;4B;4B,O;wB;qB;oB,O;wB,O,I,M;wB,U,S,G;4B,I,M,G;wB;wB,Y;oB;gB,G;oB,I,E,C;oB,G,S;wB,Y;4B;gC,M;gC,S;gC,O,I,Y;gC,Y;4B;yB;wB,O;4B,O;4B,Y,I,U;4B,S;4B,S,I,iB;wB;wB,I;4B,S,I,S;wB;oB,G;wB,G,U;4B,I,E,C,I,E,C,I,gB;yB;qB,E;oB,I,E,C;oB,G,S;wB,Y;4B;gC,M;gC,S;gC,O;gC,Y;4B;yB;wB,O;4B,O;4B,Y,I,M,K,S,I,O,K;4B,S;4B,S;wB;wB,I;4B,S,I,Y;wB;oB,G;wB,G,U;4B,I,E,C;yB;qB,E;oB,I,E,C;oB,G,S;wB,Y;4B;gC,M;gC,S;gC,O;gC,Y;4B;yB;wB,O;4B,O;4B,Y,I,U;4B,S;4B,S;wB;wB,I;4B,S,I,c;wB;oB,G;wB,G,U;4B,I,E,C;yB;qB,E;oB,I,E,C;oB,G,S;wB,Y;4B;gC,M;gC,S;gC,O;gC,Y;4B;yB;wB,O;4B,O;4B,Y,I,U;4B,S;4B,S;wB;wB,I;4B,S,I,kB;wB;oB,G;wB,G,U;4B,I,E,C;yB;qB,E;oB,I,E,C;oB,G,S;wB,Y;4B;gC,M;gC,S;gC,O;gC,Y;4B;yB;wB,O;4B,O;4B,Y,I,U;4B,S;4B,S;wB;wB,I;4B,S,S,M;gC,I,c,G;4B;wB;oB,G;wB,G,U;4B,I,E,C;yB;qB,E;iB,E;a,E;Y,I,E,C;Y,G,e;gB,a;Y,G;gB,G,kB;oB,O;wB,W,I,e;wB,Y,I,W;wB,kB;oB;gB,G;oB,I,M,K,Q,G,a;wB,a;wB,I;4B,S,S,M;gC,I,S,G;4B;wB;oB,G;wB,I,E,C;qB,I,I,E;iB,E;a,E;S,E;Q,I,E,C;Q,I,I,G,G,qB;Y,a;Y,a;gB,U;Y;Y,O;gB,iB;gB,S;Y;Q,K,I,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AHJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;AILA;;;;;;;;;;;;;;;;;;;;;;CAsBC;;AAOD,0EAAa;AALb;AAEA;AADA,MAAM,EAAE,yBAAyB,EAAE,GAAG,QAAQ;AAG9C,MAAM,QAAQ;AACP,MAAM,6CAA6C,CAAA,GAAA,mDAAgB,AAAD;IAEvE,aAAc;QACZ,KAAK,CAAC,OAAO,OAAO;YAClB,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;QAEA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;IACxC;IAEA,QAAQ,MAAM,EAAE;QACd,IAAI,OAAO,YAAY,KAAK,OAAO,OAAO,IACxC,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG,OAAO,CAAA,GAAA,uBAAmB,AAAD,GACrD,OAAO,QAAQ,OAAO,CAAC;QAEzB,OAAO,QAAQ,OAAO,CAAC;IACzB;IAEA,UAAU,MAAM,EAAE;QAChB,0BAA0B,SAAS,CAAC,qCAAqC,OAAO,YAAY,CAAC,EAAE,CAAC,GAAG;IACrG;AACF;;;A;A,I,kB,A,I,I,I,C,e,I,C,O,M,G,S,C,E,C,E,C,E,E;I,I,O,W,K;I,I,O,O,wB,C,G;I,I,C,Q,C,S,O,C,E,U,G,K,Q,I,K,Y,A,G,O;Q,Y;Q,K;Y,O,C,C,E;Q;I;I,O,c,C,G,I;A,I,S,C,E,C,E,C,E,E;I,I,O,W,K;I,C,C,G,G,C,C,E;A,C;A,I,e,A,I,I,I,C,Y,I,S,C,E,Q;I,I,I,K,E,I,M,a,C,O,S,C,c,C,I,C,U,I,gB,U,G;A;A,O,c,C,S,c;I,O;A;A,Q,wB,G,Q,qC,G,Q,qC,G,Q,4B,G,Q,mC,G,Q,wB,G,Q,4B,G,Q,2B,G,Q,+B,G,Q,2B,G,Q,+B,G,Q,kB,G,Q,iB,G,Q,Q,G,Q,iB,G,Q,iB,G,Q,uB,G,Q,a,G,Q,sB,G,Q,sB,G,Q,8B,G,Q,qB,G,Q,8B,G,Q,c,G,Q,c,G,Q,a,G,Q,a,G,Q,S,G,Q,kB,G,Q,kB,G,Q,a,G,Q,qB,G,Q,qB,G,Q,mB,G,Q,+B,G,Q,U,G,Q,oB,G,Q,oB,G,Q,2B,G,Q,mB,G,Q,S,G,K;AErDA;;;;;;;;;;;;;;;;;;;;;;CAsBG,GACH,MAAA,gBAAA,QAAA;AACA,aAAA,QAAA,qBAAA;AACA,MAAA,uBAAA,QAAA;AACA,IAAA,iDAAA,QAAA;AAAS,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,+CAAA,sBAAsB;IAAA;AAAA;AAGlB,QAAA,mBAAmB,GAAW,cAAc,YAAY;AACxD,QAAA,2BAA2B,GAAkB;IAAC;IAAU;CAAQ;AAC7E,yCAAyC;AACzC,0CAA0C;AAC7B,QAAA,oBAAoB,GAC/B,cAAc,0CAA0C,EAAE,+BAA+B;AAC9E,QAAA,oBAAoB,GAC/B,cAAc,0CAA0C,EAAE,+BAA+B;AAC9E,QAAA,UAAU,GACrB,cAAc,iCAAiC;AACpC,QAAA,+BAA+B,GAAG;AAClC,QAAA,mBAAmB,GAAG;AACnC,yCAAyC;AACzC,yCAAyC;AAC5B,QAAA,qBAAqB,GAChC,cAAc,2CAA2C,EAAE,mCAAmC;AACnF,QAAA,qBAAqB,GAChC,cAAc,2CAA2C,EAAE,kCAAkC;AAClF,QAAA,aAAa,GAAW,cAAc,YAAY;AAC/D,sCAAsC;AACtC,sCAAsC;AACzB,QAAA,kBAAkB,GAC7B,cAAc,wCAAwC,EAAE,gCAAgC;AAC7E,QAAA,kBAA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","sources":["node_modules/spinal-env-viewer-plugin-organ_ticket_mission/index.js","node_modules/spinal-env-viewer-context-menu-service/index.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextMenuService.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","node_modules/spinal-env-viewer-context-menu-service/constants.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/index.js","node_modules/spinal-env-viewer-panel-manager-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelManagerService.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelApp.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalMountExtention.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/SpinalForgeExtention.js","node_modules/spinal-env-viewer-plugin-organ_ticket_mission/src/views/LinkAndManageContextTicketMission.vue","node_modules/spinal-env-viewer-plugin-organ_ticket_mission/src/views/SetUpSelectedOrgan.vue","node_modules/spinal-env-viewer-plugin-organ_ticket_mission/src/views/SetUpToolbar.vue","node_modules/spinal-env-viewer-plugin-organ_ticket_mission/src/views/SetUpContextEquip.vue","node_modules/spinal-env-viewer-plugin-organ_ticket_mission/src/buttons/LinkAndManageContextTicketMissionBtn.js","node_modules/spinal-service-ticket/dist/Constants.js","node_modules/spinal-service-ticket/src/Constants.ts","node_modules/spinal-service-ticket/dist/old_constants.js","node_modules/spinal-service-ticket/src/old_constants.ts","node_modules/spinal-env-viewer-context-geographic-service/build/constants.js","node_modules/spinal-env-viewer-context-geographic-service/src/constants.ts"],"sourcesContent":["/*\n * Copyright 2020 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\nimport { SpinalForgeExtention } from \"spinal-env-viewer-panel-manager-service_spinalforgeextention\";\nimport Vue from 'vue';\n\nimport LinkAndManageContextTicketMission from \"./src/views/LinkAndManageContextTicketMission.vue\";\nimport { LinkAndManageContextTicketMissionBtn } from \"./src/buttons/LinkAndManageContextTicketMissionBtn\";\n\nconst SIDE_BAR_HOOK_NAME = \"GraphManagerSideBar\";\n\nspinalContextMenuService.registerApp(SIDE_BAR_HOOK_NAME, new LinkAndManageContextTicketMissionBtn(), [7]);\n\nSpinalForgeExtention.registerExtention('LinkAndManageContextTicketMission', SpinalForgeExtention.createExtention({\n  name: \"LinkAndManageContextTicketMission\",\n  vueMountComponent: Vue.extend(LinkAndManageContextTicketMission),\n  parentContainer: document.body,\n  panel: {\n    title: \"Link And Manage Mission\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"delete\"\n  },\n  style: {\n    left: \"405px\",\n    width: \"500px\",\n    height: '250px'\n  }\n}));\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalContextMenuService = require(\"./SpinalContextMenuService\");\nconst SpinalContextApp = require(\"./SpinalContextApp\");\nconst Constant = require('./constants');\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalContextMenuService === \"undefined\")\n  G_root.spinal.spinalContextMenuService = new SpinalContextMenuService();\n\nmodule.exports = {\n  constants: Constant,\n  spinalContextMenuService: G_root.spinal.spinalContextMenuService,\n  SpinalContextApp,\n  install(Vue) {\n    Vue.prototype.$spinalContextMenuService =\n      G_root.spinal.spinalContextMenuService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport * as Q from 'q';\nvar debounce = require('lodash.debounce');\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} apps key = hookname, value array of apps\n * @class SpinalContextMenuService\n */\nclass SpinalContextMenuService {\n  /**\n   *Creates an instance of SpinalContextMenuService.\n   * @memberof SpinalContextMenuService\n   */\n  constructor() {\n    this.apps = {};\n    this.promiseByAppProfileId = {};\n    this.appRdy = Q.defer();\n    this.debouncedRdy = debounce(\n      () => {\n        this.appRdy.resolve();\n        this.debouncedRdy = () => {};\n      },\n      1000,\n      { leading: false, trailing: true }\n    );\n  }\n\n  // waitRdy() {\n  //   this.appRdy.promise;\n  // }\n\n  /**\n   * Return true if user has access to this appProfile\n   * @param appProfileId\n   * @return {PromiseLike<boolean > | Promise<boolean>}\n   */\n  async hasUserRight(appProfileId) {\n    this.debouncedRdy();\n    await window.spinal.spinalSystem.init();\n    const path =\n      '/etc/UserProfileDir/' + window.spinal.spinalSystem.getUser().username;\n    const userProfile = await window.spinal.spinalSystem.load(path);\n    let res = false;\n    if (userProfile) {\n      for (let i = 0; i < userProfile.appProfiles.length && !res; i++) {\n        res = ((1 << userProfile.appProfiles[i]) & appProfileId) !== 0;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * method to register the Application to a hook\n   *\n   * @param {string} hookname the place where is application button is located\n   * @param {SpinalContextApp} spinalContextApp the application\n   * @param {number} appProfileId id of the group that can use the application\n   * button\n   * @memberof SpinalContextMenuService\n   */\n  registerApp(hookname, spinalContextApp, appProfileId) {\n    this.debouncedRdy();\n    if (typeof appProfileId === 'undefined') {\n      console.warn(\n        'Deprecated: The usage of this function without the third' +\n          ' parameter appProfileId is deprecated your button is lock for admin' +\n          ' only until you set the third parameter'\n      );\n      appProfileId = 1;\n    }\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      appsInHooks = this.apps[hookname] = [];\n    }\n\n    if (!this.promiseByAppProfileId.hasOwnProperty(appProfileId)) {\n      this.promiseByAppProfileId[appProfileId] =\n        this.hasUserRight(appProfileId);\n    }\n\n    this.promiseByAppProfileId[appProfileId].then((hasAccess) => {\n      // push the app if not exist ans user has access to the button\n      if (hasAccess && appsInHooks.indexOf(spinalContextApp) === -1) {\n        appsInHooks.push(spinalContextApp);\n      }\n    });\n  }\n\n  /**\n   * method to get the applications registered to a hookname\n   *\n   * @param {String} hookname\n   * @param {object} option\n   * @memberof SpinalContextMenuService\n   * @returns {Promise} resolve : [spinalContextApp, ...]; reject: Error\n   */\n  async getApps(hookname, option) {\n    await this.appRdy.promise;\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      return Promise.resolve([]);\n    }\n    let promises = appsInHooks.map(async function (e, idx) {\n      try {\n        const res = await e.isShown(option);\n        return res === -1 ? -1 : e;\n      } catch (error) {\n        console.error(error);\n        return -1;\n      }\n    });\n    try {\n      const appRes = await Promise.all(promises);\n      return appRes.filter((itm) => itm !== -1);\n    } catch (error) {\n      console.error(error);\n      return [];\n    }\n  }\n}\n\nmodule.exports = SpinalContextMenuService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Interface like class to define a Contextual Application button\n * @see https://material.io/tools/icons/?style=baseline for material icons\n *\n * @class SpinalContextApp\n * @property {string} label=notset short name to be shown in the application\n * @property {string} description description of what the Application button do\n * @property {object} buttonCfg Object configuration of the Application button\n * @property {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n * @property {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n * @property {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n * @property {string} buttonCfg.fontColor=#FFFFFF font color of the button\n * @property {objet} [badgeCfg] Object configuration of the Application button badge\n * @property {string} badgeCfg.label string shown in a badge; if empty it's not shown\n * @property {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n * @property {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n */\nclass SpinalContextApp {\n  /**\n   * Creates an instance of SpinalContextApp.\n   * @param {string} label=notset short name to be shown in the application\n   * @param {string} description description of what the Application button do\n   * @param {object} buttonCfg Object configuration of the Application button\n   * @param {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n   * @param {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n   * @param {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n   * @param {string} buttonCfg.fontColor=#FFFFFF font color of the button\n   * @param {objet} [badgeCfg] Object configuration of the Application button badge\n   * @param {string} badgeCfg.label string shown in a badge; if empty it's not shown\n   * @param {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n   * @param {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n   * @memberof SpinalContextApp\n   */\n  constructor(label, description, buttonCfg, badgeCfg = {}) {\n    this.label = label || \"notset\";\n    this.description = description || \"\";\n    this.buttonCfg = {\n      icon: buttonCfg.icon || \"tab\",\n      icon_type: buttonCfg.icon_type || \"in\",\n      backgroundColor: colorHash(buttonCfg.backgroundColor || \"#0000FF\"),\n      fontColor: colorHash(buttonCfg.fontColor || \"#FFFFFF\")\n    };\n\n    this.badgeCfg = {\n      label: badgeCfg.label || \"\",\n      backgroundColor: colorHash(badgeCfg.backgroundColor || \"#FF0000\"),\n      fontColor: colorHash(badgeCfg.fontColor || \"#FFFFFF\")\n    };\n  }\n\n  /**\n   * Method called by `SpinalContextMenuService.getApps`\n   * to filter the Application button to show in the context hook\n   *\n   * @param {object} option\n   * @memberof SpinalContextApp\n   * @returns {Promise} Resolve: not shown if === -1;\n   */\n  isShown(option) {}\n\n  /**\n   * Method to call on click of the application button\n   *\n   * @param {object} option {}\n   * @memberof SpinalContextApp\n   */\n  action(option) {}\n}\n\nmodule.exports = SpinalContextApp;\n\nfunction colorHash(color) {\n  if (color[0] === \"#\") return color;\n  return \"#\" + color;\n}\n","\n\nmodule.exports = {\n  ADMINISTRATEUR: 'ADMINISTRATEUR',\n  MAINTENEUR: 'MAINTENEUR',\n  INTEGRATEUR: 'INTEGRATEUR',\n  ASSET_MANAGEUR: 'ASSET MANAGER',\n};","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst {\n  spinalPanelManagerService,\n  SpinalPanelApp\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst SpinalForgeExtention = require(\"./SpinalForgeExtention.js\")(\n  spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  SpinalForgeExtention\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalPanelManagerService = require(\"./SpinalPanelManagerService\");\nconst SpinalPanelApp = require(\"./SpinalPanelApp\");\n\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalPanelManagerService === \"undefined\")\n  G_root.spinal.spinalPanelManagerService = new SpinalPanelManagerService();\nconst SpinalMountExtention = require(\"./SpinalMountExtention.js\")(\n  G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  spinalPanelManagerService: G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp,\n  SpinalMountExtention,\n  install(Vue) {\n    Vue.prototype.$spinalPanelManagerService =\n      G_root.spinal.spinalPanelManagerService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} panels key = panelName, value = an instance of SpinalPanelApp\n * @class SpinalPanelManagerService\n */\nclass SpinalPanelManagerService {\n  /**\n   *Creates an instance of SpinalPanelManagerService.\n   * @memberof SpinalPanelManagerService\n   */\n  constructor() {\n    this.panels = {};\n  }\n\n  /**\n   * method to register an Panel Application\n   *\n   * @param {string} panelName the name of the panel\n   * @param {SpinalPanelApp} spinalPanelApp the application\n   * @memberof SpinalPanelManagerService\n   */\n  registerPanel(panelName, spinalPanelApp) {\n    this.panels[panelName] = spinalPanelApp;\n  }\n\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  openPanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].openPanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  closePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].closePanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  tooglePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].tooglePanel(option);\n    return false;\n  }\n}\n\nmodule.exports = SpinalPanelManagerService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n * Base interface like class of a panel\n *\n * @class SpinalPanelApp\n */\nclass SpinalPanelApp {\n  constructor() {}\n\n  openPanel(option) {}\n  closePanel(option) {}\n  tooglePanel(option) {}\n}\n\nmodule.exports = SpinalPanelApp;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (!option.vueMountComponent) {\n    throw new Error(\"mount : missing option vueMountComponent\");\n  }\n\n  cfg.name = option.name || \"SpinalMount\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.parentContainer = option.parentContainer || document.body;\n  return cfg;\n}\n\nfunction getDialog() {\n  if (!this.dialog) {\n    this.dialog = document.createElement(\"div\");\n    const _compo = document.createElement(\"div\");\n    this.dialog.className = \"spinal-modal-container\";\n    this.cfg.parentContainer.appendChild(this.dialog);\n    this.dialog.appendChild(_compo);\n    this.compoment = new this.cfg.vueMountComponent({\n      propsData: {\n        onFinised: this.onFinised.bind(this)\n      }\n    }).$mount(_compo);\n  }\n  return this.dialog;\n}\n\n/**\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { mount }\n */\nmodule.exports = function(spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n```js\n{\n  name: \"myCustomDialogName\",\n  vueMountComponent: Vue.extend(aVueCompomentDialog),\n  parentContainer: document.body\n}```\n     *\n     * @param {*} option\n     */\n    mount(option) {\n      let cfg = configInit(option);\n      const SpinalMount = class extends SpinalPanelApp {\n        constructor() {\n          super();\n          this.cfg = cfg;\n          this.dialog = null;\n          this.compoment = null;\n        }\n\n        openPanel(opt) {\n          getDialog.call(this);\n          this.compoment.opened(opt);\n        }\n        closePanel(opt) {\n          if (this.dialog !== null) {\n            this.compoment.removed(opt);\n            this.dialog.remove();\n            this.dialog = null;\n            this.compoment = null;\n          }\n        }\n\n        tooglePanel(opt) {\n          if (this.dialog !== null) {\n            this.closePanel(opt);\n          } else {\n            this.openPanel(opt);\n          }\n        }\n\n        /**\n         * called when dialog closed by the dialog itself\n         */\n        onFinised(closeResult) {\n          this.closePanel(closeResult);\n        }\n      };\n      let SpinalMountInstance = new SpinalMount();\n      spinalPanelManagerService.registerPanel(cfg.name, SpinalMountInstance);\n    }\n  };\n};\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (typeof option.toolbar !== \"undefined\") {\n    cfg.toolbar = {\n      icon: option.toolbar.icon || \"done\",\n      label: option.toolbar.label || \"label\",\n      subToolbarName: option.toolbar.subToolbarName || \"spinalcom\",\n      styleBtn: {},\n      styleIcon: {}\n    };\n    Object.assign(cfg.toolbar.styleBtn, option.toolbar.styleBtn);\n    Object.assign(cfg.toolbar.styleIcon, option.toolbar.styleIcon);\n  }\n  if (typeof option.panel !== \"undefined\") {\n    cfg.panel = {\n      title: option.panel.title || \"Spinalcom Panel\",\n      classname: option.panel.classname || \"spinal-pannel\",\n      closeBehaviour: option.panel.closeBehaviour || \"hide\"\n    };\n    if (typeof option.style !== \"undefined\") {\n      cfg.style = {};\n      Object.assign(cfg.style, option.style);\n    }\n  }\n  cfg.name = option.name || \"spinalExtention\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.onLoad = option.onLoad;\n  cfg.onUnLoad = option.onUnLoad;\n  return cfg;\n}\n\nfunction onToolbarCreated() {\n  this.viewer.removeEventListener(\n    window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n    this.onToolbarCreatedBinded\n  );\n  this.onToolbarCreatedBinded = null;\n  createToolbar.call(this);\n}\n\nfunction createToolbar() {\n  this.toolbarButton = new window.Autodesk.Viewing.UI.Button(\n    this.cfg.toolbar.label\n  );\n  this.toolbarButton.onClick = () => {\n    this.tooglePanel(this.cfg);\n  };\n  var icon = this.toolbarButton.container.firstChild;\n  icon.className = \"adsk-button-icon md-icon md-icon-font md-theme-default\";\n  icon.innerHTML = this.cfg.toolbar.icon;\n\n  for (var key in this.cfg.toolbar.styleIcon) {\n    if (this.cfg.toolbar.styleIcon.hasOwnProperty(key)) {\n      icon.style[key] = this.cfg.toolbar.styleIcon[key];\n    }\n  }\n  for (var key in this.cfg.toolbar.styleBtn) {\n    if (this.cfg.toolbar.styleBtn.hasOwnProperty(key)) {\n      this.toolbarButton.container.style[key] = this.cfg.toolbar.styleBtn[key];\n    }\n  }\n\n  this.toolbarButton.setToolTip(this.cfg.toolbar.label);\n  this.subToolbar = this.viewer.toolbar.getControl(\n    this.cfg.toolbar.subToolbarName\n  );\n  if (!this.subToolbar) {\n    this.subToolbar = new window.Autodesk.Viewing.UI.ControlGroup(\n      this.cfg.toolbar.subToolbarName\n    );\n    this.viewer.toolbar.addControl(this.subToolbar);\n  }\n  this.subToolbar.addControl(this.toolbarButton);\n}\n\nfunction closeComponent() {\n  if (this.cfg.panel.closeBehaviour !== \"hide\") {\n    try {\n      this.component.removed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n    this.panel.container.remove();\n    this.panel = null;\n  } else {\n    try {\n      this.component.closed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction getPanel() {\n  if (this.panel === null) {\n    this.panel = new window.PanelClass(this.viewer, this.cfg.panel.title);\n    var _container = document.createElement(\"div\");\n    var _scrollContainer = this.panel.createScrollContainer();\n\n    _container.className +=\n      this.panel.container.id + \"-panelcontainer \" + this.cfg.panel.classname;\n    for (var key in this.cfg.style) {\n      if (this.cfg.style.hasOwnProperty(key)) {\n        this.panel.container.style[key] = this.cfg.style[key];\n      }\n    }\n\n    if (this.panel.container.style.left) {\n      this.panel.container.style.left = \"0\";\n    }\n\n    this.panel.container.appendChild(_scrollContainer);\n    _scrollContainer.style.height = \"calc(100% - 52px)\";\n    _scrollContainer.appendChild(_container);\n\n    var _footer = this.panel.createFooter();\n    this.panel.container.appendChild(_footer);\n\n    if (this.cfg.vueMountComponent) {\n      this.component = new this.cfg.vueMountComponent().$mount(_container);\n    }\n\n    const _this = this;\n    this.panel.addVisibilityListener(open => {\n      if (!open) {\n        closeComponent.call(_this);\n      }\n    });\n  }\n  return this.panel;\n}\n\n/**\n *\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { createExtention, registerExtention }\n */\nmodule.exports = function (spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n     * factory function to create a dynamic class that extends the `SpinalPanelApp` class\n     *```js\n{\n  name: \"extention_name\",\n  vueMountComponent: Vue.extend(aVueCompoment),\n  onLoad: () => {console.log(\"onLoad\");},\n  onUnLoad: () => {console.log(\"onUnLoad\");},\n  toolbar: {\n    icon: \"done\",\n    label: \"testLabel\",\n    subToolbarName: \"spinalcom\"\n  },\n  panel: {\n    title: \"Spinalcom Panel\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"hide\"\n  },\n  style: {}\n}\n```\n     * @param {object} option see description\n     * @returns SpinalForgeExtention\n     */\n    createExtention(option) {\n      const cfg = configInit(option);\n      /**\n       * class returned by createExtention\n       * this extention is also registered in autodesk viweer\n       * @extends SpinalPanelApp\n       * @property {AutodeskViewer} viewer the autodesk view\n       * @property {AutodeskPanel} panel the panel\n       * @property {Vue.component} component the component mounted\n       * @property {Object} cfg the option given on creation\n       */\n      const SpinalForgeExtention = class extends SpinalPanelApp {\n        constructor(viewer, options) {\n          super();\n          window.Autodesk.Viewing.Extension.call(this, viewer, options);\n          this.viewer = viewer;\n          this.panel = null;\n          this.cfg = cfg;\n          spinalPanelManagerService.registerPanel(cfg.name, this);\n        }\n        /**\n         * method called on load of the extention (managed by the autodesk viewer)\n         * the method create a button in the toolbar if put in the option of `createExtention`.\n         */\n        load() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            // add toolbar\n            if (this.viewer.toolbar) {\n              createToolbar.call(this);\n            } else {\n              this.onToolbarCreatedBinded = onToolbarCreated.bind(this);\n              this.viewer.addEventListener(\n                window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n                this.onToolbarCreatedBinded\n              );\n            }\n          }\n          if (typeof cfg.onLoad !== \"undefined\") cfg.onLoad.call(this);\n          return true;\n        }\n        /**\n         * method called when the viewer unload of the extention\n         * (managed by the autodesk viewer)\n         */\n        unload() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            this.viewer.subToolbar.removeControl(this.toolbarButton);\n          }\n          if (typeof cfg.onUnLoad !== \"undefined\") cfg.onUnLoad.call(this);\n          return true;\n        }\n\n        activate() {\n          return this.load();\n        }\n\n        deactivate() {\n          return this.unload();\n        }\n\n        /**\n         *\n         * @param {*} option\n         */\n        openPanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(true);\n          try {\n            this.component.opened.call(this.component, option, this.viewer);\n          } catch (e) {\n            console.error(e);\n          }\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        closePanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(false);\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        tooglePanel(option) {\n          if (this.panel === null || this.panel.isVisible() === false) {\n            this.openPanel.call(this, option);\n          } else { this.closePanel.call(this, option); }\n        }\n      };\n      return SpinalForgeExtention;\n    },\n\n    /**\n     * Method to register an extention to the viewer and the forge viewer\n     * @param {string} name name of the extention\n     * @param {*} classExtention an extention created by `createExtention`\n     */\n    registerExtention(name, classExtention) {\n      // register to forge\n      window.Autodesk.Viewing.theExtensionManager.registerExtension(\n        name,\n        classExtention\n      );\n      // register to viewer\n      window.spinal.ForgeExtentionManager.addExtention(name);\n    }\n  };\n};\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-app dark class=\"LinkAndManageContextTicketMission-body\">\n    <SetUpContextEquip\n      v-if=\"openSetupEquip\"\n      :server-id=\"serverId\"\n      @close=\"openSetupEquip = false\"\n    />\n    <setUpSelectedOrgan\n      v-else-if=\"openSetup\"\n      :context-id=\"contextId\"\n      @close=\"onCloseSetup()\"\n    />\n    <v-card v-else class=\"LinkAndManageContextTicketMission-card\">\n      <v-toolbar class=\"LinkAndManageContextTicketMission-toolbar\" dense dark>\n        <v-toolbar-title> Status : {{ statusCompu }} </v-toolbar-title>\n        <v-spacer />\n        <v-btn icon @click=\"openSetup = true\">\n          <v-icon>settings</v-icon>\n        </v-btn>\n\n        <v-speed-dial v-model=\"fabBtn\" direction=\"left\" :open-on-hover=\"false\">\n          <template #activator>\n            <v-btn v-model=\"fabBtn\" color=\"blue\" small fab>\n              <v-icon>more_vert</v-icon>\n              <v-icon>close</v-icon>\n            </v-btn>\n          </template>\n\n          <v-btn\n            v-tooltip=\"runStopCompu\"\n            fab\n            :disabled=\"disableBtn\"\n            small\n            :color=\"runStopColorCompu\"\n            @click=\"runOrStop\"\n          >\n            <v-icon>{{ runStopIconCompu }}</v-icon>\n          </v-btn>\n\n          <v-btn\n            v-tooltip=\"'Restart Organ'\"\n            fab\n            :disabled=\"linked === false || restart === true\"\n            small\n            color=\"red\"\n            @click=\"restartOrgan\"\n          >\n            <v-icon>refresh</v-icon>\n          </v-btn>\n\n          <v-btn\n            v-tooltip=\"'Synchonize Spatial context to Mission'\"\n            fab\n            :disabled=\"disableBtn\"\n            small\n            color=\"blue\"\n            @click=\"syncSpatialBtn\"\n          >\n            <v-icon>location_city</v-icon>\n          </v-btn>\n          <v-btn\n            v-tooltip=\"'Synchonize Mission\\'s Process with this context'\"\n            fab\n            :disabled=\"disableBtn\"\n            small\n            color=\"blue\"\n            @click=\"syncProcessMission\"\n          >\n            <v-icon>assignment_returned</v-icon>\n          </v-btn>\n\n          <v-btn\n            v-tooltip=\"'Synchonize Spatial Equipment'\"\n            fab\n            :disabled=\"disableBtn\"\n            small\n            color=\"blue\"\n            @click=\"openSetupEquip = true\"\n          >\n            <v-icon>device_hub</v-icon>\n          </v-btn>\n        </v-speed-dial>\n      </v-toolbar>\n      <v-card-text class=\"LinkAndManageContextTicketMission-card-container\">\n        <md-empty-state\n          :md-icon=\"statusIconCompu\"\n          :md-label=\"statusCompu\"\n          md-description=\"\"\n        >\n          <md-button\n            v-if=\"linked === false\"\n            class=\"md-primary md-raised\"\n            @click=\"openSetup = true\"\n          >\n            Click here for Setup\n          </md-button>\n        </md-empty-state>\n      </v-card-text>\n    </v-card>\n    <v-progress-linear\n      v-if=\"spin\"\n      style=\"margin: 0\"\n      class=\"spinal-modal-progress-bar\"\n      :indeterminate=\"true\"\n      color=\"primary\"\n    />\n  </v-app>\n</template>\n\n<script>\nimport { SpinalGraphService } from 'spinal-env-viewer-graph-service';\nimport SetUpSelectedOrgan from './SetUpSelectedOrgan.vue';\nimport SetUpContextEquip from './SetUpContextEquip.vue';\nexport default {\n  name: 'LinkAndManageContextTicketMission',\n  components: { SetUpSelectedOrgan, SetUpContextEquip },\n  data: function () {\n    return {\n      openSetup: false,\n      openSetupEquip: false,\n      contextId: '',\n      linked: false,\n      status: -1,\n      serverId: 0,\n      restart: false,\n      fabBtn: false,\n    };\n  },\n  computed: {\n    statusCompu() {\n      if (this.linked === false) return 'Not linked';\n      if (this.restart === true) return 'Restarting';\n      switch (this.status) {\n        case 0:\n          return 'Stand By';\n        case 1:\n          return 'Sync spatial';\n        case 2:\n          return 'Sync process';\n        case 3:\n          return 'Running';\n        case 4:\n          return 'Sync Equipments';\n        default:\n          return 'Stand By';\n      }\n    },\n    statusIconCompu() {\n      if (this.linked === false) return 'settings';\n      if (this.restart === true) return 'refresh';\n      switch (this.status) {\n        case 0:\n          return 'done';\n        case 1:\n          return 'location_city';\n        case 2:\n          return 'assignment_returned';\n        case 3:\n          return 'play_arrow';\n        case 4:\n          return 'device_hub';\n        default:\n          return 'done';\n      }\n    },\n\n    spin() {\n      if (this.restart === true || this.status === 1 || this.status === 2) {\n        return true;\n      }\n      return false;\n    },\n    disableBtn() {\n      if (this.linked === true && this.spin === false) {\n        return false;\n      }\n      return true;\n    },\n    runStopCompu() {\n      if (this.linked === true && this.status === 3) return 'Stop';\n      return 'Run';\n    },\n    runStopIconCompu() {\n      if (this.linked === true && this.status === 3) return 'pause';\n      return 'play_arrow';\n    },\n    runStopColorCompu() {\n      if (this.linked === true && this.status === 3) return 'red';\n      return 'green';\n    },\n  },\n  mounted() {},\n  methods: {\n    async getLinkedOrgan() {\n      const node = SpinalGraphService.getRealNode(this.contextId);\n      if (!node.element) {\n        return null;\n      }\n      const element = await node.element.load();\n      if (element.contextId && this.contextId === element.contextId.get()) {\n        if (this.unbindFct) this.unbindFct();\n        const unbind = element.bind(() => {\n          if (this) {\n            this.status = element.mission.organStatus.get();\n            console.log('this.status', this.status);\n            this.linked = true;\n            this.serverId = element._server_id;\n            this.restart = element.restart.get();\n          }\n        });\n        this.unbindFct = () => {\n          element.unbind(unbind);\n        };\n        return element;\n      }\n      return null;\n    },\n    async runOrStop() {\n      const node = SpinalGraphService.getRealNode(this.contextId);\n      if (!node.element) {\n        return null;\n      }\n      const element = await node.element.load();\n      element.mission.organStatus.set(this.status === 3 ? 0 : 3);\n    },\n    async restartOrgan() {\n      const node = SpinalGraphService.getRealNode(this.contextId);\n      if (!node.element) {\n        return null;\n      }\n      const element = await node.element.load();\n      element.restart.set(true);\n    },\n    async syncSpatialBtn() {\n      const node = SpinalGraphService.getRealNode(this.contextId);\n      if (!node.element) {\n        return null;\n      }\n      const element = await node.element.load();\n      element.mission.organStatus.set(1);\n    },\n    async syncProcessMission() {\n      const node = SpinalGraphService.getRealNode(this.contextId);\n      if (!node.element) {\n        return null;\n      }\n      const element = await node.element.load();\n      element.mission.organStatus.set(2);\n    },\n    syncEquipMission() {},\n    start() {},\n    async onCloseSetup() {\n      this.openSetup = false;\n      await this.getLinkedOrgan();\n    },\n    async opened(data) {\n      console.log('opened', data);\n      this.contextId = data;\n      this.status = -1;\n      this.linked = false;\n      this.serverId = 0;\n      this.restart = false;\n      await this.getLinkedOrgan();\n    },\n    removed() {},\n    close() {},\n    closeDialog() {},\n  },\n};\n</script>\n\n<style scoped>\n.LinkAndManageContextTicketMission-body {\n  height: calc(100% - 17px);\n  position: relative;\n  overflow: auto;\n}\n.spinal-modal-progress-bar {\n  margin: 0;\n  z-index: 1;\n  position: absolute;\n  bottom: 2px;\n}\n.LinkAndManageContextTicketMission-card {\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n}\n.LinkAndManageContextTicketMission-card-container {\n  height: calc(100% - 50px);\n  position: relative;\n  overflow: auto;\n}\n</style>\n<style>\n.LinkAndManageContextTicketMission-body > .application--wrap {\n  height: 100%;\n  min-height: unset;\n  position: relative;\n}\n.LinkAndManageContextTicketMission-body,\n.LinkAndManageContextTicketMission-body * {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n.LinkAndManageContextTicketMission-body .v-btn--floating .v-btn__content {\n  height: unset;\n}\n\n.LinkAndManageContextTicketMission-body\n  .v-btn--floating\n  .v-btn__content\n  > :not(:only-child):first-child,\n.v-btn--floating .v-btn__content > :not(:only-child):last-child {\n  top: unset;\n}\n\n.LinkAndManageContextTicketMission-toolbar .v-speed-dial__list > div {\n  background: #212121;\n  height: 48px;\n}\n\n.LinkAndManageContextTicketMission-toolbar > .v-toolbar__content {\n  padding-right: 0;\n}\n\n.LinkAndManageContextTicketMission-body *::-webkit-scrollbar {\n  width: 5px;\n  height: 5px;\n}\n.LinkAndManageContextTicketMission-body *::-webkit-scrollbar-thumb {\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  background: rgba(169, 169, 169, 0.9);\n}\n.LinkAndManageContextTicketMission-body *::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.3);\n  box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.3);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n}\n</style>\n","<!--\nCopyright 2021 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-card class=\"spinal-setup-organ-body\">\n    <set-up-toolbar\n      title=\"Setup Context's equipment to send to Mission\"\n      @back=\"back\"\n      @save=\"save\"\n    />\n\n    <v-card-text class=\"spinal-setup-organ-container\">\n      <form action=\"none\">\n        <md-field>\n          <label for=\"Select Spatial Context\">select the Organ</label>\n          <md-select\n            id=\"modelselect\"\n            v-model=\"selectedOrgan\"\n            name=\"modelselect\"\n            md-dense\n          >\n            <md-option\n              v-for=\"organCfg in organsCfg\"\n              :key=\"organCfg.id\"\n              :value=\"organCfg.id\"\n            >\n              {{ organCfg.name }}\n            </md-option>\n          </md-select>\n        </md-field>\n        <template v-if=\"selectedOrgan\">\n          <md-field>\n            <label for=\"Select Spatial Context\"\n              >Select the Spatial Context</label\n            >\n            <md-select\n              id=\"modelselect\"\n              v-model=\"selectedSpatialContext\"\n              name=\"modelselect\"\n              md-dense\n            >\n              <md-optgroup\n                v-if=\"spatialContexts.length > 0\"\n                label=\"Spatial contexts\"\n              >\n                <md-option\n                  v-for=\"context in spatialContexts\"\n                  :key=\"context.id\"\n                  :value=\"context.id\"\n                >\n                  {{ context.name }}\n                </md-option>\n              </md-optgroup>\n\n              <md-optgroup v-if=\"contexts.length > 0\" label=\"Other contexts\">\n                <md-option\n                  v-for=\"context in contexts\"\n                  :key=\"context.id\"\n                  :value=\"context.id\"\n                >\n                  {{ context.name }}\n                </md-option>\n              </md-optgroup>\n            </md-select>\n          </md-field>\n          <v-text-field\n            v-model=\"apiLogin\"\n            placeholder=\"Api Login\"\n            autocomplete=\"off\"\n            label=\"Mission Api Login\"\n          />\n\n          <v-text-field\n            v-model=\"apiPassword\"\n            autocomplete=\"off\"\n            placeholder=\"Api Password\"\n            label=\"Mission Api Password\"\n            :append-icon=\"showApiPassword ? 'visibility' : 'visibility_off'\"\n            :type=\"showApiPassword ? 'text' : 'password'\"\n            @click:append=\"showApiPassword = !showApiPassword\"\n          />\n\n          <v-text-field\n            v-model=\"appelant\"\n            placeholder=\"Api Appelant\"\n            autocomplete=\"off\"\n            label=\"Mission Api Appelant\"\n          />\n\n          <v-text-field\n            v-model=\"prefixBuilding\"\n            placeholder=\"Mission Prefix Building\"\n            autocomplete=\"off\"\n            label=\"Mission Prefix Building\"\n          />\n\n          <v-text-field\n            v-model=\"pullInterval\"\n            placeholder=\"Interval to pull data from Mission\"\n            type=\"number\"\n            label=\"Interval to pull data from Mission in ms\"\n          />\n          <VueCtkDateTimePicker\n            v-model=\"lastSyncCompu\"\n            :dark=\"true\"\n            :max-date=\"today\"\n            label=\"Last Synchonization\"\n          />\n        </template>\n      </form>\n    </v-card-text>\n    <v-text-field v-model=\"appelant\" placeholder=\"appelant\" label=\"appelant\" />\n  </v-card>\n</template>\n\n<script>\nimport {\n  SpinalGraphService,\n  SpinalNodePointer,\n} from \"spinal-env-viewer-graph-service\";\nimport { FileSystem } from \"spinal-core-connectorjs_type\";\nimport moment from \"moment\";\nimport spinalEnvViewerContextGeographicService from \"spinal-env-viewer-context-geographic-service\";\nimport SetUpToolbar from \"./SetUpToolbar.vue\";\n\nconst CONTEXT_GEO_TYPE =\n  spinalEnvViewerContextGeographicService.constants.CONTEXT_TYPE;\nexport default {\n  name: \"SetUpSelectedOrgan\",\n  components: { SetUpToolbar },\n  props: {\n    contextId: { required: true, type: String },\n  },\n  data: function () {\n    const today = new Date();\n    return {\n      spin: false,\n      today: today.toISOString(),\n      selectedOrgan: null,\n      spatialContexts: [],\n      contexts: [],\n      selectedSpatialContext: null,\n      appelant: \"\",\n      apiLogin: \"\",\n      apiPassword: \"\",\n      showApiPassword: false,\n      pullInterval: 5 * 60 * 1000, // 5 min\n      prefixBuilding: \"\",\n      lastSync: NaN,\n      organsCfg: [],\n      // selectedContextId: \"\"\n    };\n  },\n  computed: {\n    lastSyncCompu: {\n      get() {\n        if (!this.lastSync) {\n          return null;\n        } else {\n          return new Date(this.lastSync).toISOString();\n        }\n      },\n      set(value) {\n        this.lastSync = moment.utc(value, \"YYYY-MM-DD HH:mm:ss\");\n      },\n    },\n  },\n  watch: {\n    async selectedOrgan() {\n      const selectedFile = FileSystem._objects[this.selectedOrgan];\n      // eslint-disable-next-line no-undef\n      const node = await spinal.spinalSystem.loadModelPtr(selectedFile);\n      this.appelant = node.mission.appelant.get();\n      this.apiLogin = node.mission.apiLogin.get();\n      this.apiPassword = node.mission.apiPassword.get();\n      this.pullInterval = node.mission.pullInterval.get();\n      this.prefixBuilding = node.mission.prefixBuilding.get();\n      this.lastSync = node.mission.lastSync.get();\n      this.selectedSpatialContext = node.spatialContextID.get();\n    },\n  },\n  async mounted() {\n    // eslint-disable-next-line no-undef\n    const files = await spinal.spinalSystem.load(\"/etc/Organs/ticket\");\n    const organ = await this.getLinkedOrgan();\n    for (let idx = 0; idx < files.length; idx++) {\n      const file = files[idx];\n      this.organsCfg.push({\n        name: file.name.get(),\n        id: file._server_id,\n        ptr: file._ptr.data.value,\n      });\n      if (organ && organ._server_id === file._ptr.data.value) {\n        this.selectedOrgan = file._server_id;\n      }\n    }\n\n    const graph = await window.spinal.spinalSystem.getModel();\n    const children = await graph.getChildren();\n    this.contexts = children.reduce((acc, itm) => {\n      if (itm.info.type.get() === CONTEXT_GEO_TYPE) {\n        this.spatialContexts.push({\n          id: itm.info.id.get(),\n          name: itm.info.name.get(),\n        });\n        return acc;\n      }\n      acc.push({\n        id: itm.info.id.get(),\n        name: itm.info.name.get(),\n      });\n      return acc;\n    }, []);\n  },\n  methods: {\n    async getLinkedOrgan() {\n      const node = SpinalGraphService.getRealNode(this.contextId);\n      if (!node.element) {\n        return null;\n      }\n      const element = await node.element.load();\n      if (element.contextId && this.contextId === element.contextId.get()) {\n        return element;\n      }\n      return null;\n    },\n\n    saveSetting() {\n      console.log(\"SaveSetting\", this);\n    },\n    back() {\n      this.$emit(\"close\");\n    },\n    async save() {\n      const selectedFile = FileSystem._objects[this.selectedOrgan];\n      // eslint-disable-next-line no-undef\n      const organCfgModel = await spinal.spinalSystem.loadModelPtr(\n        selectedFile\n      );\n      const node = SpinalGraphService.getRealNode(this.contextId);\n      if (node.element === undefined) {\n        node.add_attr(\"element\", new SpinalNodePointer(organCfgModel));\n      } else if (node.element.ptr.data !== organCfgModel._server_id) {\n        node.element.setElement(organCfgModel);\n      }\n\n      // eslint-disable-next-line no-undef\n      organCfgModel.digitalTwinPath.set(spinal.spinalSystem.getPath());\n      organCfgModel.contextId.set(this.contextId);\n      organCfgModel.spatialContextID.set(this.selectedSpatialContext);\n      organCfgModel.mission.appelant.set(this.appelant);\n      organCfgModel.mission.apiLogin.set(this.apiLogin);\n      organCfgModel.mission.apiPassword.set(this.apiPassword);\n      organCfgModel.mission.pullInterval.set(this.pullInterval);\n      organCfgModel.mission.lastSync.set(this.lastSync);\n      organCfgModel.mission.prefixBuilding.set(this.prefixBuilding);\n      organCfgModel.restart.set(true);\n      this.$emit(\"close\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.spinal-setup-organ-body {\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n}\n\n.spinal-setup-organ-container {\n  height: calc(100% - 50px);\n  position: relative;\n  overflow: auto;\n}\n</style>\n","<!--\nCopyright 2021 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-toolbar dense dark>\n    <v-btn icon @click=\"$emit('back')\">\n      <v-icon>arrow_back</v-icon>\n    </v-btn>\n    <v-toolbar-title>{{ label }}</v-toolbar-title>\n    <v-spacer />\n    <v-btn icon @click=\"$emit('save')\">\n      <v-icon>check</v-icon>\n    </v-btn>\n  </v-toolbar>\n</template>\n\n<script>\nexport default {\n  name: \"SetUpToolbar\",\n  props: {\n    label: { type: String, required: false, default: \"\" },\n  },\n  data() {\n    return {};\n  },\n};\n</script>\n","<!--\nCopyright 2021 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-card class=\"spinal-setup-equip-body\">\n    <set-up-toolbar\n      :title=\"'Setup Context\\'s equipment to send to Mission'\"\n      @back=\"back\"\n      @save=\"save\"\n    />\n    <v-card-text class=\"spinal-setup-equip-container\">\n      <form action=\"none\">\n        <md-field>\n          <label for=\"Select Equipment Context(s)\"\n            >Select Equipment Context(s) to send to Mission</label\n          >\n          <md-select\n            v-model=\"contexts\"\n            name=\"Equipment Context Select\"\n            md-dense\n            multiple\n          >\n            <md-option\n              v-for=\"equipContext in equipContexts\"\n              :key=\"equipContext.id\"\n              :value=\"equipContext.id\"\n            >\n              {{ equipContext.name }}\n            </md-option>\n          </md-select>\n        </md-field>\n      </form>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport { FileSystem } from \"spinal-core-connectorjs_type\";\nimport SetUpToolbar from \"./SetUpToolbar.vue\";\nexport default {\n  name: \"SetUpContextEquip\",\n  components: { SetUpToolbar },\n  props: {\n    serverId: { required: true, type: Number },\n  },\n  data: function () {\n    return {\n      equipContexts: [],\n      contexts: [],\n    };\n  },\n  async mounted() {\n    const cfg = this.getConfig();\n    const graph = SpinalGraphService.getGraph();\n    const contexts = await graph.getChildren();\n    this.equipContexts = contexts.reduce((acc, context) => {\n      if (context.info.type.get() === \"BIMObjectGroupContext\") {\n        acc.push({\n          id: context.info.id.get(),\n          name: context.info.name.get(),\n        });\n      }\n      return acc;\n    }, []);\n    this.contexts = [];\n    if (!cfg.mission.contextsEquip) cfg.mission.add_attr(\"contextsEquip\", []);\n    for (let idx = 0; idx < cfg.mission.contextsEquip.length; idx++) {\n      this.contexts.push(cfg.mission.contextsEquip[idx].get());\n    }\n  },\n  methods: {\n    back() {\n      this.$emit(\"close\");\n    },\n    async save() {\n      const cfg = this.getConfig();\n      if (!cfg.mission.contextsEquip) cfg.mission.add_attr(\"contextsEquip\", []);\n      cfg.mission.contextsEquip.set(this.contexts);\n      cfg.mission.organStatus.set(4);\n      this.$emit(\"close\");\n    },\n    getConfig() {\n      return FileSystem._objects[this.serverId];\n    },\n  },\n};\n</script>\n\n<style scoped>\n.spinal-setup-equip-body {\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n}\n\n.spinal-setup-equip-container {\n  height: calc(100% - 50px);\n  position: relative;\n  overflow: auto;\n}\n</style>\n","/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalContextApp } from 'spinal-env-viewer-context-menu-service';\nconst { spinalPanelManagerService } = require(\"spinal-env-viewer-panel-manager-service\");\nimport { SERVICE_TYPE as TICKET_CONTEXT_TYPE } from 'spinal-service-ticket/dist/Constants';\n\nconst LABEL = 'Link And Manage Mission';\nexport class LinkAndManageContextTicketMissionBtn extends SpinalContextApp {\n\n  constructor() {\n    super(LABEL, LABEL, {\n      icon: 'settings_ethernet',\n      icon_type: 'in',\n      backgroundColor: '#000000',\n      fontColor: '#ffffff'\n    });\n\n    this.action = this.openPanel.bind(this);\n  }\n\n  isShown(option) {\n    if (option.selectedNode === option.context &&\n      option.selectedNode.type.get() === TICKET_CONTEXT_TYPE) {\n      return Promise.resolve(true);\n    }\n    return Promise.resolve(-1);\n  }\n\n  openPanel(option) {\n    spinalPanelManagerService.openPanel(\"LinkAndManageContextTicketMission\", option.selectedNode.id.get());\n  }\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ARCHIVE_TICKET_RELATIONS = exports.ARCHIVE_TICKET_TIMESTAMP_ATTR_SPATIAL = exports.ARCHIVE_TICKET_TIMESTAMP_ATTR_PROCESS = exports.ARCHIVE_TICKET_RELATION_TYPE = exports.ARCHIVE_TICKET_PART_TICKET_RELATION = exports.ARCHIVE_TICKET_PART_TYPE = exports.ARCHIVE_TICKET_PART_RELATION = exports.SPATIAL_ARCHIVE_TICKET_TYPE = exports.SPATIAL_ARCHIVE_TICKET_RELATION = exports.PROCESS_ARCHIVE_TICKET_TYPE = exports.PROCESS_ARCHIVE_TICKET_RELATION = exports._TICKET_PRIORITIES = exports.LOGS_EVENTS_STEPS = exports.LOG_TYPE = exports.LOG_RELATION_NAME = exports.LOG_RELATION_TYPE = exports._DEFAULT_INCIDENTS_NAME = exports.INCIDENT_TYPE = exports.INCIDENT_RELATION_NAME = exports.INCIDENT_RELATION_TYPE = exports.INCIDENT_SECTION_RELATION_NAME = exports.INCIDENT_SECTION_TYPE = exports.INCIDENT_SECTION_RELATION_TYPE = exports._DEFAULT_STEPS = exports._ARCHIVED_STEP = exports.DEFAULT_STEPS = exports.ARCHIVED_STEP = exports.STEP_TYPE = exports.STEP_RELATION_NAME = exports.STEP_RELATION_TYPE = exports._PROCESS_TYPE = exports.PROCESS_RELATION_NAME = exports.PROCESS_RELATION_TYPE = exports.ALARM_RELATION_NAME = exports.TICKET_ATTRIBUTE_OCCURENCE_NAME = exports.TIKET_TYPE = exports.TICKET_RELATION_NAME = exports.TICKET_RELATION_TYPE = exports.TICKET_CONTEXT_SUBTYPE_LIST = exports.TICKET_CONTEXT_TYPE = exports.GEO_TYPES = void 0;\n/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\nconst OLD_CONSTANTS = require(\"./old_constants\");\n__exportStar(require(\"./old_constants\"), exports);\nconst spinal_model_graph_1 = require(\"spinal-model-graph\");\nvar spinal_env_viewer_context_geographic_service_1 = require(\"spinal-env-viewer-context-geographic-service\");\nObject.defineProperty(exports, \"GEO_TYPES\", { enumerable: true, get: function () { return spinal_env_viewer_context_geographic_service_1.GEOGRAPHIC_TYPES_ORDER; } });\nexports.TICKET_CONTEXT_TYPE = OLD_CONSTANTS.SERVICE_TYPE;\nexports.TICKET_CONTEXT_SUBTYPE_LIST = ['Ticket', 'Alarm'];\n/////////////////////////////////////////\n/////////////// TICKET ///////////////////\nexports.TICKET_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE; // STEP_TO_TICKET_RELATION_TYPE\nexports.TICKET_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME; // STEP_TO_TICKET_RELATION_NAME\nexports.TIKET_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_TYPE;\nexports.TICKET_ATTRIBUTE_OCCURENCE_NAME = 'Occurrence number';\nexports.ALARM_RELATION_NAME = 'hasAlarm';\n/////////////////////////////////////////\n/////////////// PROCESS /////////////////\nexports.PROCESS_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE; // CONTEXT_TO_PROCESS_RELATION_TYPE\nexports.PROCESS_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME; //CONTEXT_TO_PROCESS_RELATION_NAME\nexports._PROCESS_TYPE = OLD_CONSTANTS.PROCESS_TYPE;\n//////////////////////////////////////\n/////////////// STEP /////////////////\nexports.STEP_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE; // PROCESS_TO_STEP_RELATION_TYPE\nexports.STEP_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_RELATION_NAME; // PROCESS_TO_STEP_RELATION_NAME\nexports.STEP_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_TYPE;\nexports.ARCHIVED_STEP = OLD_CONSTANTS.ARCHIVED_STEP;\nexports.DEFAULT_STEPS = OLD_CONSTANTS.DEFAULT_STEPS;\nexports._ARCHIVED_STEP = OLD_CONSTANTS.ARCHIVED_STEP;\nexports._DEFAULT_STEPS = OLD_CONSTANTS.DEFAULT_STEPS;\n/////////////////////////////////////////\n/////////////// CATEGORY ////////////////\nexports.INCIDENT_SECTION_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_TYPE;\nexports.INCIDENT_SECTION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE;\nexports.INCIDENT_SECTION_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME;\nexports.INCIDENT_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_TYPE;\nexports.INCIDENT_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME;\nexports.INCIDENT_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_TYPE;\nexports._DEFAULT_INCIDENTS_NAME = OLD_CONSTANTS.DEFAULT_INCIDENTS_NAME;\nexports.LOG_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE;\nexports.LOG_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_LOG_RELATION_NAME;\nexports.LOG_TYPE = OLD_CONSTANTS.SERVICE_LOG_TYPE;\nexports.LOGS_EVENTS_STEPS = OLD_CONSTANTS.LOGS_EVENTS;\nexports._TICKET_PRIORITIES = OLD_CONSTANTS.TICKET_PRIORITIES;\n/////////////////////////////////////////\n/////////////// ARCHIVE ////////////////\nexports.PROCESS_ARCHIVE_TICKET_RELATION = 'ProcessHasArchiveTicket';\nexports.PROCESS_ARCHIVE_TICKET_TYPE = 'ProcessArchiveTicket';\nexports.SPATIAL_ARCHIVE_TICKET_RELATION = 'SpatialHasArchiveTicket';\nexports.SPATIAL_ARCHIVE_TICKET_TYPE = 'SpatialArchiveTicket';\nexports.ARCHIVE_TICKET_PART_RELATION = 'ArchiveTicketHasPart';\nexports.ARCHIVE_TICKET_PART_TYPE = 'ArchiveTicketPart';\nexports.ARCHIVE_TICKET_PART_TICKET_RELATION = 'ArchiveTicketPartHasTicket';\nexports.ARCHIVE_TICKET_RELATION_TYPE = spinal_model_graph_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.ARCHIVE_TICKET_TIMESTAMP_ATTR_PROCESS = 'ProcessArchiveTimestamp';\nexports.ARCHIVE_TICKET_TIMESTAMP_ATTR_SPATIAL = 'SpatialArchiveTimestamp';\nexports.ARCHIVE_TICKET_RELATIONS = [\n    exports.SPATIAL_ARCHIVE_TICKET_RELATION,\n    exports.ARCHIVE_TICKET_PART_RELATION,\n];\n//# sourceMappingURL=Constants.js.map","/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\nimport * as OLD_CONSTANTS from './old_constants';\nexport * from './old_constants';\nimport { SPINAL_RELATION_PTR_LST_TYPE } from 'spinal-model-graph';\nexport { GEOGRAPHIC_TYPES_ORDER as GEO_TYPES } from 'spinal-env-viewer-context-geographic-service';\nimport { GEOGRAPHIC_TYPES_ORDER as GEO_TYPES } from 'spinal-env-viewer-context-geographic-service';\n\nexport const TICKET_CONTEXT_TYPE: string = OLD_CONSTANTS.SERVICE_TYPE;\nexport const TICKET_CONTEXT_SUBTYPE_LIST: Array<string> = ['Ticket', 'Alarm'];\n/////////////////////////////////////////\n/////////////// TICKET ///////////////////\nexport const TICKET_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE; // STEP_TO_TICKET_RELATION_TYPE\nexport const TICKET_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME; // STEP_TO_TICKET_RELATION_NAME\nexport const TIKET_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_TYPE;\nexport const TICKET_ATTRIBUTE_OCCURENCE_NAME = 'Occurrence number';\nexport const ALARM_RELATION_NAME = 'hasAlarm';\n/////////////////////////////////////////\n/////////////// PROCESS /////////////////\nexport const PROCESS_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE; // CONTEXT_TO_PROCESS_RELATION_TYPE\nexport const PROCESS_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME; //CONTEXT_TO_PROCESS_RELATION_NAME\nexport const _PROCESS_TYPE: string = OLD_CONSTANTS.PROCESS_TYPE;\n//////////////////////////////////////\n/////////////// STEP /////////////////\nexport const STEP_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE; // PROCESS_TO_STEP_RELATION_TYPE\nexport const STEP_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_RELATION_NAME; // PROCESS_TO_STEP_RELATION_NAME\nexport const STEP_TYPE: string = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_TYPE;\n\nexport const ARCHIVED_STEP = OLD_CONSTANTS.ARCHIVED_STEP;\nexport const DEFAULT_STEPS = OLD_CONSTANTS.DEFAULT_STEPS;\nexport const _ARCHIVED_STEP = OLD_CONSTANTS.ARCHIVED_STEP;\nexport const _DEFAULT_STEPS = OLD_CONSTANTS.DEFAULT_STEPS;\n\n/////////////////////////////////////////\n/////////////// CATEGORY ////////////////\nexport const INCIDENT_SECTION_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_TYPE;\nexport const INCIDENT_SECTION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE;\nexport const INCIDENT_SECTION_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME;\nexport const INCIDENT_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_TYPE;\nexport const INCIDENT_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME;\nexport const INCIDENT_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_TYPE;\nexport const _DEFAULT_INCIDENTS_NAME: string =\n  OLD_CONSTANTS.DEFAULT_INCIDENTS_NAME;\nexport const LOG_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE;\nexport const LOG_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_LOG_RELATION_NAME;\nexport const LOG_TYPE: string = OLD_CONSTANTS.SERVICE_LOG_TYPE;\nexport const LOGS_EVENTS_STEPS = OLD_CONSTANTS.LOGS_EVENTS;\nexport const _TICKET_PRIORITIES = OLD_CONSTANTS.TICKET_PRIORITIES;\n\n/////////////////////////////////////////\n/////////////// ARCHIVE ////////////////\nexport const PROCESS_ARCHIVE_TICKET_RELATION = 'ProcessHasArchiveTicket';\nexport const PROCESS_ARCHIVE_TICKET_TYPE = 'ProcessArchiveTicket';\nexport const SPATIAL_ARCHIVE_TICKET_RELATION = 'SpatialHasArchiveTicket';\nexport const SPATIAL_ARCHIVE_TICKET_TYPE = 'SpatialArchiveTicket';\nexport const ARCHIVE_TICKET_PART_RELATION = 'ArchiveTicketHasPart';\nexport const ARCHIVE_TICKET_PART_TYPE = 'ArchiveTicketPart';\nexport const ARCHIVE_TICKET_PART_TICKET_RELATION = 'ArchiveTicketPartHasTicket';\nexport const ARCHIVE_TICKET_RELATION_TYPE = SPINAL_RELATION_PTR_LST_TYPE;\nexport const ARCHIVE_TICKET_TIMESTAMP_ATTR_PROCESS = 'ProcessArchiveTimestamp';\nexport const ARCHIVE_TICKET_TIMESTAMP_ATTR_SPATIAL = 'SpatialArchiveTimestamp';\nexport const ARCHIVE_TICKET_RELATIONS = [\n  SPATIAL_ARCHIVE_TICKET_RELATION,\n  ARCHIVE_TICKET_PART_RELATION,\n];\n","\"use strict\";\n/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TICKET_PRIORITIES = exports.LOGS_EVENTS_STRING = exports.LOGS_EVENTS_STEPS = exports.LOG_TYPE = exports.LOG_RELATION_NAME = exports.LOG_RELATION_TYPE = exports.EVENTS_TO_LOG = exports.LOGS_EVENTS = exports.SERVICE_LOG_TYPE = exports.SPINAL_TICKET_SERVICE_LOG_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE = exports.DEFAULT_INCIDENTS_NAME = exports.SPINAL_TICKET_SERVICE_INCIDENT_TYPE = exports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE = exports.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_TYPE = exports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_TYPE = exports.DEFAULT_STEPS = exports.ARCHIVED_STEP = exports.SPINAL_TICKET_SERVICE_STEP_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_STEP_TYPE = exports.SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE = exports.PROCESS_TYPE = exports.SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE = exports.SPINAL_TICKET_SERVICE_TICKET_TYPE = exports.SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE = exports.SERVICE_TYPE = exports.SERVICE_NAME = void 0;\nconst spinal_env_viewer_graph_service_1 = require(\"spinal-env-viewer-graph-service\");\nexports.SERVICE_NAME = 'Ticket Service';\nexports.SERVICE_TYPE = 'SpinalSystemServiceTicket';\n/////////////////////////////////////////\n/////////////// TICKET ///////////////////\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME = 'SpinalSystemServiceTicketHasTicket';\nexports.SPINAL_TICKET_SERVICE_TICKET_TYPE = 'SpinalSystemServiceTicketTypeTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION: string = 'SpinalSystemServiceHasTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_NAME: string = 'Tickets';\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_NAME: string = 'SpinalSystemServiceHasTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasTicket';\n// export const SECTION_RELATION_TYPE = SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_TYPE;\n/**\n * New values\n */\n// export const TICKET_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE; // STEP_TO_TICKET_RELATION_TYPE\n// export const TICKET_RELATION_NAME: string = SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME; // STEP_TO_TICKET_RELATION_NAME\n// export const TIKET_TYPE: string = SPINAL_TICKET_SERVICE_TICKET_TYPE;\n/////////////////////////////////////////\n/////////////// PROCESS /////////////////\nexports.SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME = 'SpinalSystemServiceTicketHasProcess';\nexports.PROCESS_TYPE = 'SpinalServiceTicketProcess';\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Process';\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasProcess';\n// export const SPINAL_TICKET_SERVICE_PROCESS_TYPE: string = 'SpinalSystemServiceTicketTypeProcess';\n// export const PROCESS_HAS_TICKET_RELATION_NAME: string = 'SpinalSystemService_ProcessHasTicket';\n// export const PROCESS_HAS_TICKET_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n/**\n * New values\n */\n// export const PROCESS_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE; // CONTEXT_TO_PROCESS_RELATION_TYPE\n// export const PROCESS_RELATION_NAME: string = SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME; //CONTEXT_TO_PROCESS_RELATION_NAME\n// export const PROCESS_TYPE: string = 'SpinalServiceTicketProcess';\n//////////////////////////////////////\n/////////////// STEP /////////////////\nexports.SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_STEP_TYPE = 'SpinalSystemServiceTicketTypeStep';\nexports.SPINAL_TICKET_SERVICE_STEP_RELATION_NAME = 'SpinalSystemServiceTicketHasStep';\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasStep';\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Step';\n/**\n * New values\n */\n// export const STEP_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE; // PROCESS_TO_STEP_RELATION_TYPE\n// export const STEP_RELATION_NAME: string = SPINAL_TICKET_SERVICE_STEP_RELATION_NAME; // PROCESS_TO_STEP_RELATION_NAME\n// export const STEP_TYPE: string = SPINAL_TICKET_SERVICE_STEP_TYPE;\nexports.ARCHIVED_STEP = {\n    name: \"Archived\",\n    order: -1,\n    color: \"#FF0000\"\n};\nexports.DEFAULT_STEPS = [\n    { name: 'Déclaré', color: '#ff0019', order: 0 },\n    { name: 'Ouvert', color: '#fff112', order: 1 },\n    { name: 'Résolu', color: '#10ff1d', order: 2 },\n    exports.ARCHIVED_STEP\n];\n/////////////////////////////////////////\n/////////////// CATEGORY ////////////////\nexports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE = 'DEFAULT_INCIDENT_TYPE';\nexports.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME = 'Spinal_Service_Ticket_Process_has_category';\nexports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME = 'Spinal_Service_Ticket_Process_has_categories_section';\nexports.SPINAL_TICKET_SERVICE_INCIDENT_TYPE = 'INCIDENT_TYPE';\nexports.DEFAULT_INCIDENTS_NAME = 'Incidents commun';\n// export const SPINAL_TICKET_SERVICE_INCIDENT_SUB_SECTION_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_INCIDENT_SUB_SECTION_RELATION_NAME: string = 'Spinal_Service_Ticket_Process_has_sub_category';\n// export const DEFAULT_INCIDENT_TYPE: string = SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE;\n// export const DEFAULT_INCIDENT_RELATION_NAME: string = SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME;\n// export const fdg: string = SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME;\n/////////////////////////////////////////\n/////////////// ARCHIVE /////////////////\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Ticket';\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceTicketHasArchive';\n// export const SERVICE_ARCHIVE_TYPE: string = 'SpinalSystemServiceTicketArchive';\n/////////////////////////////////////////\n/////////////// LOG /////////////////\nexports.SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_LOG_RELATION_NAME = 'SpinalSystemServiceTicketHasLog';\nexports.SERVICE_LOG_TYPE = 'SpinalSystemServiceTicketLog';\nvar LOGS_EVENTS;\n(function (LOGS_EVENTS) {\n    LOGS_EVENTS[LOGS_EVENTS[\"creation\"] = 1] = \"creation\";\n    LOGS_EVENTS[LOGS_EVENTS[\"moveToNext\"] = 2] = \"moveToNext\";\n    LOGS_EVENTS[LOGS_EVENTS[\"moveToPrevious\"] = 3] = \"moveToPrevious\";\n    LOGS_EVENTS[LOGS_EVENTS[\"archived\"] = 4] = \"archived\";\n    LOGS_EVENTS[LOGS_EVENTS[\"unarchive\"] = 5] = \"unarchive\";\n    LOGS_EVENTS[LOGS_EVENTS[\"move\"] = 6] = \"move\";\n})(LOGS_EVENTS = exports.LOGS_EVENTS || (exports.LOGS_EVENTS = {}));\nexports.EVENTS_TO_LOG = Object.freeze({\n    1: \"creation\",\n    2: \"moveToNext\",\n    3: \"moveToPrevious\",\n    4: \"archived\",\n    5: \"unarchive\",\n    6: \"move\"\n});\nexports.LOG_RELATION_TYPE = exports.SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE;\nexports.LOG_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_LOG_RELATION_NAME;\nexports.LOG_TYPE = exports.SERVICE_LOG_TYPE;\nexports.LOGS_EVENTS_STEPS = LOGS_EVENTS;\nexports.LOGS_EVENTS_STRING = [\n    \"none\",\n    \"creation\",\n    \"moveToNext\",\n    \"moveToPrevious\",\n    \"archived\",\n    \"unarchive\",\n    \"move\"\n];\n/////////////////////////////////////////\n/////////////// Target /////////////////\n// export const SPINAL_TICKET_SERVICE_TARGET_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_TARGET_RELATION_NAME: string = 'SpinalSystemServiceTicketHasLocation';\n/////////////////////////////////////////\n/////////////// USER ////////////////////\n// export const USER_RELATION_NAME: string = 'userHasDeclaredTicket';\n// export const USER_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n/////////////////////////////////////////\n/////////////// ticket ////////////////////\n// tickethasReferentiel\nexports.TICKET_PRIORITIES = {\n    occasionally: 0,\n    normal: 1,\n    urgent: 2,\n};\n//# sourceMappingURL=old_constants.js.map","/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SPINAL_RELATION_PTR_LST_TYPE } from 'spinal-env-viewer-graph-service';\nimport { SpinalStep } from 'spinal-models-ticket/declarations/SpinalStep';\n\nexport const SERVICE_NAME: string = 'Ticket Service';\nexport const SERVICE_TYPE: string = 'SpinalSystemServiceTicket';\n\n/////////////////////////////////////////\n/////////////// TICKET ///////////////////\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME: string = 'SpinalSystemServiceTicketHasTicket';\nexport const SPINAL_TICKET_SERVICE_TICKET_TYPE: string = 'SpinalSystemServiceTicketTypeTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION: string = 'SpinalSystemServiceHasTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_NAME: string = 'Tickets';\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_NAME: string = 'SpinalSystemServiceHasTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasTicket';\n// export const SECTION_RELATION_TYPE = SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_TYPE;\n\n/**\n * New values\n */\n// export const TICKET_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE; // STEP_TO_TICKET_RELATION_TYPE\n// export const TICKET_RELATION_NAME: string = SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME; // STEP_TO_TICKET_RELATION_NAME\n// export const TIKET_TYPE: string = SPINAL_TICKET_SERVICE_TICKET_TYPE;\n\n/////////////////////////////////////////\n/////////////// PROCESS /////////////////\nexport const SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME: string = 'SpinalSystemServiceTicketHasProcess';\nexport const PROCESS_TYPE: string = 'SpinalServiceTicketProcess';\n\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Process';\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasProcess';\n// export const SPINAL_TICKET_SERVICE_PROCESS_TYPE: string = 'SpinalSystemServiceTicketTypeProcess';\n// export const PROCESS_HAS_TICKET_RELATION_NAME: string = 'SpinalSystemService_ProcessHasTicket';\n// export const PROCESS_HAS_TICKET_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n\n/**\n * New values\n */\n// export const PROCESS_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE; // CONTEXT_TO_PROCESS_RELATION_TYPE\n// export const PROCESS_RELATION_NAME: string = SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME; //CONTEXT_TO_PROCESS_RELATION_NAME\n// export const PROCESS_TYPE: string = 'SpinalServiceTicketProcess';\n\n\n//////////////////////////////////////\n/////////////// STEP /////////////////\nexport const SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_STEP_TYPE: string = 'SpinalSystemServiceTicketTypeStep';\nexport const SPINAL_TICKET_SERVICE_STEP_RELATION_NAME: string = 'SpinalSystemServiceTicketHasStep';\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasStep';\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Step';\n\n\n/**\n * New values\n */\n// export const STEP_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE; // PROCESS_TO_STEP_RELATION_TYPE\n// export const STEP_RELATION_NAME: string = SPINAL_TICKET_SERVICE_STEP_RELATION_NAME; // PROCESS_TO_STEP_RELATION_NAME\n// export const STEP_TYPE: string = SPINAL_TICKET_SERVICE_STEP_TYPE;\n\n\nexport const ARCHIVED_STEP = {\n  name: \"Archived\",\n  order: -1,\n  color: \"#FF0000\"\n}\n\nexport const DEFAULT_STEPS: SpinalStep[] = [\n  { name: 'Déclaré', color: '#ff0019', order: 0 },\n  { name: 'Ouvert', color: '#fff112', order: 1 },\n  { name: 'Résolu', color: '#10ff1d', order: 2 },\n  ARCHIVED_STEP\n];\n\n\n\n/////////////////////////////////////////\n/////////////// CATEGORY ////////////////\nexport const SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_INCIDENT_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE: string = 'DEFAULT_INCIDENT_TYPE';\nexport const SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME: string = 'Spinal_Service_Ticket_Process_has_category';\nexport const SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME: string = 'Spinal_Service_Ticket_Process_has_categories_section';\nexport const SPINAL_TICKET_SERVICE_INCIDENT_TYPE: string = 'INCIDENT_TYPE';\nexport const DEFAULT_INCIDENTS_NAME: string = 'Incidents commun';\n// export const SPINAL_TICKET_SERVICE_INCIDENT_SUB_SECTION_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_INCIDENT_SUB_SECTION_RELATION_NAME: string = 'Spinal_Service_Ticket_Process_has_sub_category';\n\n\n// export const DEFAULT_INCIDENT_TYPE: string = SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE;\n// export const DEFAULT_INCIDENT_RELATION_NAME: string = SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME;\n// export const fdg: string = SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME;\n\n/////////////////////////////////////////\n/////////////// ARCHIVE /////////////////\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Ticket';\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceTicketHasArchive';\n// export const SERVICE_ARCHIVE_TYPE: string = 'SpinalSystemServiceTicketArchive';\n\n/////////////////////////////////////////\n/////////////// LOG /////////////////\nexport const SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_LOG_RELATION_NAME: string = 'SpinalSystemServiceTicketHasLog';\nexport const SERVICE_LOG_TYPE: string = 'SpinalSystemServiceTicketLog';\nexport enum LOGS_EVENTS {\n  creation = 1,\n  moveToNext = 2,\n  moveToPrevious = 3,\n  archived = 4,\n  unarchive = 5,\n  move = 6\n}\n\nexport const EVENTS_TO_LOG = Object.freeze({\n  1: \"creation\",\n  2: \"moveToNext\",\n  3: \"moveToPrevious\",\n  4: \"archived\",\n  5: \"unarchive\",\n  6: \"move\"\n})\n\nexport const LOG_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE;\nexport const LOG_RELATION_NAME: string = SPINAL_TICKET_SERVICE_LOG_RELATION_NAME;\nexport const LOG_TYPE: string = SERVICE_LOG_TYPE;\nexport const LOGS_EVENTS_STEPS = LOGS_EVENTS;\n\n\nexport const LOGS_EVENTS_STRING: string[] = [\n  \"none\",\n  \"creation\",\n  \"moveToNext\",\n  \"moveToPrevious\",\n  \"archived\",\n  \"unarchive\",\n  \"move\"\n]\n\n/////////////////////////////////////////\n/////////////// Target /////////////////\n// export const SPINAL_TICKET_SERVICE_TARGET_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_TARGET_RELATION_NAME: string = 'SpinalSystemServiceTicketHasLocation';\n\n/////////////////////////////////////////\n/////////////// USER ////////////////////\n// export const USER_RELATION_NAME: string = 'userHasDeclaredTicket';\n// export const USER_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n\n/////////////////////////////////////////\n/////////////// ticket ////////////////////\n// tickethasReferentiel\n\nexport const TICKET_PRIORITIES: { [key: string]: number } = {\n  occasionally: 0,\n  normal: 1,\n  urgent: 2,\n}","\"use strict\";\n/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REFERENCE_ROOM_RELATION = exports.ROOM_REFERENCE_CONTEXT = exports.ZONE_REFERENCE_CONTEXT = exports.FLOOR_REFERENCE_CONTEXT = exports.BUILDING_REFERENCE_CONTEXT = exports.SITE_REFERENCE_CONTEXT = exports.REFERENCE_RELATION = exports.REFERENCE_TYPE = exports.MAP_RELATION_TYPE = exports.MAP_TYPE_RELATION = exports.GEOGRAPHIC_RELATIONS_ORDER = exports.EQUIPMENT_RELATION = exports.GEOGRAPHIC_RELATIONS = exports.ROOM_RELATION = exports.ZONE_RELATION = exports.FLOOR_RELATION = exports.BUILDING_RELATION = exports.SITE_RELATION = exports.GEOGRAPHIC_TYPES_ORDER = exports.EQUIPMENT_TYPE = exports.GEOGRAPHIC_TYPES = exports.ROOM_TYPE = exports.ZONE_TYPE = exports.FLOOR_TYPE = exports.BUILDING_TYPE = exports.SITE_TYPE = exports.CONTEXT_TYPE = void 0;\nconst CONTEXT_TYPE = 'geographicContext';\nexports.CONTEXT_TYPE = CONTEXT_TYPE;\nconst SITE_TYPE = 'geographicSite';\nexports.SITE_TYPE = SITE_TYPE;\nconst BUILDING_TYPE = 'geographicBuilding';\nexports.BUILDING_TYPE = BUILDING_TYPE;\nconst FLOOR_TYPE = 'geographicFloor';\nexports.FLOOR_TYPE = FLOOR_TYPE;\nconst ZONE_TYPE = 'geographicZone';\nexports.ZONE_TYPE = ZONE_TYPE;\nconst ROOM_TYPE = 'geographicRoom';\nexports.ROOM_TYPE = ROOM_TYPE;\nconst EQUIPMENT_TYPE = 'BIMObject';\nexports.EQUIPMENT_TYPE = EQUIPMENT_TYPE;\nconst REFERENCE_TYPE = 'geographicReference';\nexports.REFERENCE_TYPE = REFERENCE_TYPE;\nconst SITE_RELATION = 'hasGeographicSite';\nexports.SITE_RELATION = SITE_RELATION;\nconst BUILDING_RELATION = 'hasGeographicBuilding';\nexports.BUILDING_RELATION = BUILDING_RELATION;\nconst FLOOR_RELATION = 'hasGeographicFloor';\nexports.FLOOR_RELATION = FLOOR_RELATION;\nconst ZONE_RELATION = 'hasGeographicZone';\nexports.ZONE_RELATION = ZONE_RELATION;\nconst ROOM_RELATION = 'hasGeographicRoom';\nexports.ROOM_RELATION = ROOM_RELATION;\nconst EQUIPMENT_RELATION = 'hasBimObject';\nexports.EQUIPMENT_RELATION = EQUIPMENT_RELATION;\nconst REFERENCE_RELATION = 'hasReferenceObject';\nexports.REFERENCE_RELATION = REFERENCE_RELATION;\nconst REFERENCE_ROOM_RELATION = 'hasReferenceObject.ROOM';\nexports.REFERENCE_ROOM_RELATION = REFERENCE_ROOM_RELATION;\nconst SITE_REFERENCE_CONTEXT = '.SiteContext';\nexports.SITE_REFERENCE_CONTEXT = SITE_REFERENCE_CONTEXT;\nconst BUILDING_REFERENCE_CONTEXT = '.BuildingContext';\nexports.BUILDING_REFERENCE_CONTEXT = BUILDING_REFERENCE_CONTEXT;\nconst FLOOR_REFERENCE_CONTEXT = '.FloorContext';\nexports.FLOOR_REFERENCE_CONTEXT = FLOOR_REFERENCE_CONTEXT;\nconst ZONE_REFERENCE_CONTEXT = '.ZoneContext';\nexports.ZONE_REFERENCE_CONTEXT = ZONE_REFERENCE_CONTEXT;\nconst ROOM_REFERENCE_CONTEXT = '.RoomContext';\nexports.ROOM_REFERENCE_CONTEXT = ROOM_REFERENCE_CONTEXT;\nconst GEOGRAPHIC_TYPES = Object.freeze([\n    SITE_TYPE,\n    BUILDING_TYPE,\n    FLOOR_TYPE,\n    ZONE_TYPE,\n    ROOM_TYPE,\n]);\nexports.GEOGRAPHIC_TYPES = GEOGRAPHIC_TYPES;\nconst GEOGRAPHIC_TYPES_ORDER = Object.freeze([\n    CONTEXT_TYPE,\n    SITE_TYPE,\n    BUILDING_TYPE,\n    FLOOR_TYPE,\n    ZONE_TYPE,\n    ROOM_TYPE,\n    EQUIPMENT_TYPE,\n]);\nexports.GEOGRAPHIC_TYPES_ORDER = GEOGRAPHIC_TYPES_ORDER;\nconst GEOGRAPHIC_RELATIONS = Object.freeze([\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n]);\nexports.GEOGRAPHIC_RELATIONS = GEOGRAPHIC_RELATIONS;\nconst GEOGRAPHIC_RELATIONS_ORDER = Object.freeze([\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n]);\nexports.GEOGRAPHIC_RELATIONS_ORDER = GEOGRAPHIC_RELATIONS_ORDER;\nconst MAP_TYPE_RELATION = Object.freeze(new Map([\n    [SITE_TYPE, SITE_RELATION],\n    [BUILDING_TYPE, BUILDING_RELATION],\n    [FLOOR_TYPE, FLOOR_RELATION],\n    [ZONE_TYPE, ZONE_RELATION],\n    [ROOM_TYPE, ROOM_RELATION],\n    [EQUIPMENT_TYPE, EQUIPMENT_RELATION],\n]));\nexports.MAP_TYPE_RELATION = MAP_TYPE_RELATION;\nconst MAP_RELATION_TYPE = Object.freeze(new Map([\n    [SITE_RELATION, SITE_TYPE],\n    [BUILDING_RELATION, BUILDING_TYPE],\n    [FLOOR_RELATION, FLOOR_TYPE],\n    [ZONE_RELATION, ZONE_TYPE],\n    [ROOM_RELATION, ROOM_TYPE],\n    [EQUIPMENT_RELATION, EQUIPMENT_TYPE],\n]));\nexports.MAP_RELATION_TYPE = MAP_RELATION_TYPE;\n//# sourceMappingURL=constants.js.map","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst CONTEXT_TYPE = 'geographicContext';\nconst SITE_TYPE = 'geographicSite';\nconst BUILDING_TYPE = 'geographicBuilding';\nconst FLOOR_TYPE = 'geographicFloor';\nconst ZONE_TYPE = 'geographicZone';\nconst ROOM_TYPE = 'geographicRoom';\nconst EQUIPMENT_TYPE = 'BIMObject';\nconst REFERENCE_TYPE = 'geographicReference';\n\nconst SITE_RELATION = 'hasGeographicSite';\nconst BUILDING_RELATION = 'hasGeographicBuilding';\nconst FLOOR_RELATION = 'hasGeographicFloor';\nconst ZONE_RELATION = 'hasGeographicZone';\nconst ROOM_RELATION = 'hasGeographicRoom';\nconst EQUIPMENT_RELATION = 'hasBimObject';\nconst REFERENCE_RELATION = 'hasReferenceObject';\nconst REFERENCE_ROOM_RELATION = 'hasReferenceObject.ROOM';\n\nconst SITE_REFERENCE_CONTEXT = '.SiteContext';\nconst BUILDING_REFERENCE_CONTEXT = '.BuildingContext';\nconst FLOOR_REFERENCE_CONTEXT = '.FloorContext';\nconst ZONE_REFERENCE_CONTEXT = '.ZoneContext';\nconst ROOM_REFERENCE_CONTEXT = '.RoomContext';\n\nconst GEOGRAPHIC_TYPES = Object.freeze([\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n]) as string[];\n\nconst GEOGRAPHIC_TYPES_ORDER = Object.freeze([\n  CONTEXT_TYPE,\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  EQUIPMENT_TYPE,\n]) as string[];\n\nconst GEOGRAPHIC_RELATIONS = Object.freeze([\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n]) as string[];\n\nconst GEOGRAPHIC_RELATIONS_ORDER = Object.freeze([\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n]) as string[];\n\nconst MAP_TYPE_RELATION = Object.freeze(\n  new Map([\n    [SITE_TYPE, SITE_RELATION],\n    [BUILDING_TYPE, BUILDING_RELATION],\n    [FLOOR_TYPE, FLOOR_RELATION],\n    [ZONE_TYPE, ZONE_RELATION],\n    [ROOM_TYPE, ROOM_RELATION],\n    [EQUIPMENT_TYPE, EQUIPMENT_RELATION],\n  ])\n) as Map<string, string>;\n\nconst MAP_RELATION_TYPE = Object.freeze(\n  new Map([\n    [SITE_RELATION, SITE_TYPE],\n    [BUILDING_RELATION, BUILDING_TYPE],\n    [FLOOR_RELATION, FLOOR_TYPE],\n    [ZONE_RELATION, ZONE_TYPE],\n    [ROOM_RELATION, ROOM_TYPE],\n    [EQUIPMENT_RELATION, EQUIPMENT_TYPE],\n  ])\n) as Map<string, string>;\n\nexport {\n  CONTEXT_TYPE,\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  GEOGRAPHIC_TYPES,\n  EQUIPMENT_TYPE,\n  GEOGRAPHIC_TYPES_ORDER,\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  GEOGRAPHIC_RELATIONS,\n  EQUIPMENT_RELATION,\n  GEOGRAPHIC_RELATIONS_ORDER,\n  MAP_TYPE_RELATION,\n  MAP_RELATION_TYPE,\n  REFERENCE_TYPE,\n  REFERENCE_RELATION,\n  SITE_REFERENCE_CONTEXT,\n  BUILDING_REFERENCE_CONTEXT,\n  FLOOR_REFERENCE_CONTEXT,\n  ZONE_REFERENCE_CONTEXT,\n  ROOM_REFERENCE_CONTEXT,\n  REFERENCE_ROOM_RELATION\n};\n"],"names":[],"version":3,"file":"spinal-env-viewer-plugin-organ_ticket_mission.d8efabbe.js.map"}