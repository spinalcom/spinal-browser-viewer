{"mappings":"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hD,aAAc;QACZ,KAAK,CAAC,yBACJ,qDAAqD;YACnD,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACJ;IAGA,QAAQ,MAAM,EAAE;QACd,MAAM,OAAO,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QAEzC,OAAO,QAAQ,OAAO,CAAC,SAAS,CAAA,GAAA,uBAAY,AAAD,IAAI,OAAO;IAExD;IAEA,OAAO,MAAM,EAAE;QACb,MAAM,YAAY,OAAO,OAAO,CAAC,EAAE,CAAC,GAAG;QAEvC,CAAA,GAAA,6DAAyB,AAAD,EAAE,SAAS,CAAC,uBAAuB;YACzD;QACF;IACF;AAEF;;;A;A,I,kB,A,I,I,I,C,e,I,C,O,M,G,S,C,E,C,E,C,E,E;I,I,O,W,K;I,I,O,O,wB,C,G;I,I,C,Q,C,S,O,C,E,U,G,K,Q,I,K,Y,A,G,O;Q,Y;Q,K;Y,O,C,C,E;Q;I;I,O,c,C,G,I;A,I,S,C,E,C,E,C,E,E;I,I,O,W,K;I,C,C,G,G,C,C,E;A,C;A,I,e,A,I,I,I,C,Y,I,S,C,E,Q;I,I,I,K,E,I,M,a,C,O,S,C,c,C,I,C,U,I,gB,U,G;A;A,O,c,C,S,c;I,O;A;A,Q,wB,G,Q,qC,G,Q,qC,G,Q,4B,G,Q,mC,G,Q,wB,G,Q,4B,G,Q,2B,G,Q,+B,G,Q,2B,G,Q,+B,G,Q,kB,G,Q,iB,G,Q,Q,G,Q,iB,G,Q,iB,G,Q,uB,G,Q,a,G,Q,sB,G,Q,sB,G,Q,8B,G,Q,qB,G,Q,8B,G,Q,c,G,Q,c,G,Q,a,G,Q,a,G,Q,S,G,Q,kB,G,Q,kB,G,Q,a,G,Q,qB,G,Q,qB,G,Q,mB,G,Q,+B,G,Q,U,G,Q,oB,G,Q,oB,G,Q,2B,G,Q,mB,G,Q,S,G,K;AExCA;;;;;;;;;;;;;;;;;;;;;;CAsBG,GACH,MAAA,gBAAA,QAAA;AACA,aAAA,QAAA,qBAAA;AACA,MAAA,uBAAA,QAAA;AACA,IAAA,iDAAA,QAAA;AAAS,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,+CAAA,sBAAsB;IAAA;AAAA;AAGlB,QAAA,mBAAmB,GAAW,cAAc,YAAY;AACxD,QAAA,2BAA2B,GAAkB;IAAC;IAAU;CAAQ;AAC7E,yCAAyC;AACzC,0CAA0C;AAC7B,QAAA,oBAAoB,GAC/B,cAAc,0CAA0C,EAAE,+BAA+B;AAC9E,QAAA,oBAAoB,GAC/B,cAAc,0CAA0C,EAAE,+BAA+B;AAC9E,QAAA,UAAU,GACrB,cAAc,iCAAiC;AACpC,QAAA,+BAA+B,GAAG;AAClC,QAAA,mBAAmB,GAAG;AACnC,yCAAyC;AACzC,yCAAyC;AAC5B,QAAA,qBAAqB,GAChC,cAAc,2CAA2C,EAAE,mCAAmC;AACnF,QAAA,qBAAqB,GAChC,cAAc,2CAA2C,EAAE,kCAAkC;AAClF,QAAA,aAAa,GAAW,cAAc,YAAY;AAC/D,sCAAsC;AACtC,sCAAsC;AACzB,QAAA,kBAAkB,GAC7B,cAAc,wCAAwC,EAAE,gCAAgC;AAC7E,QAAA,kBAAkB,GAC7B,cAAc,wCAAwC,EAAE,gCAAgC;AAC7E,QAAA,SAAS,GAAW,cAAc,+BAA+B;AAEjE,QAAA,aAAa,GAAG,cAAc,aAAa;AAC3C,QAAA,aAAa,GAAG,cAAc,aAAa;AAC3C,QAAA,cAAc,GAAG,cAAc,aAAa;AAC5C,QAAA,cAAc,GAAG,cAAc,aAAa;AAEzD,yCAAyC;AACzC,yCAAyC;AAC5B,QAAA,8BAA8B,GACzC,cAAc,oDAAoD;AACvD,QAAA,qBAAqB,GAChC,cAAc,2CAA2C;AAC9C,QAAA,8BAA8B,GACzC,cAAc,oDAAoD;AACvD,QAAA,sBAAsB,GACjC,cAAc,4CAA4C;AAC/C,QAAA,sBAAsB,GACjC,cAAc,4CAA4C;AAC/C,QAAA,aAAa,GACxB,cAAc,mCAAmC;AACtC,QAAA,uBAAuB,GAClC,cAAc,sBAAsB;AACzB,QAAA,iBAAiB,GAC5B,cAAc,uCAAuC;AAC1C,QAAA,iBAAiB,GAC5B,cAAc,uCAAuC;AAC1C,QAAA,QAAQ,GAAW,cAAc,gBAAgB;AACjD,QAAA,iBAAiB,GAAG,cAAc,WAAW;AAC7C,QAAA,kBAAkB,GAAG,cAAc,iBAAiB;AAEjE,yCAAyC;AACzC,wCAAwC;AAC3B,QAAA,+BAA+B,GAAG;AAClC,QAAA,2BAA2B,GAAG;AAC9B,QAAA,+BAA+B,GAAG;AAClC,QAAA,2BAA2B,GAAG;AAC9B,QAAA,4BAA4B,GAAG;AAC/B,QAAA,wBAAwB,GAAG;AAC3B,QAAA,mCAAmC,GAAG;AACtC,QAAA,4BAA4B,GAAG,qBAAA,4BAA4B;AAC3D,QAAA,qCAAqC,GAAG;AACxC,QAAA,qCAAqC,GAAG;AACxC,QAAA,wBAAwB,GAAG;IACtC,QAAA,+BAA+B;IAC/B,QAAA,4BAA4B;CAC7B;;;A;AEpGD;;;;;;;;;;;;;;;;;;;;;;CAsBG,G,O,c,C,S,c;I,O;A;A,Q,iB,G,Q,kB,G,Q,iB,G,Q,Q,G,Q,iB,G,Q,iB,G,Q,a,G,Q,W,G,Q,gB,G,Q,uC,G,Q,uC,G,Q,sB,G,Q,mC,G,Q,oD,G,Q,4C,G,Q,2C,G,Q,4C,G,Q,oD,G,Q,a,G,Q,a,G,Q,wC,G,Q,+B,G,Q,wC,G,Q,Y,G,Q,2C,G,Q,2C,G,Q,iC,G,Q,0C,G,Q,0C,G,Q,Y,G,Q,Y,G,K;AAEH,MAAA,oCAAA,QAAA;AAGa,QAAA,YAAY,GAAW;AACvB,QAAA,YAAY,GAAW;AAEpC,yCAAyC;AACzC,0CAA0C;AAC1C,0GAA0G;AAC7F,QAAA,0CAA0C,GAAW,kCAAA,4BAA4B;AACjF,QAAA,0CAA0C,GAAW;AACrD,QAAA,iCAAiC,GAAW;AACzD,0GAA0G;AAC1G,8FAA8F;AAC9F,8EAA8E;AAC9E,4GAA4G;AAC5G,mHAAmH;AACnH,2FAA2F;AAE3F;;CAEG,GACH,0HAA0H;AAC1H,0HAA0H;AAC1H,uEAAuE;AAEvE,yCAAyC;AACzC,yCAAyC;AAC5B,QAAA,2CAA2C,GAAW,kCAAA,4BAA4B;AAClF,QAAA,2CAA2C,GAAW;AACtD,QAAA,YAAY,GAAW;AAEpC,2GAA2G;AAC3G,qHAAqH;AACrH,qHAAqH;AACrH,oGAAoG;AACpG,kGAAkG;AAClG,wFAAwF;AAExF;;CAEG,GACH,gIAAgI;AAChI,+HAA+H;AAC/H,oEAAoE;AAGpE,sCAAsC;AACtC,sCAAsC;AACzB,QAAA,wCAAwC,GAAW,kCAAA,4BAA4B;AAC/E,QAAA,+BAA+B,GAAW;AAC1C,QAAA,wCAAwC,GAAW;AAChE,wGAAwG;AACxG,mGAAmG;AACnG,+GAA+G;AAC/G,+GAA+G;AAG/G;;CAEG,GACH,uHAAuH;AACvH,uHAAuH;AACvH,oEAAoE;AAGvD,QAAA,aAAa,GAAG;IAC3B,MAAM;IACN,OAAO;IACP,OAAO;AACR;AAEY,QAAA,aAAa,GAAiB;IACzC;QAAE,MAAM;QAAW,OAAO;QAAW,OAAO;IAAC;IAC7C;QAAE,MAAM;QAAU,OAAO;QAAW,OAAO;IAAC;IAC5C;QAAE,MAAM;QAAU,OAAO;QAAW,OAAO;IAAC;IAC5C,QAAA,aAAa;CACd;AAID,yCAAyC;AACzC,yCAAyC;AAC5B,QAAA,oDAAoD,GAAW,kCAAA,4BAA4B;AAC3F,QAAA,4CAA4C,GAAW,kCAAA,4BAA4B;AACnF,QAAA,2CAA2C,GAAW;AACtD,QAAA,4CAA4C,GAAW;AACvD,QAAA,oDAAoD,GAAW;AAC/D,QAAA,mCAAmC,GAAW;AAC9C,QAAA,sBAAsB,GAAW;AAC9C,gHAAgH;AAChH,oIAAoI;AAGpI,4FAA4F;AAC5F,sGAAsG;AACtG,mFAAmF;AAEnF,yCAAyC;AACzC,yCAAyC;AACzC,6FAA6F;AAC7F,mHAAmH;AACnH,4GAA4G;AAC5G,kFAAkF;AAElF,yCAAyC;AACzC,qCAAqC;AACxB,QAAA,uCAAuC,GAAW,kCAAA,4BAA4B;AAC9E,QAAA,uCAAuC,GAAW;AAClD,QAAA,gBAAgB,GAAW;AACxC,IAAY;AAAZ,CAAA,SAAY,WAAW;IACrB,WAAA,CAAA,WAAA,CAAA,WAAA,GAAA,EAAA,GAAA;IACA,WAAA,CAAA,WAAA,CAAA,aAAA,GAAA,EAAA,GAAA;IACA,WAAA,CAAA,WAAA,CAAA,iBAAA,GAAA,EAAA,GAAA;IACA,WAAA,CAAA,WAAA,CAAA,WAAA,GAAA,EAAA,GAAA;IACA,WAAA,CAAA,WAAA,CAAA,YAAA,GAAA,EAAA,GAAA;IACA,WAAA,CAAA,WAAA,CAAA,OAAA,GAAA,EAAA,GAAA;AACF,CAAA,EAPY,cAAA,QAAA,WAAW,IAAX,CAAA,QAAA,WAAW,GAAA,CAAA,CAAA;AASV,QAAA,aAAa,GAAG,OAAO,MAAM,CAAC;IACzC,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;AACJ;AAEY,QAAA,iBAAiB,GAAW,QAAA,uCAAuC;AACnE,QAAA,iBAAiB,GAAW,QAAA,uCAAuC;AACnE,QAAA,QAAQ,GAAW,QAAA,gBAAgB;AACnC,QAAA,iBAAiB,GAAG;AAGpB,QAAA,kBAAkB,GAAa;IAC1C;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,yCAAyC;AACzC,wCAAwC;AACxC,kGAAkG;AAClG,4GAA4G;AAE5G,yCAAyC;AACzC,yCAAyC;AACzC,qEAAqE;AACrE,0EAA0E;AAE1E,yCAAyC;AACzC,2CAA2C;AAC3C,uBAAuB;AAEV,QAAA,iBAAiB,GAA8B;IAC1D,cAAc;IACd,QAAQ;IACR,QAAQ;AACT;;;;;AC7KD,gDAAa;AAbb;AAIA;AAIA;AAKO,MAAM,mBAAmB,CAAA,GAAA,mDAAgB,AAAD;IAC7C,aAAc;QACZ,KAAK,CAAC,sBAAsB,4CAA4C;YACtE,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,MAAM,cAAc,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG;QAC3C,MAAM,cAAc,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QAEhD,MAAM,MAAM,gBAAgB,CAAA,GAAA,uBAAY,AAAD,KAAK,gBAAgB,CAAA,GAAA,uBAAY,AAAD,IACrE,OAAO;QAET,OAAO,QAAQ,OAAO,CAAC;IAEzB;IAEA,OAAO,MAAM,EAAE;QACb,MAAM,YAAY,OAAO,OAAO,CAAC,EAAE,CAAC,GAAG;QACvC,MAAM,YAAY,OAAO,YAAY,CAAC,EAAE,CAAC,GAAG;QAE5C,CAAA,GAAA,6DAAyB,AAAD,EAAE,SAAS,CAAC,oBAAoB;YACtD;YACA;QACF;IACF;AAEF;;;;;ACxBA,kDAAa;AApBb;AAIA;AAIA;AAKA;AAOO,MAAM,qBAAqB,CAAA,GAAA,mDAAgB,AAAD;IAC/C,aAAc;QACZ,KAAK,CAAC,iBAAiB,uCAAuC;YAC5D,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QAEd,IAAI,CAAC,OAAO,YAAY,IAAI,CAAC,OAAO,OAAO,EAAE,OAAO,QAAQ,OAAO,CAAC;QAEpE,MAAM,cAAc,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG;QAC3C,MAAM,WAAW,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QAE7C,MAAM,MAAM,gBAAgB,CAAA,GAAA,uBAAY,AAAD,KAAK,aAC1C,CAAA,GAAA,0CAA+B,AAAD,IAC9B,OAAO;QAET,OAAO,QAAQ,OAAO,CAAC;IAEzB;IAEA,MAAM,OAAO,MAAM,EAAE;QACnB,IAAI,OAAO,OAAO,YAAY;QAE9B,IAAI,OAAO,SAAS,aAClB,OAAO,MAAM,oBAAoB;QAEnC,MAAM,WAAW,gBAAgB;QAEjC,oBAAoB;QAEpB,CAAA,GAAA,6DAAyB,AAAD,EAAE,SAAS,CAAC,qBAAqB;YACvD,cAAc;QAChB;IACF;AAEF;AAGA,MAAM,kBAAkB,CAAC;IACvB,IAAI,OAAO,iBAAiB,aAAa;IAEzC,IAAI,wBAAwB,CAAA,GAAA,uCAAU,AAAD,GACnC,OAAO;IAET,OAAO,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC,aAAa,EAAE,CAAC,GAAG;AAC3D;AAGA,MAAM,sBAAsB,CAAC;IAE3B,MAAM,SAAS,OAAO,WAAW,CAAC,MAAM;IAExC,gEAAgE;IAGhE,IAAI,OAAO,OAAO,IAAI,KAAK,eAAe,OAAO,OAAO,EAAE;QACxD,MAAM,OAAO,OAAO,IAAI;QACxB,MAAM,QAAQ,OAAO,OAAO;QAG5B,OAAO,IAAI,QAAQ,CAAC;YAClB,OAAO,KAAK,CAAC,aAAa,CAAC,MAAM,OAAM;gBACrC,MAAM,OAAO,MAAM,OAAO,MAAM,CAAC,gBAAgB,CAC9C,eAAe,CAAC,MAAM,IAAI,IAAI,EAAE;gBACnC,QAAQ;YACV;QAEF;IACF;AACF;;;;;AChFA,wDAAa;AAdb;AAIA;AAIA;AAMO,MAAM,2BAA2B,CAAA,GAAA,mDAAgB,AAAD;IAErD,aAAc;QACZ,KAAK,CAAC,iBACJ,iBAAiB;YACf,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACJ;IAGA,QAAQ,MAAM,EAAE;QACd,MAAM,cAAc,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG;QAC3C,MAAM,WAAW,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QAE7C,IAAI,gBAAgB,CAAA,GAAA,uBAAY,AAAD,GAAG,OAAO,QAAQ,OAAO,CAAC;QAEzD,sEAAsE;QACtE,kDAAkD;QAElD,MAAM,YAAY,aAAa,CAAA,GAAA,4CAAiC,AAAD;QAE/D,OAAO,QAAQ,OAAO,CAAC,YAAY,OAAO;IAE5C;IAEA,OAAO,MAAM,EAAE;QACb,MAAM,SAAS;YACb,cAAc,OAAO,YAAY,CAAC,GAAG;YACrC,SAAS,OAAO,OAAO,CAAC,GAAG;QAC7B;QACA,CAAA,GAAA,6DAAyB,AAAD,EAAE,SAAS,CAAC,sBAAsB;IAC5D;AAEF;;;AClDA;;;;;;;;;;;;;;;;;;;;;;CAsBC;;AAcD,0DAAa;AAZb;AAGA;AAGA;AAMO,MAAM,6BAA6B,CAAA,GAAA,mDAAgB,AAAD;IAEvD,aAAc;QACZ,KAAK,CAAC,uBAAuB,uBAAuB;YAClD,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,IACG,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG,OAAO,CAAA,GAAA,uBAAY,AAAD,KAC7C,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG,OAC5B,CAAA,GAAA,sDAA2C,AAAD,GAE5C,OAAO,QAAQ,OAAO,CAAC;aAEvB,OAAO,QAAQ,OAAO,CAAC;IAE3B;IAEA,OAAO,MAAM,EAAE;QACb,MAAM,WAAW,OAAO,YAAY,CAAC,GAAG;QACxC,CAAA,GAAA,6DAAyB,AAAD,EAAE,SAAS,CAAC,8BAClC;IACJ;AACF;;;;;ACnDA,2DAAa;AAbb;AAIA;AAIA;AAKO,MAAM,8BAA8B,CAAA,GAAA,mDAAgB,AAAD;IAExD,aAAc;QACZ,KAAK,CAAC,sBACJ,uBAAwB;YACtB,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACJ;IAGA,QAAQ,MAAM,EAAE;QACd,MAAM,cAAc,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG;QAC3C,MAAM,WAAW,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QAE7C,IAAI,gBAAgB,CAAA,GAAA,uBAAY,AAAD,KAAK,aAClC,CAAA,GAAA,4CAAiC,AAAD,GAAG,OAAO,QAAQ,OAAO,CAAC;QAC5D,OAAO,QAAQ,OAAO,CAAC;IACzB;IAEA,OAAO,MAAM,EAAE;QACb,MAAM,SAAS;YACb,cAAc,OAAO,YAAY,CAAC,GAAG;YACrC,SAAS,OAAO,OAAO,CAAC,GAAG;QAC7B;QACA,CAAA,GAAA,6DAAyB,AAAD,EAAE,SAAS,CAAC,sBAAsB;IAC5D;AAEF;;;;;ACXA,0DAAa;AAhCb;AAIA;AAIA;AAOA;AAIA;AAIA;AAIA;;AACA;AAIO,MAAM,6BAA6B,CAAA,GAAA,mDAAgB,AAAD;IACvD,aAAc;QACZ,KAAK,CAAC,qBAAqB,gCAAgC;YACzD,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,MAAM,cAAc,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG;QAC3C,MAAM,WAAW,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QAE7C,IACE,gBAAgB,CAAA,GAAA,uBAAY,AAAD,KAC3B,aAAa,CAAA,GAAA,4CAAiC,AAAD,GAE7C,OAAO,QAAQ,OAAO,CAAC;QACzB,OAAO,QAAQ,OAAO,CAAC;IACzB;IAEA,MAAM,OAAO,MAAM,EAAE;QACnB,MAAM,OAAO,MAAM,CAAA,GAAA,kBAAQ,AAAD,EAAE,gBAAgB;QAE5C,MAAM,YAAY,OAAO,OAAO,CAAC,EAAE,CAAC,GAAG;QACvC,MAAM,WAAW,OAAO,YAAY,CAAC,EAAE,CAAC,GAAG;QAC3C,MAAM,YAAY,MAAM,aAAa;QAErC,8CAA8C;QAE9C,IAAI,aAAa,YAAY,WAC3B,CAAA,GAAA,6DAAyB,AAAD,EAAE,SAAS,CAAC,sBAAsB;YACxD,SAAS;YACT,UAAU;gBACR,CAAA,GAAA,8CAAyB,AAAD,EAAE,oBAAoB,CAC5C,WACA,WACA,UACA,MACA,IAAI,CAAC,CAAC;oBACN,MAAM,OAAO,CAAA,GAAA,+CAAkB,AAAD,EAAE,OAAO,CAAC,UAAU,GAAG;oBACrD,CAAA,GAAA,qBAAQ,AAAD,EAAE,KAAK,CAAC,CAAA,GAAA,4BAAa,AAAD,EAAE,UAAU,EAAE;wBACvC,QAAQ;wBACR,MAAM;oBACR;gBACF;YACF;QACF;IAEJ;AACF;AAEA,MAAM,eAAe,OAAO;IAC1B,MAAM,UAAU,MAAM,CAAA,GAAA,+CAAkB,AAAD,EAAE,UAAU,CAAC,UAAU;QAC5D,CAAA,GAAA,qDAA0C,AAAD;KAC1C;IAED,MAAM,QAAQ,QAAQ,IAAI,CACxB,CAAC,KAAO,GAAG,IAAI,CAAC,GAAG,OAAO,CAAA,GAAA,0CAA+B,AAAD;IAG1D,IAAI,OAAO,OAAO,MAAM,SAAS,CAAC,GAAG;AACvC;;;AC/FA;;;;;;;;;;;;;;;;;;;;;;CAsBC;;8CAuNY;AApNb;AAMA;AAKA,IAAI,IAAI,QAAQ;AAEhB,MAAM,oBAAoB,OAAO,iBAAiB;AAElD,SAAS,mBAAmB,IAAI,EAAE,GAAG;IACnC,IAAI,CAAC,KAAK,MAAM,OAAO,QAAQ,CAAC,IAAI;IACpC,OAAO,KAAK,OAAO,CAAC,UAAU;IAC9B,IAAI,QAAQ,IAAI,OAAO,SAAS,OAAO,sBACrC,UAAU,MAAM,IAAI,CAAC;IACvB,IAAI,CAAC,SAAS,OAAO;IACrB,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO;IACxB,OAAO,mBAAmB,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;AACtD;AAEA,MAAM;IACJ,aAAc;QACZ,IAAI,CAAC,WAAW,GAAG,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;IACd;IAEA,UAAU,YAAY,EAAE;QACtB,IAAI;YACF,MAAM,IAAI;gBAAC;gBAAI;gBAAI;gBAAK;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;gBAAG;gBACjE;aACD;YACD,MAAM,MAAM,CAAA,GAAA,eAAQ,AAAD,EAAE,GAAG;YACxB,OAAO,KAAK,KAAK,CAAC;QACpB,EAAE,OAAO,GAAG;YACV,MAAM,MAAM,CAAA,GAAA,eAAQ,AAAD,EAAE;YACrB,IAAI;gBACF,OAAO,KAAK,KAAK,CAAC;YACpB,EAAE,OAAO,GAAG;gBACV,OAAO;YACT;QACF;IACF;IAGA,UAAU;QACR,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,OAAO,IAAI,CAAC,IAAI;QACxC,MAAM,eAAe,OAAO,YAAY,CAAC,OAAO,CAAC;QACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI;IAClB;IAEA,UAAU;QACR,sCAAsC;QACtC,gCAAgC;QAChC,IAAI;QAEJ,2DAA2D;QAC3D,8BAA8B;QAE9B,4CAA4C;QAE5C,mCAAmC;QACnC,gCAAgC;QAChC,uCAAuC;QACvC,gEAAgE;QAChE,qBAAqB;QACrB,wBAAwB;QACxB,oDAAoD;QACpD,wBAAwB;QACxB,wEAAwE;QACxE,2DAA2D;QAC3D,gCAAgC;QAChC,aAAa;QACb,kBAAkB;QAClB,8CAA8C;QAC9C,uDAAuD;QACvD,cAAc;QACd,eAAe;QACf,0CAA0C;QAC1C,mDAAmD;QACnD,QAAQ;QACR,QAAQ;QAER,KAAK;QACL,8BAA8B;QAE9B,IAAI,CAAC,IAAI,GAAG,CAAA,GAAA,qCAAU,AAAD,EAAE,QAAQ;QAC/B,OAAO,QAAQ,OAAO,CAAC,IAAI,CAAC,IAAI;IAElC;IACA,eAAe;QACb,MAAM,cAAc,mBAAmB;QACvC,IAAI,CAAC,aAAa,MAAM,IAAI,MAAM;QAClC,MAAM,IAAI;YAAC;YAAI;YAAI;YAAK;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAG;YACjE;SACD;QACD,IAAI;YACF,MAAM,YAAY,CAAA,GAAA,eAAQ,AAAD,EAAE,GAAG;YAC9B,IAAI,SAAS,CAAC,EAAE,KAAK,KAAK,MAAM;YAChC,OAAO;QACT,EAAE,OAAO,GAAG;YACV,MAAM,YAAY,CAAA,GAAA,eAAQ,AAAD,EAAE;YAC3B,OAAO;QACT;IACF;IAEA,eAAe;QACb,IAAI;YACF,MAAM,OAAO,IAAI,CAAC,YAAY;YAC9B,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,EAAE,OAAO,GAAG;YACV,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB;IACF;IAEA,KAAK,IAAI,EAAE;QACT,IAAI,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,aACpC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK;QAE/B,MAAM,cAAc,OAAO,SAAS;YAClC,IAAI;gBACF,MAAM,IAAI,CAAC,OAAO;gBAClB,CAAA,GAAA,qCAAU,AAAD,EAAE,IAAI,CACb,IAAI,CAAC,IAAI,EAAE,MACX,CAAC;oBACC,QAAQ;gBACV,GACA;oBACE,MAAM,IAAI,MAAM,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;gBAC9C;YAEJ,EAAE,OAAO,GAAG;gBACV,OAAO;YACT;QACF;QACA,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,QAAQ;QACrC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK;IAC/B;IAEA,QAAQ,GAAG,EAAE;QACX,IAAI,eAAe,CAAA,GAAA,+BAAI,AAAD,GAAG,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI;QACrD,MAAM,YAAY,IAAI,IAAI,CAAC,KAAK;QAEhC,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,aACrC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU;QAEhC,MAAM,WAAW,OAAO,SAAS;YAC/B,IAAI;gBACF,MAAM,IAAI,CAAC,OAAO;gBAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAChB,WACA,CAAC;oBACC,QAAQ;gBACV,GACA;oBACE,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,UAAU,CAAC,CAAC;gBAC3D;YAEJ,EAAE,OAAO,GAAG;gBACV,OAAO;YACT;QACF;QACA,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,QAAQ;QACtC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU;IAChC;IAEA,MAAM,eAAe,IAAI,EAAE,iBAAiB,KAAK,EAAE;QACjD,MAAM,UAAU,MAAM,IAAI,CAAC,IAAI,CAAC;QAChC,IAAK,IAAI,QAAQ,GAAG,QAAQ,QAAQ,MAAM,EAAE,QAAS;YACnD,MAAM,WAAW,OAAO,CAAC,MAAM;YAE/B,IAAI,SAAS,IAAI,CAAC,GAAG,OAAO,MAAM;gBAChC,IAAI,mBAAmB,MACrB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,CAChC,OAAO;oBACH,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM;oBAChC,OAAO;gBACT,GACA;oBACE,MAAM,IAAI,MAAM;gBAClB;qBAEJ,OAAO,IAAI,CAAC,OAAO,CAAC;YAExB;QACF;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,aAAa;QACX,IAAI,OAAO;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAA;YAC1B,OAAO,MAAM,GAAG;QAClB;IACF;IAEA,MAAM,mBAAmB;QACvB,MAAM,OAAO,IAAI,CAAC,OAAO;QACzB,MAAM,WAAW,MAAM,IAAI,CAAC,UAAU;QAEtC,OAAO,SAAS,IAAI,CAAC,CAAA,KAAM,GAAG,IAAI,KAAK,KAAK,QAAQ;IACtD;AAEF;AAEO,MAAM,WAAW,IAAI;;;;;AC3O5B,8CAAgB;AAMhB,8CAAgB;AARhB,IAAI,QAAQ,QAAQ;AAEb,SAAS,SAAS,CAAC,EAAE,YAAY;IACtC,MAAM,iBAAiB,MAAM,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;IAC/C,MAAM,SAAS,IAAI,MAAM,eAAe,CAAC,GAAG,CAAC,GAAG,IAAI,MAAM,OAAO,CAAC;IAClE,MAAM,iBAAiB,OAAO,OAAO,CAAC;IACtC,OAAO,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;AACpC;AACO,SAAS,SAAS,YAAY;IACnC,OAAO,KAAK;AACd;;;;;ACVA;;AAGA,MAAM,WAAW,IAAI,CAAA,GAAA,mBAAG,AAAD;kBAER;;;;;mDCLF;AAAN,MAAM,gBAAgB,OAAO,MAAM,CAAC;IACzC,SAAS;IACT,YAAY;AACd;;;;;AC6BA,8DAAa;AAhCb;AAIA;AAIA;AAOA;AAIA;AAIA;AAIA;;AACA;AAIO,MAAM,iCAAiC,CAAA,GAAA,mDAAgB,AAAD;IAE3D,aAAc;QACZ,KAAK,CAAC,yBACJ,wCAAwC;YACxC,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAGA,QAAQ,MAAM,EAAE;QACd,MAAM,cAAc,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG;QAC3C,MAAM,WAAW,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QAE7C,IAAI,gBAAgB,CAAA,GAAA,uBAAY,AAAD,KAAK,aAClC,CAAA,GAAA,4CAAiC,AAAD,GAAG,OAAO,QAAQ,OAAO,CAAC;QAC5D,OAAO,QAAQ,OAAO,CAAC;IACzB;IAEA,MAAM,OAAO,MAAM,EAAE;QACnB,MAAM,OAAO,MAAM,CAAA,GAAA,kBAAQ,AAAD,EAAE,gBAAgB;QAE5C,MAAM,YAAY,OAAO,OAAO,CAAC,EAAE,CAAC,GAAG;QACvC,MAAM,WAAW,OAAO,YAAY,CAAC,EAAE,CAAC,GAAG;QAC3C,MAAM,YAAY,MAAM,aAAa;QAErC,8CAA8C;QAE9C,IAAI,aAAa,YAAY,WAC3B,CAAA,GAAA,6DAAyB,AAAD,EAAE,SAAS,CAAC,sBAAsB;YACxD,SAAS;YACT,UAAU;gBACR,CAAA,GAAA,8CAAyB,AAAD,EACrB,wBAAwB,CAAC,WAAW,WAAW,UAC9C,MAAM,IAAI,CAAC,CAAC;oBACV,MAAM,OAAO,CAAA,GAAA,+CAAkB,AAAD,EAAE,OAAO,CAAC,UAAU,GAAG;oBACrD,CAAA,GAAA,qBAAQ,AAAD,EAAE,KAAK,CAAC,CAAA,GAAA,4BAAa,AAAD,EAAE,UAAU,EAAE;wBACvC,QAAQ;wBACR,MAAM;oBACR;gBACF;YACN;QACF;IAGJ;AAEF;AAEA,MAAM,eAAe,OAAO;IAC1B,MAAM,UAAU,MAAM,CAAA,GAAA,+CAAkB,AAAD,EAAE,UAAU,CAAC,UAAU;QAC5D,CAAA,GAAA,qDAA0C,AAAD;KAC1C;IAED,MAAM,QAAQ,QAAQ,IAAI,CAAC,CAAA,KAAM,GAAG,IAAI,CAAC,GAAG,OAC1C,CAAA,GAAA,0CAA+B,AAAD;IAEhC,IAAI,OAAO,OAAO,MAAM,SAAS,CAAC,GAAG;AAEvC;;;;;AChEA,6DAAa;AA9Bb;AAKA;AAMA;AAKA;AAIA;AAIA;AAIA;;AAEO,MAAM,gCAAgC,CAAA,GAAA,mDAAgB,AAAD;IAC1D,aAAc;QACZ,KAAK,CAAC,6BAA6B,6BAA6B;YAC9D,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,MAAM,cAAc,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG;QAC3C,MAAM,WAAW,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QAE7C,IACE,gBAAgB,CAAA,GAAA,uBAAY,AAAD,GAI3B,OAAO,QAAQ,OAAO,CAAC;QACzB,OAAO,QAAQ,OAAO,CAAC;IACzB;IAEA,MAAM,OAAO,MAAM,EAAE;QACnB,MAAM,SAAS,OAAO,YAAY,CAAC,EAAE,CAAC,GAAG;QACzC,MAAM,YAAY,OAAO,OAAO,CAAC,EAAE,CAAC,GAAG;QAEvC,MAAM,UAAU,MAAM,CAAA,GAAA,qCAAqB,AAAD,EAAE,mBAAmB,CAAC,QAC9D;QAGF,IAAI,CAAC,WAAY,WAAW,QAAQ,MAAM,KAAK,GAAI;YACjD,OAAO,KAAK,CAAC;YACb;QACF;QAEA,QAAQ,OAAO,CAAC,CAAC;YACf,GAAG,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,GAAG,EAAE,GAAG,KAAK,EAAE;QACnD;IAIA,2DAA2D;IAC3D,wDAAwD;IAExD,iCAAiC;IACjC,qBAAqB;IACrB,6BAA6B;IAC7B,OAAO;IACP,iCAAiC;IACjC,kCAAkC;IAClC,MAAM;IACR;AACF;;;ACnFA;;;;;;;;;;;;;;;;;;;;;;CAsBC;;AAsDD,kEACE;AArDF;AAMA;AAJA,MAAM,EACJ,gBAAgB,EACjB,GAAG,QAAQ;AAQZ,MAAM,qCAAqC;IACzC,aAAc;QACZ,KAAK,CAAC,2BAA2B,2BAA2B;YAC1D,MAAM;YACN,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,MAAM,OAAO,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QACzC,IAAI,CAAA,GAAA,uBAAY,AAAD,EAAE,OAAO,CAAC,QAAQ,IAAM,OAAQ,QAAQ,OAAO,CAAC;QAC/D,OAAQ,QAAQ,OAAO,CAAC;IAC1B;IAEA,OAAO,MAAM,EAAE;QACb,IAAI,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC,OAAO,YAAY,CAAC,EAAE,CACjE,GAAG;QACN,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM;QAC9C,IAAI,OAAO,IAAI;QACf,SAAS,IAAI,CAAC,CAAA,GAAA,6BAAkB,AAAD,GAC7B,SAAU,IAAI;YACZ,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,aAC3B,OAAO;QAEX,GAAG,IAAI,CAAC,CAAA;YACR,KAAK,MAAM,CAAC,cAAc;YAC1B,CAAA,GAAA,oBAAS,AAAD,EAAE,oBAAoB,CAAC,KAAK,IAAI,CAAC,CAAA;gBACvC,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;oBAC1C,MAAM,UAAU,UAAU,CAAC,EAAE;oBAC7B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,IAAK;wBACxD,MAAM,QAAQ,QAAQ,KAAK,CAAC,UAAU,CAAC,EAAE;wBACzC,0DAA0D;wBAC1D,MAAM,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,IAAI,EAAE,MAAM,KAAK,EAAE;oBAC/D;gBACF;YACF;QACF;IACF;AACF;;;AC1EA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAED;AACA,WAAW;AACX,gCAAgC;AAChC,kCAAkC;AAClC,6BAA6B;AAC7B,qCAAqC;AACrC,uCAAuC;AACvC,kCAAkC;AAClC,4BAA4B;AAC5B,oBAAoB;AACpB,uBAAuB;AACvB,iCAAiC;AACjC,4BAA4B;AAC5B,wBAAwB;AAExB,iBAAiB;AAEjB,4DAA4D;AAE5D;AAEA;AAgBA;AAEA;AAGA,MAAM,qBAAqB;IACzB,CAAA,GAAA,wBAAa,AAAD;IACZ,CAAA,GAAA,4BAAiB,AAAD;IAChB,CAAA,GAAA,yBAAc,AAAD;IACb,CAAA,GAAA,wBAAa,AAAD;IACZ,CAAA,GAAA,wBAAa,AAAD;IACZ,CAAA,GAAA,6BAAkB,AAAD;IACjB,CAAA,GAAA,6BAAkB,AAAD;IACjB,CAAC,EAAE,CAAA,GAAA,6BAAkB,AAAD,EAAE,KAAK,CAAC;IAC5B;IACA,uDAAuD;IACvD,qDAAqD;IACrD,kDAAkD;IAClD,uDAAuD;IACvD,qDAAqD;IACrD,CAAA,GAAA,6DAAmB,AAAD,EAAE,SAAS,CAAC,4BAA4B;IAC1D,CAAA,GAAA,6DAAmB,AAAD,EAAE,SAAS,CAAC,0BAA0B;OACrD,OAAO,MAAM,CAAC,CAAA,GAAA,6DAAmB,AAAD,EAAE,SAAS,CAAC,mBAAmB;IAClE,CAAC,QAAQ,EAAE,CAAA,GAAA,oBAAS,AAAD,EAAE,CAAC;IACtB,CAAC,QAAQ,EAAE,CAAA,GAAA,yBAAc,AAAD,EAAE,CAAC;IAC3B,CAAC,QAAQ,EAAE,CAAA,GAAA,oBAAS,AAAD,EAAE,CAAC;IACtB,CAAC,QAAQ,EAAE,CAAA,GAAA,wBAAa,AAAD,EAAE,CAAC;IAC1B,CAAC,QAAQ,EAAE,CAAA,GAAA,qBAAU,AAAD,EAAE,CAAC;IACvB,CAAC,QAAQ,EAAE,CAAA,GAAA,oBAAS,AAAD,EAAE,CAAC;IACtB,CAAC,QAAQ,EAAE,CAAA,GAAA,wCAAiB,AAAD,EAAE,YAAY,CAAC,CAAC;CAG5C;AAED,MAAM,eAAe;IACnB,CAAA,GAAA,oBAAS,AAAD;IACR,CAAA,GAAA,wBAAa,AAAD;IACZ,CAAA,GAAA,qBAAU,AAAD;IACT,CAAA,GAAA,oBAAS,AAAD;IACR,CAAA,GAAA,oBAAS,AAAD;IACR,CAAA,GAAA,yBAAc,AAAD;IACb,4CAA4C;IAC5C,0CAA0C;IAC1C,uCAAuC;OACpC,OAAO,MAAM,CAAC,CAAA,GAAA,6DAAmB,AAAD,EAAE,SAAS,CAAC,kBAAkB;OAC9D,OAAO,MAAM,CAAC,CAAA,GAAA,6DAAmB,AAAD,EAAE,SAAS,CAAC,gBAAgB;IAC/D,CAAA,GAAA,6DAAmB,AAAD,EAAE,SAAS,CAAC,aAAa;IAC3C,CAAC,EAAE,CAAA,GAAA,oBAAS,AAAD,EAAE,KAAK,CAAC;IACnB,CAAC,EAAE,CAAA,GAAA,yBAAc,AAAD,EAAE,KAAK,CAAC;IACxB,CAAC,EAAE,CAAA,GAAA,oBAAS,AAAD,EAAE,KAAK,CAAC;IACnB,CAAC,EAAE,CAAA,GAAA,wBAAa,AAAD,EAAE,KAAK,CAAC;IACvB,CAAC,EAAE,CAAA,GAAA,qBAAU,AAAD,EAAE,KAAK,CAAC;IACpB,CAAC,EAAE,CAAA,GAAA,oBAAS,AAAD,EAAE,KAAK,CAAC;IACnB,CAAC,EAAE,CAAA,GAAA,oBAAS,AAAD,EAAE,YAAY,CAAC;IAC1B,CAAC,EAAE,CAAA,GAAA,yBAAc,AAAD,EAAE,YAAY,CAAC;IAC/B,CAAC,EAAE,CAAA,GAAA,oBAAS,AAAD,EAAE,YAAY,CAAC;IAC1B,CAAC,EAAE,CAAA,GAAA,wBAAa,AAAD,EAAE,YAAY,CAAC;IAC9B,CAAC,EAAE,CAAA,GAAA,qBAAU,AAAD,EAAE,YAAY,CAAC;IAC3B,CAAC,EAAE,CAAA,GAAA,oBAAS,AAAD,EAAE,YAAY,CAAC;CAG3B;AAED,MAAM,YAAY;IAChB,MAAM,sBAAqB,gBAAgB;QACzC,IAAI,aAAa,EAAE;QACnB,IAAK,MAAM,OAAO,OAAO,gBAAgB,CAAC,uBAAuB,CAC/D,IAAI,OAAO,gBAAgB,CAAC,uBAAuB,CAAC,cAAc,CAAC,MAAM;YACvE,MAAM,UAAU,OAAO,gBAAgB,CAAC,uBAAuB,CAAC,IAAI;YACpE,IAAI,MAAM;gBACR,MAAM,EAAE;gBACR,OAAO;YACT;YACA,WAAW,IAAI,CAAC;QAClB;QAEF,IAAK,IAAI,IAAI,GAAG,IAAI,iBAAiB,MAAM,EAAE,IAAK;YAChD,CAAA,GAAA,+CAAkB,AAAD,EAAE,QAAQ,CAAC,gBAAgB,CAAC,EAAE;YAC/C,IAAI,MAAM,CAAA,GAAA,+CAAkB,AAAD,EAAE,OAAO,CAAC,gBAAgB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG;YACpE,IAAI;gBACF,IAAI,cACF,OAAO,MAAM,CAAC,gBAAgB,CAAC,uBAAuB,CACpD,IAAI,SAAS,CAAC,GAAG,GAClB;gBACH,IAAI,aACF,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;oBAC1C,MAAM,UAAU,UAAU,CAAC,EAAE;oBAC7B,IAAI,QAAQ,KAAK,CAAC,OAAO,KAAK,YAAY,OAAO,EAC/C,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG;gBAElC;YAEJ,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,8CAA8C;YAC9D;QACF;QACA,OAAO;IACT;AACF;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;AACF;;;ACrKA;;;;;;;;;;;;;;;;;;;;;;CAsBC;;AA8DD,8DACE;AA7DF;AAOA;AAHA,MAAM,EACJ,gBAAgB,EACjB,GAAG,QAAQ;AAQZ,MAAM,iCAAiC;IACrC,aAAc;QACZ,KAAK,CAAC,cAAc,wBAAwB;YAC1C,MAAM;YACN,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,MAAM,OAAO,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QACzC,IAAI,CAAA,GAAA,uBAAY,AAAD,EAAE,OAAO,CAAC,QAAQ,IAC/B,OAAQ,QAAQ,OAAO,CAAC;QAC1B,OAAQ,QAAQ,OAAO,CAAC;IAC1B;IAEA,OAAO,MAAM,EAAE;QACb,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM;QAC9C,IAAI,OAAO,IAAI;QACf,IAAI,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC,OAAO,YAAY,CAAC,EAAE,CACjE,GAAG;QACN,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM;QAE9C,SAAS,IAAI,CAAC,CAAA,GAAA,6BAAkB,AAAD,GAC7B,SAAS,IAAI;YACX,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,aAAa,OAAO;QACnD,GAAG,IAAI,CAAC,CAAA;YACR,CAAA,GAAA,oBAAS,AAAD,EAAE,oBAAoB,CAAC,KAAK,IAAI,CAAC,CAAA;gBACvC,IAAI,aAAa,EAAE;gBACnB,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;oBAC1C,MAAM,UAAU,UAAU,CAAC,EAAE;oBAC7B,IAAI,MAAM;wBACR,OAAO,QAAQ,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK;wBACxC,WAAW,QAAQ,IAAI;oBACzB;oBACA,WAAW,IAAI,CAAC;oBAChB,IAAI,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,IAAI,EAAE,IAC3C,KAAK,EACN;gBACJ;gBACA,KAAK,MAAM,CAAC,SAAS,CAAC;YACxB;QACF;IACF;AACF;;;;;ACjFA;AAIA;;AAEA;AAIA;AAKA;AAMA;AAQA,IAAI,iBAAiB,IAAI;AACzB,IAAI,mBAAmB,IAAI;AAE3B,MAAM;IAEJ,aAAc,CAAC;IAEf,QAAQ,QAAQ,EAAE,WAAW,EAAE;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,aAAa,IAAI,CAAC,CAAA;YACjD,OAAO;QACT;IACF;IAEA,YAAY,QAAQ,EAAE,WAAW,EAAE;QACjC,IAAI,CAAC,SAAS,CAAC,UAAU,aAAa,IAAI,CAAC,CAAA;YACzC,IAAI,OAAO,CAAC,CAAA;gBACV,IAAI,KAAK,GAAG,EAAE;gBACd,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,EAAE;YACrC;QACF;IACF;IAEA,UAAU,QAAQ,EAAE,WAAW,EAAE;QAC/B,IAAI,CAAC,SAAS,CAAC,UAAU,aAAa,IAAI,CAAC,CAAA;YACzC,IAAI,OAAO,CAAC,CAAA;gBACV,IAAI,KAAK,GAAG,EAAE;gBACd,IAAI,QAAQ,GAAG,KAAK,GAAG,GAAG,KAAK,GAAG;gBAClC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,IAAI;YACvC;QACF;IACF;IAEA,UAAU,YAAY,EAAE,WAAW,EAAE;QACnC,MAAM,OAAO,aAAa,IAAI;QAC9B,MAAM,SAAS,aAAa,EAAE;QAC9B,MAAM,YAAY,YAAY,EAAE;QAEhC,IAAI,SAAS,CAAA,GAAA,2CAA+B,AAAD,GACzC,OAAO,QAAQ,OAAO,CAAC;YAAC;SAAa;QAGvC,OAAO,CAAA,GAAA,+CAAkB,AAAD,EAAE,aAAa,CAAC,QAAQ,WAAW,CAAC;YAC1D,CAAA,GAAA,+CAAkB,AAAD,EAAE,QAAQ,CAAC;YAC5B,IAAI,UAAU,KAAK,OAAO,GAAG,GAAG;YAChC,OAAO,YAAY,CAAA,GAAA,2CAA+B,AAAD;QACjD,iDAAiD;QACnD,GAAG,IAAI,CAAC,CAAA;YACN,OAAO,IAAI,GAAG,CAAC,CAAA;gBACb,OAAO,GAAG,GAAG;YACf;QACF;IACF;IAEA,MAAM,cAAc,SAAS,EAAE,OAAO,EAAE;QACtC,MAAM,QAAQ,MAAM,IAAI,CAAC,WAAW,CAAC,SAAS;QAC9C,MAAM,UAAU,MAAM,IAAI,CAAC,WAAW,CAAC;QAEvC,MAAM,WAAW,QAAQ,GAAG,CAAC,CAAA,KAAM,IAAI,CAAC,YAAY,CAAC;QAErD,OAAO,QAAQ,GAAG,CAAC,UAAU,IAAI,CAAC,CAAC;YACjC,MAAM,MAAM,EAAE;YACd,OAAO,OAAO,CAAC,CAAA,KAAM,IAAI,IAAI,IAAI;YACjC,OAAO;QACT;IACF;IAEA,4DAA4D;IAC5D,4DAA4D;IAC5D,4DAA4D;IAG5D,WAAW,YAAY,EAAE,WAAW,EAAE;QACpC,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,aAAa,IAAI,CAAC,CAAA;YAEpD,IAAI,IAAI,MAAM,KAAK,GAAG,OAAO;YAE7B,IAAK,IAAI,QAAQ,GAAG,QAAQ,IAAI,MAAM,EAAE,QAAS;gBAC/C,MAAM,KAAK,GAAG,CAAC,MAAM,CAAC,EAAE;gBAExB,IAAI,OAAO,eAAe,GAAG,CAAC,QAAQ,aACpC,OAAO;YAGX;YAEA,OAAO;QAET;IAEF;IAEA,YAAY,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE;QAExC,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,SAAS,IAAI,CAAC,CAAA;YAEjD,IAAI,QAAQ,OAAO,aAAa,cAAc,IAAI,CAC/C,qBAAqB,CAAC,YAAY,IAAI,CAAC,qBAAqB,CAC3D;YAEJ,eAAe,GAAG,CAAC,SAAS;YAE5B,IAAI,OAAO,CAAC,CAAA;gBACV,IAAI,YAAY,iBAAiB,GAAG,CAAC,MAAM,IAAI,IAC7C,iBAAiB,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBAEvC,UAAU,IAAI,CAAC;oBACb,IAAI;oBACJ,OAAO;gBACT;gBAEA,iBAAiB,GAAG,CAAC,MAAM,IAAI,EAAE;gBAEjC,IAAI,QAAQ,OAAO,MAAM,CAAC,gBAAgB,CAAC,iBAAiB,CAC1D,MAAM,SAAS;gBAEjB,MAAM,eAAe,CAAC,MAAM,IAAI,EAAE,IAAI,MAAM,OAAO,CAC/C,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,KAAK,KAAK;YAIxD;QAEF;IACF;IAEA,cAAc,SAAS,EAAE,OAAO,EAAE;QAChC,eAAe,MAAM,CAAC;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,SAAS,IAAI,CAAC,CAAA;YACjD,IAAI,OAAO,CAAC,CAAA;gBAEV,IAAI,QAAQ,OAAO,MAAM,CAAC,gBAAgB,CAAC,iBAAiB,CAC1D,MAAM,SAAS;gBAEjB,MAAM,eAAe,CACnB,MAAM,IAAI,EACV,oCAAoC;gBACpC,IAAI,MAAM,OAAO,CAAC,GAAG,GAAG,GAAG,IAC3B;gBAGF,IAAI,YAAY,iBAAiB,GAAG,CAAC,MAAM,IAAI;gBAE/C,IAAI,WAAW;oBACb,iEAAiE;oBACjE,YAAY,UAAU,MAAM,CAAC,CAAA,KAAM,GAAG,EAAE,KAAK;oBAC7C,iBAAiB,GAAG,CAAC,MAAM,IAAI,EAAE;oBAEjC,IAAI,UAAU,MAAM,GAAG,GAAG;wBACxB,IAAI,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK;wBAC9B,MAAM,eAAe,CACnB,MAAM,IAAI,EACV,oCAAoC;wBACpC,IAAI,MAAM,OAAO,CACf,MAAM,CAAC,GAAG,KACV,MAAM,CAAC,GAAG,KACV,MAAM,CAAC,GAAG,KACV,MAEF;oBAEJ;gBACF;YACF;QACF;IACF;IAEA,YAAY,MAAM,EAAE,SAAS,EAAE;QAC7B,OAAO,CAAA,GAAA,+CAAkB,AAAD,EAAE,aAAa,CAAC,QAAQ,WAAW,CAAC;YAC1D,CAAA,GAAA,+CAAkB,AAAD,EAAE,QAAQ,CAAC;YAC5B,IAAI,UAAU,KAAK,OAAO,GAAG,GAAG;YAChC,OAAO,YAAY,CAAA,GAAA,6CAAiC,AAAD;QACrD,GAAG,IAAI,CAAC,CAAA;YACN,OAAO,IAAI,GAAG,CAAC,CAAA;gBACb,OAAO,GAAG,GAAG;YACf;QACF;IACF;IAEA,sBAAsB,GAAG,EAAE;QACzB,IAAI,SAAS,4CAA4C,IAAI,CAAC;QAC9D,OAAO,SAAS;YACZ,GAAG,SAAS,MAAM,CAAC,EAAE,EAAE;YACvB,GAAG,SAAS,MAAM,CAAC,EAAE,EAAE;YACvB,GAAG,SAAS,MAAM,CAAC,EAAE,EAAE;QACzB,IACA;IACJ;IAEA,YAAY,KAAK,EAAE;QACjB,MAAM,WAAW,MAAM,GAAG,CAAC,OAAM;YAC/B,MAAM,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC,GAAG,EAAE;YACrD,MAAM,UAAU,MAAM,SAAS,UAAU,CACvC,CAAA,GAAA,sDAA0C,AAAD;YAE3C,OAAO,QACJ,MAAM,CAAC,CAAC;gBACP,OAAO,CAAA,GAAA,uBAAY,AAAD,EAAE,OAAO,CAAC,GAAG,OAAO,GAAG,GAAG,QAAQ;YACtD;QACJ;QAEA,OAAO,QAAQ,GAAG,CAAC,UAAU,IAAI,CAAC,CAAC;YAEjC,MAAM,MAAM,EAAE;YAEd,OAAO,OAAO,CAAC,CAAA;gBACb,MAAM,QAAQ,QAAQ,GAAG,CAAC,CAAA;oBACxB,CAAA,GAAA,+CAAkB,AAAD,EAAE,QAAQ,CAAC;oBAC5B,OAAO,GAAG,IAAI,CAAC,GAAG;gBACpB;gBAEA,IAAI,IAAI,IAAI;YACd;YAEA,OAAO;QACT;IAEF;IAEA,aAAa,QAAQ,EAAE;QAErB,MAAM,OAAO,SAAS,IAAI;QAC1B,MAAM,SAAS,SAAS,EAAE;QAE1B,IAAI,SAAS,CAAA,GAAA,0BAAe,AAAD,GACzB,OAAO,QAAQ,OAAO,CAAC;YAAC;SAAS;aAC5B,IAAI,SAAS,CAAA,GAAA,uDAAiB,AAAD,EAAE,SAAS,CAC5C,SAAS,EACV,OAAO,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC,QAAQ;YAAC,CAAA,GAAA,uDAAiB,AAAD,EAC5D,SAAS,CACT,kBAAkB;YAAE,CAAA,GAAA,uDAAiB,AAAD,EAAE,SAAS,CAC/C,kBAAkB;SACpB;aAED,oBAAoB;QACpB,yDAAyD;QACzD,mDAAmD;QACnD,KAAK;QAEL,OAAO,CAAA,GAAA,+CAAkB,AAAD,EAAE,SAAS,CAAC,QAAQ,CAAA,GAAA,6BAAkB,AAAD,GAAG,CAC9D;YACA,OAAO,KAAK,OAAO,GAAG,GAAG,OAAO,CAAA,GAAA,0BAAe,AAAD;QAChD,GAAG,IAAI,CAAC,CAAA;YACN,OAAO,IAAI,GAAG,CAAC,CAAA;gBACb,CAAA,GAAA,+CAAkB,AAAD,EAAE,QAAQ,CAAC;gBAC5B,OAAO,GAAG,IAAI,CAAC,GAAG;YACpB;QACF;IAEJ;IAEA,oEAAoE;IACpE,oEAAoE;IACpE,oEAAoE;IAEpE,MAAM,qBAAqB,QAAQ,EAAE;QAEnC,MAAM,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC;QAChD,MAAM,UAAU,MAAM,SAAS,UAAU,CACvC,CAAA,GAAA,sDAA0C,AAAD;QAG3C,OAAO,QACJ,MAAM,CAAC,CAAC;YACP,CAAA,GAAA,+CAAkB,AAAD,EAAE,QAAQ,CAAC;YAC5B,OAAO,CAAA,GAAA,uBAAY,AAAD,EAAE,OAAO,CAAC,GAAG,OAAO,GAAG,GAAG,QAAQ;QACtD,GACC,GAAG,CAAC,CAAC,KAAO,GAAG,IAAI;IACxB;IAEA,MAAM,oBAAoB,MAAM,EAAE,SAAS,EAAE;QAC3C,MAAM,UAAU,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ;QAE/C,MAAM,WAAW,QAAQ,GAAG,CAAC,CAAA,KAAM,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE;QAElE,OAAO,QAAQ,GAAG,CAAC,UAAU,IAAI,CAAC,OAAM;YACtC,MAAM,KAAK,kBAAkB,IAAI;YACjC,MAAM,WAAW,GAAG,GAAG,CAAC,CAAA,IAAK,IAAI,CAAC,YAAY,CAAC;YAC/C,IAAI,OAAO,MAAM,QAAQ,GAAG,CAAC;YAC7B,OAAO,KAAK,IAAI;YAEhB,MAAM,SAAS,IAAI;YAEnB,KAAK,MAAM,aAAa,KAAM;gBAC5B,MAAM,YAAY,UAAU,SAAS;gBACrC,MAAM,OAAO,UAAU,IAAI;gBAE3B,IAAI,OAAO,OAAO,GAAG,CAAC,eAAe,aACnC,OAAO,GAAG,CAAC,WAAW,IAAI;gBAG5B,OAAO,GAAG,CAAC,WAAW,GAAG,CAAC;YAC5B;YACA,MAAM,MAAM,EAAE;YAEd,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,GACvC,IAAI,IAAI,CAAC;gBACP,OAAO,OAAO,MAAM,CAAC,gBAAgB,CAClC,iBAAiB,CAAC;gBACrB,KAAK,MAAM,IAAI,CAAC;YAClB;YAGF,OAAO;QAET;IACF;AAEF;kBAGe,IAAI;;;;;ACrUnB,8DAAa;AAdb;AAKA;AAOA;;AAEO,MAAM,iCAAiC,CAAA,GAAA,mDAAgB,AAAD;IAC3D,aAAc;QACZ,KAAK,CAAC,8BAA8B,8BAA8B;YAChE,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,MAAM,cAAc,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG;QAC3C,MAAM,WAAW,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QAE7C,IACE,gBAAgB,CAAA,GAAA,uBAAY,AAAD,GAI3B,OAAO,QAAQ,OAAO,CAAC;QACzB,OAAO,QAAQ,OAAO,CAAC;IACzB;IAEA,MAAM,OAAO,MAAM,EAAE;QACnB,MAAM,SAAS,OAAO,YAAY,CAAC,EAAE,CAAC,GAAG;QACzC,MAAM,YAAY,OAAO,OAAO,CAAC,EAAE,CAAC,GAAG;QAEvC,MAAM,UAAU,MAAM,CAAA,GAAA,qCAAqB,AAAD,EAAE,mBAAmB,CAAC,QAC9D;QAEF,IAAI,CAAC,WAAY,WAAW,QAAQ,MAAM,KAAK,GAAI;YACjD,OAAO,KAAK,CAAC;YACb;QACF;QAEA,QAAQ,OAAO,CAAC,CAAC;YACf,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAC7D,GAAG,EAAE,GAAG,KAAK;QAClB;IAEF;AACF;;;;;ACzCA,2DAAa;AAdb;AAKA;AAOA;;AAEO,MAAM,8BAA8B,CAAA,GAAA,mDAAgB,AAAD;IACxD,aAAc;QACZ,KAAK,CAAC,QAAQ,8BAA8B;YAC1C,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,MAAM,cAAc,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG;QAC3C,MAAM,WAAW,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QAE7C,IACE,gBAAgB,CAAA,GAAA,uBAAY,AAAD,GAI3B,OAAO,QAAQ,OAAO,CAAC;QACzB,OAAO,QAAQ,OAAO,CAAC;IACzB;IAEA,MAAM,OAAO,MAAM,EAAE;QACnB,MAAM,SAAS,OAAO,YAAY,CAAC,EAAE,CAAC,GAAG;QACzC,MAAM,YAAY,OAAO,OAAO,CAAC,EAAE,CAAC,GAAG;QAEvC,MAAM,UAAU,MAAM,CAAA,GAAA,qCAAqB,AAAD,EAAE,mBAAmB,CAAC,QAC9D;QAEF,IAAI,CAAC,WAAY,WAAW,QAAQ,MAAM,KAAK,GAAI;YACjD,OAAO,KAAK,CAAC;YACb;QACF;QAEA,MAAM,QAAQ,QAAQ,GAAG,CAAC,CAAA,KAAM,GAAG,GAAG;QAEtC,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,IAAI;IAEvD;AACF;;;;;AC7BA,wDAAa;AAzBb;AAIA;AAIA;AAOA;AAIA;AAIA;;AAEO,MAAM,2BAA2B,CAAA,GAAA,mDAAgB,AAAD;IACrD,aAAc;QACZ,KAAK,CAAC,6BAA6B,6BAA6B;YAC9D,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,MAAM,cAAc,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG;QAC3C,MAAM,WAAW,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG;QAE7C,IACE,gBAAgB,CAAA,GAAA,uBAAY,AAAD,KAC3B,aAAa,CAAA,GAAA,4CAAiC,AAAD,GAE7C,OAAO,QAAQ,OAAO,CAAC;QAEzB,OAAO,CAAA,GAAA,qCAAc,AAAD,EAAE,OAAO,CAAC,OAAO,YAAY,CAAC,GAAG,IAAI,OAAO,OAAO,CAClE,GAAG,IACL,IAAI,CACH,CAAC;YACC,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG;YAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY,mBAAmB;YACrD,OAAO;QACT;IAEN;IAEA,MAAM,OAAO,MAAM,EAAE;QACnB,MAAM,WAAW,OAAO,YAAY,CAAC,GAAG;QACxC,MAAM,UAAU,OAAO,OAAO,CAAC,GAAG;QAElC,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,IAAI,GAAG;YACZ,IAAI,CAAC,SAAS,GAAG;YACjB,CAAA,GAAA,qCAAc,AAAD,EAAE,WAAW,CAAC,UAAU;QACvC,OAAO;YACL,IAAI,CAAC,IAAI,GAAG;YACZ,IAAI,CAAC,SAAS,GAAG;YACjB,CAAA,GAAA,qCAAc,AAAD,EAAE,SAAS,CAAC,UAAU;QACrC;QAEA,OAAO,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG;IAC1C;AACF;AAEA,MAAM,uBAAuB,OAAO;IAClC,oEAAoE;IACpE,kDAAkD;IAClD,QAAQ;IAER,MAAM,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC;IAChD,MAAM,UAAU,MAAM,SAAS,UAAU,CACvC,CAAA,GAAA,qDAA0C,AAAD;IAG3C,OAAO,QACJ,MAAM,CAAC,CAAC;QACP,CAAA,GAAA,+CAAkB,AAAD,EAAE,QAAQ,CAAC;QAC5B,OAAO,CAAA,GAAA,uBAAY,AAAD,EAAE,OAAO,CAAC,GAAG,OAAO,GAAG,GAAG,QAAQ;IACtD,GACC,GAAG,CAAC,CAAC,KAAO,GAAG,IAAI;AACxB;;;;AC1FA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA,6DAA6D;AAC7D;;AAEA,MAAM,EACJ,oBAAoB,EACrB,GAAG,QAAQ;AAEZ,MAAM,UAAU;IAAC;QACb,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,sCAAyB,AAAD;QACtD,iBAAiB,SAAS,IAAI;IAChC;IAAG;QACD,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,sCAAmB,AAAD;QAChD,iBAAiB,SAAS,IAAI;IAChC;IAAG;QACD,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,mCAAgB,AAAD;QAC7C,iBAAiB,SAAS,IAAI;IAChC;IAAG;QACD,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,+BAAkB,AAAD;QAC/C,iBAAiB,SAAS,IAAI;IAChC;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,sCAAmB,AAAD;QAChD,iBAAiB,SAAS,IAAI;IAChC;IAAG;QACD,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,6CAA0B,AAAD;QACvD,iBAAiB,SAAS,IAAI;IAChC;IACA,IAAI;IACJ,gCAAgC;IAChC,uDAAuD;IACvD,mCAAmC;IACnC,MAAM;IACN;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,gCAAa,AAAD;QAC1C,iBAAiB,SAAS,IAAI;IAChC;CACD;AAGD,IAAK,IAAI,QAAQ,GAAG,QAAQ,QAAQ,MAAM,EAAE,QAC1C,qBAAqB,KAAK,CAAC,OAAO,CAAC,MAAM;;;;;ACtD3C,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAsC,MAAM;IAC1D,OAAO,eAAe,GAAG,QAAQ,oBAAsC,eAAe;IACtF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAmC,OAAO;IACxE,QAAQ,oBAAoC,OAAO,CAAC;IACpD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;;A;;A,I,gB;I,M;I,O;Q;K;I,Y;Q,iB,C,G,+B,A;I;I;Q,I,C,a,G;Y,S;Y,O;Q;Q,O;Y,Y;Y,Y;Y,O,E;Y,S;gB,Q,I,C,a,C,O;gB,O;gB,Q;Y;Q;I;I,S;Q,Q,M;Y,I,C,kB;Q;Q,M,S,G;Y,M,Q,I,U,C,I;Y,I,I,W,I,M,M,G,G;gB,M,U,M,C,G,8C,A,E,a,C,O,I,K;gB,C,G,qB,A,E,K,C,wB,Q,K,G,G;Y;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y;gB,M,Q,I,C,Q;gB,I,C,S,C;oB;oB,Y,I,C,U;oB;gB;Y;Q;Q;Y,I,I,C,K,C,kB,E;gB,M,Q,I,C,K,C,kB,C,W;gB,O,M,G,C,C,I;oB,G,K,G;oB,O;gB;Y;Q;Q;Y,M,mB,I,C,U,C,I,G,M,K;Y,M,iB,I,C,K,C,M,K;Y,O,oB;Q;Q;Y,W;gB,I,C,K,C,gB,C,G,C,K;Y,G;Q;Q,Y,M;Y,I,W,I,C,a,C,O,E;gB,I,C,O,C,M,G;gB,I,C,O,C,K,G;Y;Q;Q;Y,I,C,O,C,K,G;Y,I,C,O,C,M,G,I,C,a,C,K;Q;Q,S,G;Y,I,C,K,G;mB,I,C,K;gB;a;Q;Q,Y,K;Y,I,C,K,G,I,C,K,C,M,C,C,K,G,K,K;Q;I;A;AAqFf,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kB,S,wC;;;;;ACpGA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAgC,MAAM;IACpD,OAAO,eAAe,GAAG,QAAQ,oBAAgC,eAAe;IAChF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA6B,OAAO;IAClE,QAAQ,oBAA8B,OAAO,CAAC;IAC9C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A;;A,I,gB;I,M;I,Y;iB,C,G,0B,A;mB,C,G,4B,A;I;I,O;Q,O;Y,S,E;Q;I;I;Q,O;Y,a,E;Q;I;I;Q,I,C,W,G,I,C,K;I;I,S;Q,S,G;Y,G,C,Q,G,I,C,K,C,M;Y,I,C,K,C,W;Q;Q,Y,K;Y,I,C,K,C,U;Q;I;I,O;Q;Y,I,C,W,G,I,C,K;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;;;ACff,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA0B,MAAM;IAC9C,OAAO,eAAe,GAAG,QAAQ,oBAA0B,eAAe;IAC1E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAuB,OAAO;IAC5D,QAAQ,oBAAwB,OAAO,CAAC;IACxC,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A,I,gB;I,M;I,Y;Q,iB,C,G,gB,A;I;I;Q,O;Y,M;Y,O;Y,M;Q;I;I,S;Q;Y,I,C,I,G,C,I,C,I;Q;Q;Y,M,Q,O,I,C,K,K,W,I,C,K,G,I,C,K,C,G;Y,I,C,K,C,W;gB,M,I,C,I;gB;Y;Y,I,C,I,G;Y,I,C,K,G;Q;Q;Y,O,I,C,I,C,I,G,M,K,K,C,I,C,K;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,O;Y,U;Y,a;Y,Q,I,I;Q;I,G;Q,G,a;Y,a;Q,G;Y,G,W;gB,I,E,C;a;S,E;Q,I,E,C;Q,G,Y;Y,M;Q,G;Y,G,O;gB,a;Y,G;gB,G,O;oB,a;gB,G;oB,G,Y;wB,G,S;4B,I,E,C;yB;wB,I,E,C;wB,G,Y;4B,O;gC,O,I,I;gC,U,S,G;oC,I,I,G;gC;gC,Y;4B;wB;qB,E;oB,I,E,C;oB,G,O;wB,G,iB;4B,a;4B,O;gC,O,I,K;gC,U,S,G;oC,I,K,G;gC;gC,Y;4B;wB;qB,E;iB,E;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,a;wB,Y;4B;gC,M;gC,S;4B;yB;wB,a;oB,G;wB,I,E,C;qB;oB,I,E,C;oB,G,a;wB,Y;4B;gC,M;gC,S;4B;yB;wB,a;wB,O;4B,Y,I,Q;wB;wB,I;4B,S,I,O;wB;oB,G;wB,I,E,C;qB;iB,E;a;S;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,c;Q,a;I,G;Q,I,W,C,M,G,I,G,a;Y,O;gB,S;Y;Y,I;gB,S,S,M;oB,I,I,G;gB;gB,O,S,M;oB,I,I,G;gB;Y;Y,O;gB,O,I,W;gB,U,S,G;oB,I,W,G;gB;gB,Y;Y;Q,G,I,E,C,I,W,E,S,O;Y,O,G,O;gB,K,Q,K;gB,a;Y,G;gB,G,O;oB,a;gB,G;oB,G,O;wB,a;wB,O;4B,oB,Q,K;wB;oB;oB,I,E,C;oB,G,O;wB,a;oB,G;wB,I,E,C,iB,I,E,C,Q,I,I;qB;iB;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,a;wB,a;wB,I;4B,S,S,M;gC,O,I,U,C,Q,K;4B;wB;oB,G;wB,G,W;4B,I,E,C;yB;qB,E;iB,E;a;Q,I,K,G,O;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,O;Y,a;Q,G;Y,G,W;gB,I;oB,W,I,O;gB;Y;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,qB;Y,a;Q,G;Y,G,e;gB,a;gB,O;oB,kB,I,O,C,M;oB,a;gB;gB,I;oB,uB,S,M;wB,O,I,I,C,I,O,E,U;oB;oB,yB,S,M;wB,O,I,I,C,I,O,E,U;oB;oB,c,I,U;gB;Y,G;gB,G,W;oB,a;oB,O;wB,M,I,a,C,O;wB,Y;wB,W,I,O,C,K;oB;oB,I;wB,iB,S,M;4B,O,I,I,C,I,O,E,S;wB;wB,kB,S,M;4B,O,I,I,C,I,O,E,S;wB;oB;gB,G;oB,G,c;wB,a;oB,G;wB,G,Y;4B,G,S;gC,I,E,C;6B;4B,I,E,C;4B,G,Y;gC,K;gC,O;oC,O,I,U;oC,U,S,G;wC,I,U,G;oC;oC,Y;gC;4B;yB,E;qB,E;iB,E;gB,I,E,C;gB,G,W;oB,a;oB,O;wB,M,I,a,C,K;wB,Y;wB,W,I,O,C,M;oB;oB,I;wB,iB,S,M;4B,O,I,I,C,I,O,E,U;wB;wB,kB,S,M;4B,O,I,I,C,I,O,E,U;wB;oB;gB,G;oB,G,iB;wB,K;wB,O;4B,S,I,K;wB;wB,I;4B,W,I,O;4B,U,I,U;wB;oB;iB,E;a,E;S,E;Q,I,E,C;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,I,O,C,M,K,I,C,a,C,O,G,G,a;gB,a;gB,O;oB,Y,C,C,I,U,C,I,G,M,G,C;gB;gB,I;oB,S,I,gB;gB;Y,G;gB,I,E,C;a,I,I,E;Y,I,E,C;Y,I,O,C,M,K,I,C,a,C,K,G,G,a;gB,a;gB,O;oB,Y,I,c;gB;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a,I,I,E;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AGJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAsC,MAAM;IAC1D,OAAO,eAAe,GAAG,QAAQ,oBAAsC,eAAe;IACtF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAmC,OAAO;IACxE,QAAQ,oBAAoC,OAAO,CAAC;IACpD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,Y;Y,W;Y,S;gB,M;Y;Q;I;I,S;Q,Q,M;Y,I,C,kB;Y,I,C,S,G,O,S;Q;Q,M,S,G;Y,I,I,W,I,I,O,C,I,C,M,G,K,I,C,S,E;gB,M,U,M,C,G,8C,A,E,a,C,I,O,E,I,C,S;gB,C,G,qB,A,E,K,C,wB;Y;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y,I,C,S,C;gB;gB,S,I,C,O;Y;Q;Q;Y,W;gB,I,C,K,C,gB,C,G,C,K;Y,G;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,Q;Y,a;Y,I;gB,U,S,M;oB,O,c;oB,O,I,W,C;gB;Y;Q,G;Y,G,mB;gB,I,E,C;a;Y,I,E,C;Y,G,qB;gB,G,Y;oB,G,S;wB,I,E,C;qB;oB,I,E,C;oB,G,Y;wB,K;wB,O;4B,O,I,O,C,I;4B,U,S,G;gC,I,I,C,I,O,E,Q;4B;4B,Y;wB;oB;iB,E;a,E;Y,I,E,C;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,O,I,W,C;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,a;oB,a;oB,O;wB,Q;wB,Y,C,C,I,O,C,I,C,I,G,M,G,C;oB;gB,G;oB,I,E,C;iB;a,E;S,E;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAmC,MAAM;IACvD,OAAO,eAAe,GAAG,QAAQ,oBAAmC,eAAe;IACnF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,mBAAgC,OAAO;IACrE,QAAQ,oBAAiC,OAAO,CAAC;IACjD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A,I,gB;I,M;I,O;Q;K;I,Y;Q,iB,C,G,gB,A;I;I;Q,I,C,S,G;Y,Q;Y,O;Q;Q,O;Y,Y;Y,W;Y,W;Y,O;Y,e;Y,O,E;Y,M;gB,M;gB,O;gB,O;Y;Q;I;I,S;Q,M,Q,M;Y,I,C,kB;Y,I,C,S,G,O,S;Y,I,C,S,G,O,S;Y,I,C,K,G,M,I,C,Q,C,I,C,S,E,I,C,S;Q;Q,M,S,G;Y,I,I,W,I,I,I,C,I,C,M,G,K,I,C,S,I,I,C,S,E,C,G,8C,A,E,U,C,I,C,S,E,I,C,S,E,I,I;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y;gB,I,C,I,C,K,G,O,I,C,I,C,K,K,W,I,C,I,C,K,G,I,C,I,C,K,C,G;gB,I,C,I,C,K,G,I,C,a,G,I,C,K;gB,I,C,S,C;oB;oB,M,I,C,I;gB;Y;Q;Q;Y,W;gB,I,C,K,C,gB,C,G,C,K;Y,G;Q;Q;Y,O,C,C,I,C,I,C,I,C,I,G,M,G,K,O,I,C,K,K,e,O,I,C,a,K,W;Q;Q,U,S,E,S;Y,O,C,G,8C,A,E,mB,C,W,W,I,C,C;gB,O,O,G,C,C,K,G,G,I,M,C,C,K,G,K,K;Y;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,Q;Y,a;Y,I;gB,U,S,M;oB,O,c;oB,O,I,W,C;gB;Y;Q,G;Y,G,mB;gB,I,E,C;a;Y,I,E,C;Y,G,qB;gB,G,Y;oB,G,S;wB,I,E,C;qB;oB,I,E,C;oB,G,Y;wB,K;wB,O;4B,O,I,I,C,I;4B,U,S,G;gC,I,I,C,I,I,E,Q;4B;4B,Y;wB;oB;iB,E;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,Q;wB,a;oB,G;wB,I,E,C;qB;oB,I,E,C;oB,G,O;wB,a;oB,G;wB,G,Y;4B,G,a;gC,O;oC,Q;oC,M;oC,e;gC;gC,O;oC,O,I,K;oC,U,S,G;wC,I,K,G;oC;oC,Y;gC;4B,G;gC,G,a;oC,O;wC,S,I,S,C,M;oC;gC,G;oC,I,E,C;iC;gC,I,E,C;gC,G,a;oC,O;wC,S,I,S,C,K;oC;gC,G;oC,I,E,C;iC;6B,E;yB,E;qB,E;oB,I,E,C;oB,G,O;wB,a;oB,G;wB,G,Y;4B,G,a;gC,O;oC,Q;oC,M;oC,e;gC;gC,O;oC,O,I,a;oC,U,S,G;wC,I,a,G;oC;oC,Y;gC;4B,G,I,E,C,I,K,E,S,C;gC,O,G,a;oC,K,E,K;oC,O;wC,S,E,K;oC;gC,G;oC,I,E,C,I,E,C,E,I;iC;4B,I;yB,E;qB,E;iB;gB,I,E,C;gB,G,iB;oB,a;oB,O;wB,O,I,I,C,K;wB,U,S,G;4B,I,I,C,I,I,E,S;wB;wB,Y;oB;gB;a,E;Y,I,E,C;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,O,I,W,C;wB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,a;oB,a;oB,O;wB,Q;wB,Y,I,Q;oB;gB,G;oB,I,E,C;iB;a,E;S,E;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA+B,MAAM;IACnD,OAAO,eAAe,GAAG,QAAQ,oBAA+B,eAAe;IAC/E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA4B,OAAO;IACjE,QAAQ,oBAA6B,OAAO,CAAC;IAC7C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A;;A;A;A;A;;A,I,gB;I,M;I,O;Q;K;I,Y;Q,wB,C,G,6B,A;I;I;Q,I,C,a,G,C,G,4B,A;Q,I,C,K,G;Y,Q;Y,S;Y,S;Y,O;Q;Q,O;Y,c,I,C,K,C,M;Y,Y;Y,W;Y,W;Y,c;Y,U;Y,kB;Y,Q;gB,M;gB,yB;gB,a;gB,I,E;gB,U,I,C,a,C,Y;gB,M,C;Y;Y,U;gB,M;gB,I,E;Y;Q;I;I,S;Q,M,Q,M;Y,6B;Y,I,C,S,G,O,S;Y,I,C,S,G,O,S;Y,I,C,Q,G,O,Y,C,I,C,G;Y,I,O,U,E,I,C,gB,G,C,G,+C,A,E,O,C,O,U,E,G;Y,8D;Y,M,O,M,C,G,kB,A,E,gB;Y,6B;Y,I,C,M,C,I,C,Q,G,K,I;Y,I,C,M,C,M,G,K,E;Q;Q,a,W;Y,I,O,I,C,S,K,Y,I,C,S,C;gB;gB,Y,I,C,U;Y;Q;Q,M,S,G;Y,I,W;Y,I,C,U,G;Q;Q;Y,4B;Y,I,C,Y,G,I,C,K,C,O;Y,C,G,8C,A,E,S,C,I,C,M,E,I,C,S,E,I,C,S,E,I,C,Q,C,E,E,I,C,C;gB,M,O,C,G,+C,A,E,W,C;gB,I,M;oB,C,G,qB,A,E,K,C,C,G,4B,A,E,O,E,K,I,C,G;oB,I,C,Y,G,I,C,K,C,O;gB,uB;gB;Y,G,K,C,I,I,C,Y,G,I,C,K,C,K;Q;Q;Y,W;gB,I,C,K,C,gB,C,G,C,K;Y,G;Q;Q;Y,M,U;Y,M,Q,S,a,C;Y,M,I,G;Y,M,Q,G;Y,M,K;Y,M,gB,C,U,C;gB,M,Q,M,M,C,K;gB,I,W,E;gB,K,M,Q,M,S,I,C;gB,S,I,I,I,C,M,C,E;gB,M,Q,S,G,C,C,K,G,I;gB,M,Y,M,M,C,C,G,I,I;gB,I,Y,S;oB,M;oB;gB;gB,I,C,M,C,E,G;Y,G;Q;Q,U,I;Y,I,C,M,C,E,G,I,C,M,C,E,C,M,C,C,K,G,I,K,K,I;Q;I;I,U;Q;Y,O,I,C,Y;gB,K,I,C,K,C,O;oB,O;gB,K,I,C,K,C,K;oB,O;Y;Q;I;I,O;Q;Y,I,I,C,gB,I,I,C,gB,C,I,E,I,C,M,C,I,G,I,C,gB,C,I;QA0If;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;;;AC9JA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,mBAA6B,MAAM;IACjD,OAAO,eAAe,GAAG,QAAQ,mBAA6B,eAAe;IAC7E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA0B,OAAO;IAC/D,QAAQ,oBAA2B,OAAO,CAAC;IAC3C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q;K;I;Q,O,C;I;I,S;Q;Y,I,C,K,C,U,I,C,I;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,O;Y,Y;gB;oB,M;oB,S;oB,O,I,I,C,I;oB,Y;gB;a;Y,a;Q,G;Y,I,E,C,I,E,C,I,I,C,I;S;Q,I,E,C;Q,G,O;Y,a;Y,I;gB,S,I,M;Y;Q,G;Y,I,E,C;S;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,qB;Y,a;Q,G;Y,I,Y,K,I,K,C,M,G,G,O;gB,a;Y,G;gB,G,O;oB,a;gB,G;oB,G,O;wB,G,M;4B,a;4B,O;gC,gB;4B;wB;qB;oB,I,E,C;oB,G,O;wB,a;oB,G;wB,I,gB,G,G,O;4B,a;wB,G;4B,G,O;gC,a;4B,G;gC,I,E,C;6B;4B,I,E,C;4B,G,O;gC,Y;oC;wC,M;wC,S;wC,O,I,gB,C,I;wC,Y;oC;iC;gC,a;4B,G;gC,I,E,C,I,E,C,I,gB,C,I,I;6B;yB,I,A,C,I,gB,G,G,O;4B,a;wB,G;4B,G,Y;gC,G,S;oC,I,E,C;iC;gC,I,E,C;gC,G,Y;oC,O;wC,O,I,M,C,I;wC,U,S,G;4C,I,I,C,I,M,E,Q;wC;wC,Y;oC;gC;6B,E;yB,E,K,I,E;wB,I,E,C;wB,I,Q,G,G,O;4B,a;wB,G;4B,G,O;gC,a;4B,G;gC,I,E,C;6B;4B,I,E,C;4B,G,O;gC,Y;oC;wC,M;wC,S;wC,O,I,Q,C,I;wC,Y;oC;iC;gC,a;4B,G;gC,I,E,C,I,E,C,I,Q,C,I;6B;yB,I,I,E;qB;iB;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,O;wB,G,M;4B,a;4B,O;gC,gB;4B;wB;qB;oB,I,E,C;oB,G,O;wB,a;oB,G;wB,G,Y;4B,a;4B,O;gC,S,I,a,C,Y;4B;4B,O;gC,O,I,M,C,Q;gC,U,S,G;oC,I,I,C,I,M,E,Y;gC;gC,Y;4B;wB,G;4B,I,E,C;yB;wB,I,E,C;wB,G,Y;4B,a;4B,O;gC,S,I,a,C,M;4B;4B,O;gC,O,I,M,C,Q;gC,U,S,G;oC,I,I,C,I,M,E,Y;gC;gC,Y;4B;wB,G;4B,I,E,C;yB;wB,I,E,C;wB,G,Y;4B,a;4B,O;gC,S,I,a,C,M;4B;4B,O;gC,O,I,M,C,Q;gC,U,S,G;oC,I,I,C,I,M,E,Y;gC;gC,Y;4B;wB,G;4B,I,E,C;yB;qB,E;iB;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,M;wB,a;wB,O;4B,gB;wB;oB;oB,I,E,C;oB,G,O;wB,a;oB,G;wB,G,a;4B,a;4B,I;gC,S,I,K;4B;wB,G;4B,G,W;gC,I,E,C;6B;4B,I,E,C;yB,E;wB,I,E,C;wB,I,M,C,E,C,M,G,I,G,c;4B,a;wB,G,I,E,C,I,M,C,E,E,S,I,E,K;4B,O,G,wB;gC,K;gC,O;oC,Q;gC;gC,I;oC,U,I,Q;gC;4B,G;gC,I,E,C,I,E,C,K,I,I;6B;wB,I,K,G,c;4B,a;wB,G;4B,I,E,C;yB;qB,E;oB,I,E,C;oB,G,Y;wB,G,S;4B,I,E,C;yB;wB,I,E,C;wB,G,e;4B,O;gC,O,I,M,C,W;gC,U,S,G;oC,I,I,C,I,M,E,e;gC;gC,Y;4B;wB;qB,E;iB,E;a,I,G,O;gB,a;Y,G;gB,I,Y,K,I,K,C,O,G,G,uB;oB,O;wB,W;oB;gB,K,G,W;oB,a;gB,G;oB,I,E,C,I,E,C,I,I;iB;a,E;S;Q,I,E,C;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,O;oB,Y,C,C,I,M,C,I,C,I,G,M,G,C;gB;gB,I;oB,S,I,Y;gB;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AEJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAsC,MAAM;IAC1D,OAAO,eAAe,GAAG,QAAQ,oBAAsC,eAAe;IACtF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAmC,OAAO;IACxE,QAAQ,oBAAoC,OAAO,CAAC;IACpD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A;A,mE;A;;A;;A;;A,I,gB;I,M;I,O;Q;K;I,Y;Q,sC;Q,kB,C,G,gC,A;I;I;Q,I,C,W,G;Y,S;Y,S;Q;Q,I,C,I,G;Y,Q;Y,Q;Q;Q,O;Y,Y;Y,W;Y,W;Y,Y;Y,c;Y,M,E;Y,W,E;Y,W,E;Y,e;Y,a,I,C,I,C,M;Y,S,I,C,W,C,O;Q;I;I;Q,C,G,qB,A,E,G,C,yB,O;Y,I,C,I,G,M,I,C,U;Y,I,C,e;Y,I,C,U,G;Q;Q,C,G,qB,A,E,G,C,wB,O;Y,I,C,I,G,M,I,C,U;Y,I,C,S,G;Q;Q,C,G,qB,A,E,G,C,wB,O;Y,I,C,I,G,M,I,C,U;Y,I,C,e;Y,I,C,S,G;Q;I;I,S;Q,M,Q,M;Y,I,C,O,G,I,C,W,C,O;Y,I,C,Y,G,O,Y;Y,M,S,O,Y,C,K,G,G;Y,I,C,I,G,M,I,C,U;Y,oD;Y,I,C,O,G,I,C,W,C,O;Q;Q,M,S,G;Y,I,I,W,I,I,C,S,I,I,C,S,E,C,G,6D,A,E,S,C,sB;gB,W,I,C,S;gB,W,I,C,S;gB,Y,I,C,U;gB,c,I,C,Y;Y;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y,I,C,S,C;gB;gB,S,I,C,O;Y;Q;Q,e,E;Y,I,C,S,G;Q;Q,e,E;Y,I,C,S,G;Q;Q,gB,E;Y,I,C,U,G;QAsFf;QAEA;YACA,MAAA,WAAA,CAAA,GAAA,8CAAA,AAAA,EAAA,WAAA;Y,I,W,S,G,C,O;gBAEA,MAAA,YAAA,MAAA,CAAA,GAAA,8CAAA,AAAA,EAAA,aAAA,C,Q,E;gB,M,W,U,G,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Q,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA8B,OAAO;IACnE,QAAQ,oBAA+B,OAAO,CAAC;IAC/C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q;Q;Q;Q;Q;K;I,S;Q;Y,I,C,K,C;Q;Q,Y,E;Y,I,C,K,C,U;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,W;Y,a;Q,G;Y,G,gB;gB,G,Q;oB,a;gB,G;oB,I,E,C,I,E,C,I,K;iB;gB,I,E,C;gB,I,O,G,G,a;oB,a;oB,I;wB,S,I,W;oB;gB,G;oB,G,W;wB,I,E,C;qB;iB,E,K,I,E;a,E;S,E;Q,I,E,C;Q,G,c;Y,a;Q,G;Y,G,W,I,E,C,I,I,E,S,I,E,K;gB,O,G,gB;oB,Y;wB;4B,M;4B,S;4B,O,K,I;4B,Y;wB;qB;oB,K;oB,a;oB,O;wB,Y,K,E,K,I,Y;oB;oB,I;wB,S,S,M;4B,O,I,U,C,K,E;wB;oB;gB,G;oB,G,Q;wB,a;oB,G;wB,I,E,C,I,E,C,K,I;qB;iB;Y,I;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,O;gB,a;Y,G;gB,G,iB;oB,O;wB,S;wB,Q,I,I;wB,gB,I,S;wB,W;oB;oB,I;wB,U,I,a;wB,U,I,a;oB;gB;a,E;Y,I,E,C;Y,G,O;gB,a;Y,G;gB,G,iB;oB,O;wB,S;wB,Q,I,S;wB,gB,I,S;wB,W,I,S,I,I,S,C,M,G;oB;oB,I;wB,U,I,a;wB,U,I,a;oB;gB;a,E;Y,I,E,C;Y,G,O;gB,a;Y,G;gB,G,iB;oB,O;wB,S;wB,Y;wB,Q,I,S;wB,gB,I,U;wB,W,I,Y;oB;oB,I;wB,U,I,c;wB,U,I,oB;oB;gB;a,E;S;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AEJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA0B,MAAM;IAC9C,OAAO,eAAe,GAAG,QAAQ,oBAA0B,eAAe;IAC1E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAuB,OAAO;IAC5D,QAAQ,mBAAwB,OAAO,CAAC;IACxC,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A;;A;A;A;A;;A;A;A,M,E,yB,E,G,Q;A,M,Y,I,C,G,sC,A;A,M,a,I,C,G,iC,A;A,I,gB;I,M;I,O;Q,M,C;I;I;Q,O;Y,U,E;Y,e;Y,U,E;Y,c;Q;I;I;Q,C,G,qB,A,E,G,C,C,G,4B,A,E,O,E,C,O,I,C,K,C,U;Q,C,G,qB,A,E,G,C,C,G,4B,A,E,U,E,C,O,I,C,K,C,U;Q,I,C,Q,G,I,C,I;I;I,S;Q,U,K;Y,I,C,Q,G;Q;Q;Y,I,C,Q,G,I,C,I,C,M,C,C,K,G,I,C,W,G,Q,C,I,C,Y,C,W;Q,uD;Q;Q,M,gB,I;Y,M,O,M,C,G,kB,A,E,gB;Y,M,Y,K,S,G,K,S,G,I,C,c,C,K,E,E,E,C,G;Y,M,Y,K,I,C,S;Y,M,W,K,E;Y,C,G,8C,A,E,oB,C,W,W,U,M,I,C,C;gB,M,O,C,G,+C,A,E,O,C,U,G;gB,C,G,qB,A,E,K,C,C,G,4B,A,E,U,E;oB,Q;oB,M;gB;Y;Q;Q,M,oB,I;Y,M,O,M,C,G,kB,A,E,gB;Y,M,Y,K,S,G,K,S,G,I,C,c,C,K,E,E,E,C,G;Y,M,Y,K,I,C,S;Y,M,W,K,E;Y,C,G,8C,A,E,wB,C,W,W,U,M,I,C,C;gB,M,O,C,G,+C,A,E,O,C,U,G;gB,C,G,qB,A,E,K,C,C,G,4B,A,E,U,E;oB,Q;oB,M;gB;Y;Q;Q,a,I;Y,I,M;gB,c,C,G,+C,A,E,W,C,K,E;Y;Y,0B,S,C,e;Q;Q,Y,I;Y,M,U,C,G,+C,A,E,O,C,K,S;Y,M,S;gB,c,C,G,+C,A,E,O,C,K,E,E,G;gB,S,U,Q,G,K,I,C,c,C,K,E,E,G;Y;Y,0B,S,C,sB;Q;Q,gB,E;Y,M,W,C,G,+C,A,E,W,C;Y,M,Y,S,U,C,gB,C,E;Y,O,C,G,+C,A,E,O,C;Q;Q,S,I,G;Q,kB,I;Y,M,S;gB,c,C,G,+C,A,E,O,C,K,E;gB,S,K,S,G,C,G,+C,A,E,O,C,K,S,I,I,C,c,C,K,E;Y;Y,U,M,C;Q;Q,mB,I;Y,M,S;gB,c,C,G,+C,A,E,O,C,K,E;gB,S,K,S,G,C,G,+C,A,E,O,C,K,S,I,I,C,c,C,K,E;Y;Y,W,M,C;Q;Q;Y,O,M,C,W,C,M,C,M;Q;Q,M,e,I;Y,M,Y,K,S,G,K,S,G,I,C,c,C,K,E,E,E,C,G;Y,M,O,M,C,G,kB,A,E,gB;Y,C,G,8C,A,E,c,C,W,K,I,C,S,E,K,E,E,M,I,C,C;gB,M,O,C,G,+C,A,E,O,C,K,E,E,G;gB,C,G,qB,A,E,K,C,C,G,4B,A,E,U,E;oB,Q;oB,M;gB;Y;Q;Q,M,iB,I;Y,M,Y,K,S,G,K,S,G,I,C,c,C,K,E,E,E,C,G;Y,M,O,M,C,G,kB,A,E,gB;Y,C,G,8C,A,E,e,C,W,K,I,C,S,E,K,E,E,M,I,C,C;gB,M,O,C,G,+C,A,E,O,C,K,E,E,G;gB,C,G,qB,A,E,K,C,C,G,4B,A,E,U,E;oB,Q;oB,M;gB;Y;Q;Q,Y,I;Y,O,K,I,C,K,K,C,G,wB,A,E,K;Q;I;I,S;Q,oB,S,I;Y,O,C,G,sB,A,E,M,O;Q;QAmLf,iBAAA,SAAA,QAAA;Y,I,M,O,G,4B,CAEA,IAAA,CAAA,GAAA,4BAAA,AAAA,EAAA,cAAA,CAAA,MAAA;gBACA,MAAA,QAAA,CAAA,GAAA,4BAAA,AAAA,CAAA,CAAA,IAAA;gBACA,IAAA,UAAA,UAAA,OAAA;Y;Q;QAKA,UAAA,SAAA,IAAA;YACA,IAAA,QAAA,KAAA,IAAA,E,O,K,I;iBAEA,IAAA,QAAA,KAAA,QAAA,EACA,OAAA,KAAA,QAAA;YAEA,OAAA;QACA;I;IAEA,OAAA;QACA;Y,8B;YAEA,IAAA,IAAA,CAAA,IAAA,EACA,IAAA,CAAA,QAAA,GAAA,IAAA,CAAA,IAAA;QAEA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,c;Q,a;I,G;Q,G,Y;Y,a;Y,O;gB,W;Y;Y,a,I,E,C;gB;oB,K;oB,I,S,G;wB,I,O,I,I;wB,O,G,gB;4B,I;gC,Y,S,M;oC,O,I,iB,C;gC;gC,c,I,kB;4B;wB,G;4B,G,iB;gC,a;gC,O;oC,Y;oC,c;gC;4B,G;gC,I,E,C,mB,I,E,C,K,I,I;6B;4B,I,E,C;4B,G,iB;gC,a;gC,O;oC,Y;gC;4B,G;gC,G,O;oC,a;oC,O;wC,oB,K,I,C,K;oC;gC;gC,I,E,C;gC,G,O;oC,a;gC,G;oC,I,E,C,I,E,C,K,I,C,I;iC;6B;4B,I,E,C;4B,G,iB;gC,O;oC,Y;oC,c;gC;4B,G;gC,I,E,C,mB,I,E,C,I,E,C,sB,K,Y,K;6B;4B,I,E,C;4B,G,iB;gC,O;oC,Y;oC,c;gC;4B,G;gC,I,E,C,mB,I,E,C,I,E,C,mB,K,Q;6B;4B,I,E,C;4B,G,iB;gC,O;oC,Y;gC;4B,G;gC,I,E,C,mB,I,E,C,I,E,C,Y,K,I,K;6B;4B,I,E,C;4B,G,iB;gC,O;oC,Y;gC;4B,G;gC,G,W;oC,a;oC,O;wC,W;oC;gC,G;oC,G,a;wC,a;wC,O;4C,mB;wC;oC,G;wC,G,W;4C,I,E,C;yC;qC,E;oC,I,E,C;oC,G,mB;wC,a;oC,G;wC,K,I,C,K,I,I,G,gB;4C,I;gD,S,S,M;oD,O,I,c,C;gD;4C;wC,G;4C,G,W;gD,I,E,C;6C;4C,I,E,C;4C,G,Q;gD,I,E,C;6C;yC,E,K,I,E;wC,I,E,C;wC,K,I,C,K,G,I,G,gB;4C,I;gD,S,S,M;oD,O,I,kB,C;gD;4C;wC,G;4C,G,W;gD,I,E,C;6C;4C,I,E,C;4C,G,Q;gD,I,E,C;6C;yC,E,K,I,E;wC,I,E,C;wC,G,gB;4C,I;gD,S,S,M;oD,O,I,W,C;gD;4C;wC,G;4C,G,W;gD,I,E,C;6C;4C,I,E,C;4C,G,Q;gD,I,E,C;6C;yC,E;wC,I,E,C;wC,C,I,U,C,Q,G,gB;4C,I;gD,S,S,M;oD,O,I,a,C;gD;4C;wC,G;4C,G,W;gD,I,E,C;6C;4C,I,E,C;4C,G,Q;gD,I,E,C;6C;yC,E,K,I,E;wC,I,E,C;wC,I,U,C,Q,G,gB;4C,I;gD,S,S,M;oD,O,I,e,C;gD;4C;wC,G;4C,G,W;gD,I,E,C;6C;4C,I,E,C;4C,G,Q;gD,I,E,C;6C;yC,E,K,I,E;wC,I,E,C;wC,G,gB;4C,I;gD,S,S,M;oD,O,I,U,C;gD;4C;wC,G;4C,G,W;gD,I,E,C;6C;4C,I,E,C;4C,G,Q;gD,I,E,C;6C;yC,E;qC,E;iC,E;6B,E;yB,E;oB;gB;a;Y,O;gB,O,I,Q;gB,U,S,G;oB,I,Q,G;gB;gB,Y;Y;Q,G;Y,G,oB;gB,a;gB,O;oB,gB;gB;Y,G;gB,G,O;oB,a;gB,G;oB,G,M;wB,a;oB,G;wB,I,E,C;qB;iB;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,O;wB,a;oB,G;wB,G,Y;4B,O;gC,gB;4B;wB,G;4B,G,Y;gC,O;oC,e;gC;gC,I;oC,S,I,a;gC;gC,O;oC,O,I,Y;oC,U,S,G;wC,I,Y,G;oC;oC,Y;gC;4B;yB,E;qB,E;iB;a;Y,I,E,C;Y,G,wB;gB,O;oB,Y;oB,kB;gB;Y;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AA/NA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,qB;Y,a;Q,G;Y,I,O,K,I,W,C,O,G,G,O;gB,a;Y,G;gB,G,kB;oB,O;wB,Q,I,I;wB,a,I,S;wB,a,I,S;wB,a,I,S;wB,a,I,S;wB,c,I,U;oB;oB,I;wB,iB,I,a;wB,iB,I,a;wB,kB,I,c;wB,wB,I,oB;wB,iB,I,a;wB,iB,I,a;oB;gB;a,E,K,A,I,O,K,I,W,C,O,G,G,O;gB,a;Y,G;gB,I,E,C;a,I,I,E;S;Q,I,E,C;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,O;oB,Y,C,C,I,S,I,I,S,A;gB;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AHJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AIJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA6C,MAAM;IACjE,OAAO,eAAe,GAAG,QAAQ,oBAA6C,eAAe;IAC7F,OAAO,QAAQ,GAAG;IAG5B,QAAQ,oBAA2C,OAAO,CAAC;IAC3D,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;;A;;A,I,gB;I,M;I,O;Q;K;I,Y;Q,iB,C,G,+B,A;I;I;Q,O;Y,Y;Y,Y;Y,W;Y,U;Q;I;I,S;Q,Q,M;Y,I,C,S,G,O,E;Y,I,C,Q,G,O,Q;Y,I,C,kB;Q;Q,M,S,G;Y,M,Q,I,U,C,I;Y,I,I,W,I,M,M,G,G;gB,M,K,M,C,G,8C,A,E,iB,C,I,C,S,E;gB,C,G,qB,A,E,K,C,yB;Y,uB;Y,uB;Y,I;Y;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y,I,C,S,C;gB;gB,Y,I,C,U;Y;Q;Q;Y,W;gB,I,C,K,C,gB,C,G,C,K;Y,G;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,qB;Y,G,Y;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,K;oB,O;wB,O,I,U;wB,U,S,G;4B,I,U,G;wB;wB,Y;oB;gB;a,E;S,E;Q,I,E,C;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,O;oB,Y,I,U,C,I,G,M,K;gB;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAgC,MAAM;IACpD,OAAO,eAAe,GAAG,QAAQ,oBAAgC,eAAe;IAChF,OAAO,QAAQ,GAAG;IAG5B,QAAQ,oBAA8B,OAAO,CAAC;IAC9C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,Y;Y,S;Y,U;Q;I;I,S;Q,Q,M;Y,I,C,O,G,O,O;Y,I,C,Q,G,O,Q;Q;Q,M,S,G;Y,I,I,W,I,I,C,Q,E,I,C,Q;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y,I,C,S,C;gB;Y;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,qB;Y,I,E,C,W,I,E,C,I,O,I;S;Q,I,E,C;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;ACLA;;AACA;;AACA;;AACA;;AAEA,MAAM,EACJ,oBAAoB,EACrB,GAAG,QAAQ;AAGZ,MAAM,SAAS;IAAC;QACZ,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,gCAAkB,AAAD;QAC/C,OAAO;YACL,OAAO;YACP,gBAAgB;QAClB;QACA,OAAO;YACL,QAAQ;YACR,MAAM;QACR;IACF;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,oCAAkB,AAAD;QAC/C,OAAO;YACL,OAAO;YACP,gBAAgB;QAClB;QACA,OAAO;YACL,UAAU;YACV,QAAQ;YACR,MAAM;QACR;IACF;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,oCAAiB,AAAD;QAC9C,OAAO;YACL,OAAO;YACP,gBAAgB;QAClB;QACA,OAAO;YACL,QAAQ;YACR,MAAM;QACR;IACF;CACD;AAED,IAAK,IAAI,QAAQ,GAAG,QAAQ,OAAO,MAAM,EAAE,QAAS;IAClD,MAAM,UAAU,MAAM,CAAC,MAAM;IAC7B,MAAM,iBAAiB,qBAAqB,eAAe,CAAC;IAC5D,qBAAqB,iBAAiB,CAAC,QAAQ,IAAI,EAAE;AACvD;;;;;ACpDA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAgC,MAAM;IACpD,OAAO,eAAe,GAAG,QAAQ,oBAAgC,eAAe;IAChF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA6B,OAAO;IAClE,QAAQ,oBAA8B,OAAO,CAAC;IAC9C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;;A,yD;A,iD;A;;A,I,gB;I,M;I,Y;Q,a,C,G,2B,A;Q,+B;Q,iC;Q,yB;Q,e,C,G,0B,A;I;I;Q,I,C,K,G;Y,U;Y,W;Y,O;Y,S;Q;Q,O;Y,M,E;Y,e,I,C,K,C,Q;Y,iB;Y,iB;Y,c;Y,W,E;Y,O,E;Y,S,E;Q;I;I,M;Q,M,I,C,U;I;I,S;Q,M,Q,M;Y,M,I,C,U;Y,I,C,Y,C;Y,I,C,Y,C;Y,I,C,S,C;Q;Q,e,S;Y,I,C,e,G;Y,I,C,a,G,I,C,K,C,S;Q;Q,e,S;Y,I,C,e,G;Y,I,C,a,G,I,C,K,C,K;Q;Q,Y,M;Y,I,C,Y,G;Y,I,C,a,G,I,C,K,C,O;Q;Q;Y,I,C,a,G,I,C,K,C,O;Y,I,C,gB;Q;Q;Y,M,M,E;Y,K,M,Q,I,C,K,C,I,I,I,I,C,c,C;Y,I,C,O,G;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gB,G;oB,K,K,G,G,O;wB,a;wB,O;4B,oB,K,K;wB;oB,K,I,E;oB,I,E,C;oB,G,Q;wB,a;oB,G;wB,I,E,C,I,E,C,K,I;qB;oB,I,E,C;oB,G,W;wB,I,E,C;qB;iB,E;Y;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,c;Q,a;I,G;Q,I,e,G,G,O;Y,a;Q,G;Y,G,a;gB,I;oB,S,I,M;gB;Y,G;gB,G,W;oB,I,E,C;iB;gB,I,E,C;a,E;S,E,K,I,E;Q,I,E,C;Q,G,O;Y,a;Q,G;Y,I,a,K,I,K,C,Q,G,G,a;gB,O;oB,Q,I,I;gB;gB,I;oB,U,I,a;gB;Y,K,A,I,a,K,I,K,C,S,G,G,a;gB,O;oB,Q,I,S;gB;gB,I;oB,U,I,a;gB;Y,K,A,I,a,K,I,K,C,K,G,G,a;gB,O;oB,Q,I,K;gB;gB,I;oB,U,I,U;gB;Y,G;gB,G,gB;oB,I;wB,S,I,gB;oB;gB,G;oB,G,O;wB,a;oB;oB,I,E,C;oB,G,Q;wB,a;oB,G;wB,I,E,C;qB;oB,I,E,C;oB,G,W;wB,I,E,C;qB;iB,E;a,E,K,A,I,a,K,I,K,C,O,G,G,e;gB,O;oB,Q,I,O;gB;gB,I;oB,U,I,U;gB;Y,K,I,E;S,E;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AFJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AGJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAoC,MAAM;IACxD,OAAO,eAAe,GAAG,QAAQ,oBAAoC,eAAe;IACpF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAiC,OAAO;IACtE,QAAQ,oBAAkC,OAAO,CAAC;IAClD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A;A;A;;A,2D;A;;A,qG;A;;A;A;;A;A;A;A,I,gB;I,M;I,wB;I,Y;Q,iB,C,G,+B,A;Q,qB,C,G,mC,A;I;I;Q,I,C,M,G;Q,O;Y,Y;Y,U;Y,Q,C;Y,M,C;Y,M,E;Y,W;Y,U,E;Y,c;Y,M;gB,a;gB,I,E;Y;Q;I;I;Q,C,G,qB,A,E,G,C,C,G,4B,A,E,U,E,O;Y,I,K,M,C,E,K,I,C,M,C,E,I,K,I,E;gB,I,C,I,G,K,I;gB,I,C,I,G,M,I,C,O,C,I,C,M,C,E;Y;Q;I;I,S;Q,M,Q,M;Y,I,C,S,G;Y,I,C,M,G,O,Y;Y,I,C,Q,G;gB,c,C,G,+C,A,E,W,C,O,Y,C,E;Y;Y,M,Q,G,C;gB,I,C,O,C,O,Y,C,M;gB,I,C,O,C,O,Y,C,E;a,E,I,C,C;gB,M,Y,I,C,M,C,S,G,I,C,M,C,S,G,I,C,c,C,I,C,M,C,E,E,E;gB,I,C,I,G,M,C,E;gB,I,C,I,G,M,C,E;gB,I,C,M,G;oB,c,C,G,+C,A,E,O,C,I,C,M,C,E;oB,S,C,G,+C,A,E,O,C;gB;gB,I,C,S,G;Y,6B;Y;Q;Q,M,S,G;Q,yB;Q,I;Q,2B;Q;Q,W;Q,S,E;Y,M,O,C,G,+C,A,E,O,C;Y,I,M,O,Q,O,C,K,G;Y,O,C,G,+C,A,E,Y,C,I,I,C,C;gB,O,O,G;Y;Q;Q,S,E;Y,O,C,G,8C,A,E,O,C;Q;Q,M;Y,M,O,M,C,G,kB,A,E,gB;Y,M,Y,I,C,M,C,S,G,I,C,M,C,S,G,I,C,c,C,I,C,M,C,E,E,E;Y,M,Y,I,C,I,C,S;Y,M,W,I,C,M,C,E;Y,C,G,8C,A,E,oB,C,W,W,U,M,I,C,O;gB,I,C,M,G,C,G,+C,A,E,O,C,U,G;gB,wB;gB,C,G,qB,A,E,K,C,C,G,4B,A,E,U,E;oB,Q,I,C,M;oB,M;gB;Y;Q;Q,M;Y,M,O,M,C,G,kB,A,E,gB;Y,M,Y,I,C,M,C,S,G,I,C,M,C,S,G,I,C,c,C,I,C,M,C,E,E,E;Y,M,Y,I,C,I,C,S;Y,M,W,I,C,M,C,E;Y,C,G,8C,A,EA4Hf,wBAAA,CAAA,WAAA,WAAA,UAAA,MACA,IAAA,CAAA,CAAA;gBACA,IAAA,CAAA,MAAA,GAAA,CAAA,GAAA,+CAAA,AAAA,EAAA,OAAA,CAAA,UAAA,GAAA;gBACA,4BAAA;gBACA,CAAA,GAAA,qBAAA,AAAA,EAAA,KAAA,CAAA,CAAA,GAAA,4BAAA,AAAA,EAAA,UAAA,EAAA;oB,Q,I,C,M;oBAEA,MAAA;gBACA;YACA;QACA;QAEA,gBAAA,EAAA;YACA,MAAA,WAAA,CAAA,GAAA,+CAAA,AAAA,EAAA,WAAA,CAAA;Y,M,Y,S,U,C,gB,C,E;YAEA,OAAA,CAAA,GAAA,+CAAA,AAAA,EAAA,OAAA,CAAA,WAAA,GAAA;QACA;Q;YAGA,MAAA,SAAA,IAAA,CAAA,GAAA,sCAAA,AAAA;YACA,OAAA,MAAA,CAAA,IAAA,CAAA,MAAA;QACA;QAEA;YACA,MAAA,SAAA,IAAA,CAAA,GAAA,2BAAA,AAAA;YACA,OAAA,MAAA,CAAA,IAAA,CAAA,MAAA;QACA;QAEA;Y,M,S,I,C,G,iC,A;YAEA,OAAA,MAAA,CAAA,IAAA,CAAA,MAAA;QACA;IACA;IACA,OAAA;QACA;YACA,IAAA,CAAA,YAAA,GAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,GAAA;QACA;IACA;IACA,UAAA;IAIA;IACA,SAAA;QACA,YAAA,IAAA;Y,O,C,G,sB,A,E,S,O,M,C;QAEA;QAEA,gBAAA,QAAA;YACA,KAAA,MAAA,OAAA,OAAA,IAAA,CAAA,CAAA,GAAA,4BAAA,AAAA,GAAA;gBACA,IAAA,CAAA,GAAA,4BAAA,AAAA,CAAA,CAAA,IAAA,IAAA,UAAA,OAAA;YACA;QACA;IACA;A;AAGA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;;;ACnMA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA+B,MAAM;IACnD,OAAO,eAAe,GAAG,QAAQ,oBAA+B,eAAe;IAC/E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA4B,OAAO;IACjE,QAAQ,oBAA6B,OAAO,CAAC;IAC7C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A,I,gB;I,M;I,O;Q,M,C;I;I,Y;Q,W,C,G,sB,A;I;I;Q,O,C;I;I,S,C;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;;;ACff,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAsB,MAAM;IAC1C,OAAO,eAAe,GAAG,QAAQ,oBAAsB,eAAe;IACtE,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAmB,OAAO;IACxD,QAAQ,oBAAoB,OAAO,CAAC;IACpC,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;;A;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,O;Y,U;Q;I;I;Q,I,C,W;I;I,S;Q,M;Y,kB;Y,oE;Y,I,I,C,G,C,I,I,I,C,G,C,I,C,I,E,I,C,Q,G,I,C,G,C,I,C,I;iB,I,I,C,G,C,I,I,I,C,G,C,I,C,Q,E,I,C,Q,G,I,C,G,C,I,C,Q;iB,I,C,Q,G;Y,I,I,C,G,C,K,I,C,G,sB,A,E,Q,E,I,C,K,G;iB,I,I,C,G,C,K,I,C,G,sB,A,E,Q,E,I,C,K,G;iB,I,I,C,G,C,K,I,C,G,sB,A,E,S,E,I,C,K,G;iB;gB,M,W,I,C,G,C,K,C,G,C,C,K,C,G,+C,A,E,Y,C;gBAyBf,QAAA,GAAA,CAAA,UAAA,IAAA,CAAA,CAAA;oBACA,MAAA,QAAA,MAAA,CAAA,EAAA,CAAA,IAAA,CAAA,GAAA;oB,M,Q,M,C,E,C,I,C,G;oBAEA,uEAAA;oBACA,8CAAA;oBACA,0BAAA;oBACA,sBAAA;oBAEA,mBAAA;oBACA,yCAAA;oBACA,4CAAA;oBAEA,IAAA,CAAA,KAAA,GAAA,CAAA,WAAA,EAAA,MAAA,IAAA,EAAA,MAAA,CAAA;gBACA;YACA;QACA;IACA;IACA,SAAA;QACA,YAAA,IAAA;Y,uD;YAEA,OAAA,CAAA,GAAA,sBAAA,AAAA,EAAA,MAAA,OAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,gB;Q,G,iB;Y,I,E,C,I,E,C,I,E,C,c,I,G,C,Y;S;Q,I,E,C;Q,G,iB;Y,I,E,C,I,E,C,I,Q,C,M,G,I,I,Q,G,a;S;Q,I,E,C;Q,G,iB;Y,I,E,C,I,E,C,I,K;S;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAlEA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,c;Q,a;I,G;Q,G,Y;Y,a;Q,G;Y,G,gB;gB,G,iB;oB,I,E,C;iB;gB,I,E,C;gB,G,iB;oB,I,E,C;iB;gB,I,E,C;gB,G,iB;oB,I,E,C;iB;a,E;Y,I,E,C;Y,I,E,C,I,I,E,S,G,E,K;gB,O,G,W;oB,K;oB,O;wB,O;oB;gB;Y;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,I,M,I,C,I,S,G,G,O;Y,a;Q,G;Y,G,O;gB,a;Y,G;gB,G,c;oB,a;gB,G;oB,G,O;wB,a;oB,G;wB,G,O;4B,a;wB,G;4B,I,E,C;yB;wB,I,E,C;wB,G,O;4B,a;wB,G;4B,I,E,C,I,E,C,I,M,C,I;yB;qB;oB,I,E,C;oB,G,O;wB,a;oB,G;wB,G,O;4B,a;wB,G;4B,I,E,C;yB;wB,I,E,C;wB,G,O;4B,a;wB,G;4B,I,E,C,I,E,C,I,Y;yB;qB;oB,I,E,C;oB,G,O;wB,a;oB,G;wB,G,O;4B,a;wB,G;4B,I,E,C;yB;wB,I,E,C;wB,G,O;4B,a;wB,G;4B,I,E,C,I,E,C,I,E,C,kB,I,M,C,Q;yB;qB;oB,I,E,C;oB,I,M,C,I,G,G,O;wB,a;oB,G;wB,G,O;4B,a;wB,G;4B,I,E,C;yB;wB,I,E,C;wB,G,O;4B,a;wB,G;4B,I,E,C,I,E,C,I,M,C,I,C,I;yB;qB,I,I,E;oB,I,E,C;oB,G,O;wB,a;oB,G;wB,G,O;4B,a;wB,G;4B,I,E,C;yB;wB,I,E,C;wB,G,O;4B,a;wB,G;4B,I,E,C,I,E,C,I,E,C,c,I,M,C,Y;yB;qB;iB;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,W;wB,a;oB,G;wB,G,gB;4B,a;wB,G;4B,G,O;gC,a;4B,G;gC,G,a;oC,a;oC,O;wC,S;oC;oC,I;wC,S,I,gB;oC;gC,G;oC,G,W;wC,I,E,C;qC;iC,E;gC,I,E,C;gC,G,a;oC,a;oC,O;wC,S;oC;oC,I;wC,S,I,c;oC;gC,G;oC,G,W;wC,I,E,C;qC;iC,E;gC,I,E,C;gC,G,a;oC,a;oC,O;wC,S;oC;oC,I;wC,S,I,iB;oC;gC,G;oC,G,W;wC,I,E,C;qC;iC,E;6B,E;yB;wB,I,E,C;wB,G,gB;4B,a;4B,I;gC,S,I,U;4B;wB,G;4B,G,W;gC,I,E,C;6B;4B,I,E,C;4B,G,Q;gC,a;4B,G;gC,I,E,C;6B;yB,E;wB,I,E,C;wB,G,gB;4B,a;4B,I;gC,S,I,c;4B;wB,G;4B,G,W;gC,I,E,C;6B;4B,I,E,C;4B,G,Q;gC,a;4B,G;gC,I,E,C;6B;yB,E;qB,E;iB,E;a,E;Y,I,E,C;Y,G,O;gB,a;Y,G;gB,G,O;oB,a;gB,G;oB,G,O;wB,a;oB,G;wB,I,E,C;qB;oB,I,E,C;oB,G,c;wB,a;oB,G;wB,G,qB;4B,O;gC,Y,I,Q;4B;wB;qB,E;iB,E;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,O;wB,a;oB,G;wB,I,E,C;qB;oB,I,E,C;oB,G,c;wB,a;oB,G;wB,G,iB;4B,O;gC,Q,I,I;4B;wB;qB,E;iB,E;a;S,I,A,I,S,G,G,O;Y,a;Q,G;Y,G,uB;gB,O;oB,W;gB;Y;S,E,K,I,E;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AGJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAoC,MAAM;IACxD,OAAO,eAAe,GAAG,QAAQ,oBAAoC,eAAe;IACpF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAiC,OAAO;IACtE,QAAQ,mBAAkC,OAAO,CAAC;IAClD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A;A;;A;;A,I,gB;I,M;I,Y;Q,e,C,G,0B,A;I;I;Q,O;Y,S,E;Y,c;Y,W;Q;I;I,S;Q,M,Q,M;Y,iC;Y,I,C,S,G;Y,I,C,Y,G,O,Y;Y,C,G,+C,A,E,Q,C,O,Y;Y,M,S,O,Y,C,K,G,G;Y,I,C,O,G,M,I,C,c,C;Y,I,C,S,G;Q;Q,W;Q,gB,M;Y,O,C,G,8C,A,E,kB,C,Q,I,C,C;gB,wB;gB,M,W,Q,G,C,O;oB,O,I,G,M,I,C,O,C;oB,O;gB;gB,O,Q,G,C,U,I,C,C;oBA6Bf,OAAA,OAAA,MAAA,CAAA,CAAA,KAAA,GAAA,IAAA;gBACA;YACA;Q;QAGA,MAAA,SAAA,UAAA;Y,M,S,W,M;YAGA,MAAA,OAAA,CAAA,GAAA,+CAAA,AAAA,EAAA,OAAA,CAAA;YACA,IAAA,MAAA,OAAA,KAAA,GAAA;YAEA,MAAA,UAAA,MAAA,CAAA,GAAA,+CAAA,AAAA,EAAA,UAAA,CAAA,WAAA,EAAA,EAAA,EAAA;YACA,wBAAA;YAEA,MAAA,QAAA,QAAA,IAAA,CAAA,CAAA,KAAA,GAAA,EAAA,CAAA,GAAA,OAAA;YACA,IAAA,OAAA,OAAA,MAAA,GAAA;QAEA,oEAAA;QACA,8BAAA;QACA,UAAA;QACA;QAEA,MAAA;YACA,MAAA,KAAA,IAAA,CAAA,YAAA,CAAA,KAAA,GAAA,GAAA;YACA,IAAA,CAAA,OAAA,GAAA,MAAA,IAAA,CAAA,cAAA,CAAA;QACA;QAEA;YACA,CAAA,GAAA,6DAAA,AAAA,EAAA,SAAA,CAAA,uBAAA;gBACA,cAAA,IAAA,CAAA,YAAA;Y;QAEA;I;AAEA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,A,C,I,S,G,G,O;Q,a;I,G;Q,G,a;Y,a;Y,O;gB,S;Y;Y,I;gB,S,I,Y;Y;Q,G;Y,G,W;gB,I,E,C;a;S,E;Q,I,E,C;Q,G,e;Y,a;Y,O;gB,Q,I,O;Y;Y,I;gB,U,I,U;Y;Q;K,E,K,G,O;Q,a;I,G;Q,G,uB;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","sources":["node_modules/spinal-env-viewer-plugin-ticket/index.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/index.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/createContext.js","node_modules/spinal-env-viewer-panel-manager-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelManagerService.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelApp.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalMountExtention.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/createProcess.js","node_modules/spinal-service-ticket/dist/Constants.js","node_modules/spinal-service-ticket/src/Constants.ts","node_modules/spinal-service-ticket/dist/old_constants.js","node_modules/spinal-service-ticket/src/old_constants.ts","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/createStep.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/createTicket.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/manageTicket.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/createCommonIncident.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/seeTicketDetail.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/passToNextStep.js","node_modules/spinal-env-viewer-plugin-ticket/src/extensions/spinalIO.js","node_modules/spinal-env-viewer-plugin-ticket/src/extensions/crypt.js","node_modules/spinal-env-viewer-plugin-ticket/src/extensions/Event.js","node_modules/spinal-env-viewer-plugin-ticket/src/extensions/ticketsEvents.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/backToPreviousStep.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/standard_buttons/selectElement.js","node_modules/spinal-env-viewer-plugin-standard_button/js/selectBIMObjectButton.js","node_modules/spinal-env-viewer-plugin-standard_button/js/utilities.js","node_modules/spinal-env-viewer-plugin-standard_button/js/fitToViewerButton.js","node_modules/spinal-env-viewer-plugin-ticket/src/extensions/colorElementExtension.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/standard_buttons/isolate.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/standard_buttons/zoom.js","node_modules/spinal-env-viewer-plugin-ticket/src/buttons/colorElement.js","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/index.js","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/createContextDialog.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/components/sortable-list.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/components/popover.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/createProcessDialog.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/createStepDialog.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/createTicket.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/components/attachment.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/selectProcessDialog.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/components/selectProcess.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/components/linkerTemplate.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/panels/components/tickets.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/createCommonIncidentDialog.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/dialogs/confirmDialog.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/panels/index.js","node_modules/spinal-env-viewer-plugin-ticket/src/vue/panels/ticketManager.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/panels/service/utilities.js","node_modules/spinal-env-viewer-plugin-ticket/src/vue/panels/components/listItem.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/panels/ticketDetailPanel.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/panels/components/logsTemplate.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/panels/components/log.vue","node_modules/spinal-env-viewer-plugin-ticket/src/vue/panels/manageTicketPanel.vue","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/index.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/SpinalForgeExtention.js","node_modules/spinal-env-viewer-plugin-ticket/src/extensions/forgeExtension.js","node_modules/spinal-env-viewer-bim-manager-service/dist/index.js","node_modules/spinal-env-viewer-bim-manager-service/src/index.ts","node_modules/spinal-env-viewer-bim-manager-service/dist/bimObjects/bimService.js","node_modules/spinal-env-viewer-bim-manager-service/src/bimObjects/bimService.ts","node_modules/@parcel/node-resolver-core/lib/_empty.js"],"sourcesContent":["import \"./src/buttons\";\nimport \"./src/vue/dialogs\";\nimport \"./src/vue/panels\";\nimport \"./src/extensions/forgeExtension\";","import {\n  CreateContextButton\n} from \"./createContext\";\n\nimport {\n  CreateProcess\n} from \"./createProcess\";\n\nimport {\n  CreateStep\n} from \"./createStep\";\n\nimport {\n  CreateTicket\n} from \"./createTicket\";\n\nimport {\n  ManageTicketButton\n} from \"./manageTicket\";\n\nimport {\n  CreateCommonIncident\n} from \"./createCommonIncident\";\n\nimport {\n  spinalContextMenuService\n} from \"spinal-env-viewer-context-menu-service\";\n\nimport {\n  SeeTicketDetailButton\n} from \"./seeTicketDetail\";\n\nimport {\n  PassToNextStepButton\n} from \"./passToNextStep\";\n\nimport {\n  BackToPreviousStepButton\n} from \"./backToPreviousStep\";\n\nimport {\n  SelectElementOnMaquette\n} from \"./standard_buttons/selectElement\";\n\nimport {\n  IsolateElementOnMaquette\n} from \"./standard_buttons/isolate\";\n\nimport {\n  ZoomElementOnMaquette\n} from \"./standard_buttons/zoom\";\n\nimport {\n  ColorElementButton\n} from \"./colorElement\";\n\n/* Constants */\nconst HEADER_HOOK_NAME = \"GraphManagerTopBar\";\nconst SIDEBAR_HOOK_NAME = \"GraphManagerSideBar\";\nconst CIRCULAR_MENU_HOOK = \"circularMenu\";\n\n/* Headerbar Buttons*/\nspinalContextMenuService.registerApp(\n  HEADER_HOOK_NAME,\n  new CreateContextButton(),\n  [3]\n);\n\n/* Sidebar Buttons*/\nspinalContextMenuService.registerApp(\n  SIDEBAR_HOOK_NAME,\n  new ManageTicketButton(),\n  [3]\n);\n\nspinalContextMenuService.registerApp(\n  SIDEBAR_HOOK_NAME,\n  new CreateCommonIncident(),\n  [3]\n);\n\nspinalContextMenuService.registerApp(SIDEBAR_HOOK_NAME, new CreateProcess(), [\n  3,\n]);\n\nspinalContextMenuService.registerApp(SIDEBAR_HOOK_NAME, new CreateStep(), [3]);\n\nspinalContextMenuService.registerApp(SIDEBAR_HOOK_NAME, new CreateTicket(), [\n  3,\n]);\n\nspinalContextMenuService.registerApp(\n  SIDEBAR_HOOK_NAME,\n  new PassToNextStepButton(),\n  [3]\n);\n\nspinalContextMenuService.registerApp(\n  SIDEBAR_HOOK_NAME,\n  new BackToPreviousStepButton(),\n  [3]\n);\n\nspinalContextMenuService.registerApp(\n  SIDEBAR_HOOK_NAME,\n  new SeeTicketDetailButton(),\n  [3]\n);\n\nspinalContextMenuService.registerApp(\n  SIDEBAR_HOOK_NAME,\n  new SelectElementOnMaquette(),\n  [3]\n);\n\nspinalContextMenuService.registerApp(\n  SIDEBAR_HOOK_NAME,\n  new IsolateElementOnMaquette(),\n  [3]\n);\n\nspinalContextMenuService.registerApp(\n  SIDEBAR_HOOK_NAME,\n  new ZoomElementOnMaquette(),\n  [3]\n);\n\nspinalContextMenuService.registerApp(\n  SIDEBAR_HOOK_NAME,\n  new ColorElementButton(),\n  [3]\n);\n\n/* CircularMenu Buttons*/\nspinalContextMenuService.registerApp(CIRCULAR_MENU_HOOK, new CreateTicket(), [\n  3,\n]);","import {\n  SpinalContextApp\n} from 'spinal-env-viewer-context-menu-service'\n\nimport {\n  spinalPanelManagerService\n} from 'spinal-env-viewer-panel-manager-service';\n\n\nexport class CreateContextButton extends SpinalContextApp {\n\n  constructor() {\n    super('Create Ticket context',\n      'This button allows you to create ticket context', {\n        icon: \"receipt\",\n        icon_type: 'in',\n        backgroundColor: \"#356BAB\",\n        fontColor: '#ffffff'\n      })\n  }\n\n\n  isShown(option) {\n    return Promise.resolve(true);\n  }\n\n  action(option) {\n    spinalPanelManagerService.openPanel(\"createTicketContextDialog\")\n  }\n\n}","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalPanelManagerService = require(\"./SpinalPanelManagerService\");\nconst SpinalPanelApp = require(\"./SpinalPanelApp\");\n\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalPanelManagerService === \"undefined\")\n  G_root.spinal.spinalPanelManagerService = new SpinalPanelManagerService();\nconst SpinalMountExtention = require(\"./SpinalMountExtention.js\")(\n  G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  spinalPanelManagerService: G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp,\n  SpinalMountExtention,\n  install(Vue) {\n    Vue.prototype.$spinalPanelManagerService =\n      G_root.spinal.spinalPanelManagerService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} panels key = panelName, value = an instance of SpinalPanelApp\n * @class SpinalPanelManagerService\n */\nclass SpinalPanelManagerService {\n  /**\n   *Creates an instance of SpinalPanelManagerService.\n   * @memberof SpinalPanelManagerService\n   */\n  constructor() {\n    this.panels = {};\n  }\n\n  /**\n   * method to register an Panel Application\n   *\n   * @param {string} panelName the name of the panel\n   * @param {SpinalPanelApp} spinalPanelApp the application\n   * @memberof SpinalPanelManagerService\n   */\n  registerPanel(panelName, spinalPanelApp) {\n    this.panels[panelName] = spinalPanelApp;\n  }\n\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  openPanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].openPanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  closePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].closePanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  tooglePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].tooglePanel(option);\n    return false;\n  }\n}\n\nmodule.exports = SpinalPanelManagerService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n * Base interface like class of a panel\n *\n * @class SpinalPanelApp\n */\nclass SpinalPanelApp {\n  constructor() {}\n\n  openPanel(option) {}\n  closePanel(option) {}\n  tooglePanel(option) {}\n}\n\nmodule.exports = SpinalPanelApp;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (!option.vueMountComponent) {\n    throw new Error(\"mount : missing option vueMountComponent\");\n  }\n\n  cfg.name = option.name || \"SpinalMount\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.parentContainer = option.parentContainer || document.body;\n  return cfg;\n}\n\nfunction getDialog() {\n  if (!this.dialog) {\n    this.dialog = document.createElement(\"div\");\n    const _compo = document.createElement(\"div\");\n    this.dialog.className = \"spinal-modal-container\";\n    this.cfg.parentContainer.appendChild(this.dialog);\n    this.dialog.appendChild(_compo);\n    this.compoment = new this.cfg.vueMountComponent({\n      propsData: {\n        onFinised: this.onFinised.bind(this)\n      }\n    }).$mount(_compo);\n  }\n  return this.dialog;\n}\n\n/**\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { mount }\n */\nmodule.exports = function(spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n```js\n{\n  name: \"myCustomDialogName\",\n  vueMountComponent: Vue.extend(aVueCompomentDialog),\n  parentContainer: document.body\n}```\n     *\n     * @param {*} option\n     */\n    mount(option) {\n      let cfg = configInit(option);\n      const SpinalMount = class extends SpinalPanelApp {\n        constructor() {\n          super();\n          this.cfg = cfg;\n          this.dialog = null;\n          this.compoment = null;\n        }\n\n        openPanel(opt) {\n          getDialog.call(this);\n          this.compoment.opened(opt);\n        }\n        closePanel(opt) {\n          if (this.dialog !== null) {\n            this.compoment.removed(opt);\n            this.dialog.remove();\n            this.dialog = null;\n            this.compoment = null;\n          }\n        }\n\n        tooglePanel(opt) {\n          if (this.dialog !== null) {\n            this.closePanel(opt);\n          } else {\n            this.openPanel(opt);\n          }\n        }\n\n        /**\n         * called when dialog closed by the dialog itself\n         */\n        onFinised(closeResult) {\n          this.closePanel(closeResult);\n        }\n      };\n      let SpinalMountInstance = new SpinalMount();\n      spinalPanelManagerService.registerPanel(cfg.name, SpinalMountInstance);\n    }\n  };\n};\n","import {\n  SpinalContextApp\n} from 'spinal-env-viewer-context-menu-service'\n\nimport {\n  spinalPanelManagerService\n} from 'spinal-env-viewer-panel-manager-service';\n\nimport {\n  SERVICE_TYPE\n} from \"spinal-service-ticket/dist/Constants\";\n\nexport class CreateProcess extends SpinalContextApp {\n\n  constructor() {\n    super('Create ticket Process',\n      'This button allows you to create ticket processes', {\n        icon: \"category\",\n        icon_type: 'in',\n        backgroundColor: \"#356BAB\",\n        fontColor: '#ffffff'\n      })\n  }\n\n\n  isShown(option) {\n    const type = option.selectedNode.type.get();\n\n    return Promise.resolve(type === SERVICE_TYPE ? true : -1);\n\n  }\n\n  action(option) {\n    const contextId = option.context.id.get();\n\n    spinalPanelManagerService.openPanel(\"createProcessDialog\", {\n      contextId\n    })\n  }\n\n}","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ARCHIVE_TICKET_RELATIONS = exports.ARCHIVE_TICKET_TIMESTAMP_ATTR_SPATIAL = exports.ARCHIVE_TICKET_TIMESTAMP_ATTR_PROCESS = exports.ARCHIVE_TICKET_RELATION_TYPE = exports.ARCHIVE_TICKET_PART_TICKET_RELATION = exports.ARCHIVE_TICKET_PART_TYPE = exports.ARCHIVE_TICKET_PART_RELATION = exports.SPATIAL_ARCHIVE_TICKET_TYPE = exports.SPATIAL_ARCHIVE_TICKET_RELATION = exports.PROCESS_ARCHIVE_TICKET_TYPE = exports.PROCESS_ARCHIVE_TICKET_RELATION = exports._TICKET_PRIORITIES = exports.LOGS_EVENTS_STEPS = exports.LOG_TYPE = exports.LOG_RELATION_NAME = exports.LOG_RELATION_TYPE = exports._DEFAULT_INCIDENTS_NAME = exports.INCIDENT_TYPE = exports.INCIDENT_RELATION_NAME = exports.INCIDENT_RELATION_TYPE = exports.INCIDENT_SECTION_RELATION_NAME = exports.INCIDENT_SECTION_TYPE = exports.INCIDENT_SECTION_RELATION_TYPE = exports._DEFAULT_STEPS = exports._ARCHIVED_STEP = exports.DEFAULT_STEPS = exports.ARCHIVED_STEP = exports.STEP_TYPE = exports.STEP_RELATION_NAME = exports.STEP_RELATION_TYPE = exports._PROCESS_TYPE = exports.PROCESS_RELATION_NAME = exports.PROCESS_RELATION_TYPE = exports.ALARM_RELATION_NAME = exports.TICKET_ATTRIBUTE_OCCURENCE_NAME = exports.TIKET_TYPE = exports.TICKET_RELATION_NAME = exports.TICKET_RELATION_TYPE = exports.TICKET_CONTEXT_SUBTYPE_LIST = exports.TICKET_CONTEXT_TYPE = exports.GEO_TYPES = void 0;\n/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\nconst OLD_CONSTANTS = require(\"./old_constants\");\n__exportStar(require(\"./old_constants\"), exports);\nconst spinal_model_graph_1 = require(\"spinal-model-graph\");\nvar spinal_env_viewer_context_geographic_service_1 = require(\"spinal-env-viewer-context-geographic-service\");\nObject.defineProperty(exports, \"GEO_TYPES\", { enumerable: true, get: function () { return spinal_env_viewer_context_geographic_service_1.GEOGRAPHIC_TYPES_ORDER; } });\nexports.TICKET_CONTEXT_TYPE = OLD_CONSTANTS.SERVICE_TYPE;\nexports.TICKET_CONTEXT_SUBTYPE_LIST = ['Ticket', 'Alarm'];\n/////////////////////////////////////////\n/////////////// TICKET ///////////////////\nexports.TICKET_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE; // STEP_TO_TICKET_RELATION_TYPE\nexports.TICKET_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME; // STEP_TO_TICKET_RELATION_NAME\nexports.TIKET_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_TYPE;\nexports.TICKET_ATTRIBUTE_OCCURENCE_NAME = 'Occurrence number';\nexports.ALARM_RELATION_NAME = 'hasAlarm';\n/////////////////////////////////////////\n/////////////// PROCESS /////////////////\nexports.PROCESS_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE; // CONTEXT_TO_PROCESS_RELATION_TYPE\nexports.PROCESS_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME; //CONTEXT_TO_PROCESS_RELATION_NAME\nexports._PROCESS_TYPE = OLD_CONSTANTS.PROCESS_TYPE;\n//////////////////////////////////////\n/////////////// STEP /////////////////\nexports.STEP_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE; // PROCESS_TO_STEP_RELATION_TYPE\nexports.STEP_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_RELATION_NAME; // PROCESS_TO_STEP_RELATION_NAME\nexports.STEP_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_TYPE;\nexports.ARCHIVED_STEP = OLD_CONSTANTS.ARCHIVED_STEP;\nexports.DEFAULT_STEPS = OLD_CONSTANTS.DEFAULT_STEPS;\nexports._ARCHIVED_STEP = OLD_CONSTANTS.ARCHIVED_STEP;\nexports._DEFAULT_STEPS = OLD_CONSTANTS.DEFAULT_STEPS;\n/////////////////////////////////////////\n/////////////// CATEGORY ////////////////\nexports.INCIDENT_SECTION_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_TYPE;\nexports.INCIDENT_SECTION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE;\nexports.INCIDENT_SECTION_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME;\nexports.INCIDENT_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_TYPE;\nexports.INCIDENT_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME;\nexports.INCIDENT_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_TYPE;\nexports._DEFAULT_INCIDENTS_NAME = OLD_CONSTANTS.DEFAULT_INCIDENTS_NAME;\nexports.LOG_RELATION_TYPE = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE;\nexports.LOG_RELATION_NAME = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_LOG_RELATION_NAME;\nexports.LOG_TYPE = OLD_CONSTANTS.SERVICE_LOG_TYPE;\nexports.LOGS_EVENTS_STEPS = OLD_CONSTANTS.LOGS_EVENTS;\nexports._TICKET_PRIORITIES = OLD_CONSTANTS.TICKET_PRIORITIES;\n/////////////////////////////////////////\n/////////////// ARCHIVE ////////////////\nexports.PROCESS_ARCHIVE_TICKET_RELATION = 'ProcessHasArchiveTicket';\nexports.PROCESS_ARCHIVE_TICKET_TYPE = 'ProcessArchiveTicket';\nexports.SPATIAL_ARCHIVE_TICKET_RELATION = 'SpatialHasArchiveTicket';\nexports.SPATIAL_ARCHIVE_TICKET_TYPE = 'SpatialArchiveTicket';\nexports.ARCHIVE_TICKET_PART_RELATION = 'ArchiveTicketHasPart';\nexports.ARCHIVE_TICKET_PART_TYPE = 'ArchiveTicketPart';\nexports.ARCHIVE_TICKET_PART_TICKET_RELATION = 'ArchiveTicketPartHasTicket';\nexports.ARCHIVE_TICKET_RELATION_TYPE = spinal_model_graph_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.ARCHIVE_TICKET_TIMESTAMP_ATTR_PROCESS = 'ProcessArchiveTimestamp';\nexports.ARCHIVE_TICKET_TIMESTAMP_ATTR_SPATIAL = 'SpatialArchiveTimestamp';\nexports.ARCHIVE_TICKET_RELATIONS = [\n    exports.SPATIAL_ARCHIVE_TICKET_RELATION,\n    exports.ARCHIVE_TICKET_PART_RELATION,\n];\n//# sourceMappingURL=Constants.js.map","/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\nimport * as OLD_CONSTANTS from './old_constants';\nexport * from './old_constants';\nimport { SPINAL_RELATION_PTR_LST_TYPE } from 'spinal-model-graph';\nexport { GEOGRAPHIC_TYPES_ORDER as GEO_TYPES } from 'spinal-env-viewer-context-geographic-service';\nimport { GEOGRAPHIC_TYPES_ORDER as GEO_TYPES } from 'spinal-env-viewer-context-geographic-service';\n\nexport const TICKET_CONTEXT_TYPE: string = OLD_CONSTANTS.SERVICE_TYPE;\nexport const TICKET_CONTEXT_SUBTYPE_LIST: Array<string> = ['Ticket', 'Alarm'];\n/////////////////////////////////////////\n/////////////// TICKET ///////////////////\nexport const TICKET_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE; // STEP_TO_TICKET_RELATION_TYPE\nexport const TICKET_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME; // STEP_TO_TICKET_RELATION_NAME\nexport const TIKET_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_TICKET_TYPE;\nexport const TICKET_ATTRIBUTE_OCCURENCE_NAME = 'Occurrence number';\nexport const ALARM_RELATION_NAME = 'hasAlarm';\n/////////////////////////////////////////\n/////////////// PROCESS /////////////////\nexport const PROCESS_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE; // CONTEXT_TO_PROCESS_RELATION_TYPE\nexport const PROCESS_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME; //CONTEXT_TO_PROCESS_RELATION_NAME\nexport const _PROCESS_TYPE: string = OLD_CONSTANTS.PROCESS_TYPE;\n//////////////////////////////////////\n/////////////// STEP /////////////////\nexport const STEP_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE; // PROCESS_TO_STEP_RELATION_TYPE\nexport const STEP_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_RELATION_NAME; // PROCESS_TO_STEP_RELATION_NAME\nexport const STEP_TYPE: string = OLD_CONSTANTS.SPINAL_TICKET_SERVICE_STEP_TYPE;\n\nexport const ARCHIVED_STEP = OLD_CONSTANTS.ARCHIVED_STEP;\nexport const DEFAULT_STEPS = OLD_CONSTANTS.DEFAULT_STEPS;\nexport const _ARCHIVED_STEP = OLD_CONSTANTS.ARCHIVED_STEP;\nexport const _DEFAULT_STEPS = OLD_CONSTANTS.DEFAULT_STEPS;\n\n/////////////////////////////////////////\n/////////////// CATEGORY ////////////////\nexport const INCIDENT_SECTION_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_TYPE;\nexport const INCIDENT_SECTION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE;\nexport const INCIDENT_SECTION_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME;\nexport const INCIDENT_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_TYPE;\nexport const INCIDENT_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME;\nexport const INCIDENT_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_INCIDENT_TYPE;\nexport const _DEFAULT_INCIDENTS_NAME: string =\n  OLD_CONSTANTS.DEFAULT_INCIDENTS_NAME;\nexport const LOG_RELATION_TYPE: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE;\nexport const LOG_RELATION_NAME: string =\n  OLD_CONSTANTS.SPINAL_TICKET_SERVICE_LOG_RELATION_NAME;\nexport const LOG_TYPE: string = OLD_CONSTANTS.SERVICE_LOG_TYPE;\nexport const LOGS_EVENTS_STEPS = OLD_CONSTANTS.LOGS_EVENTS;\nexport const _TICKET_PRIORITIES = OLD_CONSTANTS.TICKET_PRIORITIES;\n\n/////////////////////////////////////////\n/////////////// ARCHIVE ////////////////\nexport const PROCESS_ARCHIVE_TICKET_RELATION = 'ProcessHasArchiveTicket';\nexport const PROCESS_ARCHIVE_TICKET_TYPE = 'ProcessArchiveTicket';\nexport const SPATIAL_ARCHIVE_TICKET_RELATION = 'SpatialHasArchiveTicket';\nexport const SPATIAL_ARCHIVE_TICKET_TYPE = 'SpatialArchiveTicket';\nexport const ARCHIVE_TICKET_PART_RELATION = 'ArchiveTicketHasPart';\nexport const ARCHIVE_TICKET_PART_TYPE = 'ArchiveTicketPart';\nexport const ARCHIVE_TICKET_PART_TICKET_RELATION = 'ArchiveTicketPartHasTicket';\nexport const ARCHIVE_TICKET_RELATION_TYPE = SPINAL_RELATION_PTR_LST_TYPE;\nexport const ARCHIVE_TICKET_TIMESTAMP_ATTR_PROCESS = 'ProcessArchiveTimestamp';\nexport const ARCHIVE_TICKET_TIMESTAMP_ATTR_SPATIAL = 'SpatialArchiveTimestamp';\nexport const ARCHIVE_TICKET_RELATIONS = [\n  SPATIAL_ARCHIVE_TICKET_RELATION,\n  ARCHIVE_TICKET_PART_RELATION,\n];\n","\"use strict\";\n/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TICKET_PRIORITIES = exports.LOGS_EVENTS_STRING = exports.LOGS_EVENTS_STEPS = exports.LOG_TYPE = exports.LOG_RELATION_NAME = exports.LOG_RELATION_TYPE = exports.EVENTS_TO_LOG = exports.LOGS_EVENTS = exports.SERVICE_LOG_TYPE = exports.SPINAL_TICKET_SERVICE_LOG_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE = exports.DEFAULT_INCIDENTS_NAME = exports.SPINAL_TICKET_SERVICE_INCIDENT_TYPE = exports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE = exports.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_TYPE = exports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_TYPE = exports.DEFAULT_STEPS = exports.ARCHIVED_STEP = exports.SPINAL_TICKET_SERVICE_STEP_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_STEP_TYPE = exports.SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE = exports.PROCESS_TYPE = exports.SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE = exports.SPINAL_TICKET_SERVICE_TICKET_TYPE = exports.SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE = exports.SERVICE_TYPE = exports.SERVICE_NAME = void 0;\nconst spinal_env_viewer_graph_service_1 = require(\"spinal-env-viewer-graph-service\");\nexports.SERVICE_NAME = 'Ticket Service';\nexports.SERVICE_TYPE = 'SpinalSystemServiceTicket';\n/////////////////////////////////////////\n/////////////// TICKET ///////////////////\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME = 'SpinalSystemServiceTicketHasTicket';\nexports.SPINAL_TICKET_SERVICE_TICKET_TYPE = 'SpinalSystemServiceTicketTypeTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION: string = 'SpinalSystemServiceHasTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_NAME: string = 'Tickets';\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_NAME: string = 'SpinalSystemServiceHasTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasTicket';\n// export const SECTION_RELATION_TYPE = SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_TYPE;\n/**\n * New values\n */\n// export const TICKET_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE; // STEP_TO_TICKET_RELATION_TYPE\n// export const TICKET_RELATION_NAME: string = SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME; // STEP_TO_TICKET_RELATION_NAME\n// export const TIKET_TYPE: string = SPINAL_TICKET_SERVICE_TICKET_TYPE;\n/////////////////////////////////////////\n/////////////// PROCESS /////////////////\nexports.SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME = 'SpinalSystemServiceTicketHasProcess';\nexports.PROCESS_TYPE = 'SpinalServiceTicketProcess';\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Process';\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasProcess';\n// export const SPINAL_TICKET_SERVICE_PROCESS_TYPE: string = 'SpinalSystemServiceTicketTypeProcess';\n// export const PROCESS_HAS_TICKET_RELATION_NAME: string = 'SpinalSystemService_ProcessHasTicket';\n// export const PROCESS_HAS_TICKET_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n/**\n * New values\n */\n// export const PROCESS_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE; // CONTEXT_TO_PROCESS_RELATION_TYPE\n// export const PROCESS_RELATION_NAME: string = SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME; //CONTEXT_TO_PROCESS_RELATION_NAME\n// export const PROCESS_TYPE: string = 'SpinalServiceTicketProcess';\n//////////////////////////////////////\n/////////////// STEP /////////////////\nexports.SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_STEP_TYPE = 'SpinalSystemServiceTicketTypeStep';\nexports.SPINAL_TICKET_SERVICE_STEP_RELATION_NAME = 'SpinalSystemServiceTicketHasStep';\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasStep';\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Step';\n/**\n * New values\n */\n// export const STEP_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE; // PROCESS_TO_STEP_RELATION_TYPE\n// export const STEP_RELATION_NAME: string = SPINAL_TICKET_SERVICE_STEP_RELATION_NAME; // PROCESS_TO_STEP_RELATION_NAME\n// export const STEP_TYPE: string = SPINAL_TICKET_SERVICE_STEP_TYPE;\nexports.ARCHIVED_STEP = {\n    name: \"Archived\",\n    order: -1,\n    color: \"#FF0000\"\n};\nexports.DEFAULT_STEPS = [\n    { name: 'Déclaré', color: '#ff0019', order: 0 },\n    { name: 'Ouvert', color: '#fff112', order: 1 },\n    { name: 'Résolu', color: '#10ff1d', order: 2 },\n    exports.ARCHIVED_STEP\n];\n/////////////////////////////////////////\n/////////////// CATEGORY ////////////////\nexports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE = 'DEFAULT_INCIDENT_TYPE';\nexports.SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME = 'Spinal_Service_Ticket_Process_has_category';\nexports.SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME = 'Spinal_Service_Ticket_Process_has_categories_section';\nexports.SPINAL_TICKET_SERVICE_INCIDENT_TYPE = 'INCIDENT_TYPE';\nexports.DEFAULT_INCIDENTS_NAME = 'Incidents commun';\n// export const SPINAL_TICKET_SERVICE_INCIDENT_SUB_SECTION_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_INCIDENT_SUB_SECTION_RELATION_NAME: string = 'Spinal_Service_Ticket_Process_has_sub_category';\n// export const DEFAULT_INCIDENT_TYPE: string = SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE;\n// export const DEFAULT_INCIDENT_RELATION_NAME: string = SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME;\n// export const fdg: string = SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME;\n/////////////////////////////////////////\n/////////////// ARCHIVE /////////////////\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Ticket';\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceTicketHasArchive';\n// export const SERVICE_ARCHIVE_TYPE: string = 'SpinalSystemServiceTicketArchive';\n/////////////////////////////////////////\n/////////////// LOG /////////////////\nexports.SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.SPINAL_TICKET_SERVICE_LOG_RELATION_NAME = 'SpinalSystemServiceTicketHasLog';\nexports.SERVICE_LOG_TYPE = 'SpinalSystemServiceTicketLog';\nvar LOGS_EVENTS;\n(function (LOGS_EVENTS) {\n    LOGS_EVENTS[LOGS_EVENTS[\"creation\"] = 1] = \"creation\";\n    LOGS_EVENTS[LOGS_EVENTS[\"moveToNext\"] = 2] = \"moveToNext\";\n    LOGS_EVENTS[LOGS_EVENTS[\"moveToPrevious\"] = 3] = \"moveToPrevious\";\n    LOGS_EVENTS[LOGS_EVENTS[\"archived\"] = 4] = \"archived\";\n    LOGS_EVENTS[LOGS_EVENTS[\"unarchive\"] = 5] = \"unarchive\";\n    LOGS_EVENTS[LOGS_EVENTS[\"move\"] = 6] = \"move\";\n})(LOGS_EVENTS = exports.LOGS_EVENTS || (exports.LOGS_EVENTS = {}));\nexports.EVENTS_TO_LOG = Object.freeze({\n    1: \"creation\",\n    2: \"moveToNext\",\n    3: \"moveToPrevious\",\n    4: \"archived\",\n    5: \"unarchive\",\n    6: \"move\"\n});\nexports.LOG_RELATION_TYPE = exports.SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE;\nexports.LOG_RELATION_NAME = exports.SPINAL_TICKET_SERVICE_LOG_RELATION_NAME;\nexports.LOG_TYPE = exports.SERVICE_LOG_TYPE;\nexports.LOGS_EVENTS_STEPS = LOGS_EVENTS;\nexports.LOGS_EVENTS_STRING = [\n    \"none\",\n    \"creation\",\n    \"moveToNext\",\n    \"moveToPrevious\",\n    \"archived\",\n    \"unarchive\",\n    \"move\"\n];\n/////////////////////////////////////////\n/////////////// Target /////////////////\n// export const SPINAL_TICKET_SERVICE_TARGET_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_TARGET_RELATION_NAME: string = 'SpinalSystemServiceTicketHasLocation';\n/////////////////////////////////////////\n/////////////// USER ////////////////////\n// export const USER_RELATION_NAME: string = 'userHasDeclaredTicket';\n// export const USER_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n/////////////////////////////////////////\n/////////////// ticket ////////////////////\n// tickethasReferentiel\nexports.TICKET_PRIORITIES = {\n    occasionally: 0,\n    normal: 1,\n    urgent: 2,\n};\n//# sourceMappingURL=old_constants.js.map","/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SPINAL_RELATION_PTR_LST_TYPE } from 'spinal-env-viewer-graph-service';\nimport { SpinalStep } from 'spinal-models-ticket/declarations/SpinalStep';\n\nexport const SERVICE_NAME: string = 'Ticket Service';\nexport const SERVICE_TYPE: string = 'SpinalSystemServiceTicket';\n\n/////////////////////////////////////////\n/////////////// TICKET ///////////////////\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME: string = 'SpinalSystemServiceTicketHasTicket';\nexport const SPINAL_TICKET_SERVICE_TICKET_TYPE: string = 'SpinalSystemServiceTicketTypeTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION: string = 'SpinalSystemServiceHasTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_NAME: string = 'Tickets';\n// export const SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_NAME: string = 'SpinalSystemServiceHasTicket';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasTicket';\n// export const SECTION_RELATION_TYPE = SPINAL_TICKET_SERVICE_TICKET_SECTION_RELATION_TYPE;\n\n/**\n * New values\n */\n// export const TICKET_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_TICKET_RELATION_TYPE; // STEP_TO_TICKET_RELATION_TYPE\n// export const TICKET_RELATION_NAME: string = SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME; // STEP_TO_TICKET_RELATION_NAME\n// export const TIKET_TYPE: string = SPINAL_TICKET_SERVICE_TICKET_TYPE;\n\n/////////////////////////////////////////\n/////////////// PROCESS /////////////////\nexport const SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME: string = 'SpinalSystemServiceTicketHasProcess';\nexport const PROCESS_TYPE: string = 'SpinalServiceTicketProcess';\n\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Process';\n// export const SPINAL_TICKET_SERVICE_PROCESS_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasProcess';\n// export const SPINAL_TICKET_SERVICE_PROCESS_TYPE: string = 'SpinalSystemServiceTicketTypeProcess';\n// export const PROCESS_HAS_TICKET_RELATION_NAME: string = 'SpinalSystemService_ProcessHasTicket';\n// export const PROCESS_HAS_TICKET_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n\n/**\n * New values\n */\n// export const PROCESS_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_PROCESS_RELATION_TYPE; // CONTEXT_TO_PROCESS_RELATION_TYPE\n// export const PROCESS_RELATION_NAME: string = SPINAL_TICKET_SERVICE_PROCESS_RELATION_NAME; //CONTEXT_TO_PROCESS_RELATION_NAME\n// export const PROCESS_TYPE: string = 'SpinalServiceTicketProcess';\n\n\n//////////////////////////////////////\n/////////////// STEP /////////////////\nexport const SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_STEP_TYPE: string = 'SpinalSystemServiceTicketTypeStep';\nexport const SPINAL_TICKET_SERVICE_STEP_RELATION_NAME: string = 'SpinalSystemServiceTicketHasStep';\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceArchiveHasStep';\n// export const SPINAL_TICKET_SERVICE_STEP_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Step';\n\n\n/**\n * New values\n */\n// export const STEP_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_STEP_RELATION_TYPE; // PROCESS_TO_STEP_RELATION_TYPE\n// export const STEP_RELATION_NAME: string = SPINAL_TICKET_SERVICE_STEP_RELATION_NAME; // PROCESS_TO_STEP_RELATION_NAME\n// export const STEP_TYPE: string = SPINAL_TICKET_SERVICE_STEP_TYPE;\n\n\nexport const ARCHIVED_STEP = {\n  name: \"Archived\",\n  order: -1,\n  color: \"#FF0000\"\n}\n\nexport const DEFAULT_STEPS: SpinalStep[] = [\n  { name: 'Déclaré', color: '#ff0019', order: 0 },\n  { name: 'Ouvert', color: '#fff112', order: 1 },\n  { name: 'Résolu', color: '#10ff1d', order: 2 },\n  ARCHIVED_STEP\n];\n\n\n\n/////////////////////////////////////////\n/////////////// CATEGORY ////////////////\nexport const SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_INCIDENT_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE: string = 'DEFAULT_INCIDENT_TYPE';\nexport const SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME: string = 'Spinal_Service_Ticket_Process_has_category';\nexport const SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME: string = 'Spinal_Service_Ticket_Process_has_categories_section';\nexport const SPINAL_TICKET_SERVICE_INCIDENT_TYPE: string = 'INCIDENT_TYPE';\nexport const DEFAULT_INCIDENTS_NAME: string = 'Incidents commun';\n// export const SPINAL_TICKET_SERVICE_INCIDENT_SUB_SECTION_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_INCIDENT_SUB_SECTION_RELATION_NAME: string = 'Spinal_Service_Ticket_Process_has_sub_category';\n\n\n// export const DEFAULT_INCIDENT_TYPE: string = SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE;\n// export const DEFAULT_INCIDENT_RELATION_NAME: string = SPINAL_TICKET_SERVICE_INCIDENT_RELATION_NAME;\n// export const fdg: string = SPINAL_TICKET_SERVICE_INCIDENT_SECTION_RELATION_NAME;\n\n/////////////////////////////////////////\n/////////////// ARCHIVE /////////////////\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive';\n// export const SPINAL_TICKET_SERVICE_TICKET_ARCHIVE_NAME: string = 'Spinal_Service_Ticket_Archive_Archive_Ticket';\n// export const SPINAL_TICKET_SERVICE_ARCHIVE_RELATION_NAME: string = 'SpinalSystemServiceTicketHasArchive';\n// export const SERVICE_ARCHIVE_TYPE: string = 'SpinalSystemServiceTicketArchive';\n\n/////////////////////////////////////////\n/////////////// LOG /////////////////\nexport const SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\nexport const SPINAL_TICKET_SERVICE_LOG_RELATION_NAME: string = 'SpinalSystemServiceTicketHasLog';\nexport const SERVICE_LOG_TYPE: string = 'SpinalSystemServiceTicketLog';\nexport enum LOGS_EVENTS {\n  creation = 1,\n  moveToNext = 2,\n  moveToPrevious = 3,\n  archived = 4,\n  unarchive = 5,\n  move = 6\n}\n\nexport const EVENTS_TO_LOG = Object.freeze({\n  1: \"creation\",\n  2: \"moveToNext\",\n  3: \"moveToPrevious\",\n  4: \"archived\",\n  5: \"unarchive\",\n  6: \"move\"\n})\n\nexport const LOG_RELATION_TYPE: string = SPINAL_TICKET_SERVICE_LOG_RELATION_TYPE;\nexport const LOG_RELATION_NAME: string = SPINAL_TICKET_SERVICE_LOG_RELATION_NAME;\nexport const LOG_TYPE: string = SERVICE_LOG_TYPE;\nexport const LOGS_EVENTS_STEPS = LOGS_EVENTS;\n\n\nexport const LOGS_EVENTS_STRING: string[] = [\n  \"none\",\n  \"creation\",\n  \"moveToNext\",\n  \"moveToPrevious\",\n  \"archived\",\n  \"unarchive\",\n  \"move\"\n]\n\n/////////////////////////////////////////\n/////////////// Target /////////////////\n// export const SPINAL_TICKET_SERVICE_TARGET_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n// export const SPINAL_TICKET_SERVICE_TARGET_RELATION_NAME: string = 'SpinalSystemServiceTicketHasLocation';\n\n/////////////////////////////////////////\n/////////////// USER ////////////////////\n// export const USER_RELATION_NAME: string = 'userHasDeclaredTicket';\n// export const USER_RELATION_TYPE: string = SPINAL_RELATION_PTR_LST_TYPE;\n\n/////////////////////////////////////////\n/////////////// ticket ////////////////////\n// tickethasReferentiel\n\nexport const TICKET_PRIORITIES: { [key: string]: number } = {\n  occasionally: 0,\n  normal: 1,\n  urgent: 2,\n}","import {\n  SpinalContextApp\n} from \"spinal-env-viewer-context-menu-service\";\n\nimport {\n  spinalPanelManagerService\n} from \"spinal-env-viewer-panel-manager-service\";\n\nimport {\n  SERVICE_TYPE,\n  PROCESS_TYPE\n} from \"spinal-service-ticket/dist/Constants\";\n\nexport class CreateStep extends SpinalContextApp {\n  constructor() {\n    super(\"create ticket step\", \"this button allows to create ticket step\", {\n      icon: \"post_add\",\n      icon_type: \"in\",\n      backgroundColor: \"#356BAB\",\n      fontColor: \"#ffffff\"\n    })\n  }\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const processType = option.selectedNode.type.get();\n\n    const res = contextType === SERVICE_TYPE && processType === PROCESS_TYPE ?\n      true : -1;\n\n    return Promise.resolve(res);\n\n  }\n\n  action(option) {\n    const contextId = option.context.id.get();\n    const processId = option.selectedNode.id.get();\n\n    spinalPanelManagerService.openPanel(\"createStepDialog\", {\n      contextId,\n      processId\n    });\n  }\n\n}","import {\n  SpinalContextApp\n} from \"spinal-env-viewer-context-menu-service\";\n\nimport {\n  spinalPanelManagerService\n} from \"spinal-env-viewer-panel-manager-service\";\n\nimport {\n  SERVICE_TYPE,\n  SPINAL_TICKET_SERVICE_STEP_TYPE\n} from \"spinal-service-ticket/dist/Constants\";\n\nimport {\n  SpinalGraphService,\n  SpinalNode\n} from \"spinal-env-viewer-graph-service\";\n\n\n\nexport class CreateTicket extends SpinalContextApp {\n  constructor() {\n    super(\"create ticket\", \"this button allows to create ticket\", {\n      icon: \"receipt\",\n      icon_type: \"in\",\n      backgroundColor: \"#356BAB\",\n      fontColor: \"#ffffff\"\n    })\n  }\n\n  isShown(option) {\n\n    if (!option.selectedNode || !option.context) return Promise.resolve(true);\n\n    const contextType = option.context.type.get();\n    const stepType = option.selectedNode.type.get();\n\n    const res = contextType !== SERVICE_TYPE && stepType !==\n      SPINAL_TICKET_SERVICE_STEP_TYPE ?\n      true : -1;\n\n    return Promise.resolve(res);\n\n  }\n\n  async action(option) {\n    let info = option.selectedNode;\n\n    if (typeof info === \"undefined\")\n      info = await createBimObjectNode(option);\n\n    const realNode = getSelectedNode(info);\n\n    // manageTicketPanel\n\n    spinalPanelManagerService.openPanel(\"manageTicketPanel\", {\n      selectedNode: realNode\n    });\n  }\n\n}\n\n\nconst getSelectedNode = (selectedNode) => {\n  if (typeof selectedNode === \"undefined\") return;\n\n  if (selectedNode instanceof SpinalNode)\n    return selectedNode;\n\n  return SpinalGraphService.getRealNode(selectedNode.id.get());\n}\n\n\nconst createBimObjectNode = (params) => {\n\n  const viewer = spinal.ForgeViewer.viewer;\n\n  // const aggregateSelection = viewer.getAggregateSelection()[0];\n\n\n  if (typeof params.dbid !== \"undefined\" && params.model3d) {\n    const dbid = params.dbid;\n    const model = params.model3d;\n\n\n    return new Promise((resolve) => {\n      viewer.model.getProperties(dbid, async res => {\n        const node = await window.spinal.BimObjectService\n          .createBIMObject(dbid, res.name, model)\n        resolve(node);\n      })\n\n    });\n  }\n}","import {\n  SpinalContextApp\n} from 'spinal-env-viewer-context-menu-service'\n\nimport {\n  spinalPanelManagerService\n} from 'spinal-env-viewer-panel-manager-service';\n\nimport {\n  SERVICE_TYPE,\n  SPINAL_TICKET_SERVICE_STEP_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_TYPE\n} from \"spinal-service-ticket/dist/Constants\";\n\nexport class ManageTicketButton extends SpinalContextApp {\n\n  constructor() {\n    super('Manage Ticket',\n      'Manage ticket', {\n        icon: \"assignment\",\n        icon_type: 'in',\n        backgroundColor: \"#356BAB\",\n        fontColor: '#ffffff'\n      })\n  }\n\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const nodeType = option.selectedNode.type.get();\n\n    if (contextType !== SERVICE_TYPE) return Promise.resolve(-1);\n\n    // const displayIt = nodeType === SPINAL_TICKET_SERVICE_TICKET_TYPE ||\n    //   nodeType === SPINAL_TICKET_SERVICE_STEP_TYPE;\n\n    const displayIt = nodeType !== SPINAL_TICKET_SERVICE_TICKET_TYPE;\n\n    return Promise.resolve(displayIt ? true : -1);\n\n  }\n\n  action(option) {\n    const params = {\n      selectedNode: option.selectedNode.get(),\n      context: option.context.get()\n    }\n    spinalPanelManagerService.openPanel(\"ticketManagerPanel\", params);\n  }\n\n}","/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport {\n  SpinalContextApp\n} from 'spinal-env-viewer-context-menu-service';\nimport {\n  spinalPanelManagerService\n} from 'spinal-env-viewer-panel-manager-service';\nimport {\n  PROCESS_TYPE,\n  SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE\n} from \"spinal-service-ticket/dist/Constants\";\n\n\nexport class CreateCommonIncident extends SpinalContextApp {\n\n  constructor() {\n    super('Add common incident', 'Add common incident', {\n      icon: 'font_download',\n      icon_type: 'in',\n      backgroundColor: '#000000',\n      fontColor: '#ffffff',\n    });\n  }\n\n  isShown(option) {\n    if (\n      (option.selectedNode.type.get() === PROCESS_TYPE ||\n        option.selectedNode.type.get() ===\n        SPINAL_TICKET_SERVICE_INCIDENT_SECTION_TYPE)\n    ) {\n      return Promise.resolve(true);\n    } else {\n      return Promise.resolve(-1);\n    }\n  }\n\n  action(option) {\n    const nodeInfo = option.selectedNode.get();\n    spinalPanelManagerService.openPanel(\"createCommonIncidentDialog\",\n      nodeInfo);\n  }\n}","import {\n  SpinalContextApp\n} from 'spinal-env-viewer-context-menu-service'\n\nimport {\n  spinalPanelManagerService\n} from 'spinal-env-viewer-panel-manager-service';\n\nimport {\n  SERVICE_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_TYPE\n} from \"spinal-service-ticket/dist/Constants\";\n\nexport class SeeTicketDetailButton extends SpinalContextApp {\n\n  constructor() {\n    super('See Ticket\\' detail',\n      'See ticket\\'s detail', {\n        icon: \"assignment_late\",\n        icon_type: 'in',\n        backgroundColor: \"#356BAB\",\n        fontColor: '#ffffff'\n      })\n  }\n\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const nodeType = option.selectedNode.type.get();\n\n    if (contextType === SERVICE_TYPE && nodeType ===\n      SPINAL_TICKET_SERVICE_TICKET_TYPE) return Promise.resolve(true);\n    return Promise.resolve(-1)\n  }\n\n  action(option) {\n    const params = {\n      selectedNode: option.selectedNode.get(),\n      context: option.context.get()\n    }\n    spinalPanelManagerService.openPanel(\"ticketDetailDialog\", params);\n  }\n\n}","import {\n  SpinalContextApp\n} from \"spinal-env-viewer-context-menu-service\";\n\nimport {\n  spinalPanelManagerService\n} from \"spinal-env-viewer-panel-manager-service\";\n\nimport {\n  SERVICE_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME,\n  SPINAL_TICKET_SERVICE_STEP_TYPE\n} from \"spinal-service-ticket/dist/Constants\";\n\nimport {\n  spinalIO\n} from \"../extensions/spinalIO\";\n\nimport {\n  SpinalGraphService\n} from \"spinal-env-viewer-graph-service\";\n\nimport {\n  serviceTicketPersonalized\n} from \"spinal-service-ticket\";\n\nimport EventBUS from '../extensions/Event'\nimport {\n  TICKET_EVENTS\n} from '../extensions/ticketsEvents'\n\nexport class PassToNextStepButton extends SpinalContextApp {\n  constructor() {\n    super(\"Pass to next step\", \"Pass the ticket to next step\", {\n      icon: \"skip_next\",\n      icon_type: \"in\",\n      backgroundColor: \"#356BAB\",\n      fontColor: \"#ffffff\",\n    });\n  }\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const nodeType = option.selectedNode.type.get();\n\n    if (\n      contextType === SERVICE_TYPE &&\n      nodeType === SPINAL_TICKET_SERVICE_TICKET_TYPE\n    )\n      return Promise.resolve(true);\n    return Promise.resolve(-1);\n  }\n\n  async action(option) {\n    const user = await spinalIO.getUserConnected();\n\n    const contextId = option.context.id.get();\n    const ticketId = option.selectedNode.id.get();\n    const processId = await getProcessId(ticketId);\n\n    // console.log(contextId, ticketId, processId)\n\n    if (contextId && ticketId && processId) {\n      spinalPanelManagerService.openPanel(\"confirmationDialog\", {\n        message: \"do you want to pass this ticket to the next step ?\",\n        callback: () => {\n          serviceTicketPersonalized.moveTicketToNextStep(\n            contextId,\n            processId,\n            ticketId,\n            user\n          ).then((step) => {\n            const info = SpinalGraphService.getInfo(ticketId).get();\n            EventBUS.$emit(TICKET_EVENTS.changeStep, {\n              ticket: info,\n              step: step\n            });\n          });\n        },\n      });\n    }\n  }\n}\n\nconst getProcessId = async (ticketId) => {\n  const parents = await SpinalGraphService.getParents(ticketId, [\n    SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME,\n  ]);\n\n  const found = parents.find(\n    (el) => el.type.get() === SPINAL_TICKET_SERVICE_STEP_TYPE\n  );\n\n  if (found) return found.processId.get();\n};","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n\nimport {\n  File,\n  spinalCore,\n  FileSystem\n} from 'spinal-core-connectorjs_type';\n\nimport {\n  decriAes,\n  decriB64\n} from './crypt';\n\nlet $ = require(\"jquery\");\n\nconst SpinalUserManager = window.SpinalUserManager;\n\nfunction getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nclass SpinalIO {\n  constructor() {\n    this.loadPromise = {};\n    this.connectPromise = null;\n    this.user = null;\n    this.conn = null;\n  }\n\n  decriJson(encryptedHex) {\n    try {\n      const k = [10, 95, 124, 68, 55, 24, 90, 57, 34, 65, 81, 22, 75, 7, 110,\n        1\n      ];\n      const str = decriAes(k, encryptedHex);\n      return JSON.parse(str);\n    } catch (e) {\n      const str = decriB64(encryptedHex);\n      try {\n        return JSON.parse(str);\n      } catch (e) {\n        return '';\n      }\n    }\n  }\n\n\n  getauth() {\n    if (this.user !== null) return this.user;\n    const encryptedHex = window.localStorage.getItem('spinalhome_cfg');\n    this.user = this.decriJson(encryptedHex);\n    return this.user;\n  }\n\n  connect() {\n    // if (this.connectPromise !== null) {\n    //   return this.connectPromise;\n    // }\n\n    // this.connectPromise = new Promise((resolve, reject) => {\n    //   $(document).ready(() => {\n\n    //     FileSystem.CONNECTOR_TYPE = \"Browser\"\n\n    //     const user = this.getauth();\n    //     if (this.user.username) {\n    //       SpinalUserManager.get_user_id(\n    //         'http://' + window.location.host, user.username, user\n    //         .password,\n    //         response => {\n    //           this.spinalUserId = parseInt(response);\n    //           this.conn =\n    //             window.spinalCore.connect(`http://${this.spinalUserId}:${\n    //               user.password}@${window.location.host}/`);\n    //           resolve(this.conn);\n    //         },\n    //         () => {\n    //           window.location = '/html/drive/';\n    //           reject('Authentication Connection Error');\n    //         });\n    //     } else {\n    //       window.location = '/html/drive/';\n    //       reject('Authentication Connection Error');\n    //     }\n    //   });\n\n    // })\n    // return this.connectPromise;\n\n    this.conn = FileSystem.get_inst();\n    return Promise.resolve(this.conn);\n\n  }\n  getModelPath() {\n    const cryptedPath = getParameterByName('path');\n    if (!cryptedPath) throw new Error('No \"path\" attribute found in the url');\n    const k = [10, 95, 124, 68, 55, 24, 90, 57, 34, 65, 81, 22, 75, 7, 110,\n      1\n    ];\n    try {\n      const decripted = decriAes(k, cryptedPath);\n      if (decripted[0] !== '/') throw \"not a path\";\n      return decripted;\n    } catch (e) {\n      const decripted = decriB64(cryptedPath);\n      return decripted;\n    }\n  }\n\n  getPathModel() {\n    try {\n      const path = this.getModelPath();\n      return this.load(path);\n    } catch (e) {\n      return this.load('/__users__/public/digital_twin/default');\n    }\n  }\n\n  load(path) {\n    if (typeof this.loadPromise[path] !== 'undefined') {\n      return this.loadPromise[path];\n    }\n    const promisefunc = async (resolve, reject) => {\n      try {\n        await this.connect();\n        spinalCore.load(\n          this.conn, path,\n          (model) => {\n            resolve(model);\n          },\n          () => {\n            throw new Error(`Load Error path: '${path}'`);\n          });\n\n      } catch (e) {\n        reject(e);\n      }\n    };\n    this.loadPromise[path] = new Promise(promisefunc);\n    return this.loadPromise[path];\n  }\n\n  loadPtr(ptr) {\n    if (ptr instanceof File) return this.loadPtr(ptr._ptr);\n    const server_id = ptr.data.value;\n\n    if (typeof this.loadPtr[server_id] !== 'undefined') {\n      return this.loadPtr[server_id];\n    }\n    const promFunc = async (resolve, reject) => {\n      try {\n        await this.connect();\n        this.conn.load_ptr(\n          server_id,\n          (model) => {\n            resolve(model);\n          },\n          () => {\n            throw new Error(`LoadPtr Error server_id: '${server_id}'`);\n          });\n\n      } catch (e) {\n        reject(e);\n      }\n    };\n    this.loadPtr[server_id] = new Promise(promFunc);\n    return this.loadPtr[server_id];\n  }\n\n  async getUserProfile(user, withAdminCheck = false) {\n    const userDir = await this.load('/etc/UserProfileDir');\n    for (let index = 0; index < userDir.length; index++) {\n      const userFile = userDir[index];\n\n      if (userFile.name.get() === user) {\n        if (withAdminCheck === true) {\n          return this.loadPtr(userFile).then(\n            async (res) => {\n                await this.checkUserAdmin(user, res);\n                return res;\n              },\n              () => {\n                throw new Error('Undefined User');\n              });\n        } else {\n          return this.loadPtr(userFile);\n        }\n      }\n    }\n    throw new Error('Undefined User');\n  }\n\n  getAlluser() {\n    let path = \"/etc/users\";\n    return this.load(path).then(model => {\n      return model.get();\n    })\n  }\n\n  async getUserConnected() {\n    const auth = this.getauth();\n    const allUsers = await this.getAlluser();\n\n    return allUsers.find(el => el.name === auth.username);\n  }\n\n}\n\nexport const spinalIO = new SpinalIO();","var aesjs = require('aes-js');\n\nexport function decriAes(k, encryptedHex) {\n  const encryptedBytes = aesjs.utils.hex.toBytes(encryptedHex);\n  const aesCtr = new aesjs.ModeOfOperation.ctr(k, new aesjs.Counter(5));\n  const decryptedBytes = aesCtr.decrypt(encryptedBytes);\n  return aesjs.utils.utf8.fromBytes(decryptedBytes);\n}\nexport function decriB64(encryptedHex) {\n  return atob(encryptedHex);\n}","import Vue from \"vue\";\n\n\nconst EventBus = new Vue();\n\nexport default EventBus;","export const TICKET_EVENTS = Object.freeze({\n  created: \"created\",\n  changeStep: \"changeStep\",\n});\n","import {\n  SpinalContextApp\n} from 'spinal-env-viewer-context-menu-service'\n\nimport {\n  spinalPanelManagerService\n} from 'spinal-env-viewer-panel-manager-service';\n\nimport {\n  SERVICE_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME,\n  SPINAL_TICKET_SERVICE_STEP_TYPE\n} from \"spinal-service-ticket/dist/Constants\";\n\nimport {\n  spinalIO\n} from '../extensions/spinalIO'\n\nimport {\n  SpinalGraphService\n} from 'spinal-env-viewer-graph-service';\n\nimport {\n  serviceTicketPersonalized\n} from \"spinal-service-ticket\";\n\nimport EventBUS from '../extensions/Event'\nimport {\n  TICKET_EVENTS\n} from '../extensions/ticketsEvents'\n\nexport class BackToPreviousStepButton extends SpinalContextApp {\n\n  constructor() {\n    super('Back to previous step',\n      'backward the ticket to previous step', {\n      icon: \"skip_previous\",\n      icon_type: 'in',\n      backgroundColor: \"#356BAB\",\n      fontColor: '#ffffff'\n    })\n  }\n\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const nodeType = option.selectedNode.type.get();\n\n    if (contextType === SERVICE_TYPE && nodeType ===\n      SPINAL_TICKET_SERVICE_TICKET_TYPE) return Promise.resolve(true);\n    return Promise.resolve(-1)\n  }\n\n  async action(option) {\n    const user = await spinalIO.getUserConnected();\n\n    const contextId = option.context.id.get();\n    const ticketId = option.selectedNode.id.get();\n    const processId = await getProcessId(ticketId);\n\n    // console.log(contextId, ticketId, processId)\n\n    if (contextId && ticketId && processId) {\n      spinalPanelManagerService.openPanel(\"confirmationDialog\", {\n        message: \"do you want to backward this ticket to the next step ?\",\n        callback: () => {\n          serviceTicketPersonalized\n            .moveTicketToPreviousStep(contextId, processId, ticketId,\n              user).then((step) => {\n                const info = SpinalGraphService.getInfo(ticketId).get();\n                EventBUS.$emit(TICKET_EVENTS.changeStep, {\n                  ticket: info,\n                  step: step\n                });\n              })\n        }\n      })\n    }\n\n  }\n\n}\n\nconst getProcessId = async (ticketId) => {\n  const parents = await SpinalGraphService.getParents(ticketId, [\n    SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME\n  ])\n\n  const found = parents.find(el => el.type.get() ===\n    SPINAL_TICKET_SERVICE_STEP_TYPE);\n\n  if (found) return found.processId.get();\n\n}","import {\n  SpinalContextApp\n} from \"spinal-env-viewer-context-menu-service\";\n\n\nimport {\n  SERVICE_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME,\n} from \"spinal-service-ticket/dist/Constants\";\n\nimport {\n  SpinalGraphService\n} from \"spinal-env-viewer-graph-service\";\n\n\nimport {\n  SpinalContextSelectBIMObject,\n} from \"spinal-env-viewer-plugin-standard_button/js/selectBIMObjectButton\";\n\nimport {\n  SpinalContextFitToViewer\n} from \"spinal-env-viewer-plugin-standard_button/js/fitToViewerButton\";\n\nimport {\n  isShownParam\n} from \"spinal-env-viewer-plugin-standard_button/js/utilities\";\n\nimport ColorElementExtension from \"../../extensions/colorElementExtension\";\n\nexport class SelectElementOnMaquette extends SpinalContextApp {\n  constructor() {\n    super(\"Select Object on Maquette\", \"select object on maquette\", {\n      icon: \"find_in_page\",\n      icon_type: \"in\",\n      backgroundColor: \"#356BAB\",\n      fontColor: \"#ffffff\",\n    });\n  }\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const nodeType = option.selectedNode.type.get();\n\n    if (\n      contextType === SERVICE_TYPE\n      // &&\n      // nodeType === SPINAL_TICKET_SERVICE_TICKET_TYPE\n    )\n      return Promise.resolve(true);\n    return Promise.resolve(-1);\n  }\n\n  async action(option) {\n    const nodeId = option.selectedNode.id.get();\n    const contextId = option.context.id.get();\n\n    const parents = await ColorElementExtension.getTicketParentsBim(nodeId,\n      contextId);\n\n\n    if (!parents || (parents && parents.length === 0)) {\n      window.alert(\"No parent on bimMaquette\");\n      return;\n    }\n\n    parents.forEach((el) => {\n      el.model.selector.setSelection(el.ids, el.model, \"selectOnly\");\n    })\n\n\n\n    // const selectButton = new SpinalContextSelectBIMObject();\n    // // const zoomButton = new SpinalContextFitToViewer();\n\n    // parents.forEach((element) => {\n    //   const params = {\n    //     selectedNode: element,\n    //   };\n    //   selectButton.action(params);\n    //   // zoomButton.action(params);\n    // });\n  }\n}","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalGraphService } from 'spinal-env-viewer-graph-service';\n\nconst {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\n\nimport {\n  utilities,\n  SELECTrelationList,\n  isShownParam\n} from \"./utilities\";\n\nclass SpinalContextSelectBIMObject extends SpinalContextApp {\n  constructor() {\n    super(\"select BIMObject button\", \"select BIMObject button\", {\n      icon: \"devices\",\n      icon_type: \"in\"\n    });\n  }\n\n  isShown(option) {\n    const type = option.selectedNode.type.get();\n    if (isShownParam.indexOf(type) > -1) { return (Promise.resolve(true)); }\n    return (Promise.resolve(-1));\n  }\n\n  action(option) {\n    let realNode = SpinalGraphService.getRealNode(option.selectedNode.id\n      .get());\n    this.viewer = window.spinal.ForgeViewer.viewer;\n    let self = this;\n    realNode.find(SELECTrelationList,\n      function (node) {\n        if (node.info.type.get() === \"BIMObject\") {\n          return true;\n        }\n      }).then(lst => {\n      self.viewer.clearSelection();\n      utilities.sortBIMObjectByModel(lst).then(lstByModel => {\n        for (let i = 0; i < lstByModel.length; i++) {\n          const element = lstByModel[i];\n          for (let j = 0; j < element.model.modelScene.length; j++) {\n            const scene = element.model.modelScene[j];\n            // console.log(\"hello select\", element.dbid, scene.model);\n            scene.model.selector.setSelection(element.dbid, scene.model, \"selectOnly\");\n          }\n        }\n      });\n    });\n  }\n}\n\nexport {\n  SpinalContextSelectBIMObject\n};\n","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n// import {\n//   // ROOMS_CATEGORY_RELATION,\n//   // ROOMS_TO_ELEMENT_RELATION,\n//   // ROOMS_GROUP_RELATION,\n//   // EQUIPMENTS_CATEGORY_RELATION,\n//   // EQUIPMENTS_TO_ELEMENT_RELATION,\n//   // EQUIPMENTS_GROUP_RELATION,\n//   // ROOMS_GROUP_CONTEXT,\n//   // ROOMS_GROUP,\n//   // ROOMS_CATEGORY,\n//   // EQUIPMENTS_GROUP_CONTEXT,\n//   // EQUIPMENTS_CATEGORY,\n//   // EQUIPMENTS_GROUP\n\n//   groupService\n\n// } from 'spinal-env-viewer-room-manager/services/service';\n\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\n\nimport {\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  EQUIPMENT_TYPE,\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n  REFERENCE_RELATION,\n} from \"spinal-env-viewer-context-geographic-service/build/constants\";\n\nimport { SpinalBmsEndpoint } from \"spinal-model-bmsnetwork\";\n\nimport { CONSTANTS } from \"spinal-env-viewer-plugin-network-tree-service\";\n\n\nconst SELECTrelationList = [\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n  REFERENCE_RELATION,\n  `${REFERENCE_RELATION}.ROOM`,\n  \"hasBIMObject\", // for old system\n  // groupService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  // groupService.constants.CATEGORY_TO_GROUP_RELATION,\n  // groupService.constants.GROUP_TO_ROOMS_RELATION,\n  // groupService.constants.GROUP_TO_EQUIPMENTS_RELATION,\n  // groupService.constants.GROUP_TO_ENDPOINT_RELATION,\n  groupManagerService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  groupManagerService.constants.CATEGORY_TO_GROUP_RELATION,\n  ...Object.values(groupManagerService.constants.OLD_RELATIONS_TYPES),\n  `groupHas${ROOM_TYPE}`,\n  `groupHas${EQUIPMENT_TYPE}`,\n  `groupHas${SITE_TYPE}`,\n  `groupHas${BUILDING_TYPE}`,\n  `groupHas${FLOOR_TYPE}`,\n  `groupHas${ZONE_TYPE}`,\n  `groupHas${SpinalBmsEndpoint.nodeTypeName}`,\n  // CONSTANTS.NETWORK_RELATION,\n  // CONSTANTS.NETWORK_BIMOJECT_RELATION\n];\n\nconst isShownParam = [\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  EQUIPMENT_TYPE,\n  // ...groupService.constants.CONTEXTS_TYPES,\n  // ...groupService.constants.GROUPS_TYPES,\n  // groupService.constants.CATEGORY_TYPE\n  ...Object.values(groupManagerService.constants.OLD_CONTEXTS_TYPES),\n  ...Object.values(groupManagerService.constants.OLD_GROUPS_TYPES),\n  groupManagerService.constants.CATEGORY_TYPE,\n  `${ROOM_TYPE}Group`,\n  `${EQUIPMENT_TYPE}Group`,\n  `${SITE_TYPE}Group`,\n  `${BUILDING_TYPE}Group`,\n  `${FLOOR_TYPE}Group`,\n  `${ZONE_TYPE}Group`,\n  `${ROOM_TYPE}GroupContext`,\n  `${EQUIPMENT_TYPE}GroupContext`,\n  `${SITE_TYPE}GroupContext`,\n  `${BUILDING_TYPE}GroupContext`,\n  `${FLOOR_TYPE}GroupContext`,\n  `${ZONE_TYPE}GroupContext`,\n  // CONSTANTS.CONTEXT_TYPE,\n  // CONSTANTS.NETWORK_TYPE,\n];\n\nconst utilities = {\n  async sortBIMObjectByModel(arrayOfBIMObject) {\n    let arrayModel = [];\n    for (const key in spinal.BimObjectService.mappingBimFileIdModelId) {\n      if (spinal.BimObjectService.mappingBimFileIdModelId.hasOwnProperty(key)) {\n        const element = spinal.BimObjectService.mappingBimFileIdModelId[key];\n        let obj = {\n          dbid: [],\n          model: element,\n        };\n        arrayModel.push(obj);\n      }\n    }\n    for (let i = 0; i < arrayOfBIMObject.length; i++) {\n      SpinalGraphService._addNode(arrayOfBIMObject[i]);\n      let bim = SpinalGraphService.getNode(arrayOfBIMObject[i].info.id.get());\n      try {\n        let spinalModel =\n          window.spinal.BimObjectService.mappingBimFileIdModelId[\n            bim.bimFileId.get()\n          ];\n        if (spinalModel) {\n          for (let j = 0; j < arrayModel.length; j++) {\n            const element = arrayModel[j];\n            if (element.model.modelId === spinalModel.modelId) {\n              element.dbid.push(bim.dbid.get());\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"skip node because bimFileId is not defined\", error);\n      }\n    }\n    return arrayModel;\n  },\n};\n\nmodule.exports = {\n  SELECTrelationList,\n  isShownParam,\n  utilities,\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport {\n  SpinalGraphService\n} from 'spinal-env-viewer-graph-service';\n\nconst {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\nimport {\n  SELECTrelationList,\n  utilities,\n  isShownParam\n} from \"./utilities\";\n\n\nclass SpinalContextFitToViewer extends SpinalContextApp {\n  constructor() {\n    super(\"fit button\", \"fit to viewer button\", {\n      icon: \"zoom_in\",\n      icon_type: \"in\"\n    });\n  }\n\n  isShown(option) {\n    const type = option.selectedNode.type.get();\n    if (isShownParam.indexOf(type) > -1)\n      return (Promise.resolve(true));\n    return (Promise.resolve(-1))\n  }\n\n  action(option) {\n    this.viewer = window.spinal.ForgeViewer.viewer\n    let self = this;\n    let realNode = SpinalGraphService.getRealNode(option.selectedNode.id\n      .get());\n    this.viewer = window.spinal.ForgeViewer.viewer\n\n    realNode.find(SELECTrelationList,\n      function(node) {\n        if (node.info.type.get() === \"BIMObject\") return true;\n      }).then(lst => {\n      utilities.sortBIMObjectByModel(lst).then(lstByModel => {\n        let arrayToFit = []\n        for (let i = 0; i < lstByModel.length; i++) {\n          const element = lstByModel[i];\n          let obj = {\n            model: element.model.modelScene[0].model,\n            selection: element.dbid\n          }\n          arrayToFit.push(obj);\n          obj.model.selector.setSelection(element.dbid, obj\n            .model,\n            \"selectOnly\")\n        }\n        self.viewer.fitToView(arrayToFit);\n      })\n    });\n  }\n}\n\n\nexport {\n  SpinalContextFitToViewer\n};","import {\n  SpinalGraphService\n} from 'spinal-env-viewer-graph-service';\n\nimport geographicService from \"spinal-env-viewer-context-geographic-service\";\n\nimport {\n  groupManagerService\n} from \"spinal-env-viewer-plugin-group-manager-service\";\n\nimport {\n  BIM_OBJECT_TYPE\n} from \"spinal-env-viewer-plugin-forge/dist/Constants\";\n\n\nimport {\n  SELECTrelationList,\n  isShownParam\n} from \"spinal-env-viewer-plugin-standard_button/js/utilities\";\n\n\nimport {\n  SERVICE_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME,\n  SPINAL_TICKET_SERVICE_STEP_TYPE,\n} from \"spinal-service-ticket/dist/Constants\";\n\n\nlet ItemColoredMap = new Map();\nlet BimElementsColor = new Map();\n\nclass ColorElementExtension {\n\n  constructor() {}\n\n  getIcon(nodeInfo, contextInfo) {\n    return this._isColored(nodeInfo, contextInfo).then(isColored => {\n      return isColored;\n    })\n  }\n\n  restoreItem(nodeInfo, contextInfo) {\n    this.getGroups(nodeInfo, contextInfo).then(res => {\n      res.forEach(el => {\n        let id = el.id;\n        this._restoreGroup(contextInfo.id, id);\n      })\n    })\n  }\n\n  colorItem(nodeInfo, contextInfo) {\n    this.getGroups(nodeInfo, contextInfo).then(res => {\n      res.forEach(el => {\n        let id = el.id;\n        let color = el.color ? el.color : undefined;\n        this._colorGroup(contextInfo.id, id, color);\n      })\n    })\n  }\n\n  getGroups(selectedNode, contextInfo) {\n    const type = selectedNode.type;\n    const nodeId = selectedNode.id;\n    const contextId = contextInfo.id;\n\n    if (type === SPINAL_TICKET_SERVICE_STEP_TYPE) {\n      return Promise.resolve([selectedNode]);\n    }\n\n    return SpinalGraphService.findInContext(nodeId, contextId, (node) => {\n      SpinalGraphService._addNode(node);\n      let argType = node.getType().get();\n      return argType === SPINAL_TICKET_SERVICE_STEP_TYPE\n      //   return groupManagerService.isGroup(argType);\n    }).then(res => {\n      return res.map(el => {\n        return el.get();\n      })\n    })\n  }\n\n  async getBimObjects(contextId, groupId) {\n    const notes = await this._getTickets(groupId, contextId);\n    const parents = await this._getParents(notes);\n\n    const promises = parents.map(el => this._getItemsBim(el));\n\n    return Promise.all(promises).then((result) => {\n      const res = [];\n      result.forEach(el => res.push(...el));\n      return res;\n    })\n  }\n\n  ////////////////////////////////////////////////////////////\n  //                    PRIVATE                             //\n  ////////////////////////////////////////////////////////////\n\n\n  _isColored(selectedNode, contextInfo) {\n    return this.getGroups(selectedNode, contextInfo).then(res => {\n\n      if (res.length === 0) return false;\n\n      for (let index = 0; index < res.length; index++) {\n        const id = res[index].id;\n\n        if (typeof ItemColoredMap.get(id) === \"undefined\") {\n          return false;\n        }\n\n      }\n\n      return true;\n\n    })\n\n  }\n\n  _colorGroup(contextId, groupId, argColor) {\n\n    return this.getBimObjects(contextId, groupId).then(res => {\n\n      let color = typeof argColor !== \"undefined\" ? this\n        ._convertHexColorToRGB(argColor) : this._convertHexColorToRGB(\n          \"#000000\");\n\n      ItemColoredMap.set(groupId, groupId);\n\n      res.forEach(child => {\n        let BimColors = BimElementsColor.get(child.dbid) ?\n          BimElementsColor.get(child.dbid) : [];\n\n        BimColors.push({\n          id: groupId, //node.id,\n          color: color\n        });\n\n        BimElementsColor.set(child.dbid, BimColors);\n\n        let model = window.spinal.BimObjectService.getModelByBimfile(\n          child.bimFileId);\n\n        model.setThemingColor(child.dbid, new THREE.Vector4(\n            color.r / 255, color.g / 255, color.b / 255, 0.7, true)\n\n        );\n\n      });\n\n    })\n  }\n\n  _restoreGroup(contextId, groupId) {\n    ItemColoredMap.delete(groupId);\n    return this.getBimObjects(contextId, groupId).then(res => {\n      res.forEach(child => {\n\n        let model = window.spinal.BimObjectService.getModelByBimfile(\n          child.bimFileId);\n\n        model.setThemingColor(\n          child.dbid,\n          // eslint-disable-next-line no-undef\n          new THREE.Vector4(0, 0, 0, 0),\n          true\n        );\n\n        let allColors = BimElementsColor.get(child.dbid);\n\n        if (allColors) {\n          //   allColors = allColors.filter(el => el.id !== node.id.get());\n          allColors = allColors.filter(el => el.id !== groupId);\n          BimElementsColor.set(child.dbid, allColors);\n\n          if (allColors.length > 0) {\n            let color = allColors[0].color;\n            model.setThemingColor(\n              child.dbid,\n              // eslint-disable-next-line no-undef\n              new THREE.Vector4(\n                color.r / 255,\n                color.g / 255,\n                color.b / 255,\n                0.7\n              ),\n              true\n            );\n          }\n        }\n      })\n    })\n  }\n\n  _getTickets(nodeId, contextId) {\n    return SpinalGraphService.findInContext(nodeId, contextId, (node) => {\n      SpinalGraphService._addNode(node);\n      let argType = node.getType().get();\n      return argType === SPINAL_TICKET_SERVICE_TICKET_TYPE;\n    }).then(res => {\n      return res.map(el => {\n        return el.get();\n      })\n    })\n  }\n\n  _convertHexColorToRGB(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      } :\n      null;\n  }\n\n  _getParents(notes) {\n    const promises = notes.map(async el => {\n      const realNode = SpinalGraphService.getRealNode(el.id);\n      const parents = await realNode.getParents(\n        SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME);\n\n      return parents\n        .filter((el) => {\n          return isShownParam.indexOf(el.getType().get()) !== -1;\n        })\n    });\n\n    return Promise.all(promises).then((result) => {\n\n      const res = [];\n\n      result.forEach(element => {\n        const infos = element.map(el => {\n          SpinalGraphService._addNode(el);\n          return el.info.get()\n        });\n\n        res.push(...infos);\n      });\n\n      return res;\n    })\n\n  }\n\n  _getItemsBim(nodeInfo) {\n\n    const type = nodeInfo.type;\n    const nodeId = nodeInfo.id;\n\n    if (type === BIM_OBJECT_TYPE) {\n      return Promise.resolve([nodeInfo]);\n    } else if (type === geographicService.constants\n      .ROOM_TYPE) {\n      return SpinalGraphService.getChildren(nodeId, [geographicService\n        .constants\n        .REFERENCE_RELATION, geographicService.constants\n        .EQUIPMENT_RELATION\n      ]);\n    } else {\n      // let relations = [\n      //   ...geographicService.constants.GEOGRAPHIC_RELATIONS,\n      //   geographicService.constants.REFERENCE_RELATION\n      // ];\n\n      return SpinalGraphService.findNodes(nodeId, SELECTrelationList, (\n        node) => {\n        return node.getType().get() === BIM_OBJECT_TYPE\n      }).then(res => {\n        return res.map(el => {\n          SpinalGraphService._addNode(el);\n          return el.info.get();\n        })\n      })\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////\n  //                    Standard Buttons functions                  //\n  ////////////////////////////////////////////////////////////////////\n\n  async getGeographicElement(ticketId) {\n\n    const realNode = SpinalGraphService.getRealNode(ticketId);\n    const parents = await realNode.getParents(\n      SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME\n    );\n\n    return parents\n      .filter((el) => {\n        SpinalGraphService._addNode(el);\n        return isShownParam.indexOf(el.getType().get()) !== -1;\n      })\n      .map((el) => el.info);\n  };\n\n  async getTicketParentsBim(nodeId, contextId) {\n    const tickets = await this._getTickets(nodeId, contextId);\n\n    const promises = tickets.map(el => this.getGeographicElement(el.id));\n\n    return Promise.all(promises).then(async ticketsParentNode => {\n      const el = ticketsParentNode.flat();\n      const promises = el.map(v => this._getItemsBim(v));\n      let bims = await Promise.all(promises);\n      bims = bims.flat();\n\n      const bimMap = new Map();\n\n      for (const bimObject of bims) {\n        const bimFileId = bimObject.bimFileId;\n        const dbid = bimObject.dbid;\n\n        if (typeof bimMap.get(bimFileId) === \"undefined\") {\n          bimMap.set(bimFileId, new Set());\n        }\n\n        bimMap.get(bimFileId).add(dbid);\n      }\n      const res = []\n\n      for (const [key, value] of bimMap.entries()) {\n        res.push({\n          model: window.spinal.BimObjectService\n            .getModelByBimfile(key),\n          ids: Array.from(value)\n        })\n      }\n\n      return res;\n\n    });\n  }\n\n}\n\n\nexport default new ColorElementExtension()","import {\n  SpinalContextApp\n} from \"spinal-env-viewer-context-menu-service\";\n\n\nimport {\n  SERVICE_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME,\n} from \"spinal-service-ticket/dist/Constants\";\n\n\nimport ColorElementExtension from \"../../extensions/colorElementExtension\";\n\nexport class IsolateElementOnMaquette extends SpinalContextApp {\n  constructor() {\n    super(\"Isolate Object on Maquette\", \"Isolate object on maquette\", {\n      icon: \"settings_overscan\",\n      icon_type: \"in\",\n      backgroundColor: \"#356BAB\",\n      fontColor: \"#ffffff\",\n    });\n  }\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const nodeType = option.selectedNode.type.get();\n\n    if (\n      contextType === SERVICE_TYPE\n      // &&\n      // nodeType === SPINAL_TICKET_SERVICE_TICKET_TYPE\n    )\n      return Promise.resolve(true);\n    return Promise.resolve(-1);\n  }\n\n  async action(option) {\n    const nodeId = option.selectedNode.id.get();\n    const contextId = option.context.id.get();\n\n    const parents = await ColorElementExtension.getTicketParentsBim(nodeId,\n      contextId);\n\n    if (!parents || (parents && parents.length === 0)) {\n      window.alert(\"No parent on bimMaquette\");\n      return;\n    }\n\n    parents.forEach((el) => {\n      window.spinal.ForgeViewer.viewer.impl.visibilityManager.isolate(el\n        .ids, el.model)\n    })\n\n  }\n}","import {\n  SpinalContextApp\n} from \"spinal-env-viewer-context-menu-service\";\n\n\nimport {\n  SERVICE_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME,\n} from \"spinal-service-ticket/dist/Constants\";\n\n\nimport ColorElementExtension from \"../../extensions/colorElementExtension\";\n\nexport class ZoomElementOnMaquette extends SpinalContextApp {\n  constructor() {\n    super(\"Zoom\", \"Isolate object on maquette\", {\n      icon: \"zoom_in\",\n      icon_type: \"in\",\n      backgroundColor: \"#356BAB\",\n      fontColor: \"#ffffff\",\n    });\n  }\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const nodeType = option.selectedNode.type.get();\n\n    if (\n      contextType === SERVICE_TYPE\n      // &&\n      // nodeType === SPINAL_TICKET_SERVICE_TICKET_TYPE\n    )\n      return Promise.resolve(true);\n    return Promise.resolve(-1);\n  }\n\n  async action(option) {\n    const nodeId = option.selectedNode.id.get();\n    const contextId = option.context.id.get();\n\n    const parents = await ColorElementExtension.getTicketParentsBim(nodeId,\n      contextId);\n\n    if (!parents || (parents && parents.length === 0)) {\n      window.alert(\"No parent on bimMaquette\");\n      return;\n    }\n\n    const dbIds = parents.map(el => el.ids)\n\n    window.spinal.ForgeViewer.viewer.fitToView(dbIds.flat());\n\n  }\n}","import {\n  SpinalContextApp\n} from \"spinal-env-viewer-context-menu-service\";\n\nimport {\n  spinalPanelManagerService\n} from \"spinal-env-viewer-panel-manager-service\";\n\nimport {\n  SERVICE_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_TYPE,\n  SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME,\n  SPINAL_TICKET_SERVICE_STEP_TYPE,\n} from \"spinal-service-ticket/dist/Constants\";\n\nimport {\n  SpinalGraphService\n} from \"spinal-env-viewer-graph-service\";\n\nimport {\n  isShownParam\n} from \"spinal-env-viewer-plugin-standard_button/js/utilities\";\n\nimport colorExtension from \"../extensions/colorElementExtension\";\n\nexport class ColorElementButton extends SpinalContextApp {\n  constructor() {\n    super(\"Select Object on Maquette\", \"select object on maquette\", {\n      icon: \"\",\n      icon_type: \"in\",\n      backgroundColor: \"#356BAB\",\n      fontColor: \"#ffffff\",\n    });\n  }\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const nodeType = option.selectedNode.type.get();\n\n    if (\n      contextType !== SERVICE_TYPE ||\n      nodeType === SPINAL_TICKET_SERVICE_TICKET_TYPE\n    )\n      return Promise.resolve(-1);\n\n    return colorExtension.getIcon(option.selectedNode.get(), option.context\n        .get())\n      .then(\n        (isColored) => {\n          this.buttonCfg[\"isColored\"] = isColored;\n          this.buttonCfg.icon = isColored ? \"visibility_off\" : \"visibility\";\n          return true;\n        })\n\n  }\n\n  async action(option) {\n    const selected = option.selectedNode.get();\n    const context = option.context.get();\n\n    if (this.isColored) {\n      this.icon = \"visibility\";\n      this.isColored = false;\n      colorExtension.restoreItem(selected, context);\n    } else {\n      this.icon = \"visibility_off\";\n      this.isColored = true;\n      colorExtension.colorItem(selected, context);\n    }\n\n    window.NOP_VIEWER.impl.invalidate(0, 1, 0);\n  }\n}\n\nconst getGeographicElement = async (ticketId) => {\n  //   const parents = await SpinalGraphService.getParents(ticketId, [\n  //     SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME,\n  //   ]);\n\n  const realNode = SpinalGraphService.getRealNode(ticketId);\n  const parents = await realNode.getParents(\n    SPINAL_TICKET_SERVICE_TICKET_RELATION_NAME\n  );\n\n  return parents\n    .filter((el) => {\n      SpinalGraphService._addNode(el);\n      return isShownParam.indexOf(el.getType().get()) !== -1;\n    })\n    .map((el) => el.info);\n};","import vue from \"vue\";\n\nimport CreateTicketContextDialog from \"./createContextDialog.vue\";\nimport CreateProcessDialog from \"./createProcessDialog.vue\";\nimport CreateStepDialog from \"./createStepDialog.vue\";\nimport CreateTicketDialog from \"./createTicket.vue\";\nimport SelectProcessDialog from \"./selectProcessDialog.vue\";\nimport CreateCommonIncidentDialog from \"./createCommonIncidentDialog.vue\";\n// import TicketDetailDialog from \"./ticketDetailDialog.vue\";\nimport ConfirmDialog from './confirmDialog.vue';\n\nconst {\n  SpinalMountExtention\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst dialogs = [{\n    name: \"createTicketContextDialog\",\n    vueMountComponent: vue.extend(CreateTicketContextDialog),\n    parentContainer: document.body\n  }, {\n    name: \"createProcessDialog\",\n    vueMountComponent: vue.extend(CreateProcessDialog),\n    parentContainer: document.body\n  }, {\n    name: \"createStepDialog\",\n    vueMountComponent: vue.extend(CreateStepDialog),\n    parentContainer: document.body\n  }, {\n    name: \"createTicketDialog\",\n    vueMountComponent: vue.extend(CreateTicketDialog),\n    parentContainer: document.body\n  },\n  {\n    name: \"selectProcessDialog\",\n    vueMountComponent: vue.extend(SelectProcessDialog),\n    parentContainer: document.body\n  }, {\n    name: \"createCommonIncidentDialog\",\n    vueMountComponent: vue.extend(CreateCommonIncidentDialog),\n    parentContainer: document.body\n  },\n  // {\n  //   name: \"ticketDetailDialog\",\n  //   vueMountComponent: vue.extend(TicketDetailDialog),\n  //   parentContainer: document.body\n  // }, \n  {\n    name: \"confirmationDialog\",\n    vueMountComponent: vue.extend(ConfirmDialog),\n    parentContainer: document.body\n  }\n];\n\n\nfor (let index = 0; index < dialogs.length; index++) {\n  SpinalMountExtention.mount(dialogs[index]);\n}","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\"\n             class=\"mdDialog\">\n    <md-dialog-title class=\"mdDialogTitle\">Create Ticket context\n    </md-dialog-title>\n\n    <md-dialog-content class=\"mdDialogContainer\">\n\n      <md-steppers :md-active-step.sync=\"stepper.active\"\n                   @md-changed=\"changeStep\"\n                   md-linear\n                   class=\"mySteppers\">\n        <md-step class=\"mdStep\"\n                 :id=\"STEPPERS_DATA.context\"\n                 md-label=\"Context\"\n                 :md-done.sync=\"stepper.first\">\n          <md-content class=\"contents\">\n            <md-field>\n              <label>Context name</label>\n              <md-input v-model=\"inputValue\"\n                        ref=\"nameTextField\"></md-input>\n            </md-field>\n          </md-content>\n\n        </md-step>\n\n        <md-step class=\"mdStep\"\n                 :id=\"STEPPERS_DATA.steps\"\n                 md-label=\"Steps\"\n                 :md-done.sync=\"stepper.second\">\n\n          <sortable-list :items=\"steps\"\n                         ref=\"draggableComponent\"\n                         @addStep=\"addStep\"\n                         @delete=\"deleteItem\"></sortable-list>\n\n        </md-step>\n\n      </md-steppers>\n\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n\n      <md-button class=\"md-primary\"\n                 v-if=\"stepper.active === this.STEPPERS_DATA.context\"\n                 :disabled=\"!(inputValue.trim().length > 0)\"\n                 @click=\"PassToSecondStep\">Next</md-button>\n\n      <md-button v-if=\"stepper.active === this.STEPPERS_DATA.steps\"\n                 :disabled=\"disabledButton()\"\n                 class=\"md-primary\"\n                 @click=\"closeDialog(true)\">Save</md-button>\n    </md-dialog-actions>\n\n    <!-- <form class=\"dialogForm\"\n          @submit.prevent=\"closeDialog(true)\">\n      <md-dialog-content>\n        <md-field>\n          <label>Context name</label>\n          <md-input v-model=\"inputValue\"overflow: hidden ;\n      <md-dialog-actions>\n        <md-button class=\"md-primary\"\n                   @click=\"closeDialog(false)\">Close</md-button>\n\n        <md-button class=\"md-primary\"\n                   type=\"submit\"\n                   :disabled=\"!(inputValue.trim().length > 0)\">Save</md-button>\n      </md-dialog-actions>\n    </form> -->\n  </md-dialog>\n</template>\n\n<script>\nimport { serviceTicketPersonalized } from \"spinal-service-ticket\";\n\nimport SortableList from \"./components/sortable-list.vue\";\nimport EventBus from \"../../extensions/Event\";\n\nexport default {\n  name: \"createTicketContextDialog\",\n  props: [\"onFinised\"],\n  components: {\n    \"sortable-list\": SortableList,\n  },\n  data() {\n    this.STEPPERS_DATA = {\n      context: \"first\",\n      steps: \"second\",\n    };\n    return {\n      showDialog: true,\n      inputValue: \"\",\n      steps: [],\n      stepper: {\n        active: this.STEPPERS_DATA.context,\n        first: false,\n        second: false,\n      },\n    };\n  },\n  methods: {\n    opened(option) {\n      this.autoFocusNameInput();\n    },\n\n    async removed(res) {\n      const value = res.inputValue.trim();\n\n      if (res.closeResult && value.length > 0) {\n        const context = await serviceTicketPersonalized.createContext(\n          value,\n          res.steps\n        );\n        EventBus.$emit(\"ticketContextCreated\", context.getId().get());\n      }\n\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        const steps = this.getSteps();\n        this.onFinised({\n          closeResult,\n          inputValue: this.inputValue,\n          steps,\n        });\n      }\n    },\n\n    getSteps() {\n      if (this.$refs.draggableComponent) {\n        const steps = this.$refs.draggableComponent.itemsSorted;\n        return steps.map((el, index) => {\n          el.order = index;\n          return el;\n        });\n      }\n    },\n\n    disabledButton() {\n      const contextCondition = this.inputValue.trim().length === 0;\n      const stepsCondition = this.steps.length === 0;\n      return contextCondition || stepsCondition;\n    },\n\n    autoFocusNameInput() {\n      setTimeout(() => {\n        this.$refs[\"nameTextField\"].$el.focus();\n      }, 200);\n    },\n\n    changeStep(stepId) {\n      if (stepId === this.STEPPERS_DATA.context) {\n        this.stepper.active = stepId;\n        this.stepper.first = false;\n      }\n    },\n\n    PassToSecondStep() {\n      this.stepper.first = true;\n      this.stepper.active = this.STEPPERS_DATA.steps;\n    },\n\n    addStep(res) {\n      this.steps = [...this.steps, res];\n    },\n\n    deleteItem(order) {\n      this.steps = this.steps.filter((el) => el.order !== order);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* .dialogForm { \n   display: flex; \n  flex-direction: column; \n } */\n\n.mdDialog {\n  width: 450px;\n  height: 500px;\n}\n\n.mdDialog .mdDialogTitle {\n  text-align: center;\n}\n\n.mdDialog .mdDialogContainer {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n\n.mdDialog .mdDialogContainer .mdStep {\n  height: 300px;\n  overflow: hidden;\n  padding: 10px 0px;\n}\n\n.mdDialog .mdDialogContainer .mdStep .contents {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  overflow: auto;\n}\n\n/* .mdDialog .mdDialogContainer .contents.contextName {\n  display: flex;\n  align-items: center;\n}\n\n.mdDialog .mdDialogContainer .actions {\n  width: 100%;\n  height: 50px;\n  display: flex;\n  justify-content: flex-end;\n} */\n</style>\n\n<style>\n.mdDialog .mdDialogContainer .mdStep .md-stepper-content.md-active {\n  width: 100%;\n  height: 100%;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-content class=\"myContainer md-scrollbar\">\n\n    <draggable v-if=\"itemsSorted.length > 0\"\n               group=\"steps\"\n               @start=\"drag=true\"\n               @end=\"drag=false\"\n               v-model=\"itemsSorted\">\n      <div class=\"listeItemDraggable\"\n           v-for=\"element in itemsSorted\"\n           :key=\"element.order\">\n        <div class=\"left\">\n          <div class=\"color\"\n               :style=\"{'background-color' : element.color}\"></div>\n          <div class=\"name\">\n            {{element.name}}\n          </div>\n        </div>\n\n        <div class=\"right\">\n          <md-button class=\"md-icon-button md-dense md-accent\"\n                     @click=\"deleteItem(element.order)\">\n            <md-icon>delete_forever</md-icon>\n          </md-button>\n        </div>\n\n      </div>\n    </draggable>\n\n    <div v-else\n         class=\"empty\">\n      No step created\n    </div>\n\n    <div class=\"myFabs\">\n      <popover @addStep=\"addStep\"></popover>\n    </div>\n\n  </md-content>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\";\nimport popover from \"./popover.vue\";\nexport default {\n  name: \"Sortable-List\",\n  components: { popover, draggable },\n  props: {\n    items: { default: [] },\n  },\n  data() {\n    return {\n      itemsSorted: [],\n    };\n  },\n  mounted() {\n    this.itemsSorted = this.items;\n  },\n  methods: {\n    addStep(res) {\n      res[\"order\"] = this.items.length;\n      this.$emit(\"addStep\", res);\n    },\n    deleteItem(order) {\n      this.$emit(\"delete\", order);\n    },\n  },\n  watch: {\n    items() {\n      this.itemsSorted = this.items;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.myContainer {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  position: relative;\n}\n\n.myContainer .myFabs {\n  width: 50px;\n  position: absolute;\n  bottom: 0px;\n  right: 10px;\n}\n\n.myContainer .empty {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.listeItemDraggable {\n  width: 100%;\n  height: 50px;\n  /* background: grey; */\n  border: 1px dashed grey;\n  color: #ffffff;\n  margin-bottom: 5px;\n  display: flex;\n}\n\n.listeItemDraggable .left {\n  flex: 1 1 80%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  font-size: 1.5em;\n}\n\n.listeItemDraggable .right {\n  flex: 1 1 20%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}\n\n.listeItemDraggable .left .name {\n  margin-left: 10px;\n}\n\n.listeItemDraggable .left .color {\n  height: 100%;\n  width: 10px;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-popover offset=\"16\"\n             :auto-hide=\"false\"\n             :open=\"show\">\n\n    <md-button class=\"tooltip-target md-fab md-mini md-primary\">\n      <md-icon>add</md-icon>\n    </md-button>\n\n    <template slot=\"popover\">\n      <div class=\"popoverContainer\">\n        <div class=\"_popoverContent\">\n          <md-field>\n            <label>Step name</label>\n            <md-input v-model=\"name\"></md-input>\n          </md-field>\n\n          <div>\n            <slider-picker class=\"colorPicker\"\n                           v-model=\"color\" />\n          </div>\n\n        </div>\n\n        <div class=\"_popoverBtn\">\n          <!-- <a class=\"btn\"\n             v-close-popover>Close</a>\n          <a class=\"btn\"\n             :disabled=\"disabled()\"\n             @click=\"addStep\"\n             v-close-popover>ADD</a> -->\n\n          <md-button class=\"btn md-dense md-primary\"\n                     v-close-popover>Close</md-button>\n\n          <md-button class=\"btn md-dense md-primary\"\n                     :disabled=\"disabled()\"\n                     @click=\"addStep\"\n                     v-close-popover>ADD</md-button>\n\n        </div>\n      </div>\n\n    </template>\n  </v-popover>\n</template>\n\n<script>\nimport { Slider } from \"vue-color\";\n\nexport default {\n  name: \"addItemsPopover\",\n  components: {\n    \"slider-picker\": Slider,\n  },\n  data() {\n    return {\n      name: \"\",\n      color: \"#000000\",\n      show: false,\n    };\n  },\n  methods: {\n    OpenAttribute() {\n      this.show = !this.show;\n    },\n    addStep() {\n      const color =\n        typeof this.color === \"string\" ? this.color : this.color.hex;\n\n      this.$emit(\"addStep\", { name: this.name, color });\n      this.name = \"\";\n      this.color = \"#000000\";\n    },\n    disabled() {\n      return this.name.trim().length === 0 || !this.color;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.popoverContainer {\n  width: 200px;\n  height: 200px;\n}\n\n.popoverContainer ._popoverContent {\n  height: 150px;\n}\n\n.popoverContainer ._popoverContent .colorPicker {\n  width: 100%;\n  height: 100px;\n}\n\n.popoverContainer ._popoverBtn {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.popoverContainer ._popoverBtn .btn {\n  font-size: 15px;\n  margin-right: 10px;\n  cursor: pointer;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <form class=\"dialogForm\"\n          @submit.prevent=\"closeDialog(true)\">\n      <md-dialog-title>Create Process Context</md-dialog-title>\n      <md-dialog-content>\n        <md-field>\n          <label>Process name</label>\n          <md-input ref=\"nameTextField\"\n                    v-model=\"process.name\"></md-input>\n        </md-field>\n\n      </md-dialog-content>\n\n      <md-dialog-actions>\n        <md-button class=\"md-primary\"\n                   @click=\"closeDialog(false)\">Close</md-button>\n        <md-button class=\"md-primary\"\n                   type=\"submit\"\n                   :disabled=\"!(process.name.trim().length > 0)\">Save\n        </md-button>\n      </md-dialog-actions>\n\n    </form>\n\n  </md-dialog>\n</template>\n\n<script>\nimport { serviceTicketPersonalized } from \"spinal-service-ticket\";\nimport EventBus from \"../../extensions/Event\";\n\nexport default {\n  name: \"createProcessDialog\",\n  props: [\"onFinised\"],\n  data() {\n    return {\n      showDialog: true,\n      contextId: undefined,\n      process: {\n        name: \"\",\n      },\n    };\n  },\n  methods: {\n    opened(option) {\n      this.autoFocusNameInput();\n      this.contextId = option.contextId;\n    },\n\n    async removed(res) {\n      if (res.closeResult && res.process.name.length > 0 && this.contextId) {\n        const process = await serviceTicketPersonalized.createProcess(\n          res.process,\n          this.contextId\n        );\n        EventBus.$emit(\"ticketProcessCreated\", process);\n      }\n\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised({ closeResult, process: this.process });\n      }\n    },\n\n    autoFocusNameInput() {\n      setTimeout(() => {\n        this.$refs[\"nameTextField\"].$el.focus();\n      }, 200);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.dialogForm {\n  display: flex;\n  flex-direction: column;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             class=\"stepDialogContainer\"\n             @md-closed=\"closeDialog(false)\">\n    <form class=\"dialogForm\"\n          @submit.prevent=\"closeDialog(true)\">\n      <md-dialog-title>Create Ticket Step</md-dialog-title>\n      <md-dialog-content>\n        <md-field>\n          <label>Step name</label>\n          <md-input ref=\"nameTextField\"\n                    v-model=\"step.name\"></md-input>\n        </md-field>\n\n        <!-- <md-field>\n          <label>Step Order</label>\n          <md-input v-model=\"step.order\"\n                    type=\"number\"></md-input>\n          <span class=\"md-helper-text md-primary\">The first step index is\n            0</span>\n        </md-field> -->\n\n        <div class=\"order_div md-layout md-gutter\">\n          <span class=\"md-layout-item md-size-20 md-caption insert_div\">Insert\n            it</span>\n\n          <div class=\"md-layout-item md-size-30\">\n            <md-field>\n              <md-select v-model=\"place\"\n                         name=\"Place\"\n                         id=\"Place\"\n                         placeholder=\"Place\">\n                <!-- <md-option disabled\n                           :value=\"-1\">Place</md-option> -->\n                <md-option :value=\"PLACEMENT.before\">Before</md-option>\n                <md-option :value=\"PLACEMENT.after\">After</md-option>\n              </md-select>\n            </md-field>\n          </div>\n\n          <div class=\"md-layout-item md-size-50\">\n            <md-field>\n              <md-select v-model=\"orderSelected\"\n                         name=\"step\"\n                         id=\"step\"\n                         placeholder=\"Steps\">\n                <!-- <md-option disabled\n                           :value=\"-1\">Steps</md-option> -->\n                <md-option v-for=\"s in steps\"\n                           :key=\"s.order\"\n                           :value=\"s.order\">{{s.name}}</md-option>\n\n              </md-select>\n            </md-field>\n          </div>\n\n        </div>\n\n        <chrome-picker class=\"stepChromePicker\"\n                       v-model=\"step.color\" />\n\n      </md-dialog-content>\n\n      <md-dialog-actions>\n        <md-button class=\"md-primary\"\n                   @click=\"closeDialog(false)\">Close</md-button>\n        <md-button class=\"md-primary\"\n                   type=\"submit\"\n                   :disabled=\"disabled()\">Save\n        </md-button>\n      </md-dialog-actions>\n\n    </form>\n\n  </md-dialog>\n</template>\n\n<script>\nimport { serviceTicketPersonalized } from \"spinal-service-ticket\";\nimport { Chrome } from \"vue-color\";\n\nexport default {\n  name: \"createStepDialog\",\n  props: [\"onFinised\"],\n  components: {\n    \"chrome-picker\": Chrome,\n  },\n  data() {\n    this.PLACEMENT = {\n      before: 0,\n      after: 1,\n    };\n    return {\n      showDialog: true,\n      processId: undefined,\n      contextId: undefined,\n      place: undefined,\n      orderSelected: undefined,\n      steps: [],\n      step: {\n        name: \"\",\n        color: \"#000000\",\n        order: 0,\n      },\n    };\n  },\n  methods: {\n    async opened(option) {\n      this.autoFocusNameInput();\n      this.processId = option.processId;\n      this.contextId = option.contextId;\n      this.steps = await this.getSteps(this.processId, this.contextId);\n    },\n\n    async removed(res) {\n      if (\n        res.closeResult &&\n        res.step.name.length > 0 &&\n        this.processId &&\n        this.contextId\n      ) {\n        serviceTicketPersonalized.insertStep(\n          this.contextId,\n          this.processId,\n          res.step\n        );\n\n        // serviceTicketPersonalized.addStep(\n        //   res.step.name,\n        //   res.step.color,\n        //   res.step.order,\n        //   this.processId,\n        //   this.contextId\n        // );\n      }\n\n      this.showDialog = false;\n    },\n\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.step.color =\n          typeof this.step.color === \"string\"\n            ? this.step.color\n            : this.step.color.hex;\n\n        this.step.order = this.orderSelected + this.place;\n\n        this.onFinised({ closeResult, step: this.step });\n      }\n    },\n\n    autoFocusNameInput() {\n      setTimeout(() => {\n        this.$refs[\"nameTextField\"].$el.focus();\n      }, 200);\n    },\n\n    disabled() {\n      return !(\n        this.step.name.trim().length > 0 &&\n        typeof this.place !== \"undefined\" &&\n        typeof this.orderSelected !== \"undefined\"\n      );\n    },\n\n    getSteps(processId, contextId) {\n      return serviceTicketPersonalized\n        .getStepsFromProcess(processId, contextId)\n        .then((result) => {\n          return result.map((el) => el.get()).filter((el) => el.order !== -1);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.stepDialogContainer {\n  width: 450px;\n}\n\n.stepChromePicker {\n  width: 100%;\n}\n\n.dialogForm {\n  display: flex;\n  flex-direction: column;\n}\n\n.dialogForm .insert_div {\n  display: flex;\n  align-items: center;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog class=\"mdDialogContainer\"\n             :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title class=\"mdDialogTitle\">Create Ticket\n    </md-dialog-title>\n\n    <md-dialog-content class=\"mdDialogContent\">\n      <div class=\"normalContent\"\n           v-if=\"pageSelected === PAGES.normal\">\n        <div class=\"content details\">\n\n          <div>\n            <hr class=\"hr-text\"\n                data-content=\"Details\">\n          </div>\n\n          <div class=\"left\">\n\n            <div class=\"detail\"\n                 v-if=\"commonTicketInfo\">\n              <div class=\"label\">Title</div>\n              <div class=\"value\"\n                   v-tooltip=\"commonTicketInfo.name\">{{commonTicketInfo.name}}\n              </div>\n            </div>\n\n            <div class=\"detail\"\n                 v-else-if=\"!commonTicketInfo\">\n              <md-field>\n                <label>Ticket name</label>\n                <md-input v-model=\"ticket.name\"></md-input>\n              </md-field>\n            </div>\n\n            <div class=\"detail\"\n                 v-if=\"nodeInfo\">\n              <div class=\"label\">Element</div>\n              <div class=\"value\"\n                   v-tooltip=\"nodeInfo.name\">{{nodeInfo.name}}</div>\n            </div>\n\n          </div>\n\n        </div>\n\n        <div class=\"content priority\">\n\n          <div>\n            <hr class=\"hr-text\"\n                data-content=\"Priority\">\n          </div>\n\n          <div class=\"priorityRadio\">\n            <md-radio v-model=\"ticket.priority\"\n                      :value=\"PRIORITY_DATA.occasionally\"\n                      class=\"md-primary\">Occasionally</md-radio>\n\n            <md-radio v-model=\"ticket.priority\"\n                      :value=\"PRIORITY_DATA.normal\"\n                      class=\"md-primary\">Normal</md-radio>\n\n            <md-radio v-model=\"ticket.priority\"\n                      :value=\"PRIORITY_DATA.urgent\"\n                      class=\"md-primary\">Urgent</md-radio>\n          </div>\n\n        </div>\n\n        <div class=\"content notes\">\n          <hr class=\"hr-text\"\n              data-content=\"Notes\">\n\n          <div class=\"pj\">\n\n            <md-button class=\"md-dense md-primary\"\n                       @click=\"addPJ\">\n              <md-icon>attach_file</md-icon>\n              ADD\n            </md-button>\n\n            <md-content class=\"pjDiv md-scrollbar\"\n                        v-if=\"ticket.pj.length > 0\">\n\n              <attachment-component v-for=\"(file,index) in ticket.pj\"\n                                    :key=\"index\"\n                                    :file=\"file\"\n                                    @remove=\"removePJ\">{{file.name}}\n              </attachment-component>\n            </md-content>\n\n            <md-content class=\"pjDiv empty\"\n                        v-else>\n              No Attachment added\n            </md-content>\n\n          </div>\n\n          <md-field>\n            <label>Message</label>\n            <md-textarea v-model=\"ticket.description\"></md-textarea>\n          </md-field>\n\n        </div>\n      </div>\n\n      <div class=\"responseContent\"\n           v-else>\n        <md-progress-spinner md-mode=\"indeterminate\"\n                             v-if=\"pageSelected === PAGES.loading\">\n        </md-progress-spinner>\n\n        <md-icon v-else\n                 class=\"md-size-5x\">{{icon}}</md-icon>\n      </div>\n\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      <md-button class=\"md-primary\"\n                 @click=\"createTicket\"\n                 :disabled=\"!(ticket.name.trim().length > 0)\">Save</md-button>\n    </md-dialog-actions>\n\n  </md-dialog>\n</template>\n\n<script>\nimport { serviceTicketPersonalized } from \"spinal-service-ticket\";\nimport { TICKET_PRIORITIES } from \"spinal-service-ticket/dist/Constants\";\nimport AttachmentComponent from \"./components/attachment.vue\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport { spinalIO } from \"../../extensions/spinalIO\";\nimport { TICKET_EVENTS } from \"../../extensions/ticketsEvents\";\nimport EventBus from \"../../extensions/Event\";\n\nexport default {\n  name: \"createTicketDialog\",\n  props: [\"onFinised\"],\n  components: {\n    \"attachment-component\": AttachmentComponent,\n  },\n  data() {\n    this.PRIORITY_DATA = TICKET_PRIORITIES;\n    this.PAGES = {\n      normal: 0,\n      loading: 1,\n      success: 2,\n      error: 3,\n    };\n\n    return {\n      pageSelected: this.PAGES.normal,\n      showDialog: true,\n      contextId: undefined,\n      processId: undefined,\n      commonTicket: undefined,\n      nodeInfo: undefined,\n      commonTicketInfo: undefined,\n      ticket: {\n        name: \"\",\n        // elementSelected: null,\n        description: \"\",\n        pj: [],\n        priority: this.PRIORITY_DATA.occasionally,\n        user: {},\n      },\n      messages: {\n        note: \"\",\n        pj: [],\n      },\n    };\n  },\n  methods: {\n    async opened(option) {\n      // this.autoFocusNameInput();\n      this.contextId = option.contextId;\n      this.processId = option.processId;\n      this.nodeInfo = option.selectedNode.info.get();\n\n      if (option.incidentId) {\n        this.commonTicketInfo = SpinalGraphService.getInfo(\n          option.incidentId\n        ).get();\n      }\n      // this.ticket.elementSelected = new Ptr(option.selectedNode);\n      const user = await spinalIO.getUserConnected();\n      // console.log(\"user\", user);\n      this.ticket.user.username = user.name;\n      this.ticket.userId = user.id;\n    },\n\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised({ closeResult, inputValue: this.inputValue });\n      }\n    },\n\n    async removed(res) {\n      if (res.closeResult) {\n        // this.ticket.urls = this.ticket.urls.split(\"\\n\");\n        // this.ticket.images = new Ptr(this.ticket.images);\n      }\n\n      this.showDialog = false;\n    },\n\n    createTicket() {\n      // console.log(this.ticket);\n      this.pageSelected = this.PAGES.loading;\n      serviceTicketPersonalized\n        .addTicket(\n          this.ticket,\n          this.processId,\n          this.contextId,\n          this.nodeInfo.id\n        )\n        .then((ticketId) => {\n          const node = SpinalGraphService.getRealNode(ticketId);\n          if (node) {\n            EventBus.$emit(TICKET_EVENTS.created, node.info.get());\n            this.pageSelected = this.PAGES.success;\n            //  this.addNote(node);\n          }\n        })\n        .catch(() => (this.pageSelected = this.PAGES.error));\n    },\n\n    autoFocusNameInput() {\n      setTimeout(() => {\n        this.$refs[\"nameTextField\"].$el.focus();\n      }, 200);\n    },\n\n    addPJ() {\n      const maxSize = 25000000;\n      const input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.multiple = true;\n      input.click();\n      input.addEventListener(\n        \"change\",\n        (event) => {\n          const files = event.target.files;\n          let filelist = [];\n          for (const file of files) {\n            filelist.push(file);\n          }\n          filelist.push(...this.ticket.pj);\n          const sizes = filelist.map((el) => el.size);\n          const filesSize = sizes.reduce((a, b) => a + b);\n          if (filesSize > maxSize) {\n            alert(\n              \"The selected file(s) is too large. The maximum size must not exceed 25 MB\"\n            );\n            return;\n          }\n          this.ticket.pj = filelist;\n        },\n        false\n      );\n    },\n\n    removePJ(file) {\n      this.ticket.pj = this.ticket.pj.filter((el) => el.name !== file.name);\n    },\n  },\n  computed: {\n    icon() {\n      switch (this.pageSelected) {\n        case this.PAGES.success:\n          return \"check\";\n        case this.PAGES.error:\n          return \"error_outline\";\n      }\n    },\n  },\n  watch: {\n    commonTicketInfo() {\n      if (this.commonTicketInfo && this.commonTicketInfo.name)\n        this.ticket.name = this.commonTicketInfo.name;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.mdDialogContainer {\n  width: 450px;\n  height: 600px;\n  // display: flex;\n}\n\n.mdDialogContainer .mdDialogTitle {\n  text-align: center;\n  // margin: 0px !important;\n}\n\n.mdDialogContainer .mdDialogContent {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  padding: 0 24px 0 24px !important;\n}\n\n.mdDialogContainer .mdDialogContent .normalContent,\n.mdDialogContainer .mdDialogContent .responseContent {\n  width: 100%;\n  height: 100%;\n}\n\n.mdDialogContainer .mdDialogContent .responseContent {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.mdDialogContainer .mdDialogContent .normalContent .content.details {\n  width: 100%;\n  height: 25%;\n  display: flex;\n  flex-direction: column;\n  // justify-content: space-between;\n}\n\n.mdDialogContainer .mdDialogContent .normalContent .content.details .left,\n.mdDialogContainer .mdDialogContent .normalContent .content.details .right {\n  width: 100%;\n  height: 100%;\n  align-items: center;\n}\n\n.mdDialogContainer .mdDialogContent .normalContent .content.details .detail {\n  width: 100%;\n  height: 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.mdDialogContainer\n  .mdDialogContent\n  .normalContent\n  .content.details\n  .detail\n  .label {\n  width: 30%;\n  // color: #818078;\n}\n\n.mdDialogContainer\n  .mdDialogContent\n  .normalContent\n  .content.details\n  .detail\n  .value {\n  width: 69%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  color: #818078;\n}\n\n.mdDialogContainer .mdDialogContent .normalContent .content.priority {\n  width: 100%;\n  height: 20%;\n  display: flex;\n  flex-direction: column;\n  // justify-content: center;\n}\n\n.mdDialogContainer\n  .mdDialogContent\n  .normalContent\n  .content.priority\n  .priorityRadio {\n  height: calc(100%);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.mdDialogContainer .mdDialogContent .normalContent .content.notes {\n  width: 100%;\n  height: 55%;\n}\n\n.mdDialogContainer .mdDialogContent .normalContent .content.notes .pj {\n  width: 100%;\n  height: 30%;\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.mdDialogContainer .mdDialogContent .normalContent .content.notes .pj .pjDiv {\n  width: 60%;\n  border: 1px dashed gray;\n  background: transparent;\n  overflow: auto;\n}\n\n.mdDialogContainer\n  .mdDialogContent\n  .normalContent\n  .content.notes\n  .pj\n  .pjDiv.empty {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.hr-text {\n  line-height: 1em;\n  position: relative;\n  outline: 0;\n  border: 0;\n  color: white;\n  text-align: center;\n  height: 1.5em;\n  &:before {\n    content: \"\";\n    background: #818078;\n    position: absolute;\n    left: 0;\n    top: 50%;\n    width: 100%;\n    height: 1px;\n  }\n  &:after {\n    content: attr(data-content);\n    position: relative;\n    display: inline-block;\n    color: white;\n\n    padding: 0 0.5em;\n    line-height: 1.5em;\n    color: #818078;\n    text-transform: uppercase;\n    font-size: 1em;\n    background: #424242;\n  }\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n   <div class=\"content\">\n      <div\n         class=\"md-caption name\"\n         v-tooltip=\"file.name\"\n      >{{file.name}}</div>\n\n      <div\n         class=\"md-caption delete\"\n         @click=\"remove\"\n      >X</div>\n   </div>\n</template>\n\n<script>\nexport default {\n   name: \"attachment\",\n   props: [\"file\"],\n   data() {\n      return {};\n   },\n   methods: {\n      remove() {\n         this.$emit(\"remove\", this.file);\n      },\n   },\n};\n</script>\n\n<style scoped>\n.content {\n   width: 95%;\n   margin: auto;\n   display: flex;\n   font-weight: bold;\n   justify-content: space-between;\n   align-items: center;\n}\n\n.content .name {\n   width: calc(100% - 30px);\n   display: block;\n   white-space: nowrap;\n   overflow: hidden;\n   text-overflow: ellipsis;\n}\n\n.content .delete {\n   width: 30px;\n   text-align: center;\n   color: #ff0000;\n}\n\n.content .delete:hover {\n   cursor: pointer;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n   <md-dialog\n      class=\"ticketMdDialogContainer\"\n      :md-active.sync=\"showDialog\"\n      @md-closed=\"closeDialog(false)\"\n   >\n      <md-dialog-title class=\"dialogTitle\">Select Ticket Process</md-dialog-title>\n      <md-dialog-content class=\"selectProcessClass\">\n\n         <!-- <div class=\"cont\"\n           v-if=\"loading === PAGE_STATES.success\"> -->\n         <!-- <md-tabs class=\"md-transparent\"\n                 md-alignment=\"fixed\"\n                 @md-changed=\"changeActiveTab\">\n\n          <md-tab :id=\"tabs.linked\"\n                  md-label=\"Linked Tickets\">\n            <div class=\"my_content\">\n              <tickets-vue class=\"tickets_class\"\n                           :data=\"tickets\"\n                           @reload=\"reloadData\"></tickets-vue>\n            </div>\n\n          </md-tab> -->\n\n         <!-- <md-tab :id=\"tabs.create\"\n                  md-label=\"Create new Ticket\"> -->\n         <div\n            class=\"my_content\"\n            v-if=\"loading === PAGE_STATES.success\"\n         >\n            <select-process\n               :data=\"data\"\n               :contextId=\"contextId\"\n               :processes=\"processes\"\n               :processId=\"processId\"\n               :incidents=\"incidents\"\n               :incidentId=\"incidentId\"\n               @selectContext=\"selectContext\"\n               @selectProcess=\"selectProcess\"\n               @selectIncident=\"selectIncident\"\n               @createCommonIncident=\"createCommonIncident\"\n               @createContext=\"createContext\"\n               @createProcess=\"createProcess\"\n            >\n            </select-process>\n         </div>\n\n         <!-- </md-tab>\n\n        </md-tabs> -->\n         <!-- </div> -->\n         <div\n            class=\"cont loading\"\n            v-else-if=\"loading === PAGE_STATES.loading\"\n         >\n            loading...\n         </div>\n\n      </md-dialog-content>\n\n      <md-dialog-actions>\n         <md-button\n            class=\"md-primary\"\n            @click=\"closeDialog(false)\"\n         >Close</md-button>\n\n         <md-button\n            class=\"md-primary\"\n            :disabled=\"!(contextId && processId)\"\n            @click=\"closeDialog(true)\"\n         >Save</md-button>\n      </md-dialog-actions>\n\n   </md-dialog>\n</template>\n\n<script>\nimport { serviceTicketPersonalized } from \"spinal-service-ticket\";\nimport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n// import linkerTemplateVue from \"./components/linkerTemplate.vue\";\n\nimport selectProcessVue from \"./components/selectProcess.vue\";\n\nimport EventBus from \"../../extensions/Event\";\n\nimport ticketsVue from \"../panels/components/tickets.vue\";\n\nexport default {\n   name: \"selectProcessDialog\",\n   props: [\"onFinised\"],\n   components: {\n      // \"link-template\": linkerTemplateVue,\n      \"select-process\": selectProcessVue,\n      // \"tickets-vue\": ticketsVue,\n   },\n   data() {\n      this.PAGE_STATES = {\n         success: 0,\n         loading: 1,\n      };\n      this.tabs = {\n         create: \"createNewTicketTab\",\n         linked: \"linkedTicketTab\",\n      };\n      return {\n         showDialog: true,\n         contextId: undefined,\n         processId: undefined,\n         incidentId: undefined,\n         selectedNode: undefined,\n         data: [],\n         processes: [],\n         incidents: [],\n         // tickets: [],\n         selectedTab: this.tabs.linked,\n         loading: this.PAGE_STATES.loading,\n      };\n   },\n   mounted() {\n      EventBus.$on(\"commonIncidentCreated\", async (id) => {\n         this.data = await this.getAllData();\n         this.updateIncidents();\n         this.incidentId = id;\n      });\n\n      EventBus.$on(\"ticketContextCreated\", async (context) => {\n         this.data = await this.getAllData();\n         this.contextId = context;\n      });\n\n      EventBus.$on(\"ticketProcessCreated\", async (process) => {\n         this.data = await this.getAllData();\n         this.updateProcesses();\n         this.processId = process;\n      });\n   },\n   methods: {\n      async opened(option) {\n         this.loading = this.PAGE_STATES.loading;\n         this.selectedNode = option.selectedNode;\n         const nodeId = option.selectedNode.getId().get();\n\n         this.data = await this.getAllData();\n         // this.tickets = await this.getNodeTickets(nodeId);\n\n         this.loading = this.PAGE_STATES.success;\n      },\n\n      async removed(res) {\n         if (res.closeResult && this.contextId && this.processId) {\n            spinalPanelManagerService.openPanel(\"createTicketDialog\", {\n               contextId: this.contextId,\n               processId: this.processId,\n               incidentId: this.incidentId,\n               selectedNode: this.selectedNode,\n            });\n         }\n\n         this.showDialog = false;\n      },\n\n      closeDialog(closeResult) {\n         if (typeof this.onFinised === \"function\") {\n            this.onFinised({ closeResult, process: this.process });\n         }\n      },\n\n      selectContext(id) {\n         this.contextId = id;\n      },\n\n      selectProcess(id) {\n         this.processId = id;\n      },\n\n      selectIncident(id) {\n         this.incidentId = id;\n      },\n\n      getAllData() {\n         const contexts = serviceTicketPersonalized.getContexts();\n         let promises = contexts.map(async (context) => {\n            const processes = await serviceTicketPersonalized.getAllProcess(\n               context.id\n            );\n            const promises = processes.map(async (argProcess) => {\n               const process = argProcess.get();\n               process[\n                  \"commonIncident\"\n               ] = await serviceTicketPersonalized.getCommonIncident(\n                  process.id\n               );\n               return process;\n            });\n\n            context[\"processes\"] = await Promise.all(promises);\n            return context;\n         });\n         return Promise.all(promises);\n      },\n\n      // getIcidents() {\n      //   this.incidentId = undefined;\n\n      //   if (this.contextId && this.processId) {\n      //     let context = this.data.find((el) => el.id === this.contextId);\n      //     if (context) {\n      //       let process = context.processes.find((el) => el.id == this.processId);\n      //       if (category) return process.commonIncident;\n      //     }\n      //   }\n      //   return [];\n      // },\n\n      updateProcesses() {\n         // this.categorySelected = undefined;\n         this.processes = [];\n         if (this.contextId) {\n            let val = this.data.find((el) => el.id === this.contextId);\n            if (val) this.processes = val.processes;\n         }\n      },\n\n      updateIncidents() {\n         this.incidents = [];\n         if (this.contextId && this.processId) {\n            let context = this.data.find((el) => el.id === this.contextId);\n            if (context) {\n               let process = context.processes.find(\n                  (el) => el.id == this.processId\n               );\n               if (process) this.incidents = process.commonIncident;\n            }\n         }\n      },\n\n      createCommonIncident() {\n         let params = this.processes.find((el) => el.id == this.processId);\n         // params[\"callback\"] = (id) => (this.incidentId = id);\n\n         spinalPanelManagerService.openPanel(\n            \"createCommonIncidentDialog\",\n            params\n         );\n      },\n\n      createContext() {\n         spinalPanelManagerService.openPanel(\"createTicketContextDialog\");\n      },\n\n      createProcess() {\n         const params = { contextId: this.contextId };\n         spinalPanelManagerService.openPanel(\"createProcessDialog\", params);\n      },\n\n      // getNodeTickets(nodeId) {\n      //   return serviceTicketPersonalized\n      //     .getTicketsFromNode(nodeId)\n      //     .then((tickets) => {\n      //       const promises = tickets.map(async (ticket) => {\n      //         ticket[\"step\"] = await this.getStep(ticket.stepId);\n      //         return ticket;\n      //       });\n\n      //       return Promise.all(promises);\n      //     });\n      // },\n\n      // getStep(id) {\n      //   const info = SpinalGraphService.getInfo(id);\n      //   if (info) return Promise.resolve(info.get());\n\n      //   return SpinalGraphService.getNodeAsync(id).then((result) => {\n      //     return result.get();\n      //   });\n      // },\n\n      async reloadData() {\n         const id = this.selectedNode.getId().get();\n         this.tickets = await this.getNodeTickets(id);\n      },\n\n      changeActiveTab(tabId) {\n         this.selectedTab = tabId;\n      },\n   },\n   watch: {\n      contextId() {\n         this.processId = undefined;\n         this.incidentId = undefined;\n\n         this.updateProcesses();\n         // this.updateProcesses();\n      },\n      processId() {\n         this.incidentId = undefined;\n         this.updateIncidents();\n      },\n   },\n};\n</script>\n\n<style scoped>\n.ticketMdDialogContainer {\n   width: 900px;\n   height: 500px;\n}\n\n.ticketMdDialogContainer .dialogTitle {\n   text-align: center;\n}\n\n.ticketMdDialogContainer .selectProcessClass {\n   padding: 0 20px 10px 20px;\n}\n\n.ticketMdDialogContainer .selectProcessClass .my_content {\n   width: 100%;\n   height: 100%;\n}\n\n/* .ticketMdDialogContainer .selectProcessClass .cont {\n  width: 100%;\n  height: 100%;\n} */\n</style>\n\n\n<style>\n.ticketMdDialogContainer .md-dialog-container {\n   max-width: 100%;\n   max-height: 100%;\n}\n/*\n.ticketMdDialogContainer\n  .selectProcessClass\n  .md-tabs.md-transparent.md-alignment-fixed.md-theme-default {\n  width: 100%;\n  height: 100%;\n}\n\n.ticketMdDialogContainer\n  .selectProcessClass\n  .md-tabs.md-transparent.md-alignment-fixed.md-theme-default\n  .md-tabs-navigation.md-elevation-0 {\n  height: 50px;\n}\n\n.ticketMdDialogContainer\n  .selectProcessClass\n  .md-tabs.md-transparent.md-alignment-fixed.md-theme-default\n  .md-content.md-tabs-content.md-theme-default {\n  height: calc(100% - 50px) !important;\n}\n\n.ticketMdDialogContainer\n  .selectProcessClass\n  .md-tabs.md-transparent.md-alignment-fixed.md-theme-default\n  .md-content.md-tabs-content.md-theme-default\n  .md-tabs-container {\n  height: 100%;\n}\n\n.ticketMdDialogContainer\n  .selectProcessClass\n  .md-tabs.md-transparent.md-alignment-fixed.md-theme-default\n  .md-content.md-tabs-content.md-theme-default\n  .md-tabs-container\n  .md-tab {\n  height: 100%;\n}\n\n.ticketMdDialogContainer\n  .selectProcessClass\n  .md-tabs.md-transparent.md-alignment-fixed.md-theme-default\n  .md-content.md-tabs-content.md-theme-default\n  .md-tabs-container\n  .md-tab\n  .my_content {\n  max-width: 100%;\n  height: 100%;\n}*/\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n\n<template>\n  <div class=\"select_container\">\n    <!-- <div class=\"dialogTitle\">Select Ticket Process</div> -->\n    <div class=\"content\">\n      <div class=\"section\">\n        <link-template :title=\"'Select Context'\"\n                       :data=\"data\"\n                       :itemSelected=\"contextId\"\n                       @create=\"createContext\"\n                       @select=\"selectContext\"\n                       :showBtn=\"true\"></link-template>\n      </div>\n\n      <div class=\"section\">\n        <link-template :title=\"'Select Process'\"\n                       :data=\"processes\"\n                       :itemSelected=\"processId\"\n                       @create=\"createProcess\"\n                       @select=\"selectProcess\"\n                       :showBtn=\"contextId && contextId.length > 0\">\n        </link-template>\n\n      </div>\n\n      <div class=\"section\">\n        <link-template :title=\"'Select Common Incident'\"\n                       :subTitle=\"'(optional) it will be the ticket name'\"\n                       :data=\"incidents\"\n                       :itemSelected=\"incidentId\"\n                       @select=\"selectIncident\"\n                       @create=\"createCommonIncident\"\n                       :showBtn=\"showCreatBtn()\"></link-template>\n\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport linkerTemplateVue from \"./linkerTemplate.vue\";\n\nexport default {\n  name: \"selectProcess\",\n  props: {\n    data: {},\n    contextId: {},\n    processes: {},\n    processId: {},\n    incidents: {},\n    incidentId: {},\n  },\n  components: {\n    \"link-template\": linkerTemplateVue,\n  },\n  methods: {\n    showCreatBtn() {\n      return (\n        this.contextId &&\n        this.contextId.length > 0 &&\n        this.processId &&\n        this.processId.length > 0\n      );\n    },\n\n    selectContext(id) {\n      this.$emit(\"selectContext\", id);\n    },\n\n    selectProcess(id) {\n      this.$emit(\"selectProcess\", id);\n    },\n\n    selectIncident(id) {\n      this.$emit(\"selectIncident\", id);\n    },\n\n    createCommonIncident() {\n      this.$emit(\"createCommonIncident\");\n    },\n\n    createContext() {\n      this.$emit(\"createContext\");\n    },\n\n    createProcess() {\n      this.$emit(\"createProcess\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.select_container {\n  width: 100%;\n  height: 100%;\n}\n/* .select_container .dialogTitle {\n  height: 50px;\n  text-align: center;\n} */\n.select_container .content {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n}\n.select_container .content .section {\n  width: 33%;\n  border: 1px solid grey;\n  border-radius: 4% 4% 0 0;\n  padding: 15px;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\nThis file is part of SpinalCore.\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n\n<template>\n   <div class=\"subContent\">\n      <md-list class=\"title\">\n\n         <!--<md-list-item> \n          <div class=\"md-list-item-text\">\n          <span>{{title}}</span>\n          <span class=\"md-caption\"\n                v-if=\"subTitle\">{{subTitle}}</span>\n        </div>\n\n        <div class=\"md-layout-item md-size-10 mdIcon\">\n          <md-button class=\"md-icon-button\"\n                     @click=\"createEvent\"\n                     v-if=\"showBtn\">\n            <md-icon>control_point</md-icon>\n          </md-button>\n        </div> \n        </md-list-item>-->\n         <md-list-item>\n            <span class=\"md-list-item-text\">{{title}}</span>\n            <md-button\n               class=\"md-icon-button\"\n               @click=\"createEvent\"\n               v-if=\"showBtn\"\n            >\n               <md-icon>control_point</md-icon>\n            </md-button>\n         </md-list-item>\n\n      </md-list>\n\n      <md-content class=\"container md-scrollbar\">\n         <md-list>\n            <md-list-item\n               class=\"list-item\"\n               v-for=\"(item,index) in data\"\n               :key=\"index\"\n               @click=\"selectItem(item.id)\"\n               :class=\"{'selected' : item.id === itemSelected}\"\n               v-tooltip=\"item.name\"\n            >\n\n               <span class=\"md-list-item-text\">{{item.name}}</span>\n\n            </md-list-item>\n         </md-list>\n      </md-content>\n\n   </div>\n</template>\n\n<script>\nexport default {\n   name: \"linkToGroupTemplate\",\n   props: [\"data\", \"title\", \"itemSelected\", \"showBtn\", \"subTitle\"],\n   methods: {\n      createEvent() {\n         this.$emit(\"create\");\n      },\n      selectItem(id) {\n         this.$emit(\"select\", id);\n      },\n   },\n};\n</script>\n\n<style scoped>\n.subContent {\n   width: 100%;\n   height: 100%;\n}\n.subContent .title {\n   width: 100%;\n   /* height: 10%; */\n   /* text-align: center; */\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   padding: 0 15px 0 15px;\n   border-bottom: 1px dashed grey;\n}\n.subContent .container {\n   width: 100%;\n   height: calc(100% - 50px);\n   padding: 0px !important;\n   /* border: 1px solid red; */\n   overflow: hidden;\n   overflow-y: auto;\n}\n.subContent .container .list-item {\n   border-bottom: 1px solid grey;\n}\n\n.subContent .container .list-item .md-list-item-text {\n   width: 100%;\n   display: block;\n   overflow: hidden;\n   white-space: nowrap;\n   text-overflow: ellipsis;\n}\n\n.subContent .container .list-item.selected {\n   background-color: #448aff;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n   <md-content class=\"table_container\">\n      <md-table\n         class=\"mdTable\"\n         v-model=\"searched\"\n         md-sort=\"name\"\n      >\n\n         <md-table-toolbar\n            class=\"myToolbar\"\n            md-elevation=\"0\"\n         >\n            <div class=\"md-toolbar-section-start\">\n               <h1 class=\"md-title\">Tickets</h1>\n            </div>\n\n            <div class=\"filters md-toolbar-section-end\">\n               <!-- <div class=\"_fields\">\n            <md-field>\n              <label for=\"movies\">Steps</label>\n              <md-select v-model=\"selectedMovies\"\n                         name=\"movies\"\n                         id=\"movies\"\n                         multiple>\n                <md-option value=\"fight-club\">Fight Club</md-option>\n                <md-option value=\"godfather\">Godfather</md-option>\n                <md-option value=\"godfather-ii\">Godfather II</md-option>\n                <md-option value=\"godfather-iii\">Godfather III</md-option>\n                <md-option value=\"godfellas\">Godfellas</md-option>\n                <md-option value=\"pulp-fiction\">Pulp Fiction</md-option>\n                <md-option value=\"scarface\">Scarface</md-option>\n              </md-select>\n            </md-field>\n          </div> -->\n\n               <div class=\"_fields\">\n                  <md-field md-clearable>\n                     <md-input\n                        placeholder=\"Search by name...\"\n                        v-model=\"searchByName\"\n                        @input=\"searchOnTable\"\n                     />\n                  </md-field>\n               </div>\n\n            </div>\n\n         </md-table-toolbar>\n\n         <md-table-empty-state\n            md-label=\"No Ticket found\"\n            :md-description=\"`No ticket found for this query.`\"\n         >\n         </md-table-empty-state>\n\n         <!-- @mouseover=\"selectOnMaquette(item)\" -->\n         <md-table-row\n            slot=\"md-table-row\"\n            slot-scope=\"{ item }\"\n            @dblclick=\"isolateOnMaquette(item)\"\n            @mouseleave=\"deselectOnMaquette\"\n         >\n            <md-table-cell\n               class=\"tableName\"\n               md-label=\"Name\"\n               md-sort-by=\"name\"\n            >\n               {{ item.name }}\n\n            </md-table-cell>\n\n            <md-table-cell\n               md-label=\"State\"\n               class=\"ticketName\"\n            >\n               <div\n                  class=\"color\"\n                  :style=\"{'background-color' : item.step.color}\"\n               ></div>\n               <div class=\"name\">{{ item.step.name }}</div>\n\n            </md-table-cell>\n\n            <md-table-cell\n               md-label=\"Creation Date\"\n               md-sort-by=\"creationDate\"\n            >\n               {{ item.creationDate | formatCreationDate }}\n            </md-table-cell>\n\n            <md-table-cell\n               md-label=\"Priority\"\n               md-sort-by=\"priority\"\n            >\n               {{ item.priority | displayPriority }}</md-table-cell>\n\n            <md-table-cell md-label=\"Username\">\n               {{item.user | userName}}\n            </md-table-cell>\n\n            <md-table-cell md-label=\"\">\n               <md-menu\n                  md-size=\"small\"\n                  class=\"ticket_menu\"\n               >\n                  <md-button\n                     class=\"md-icon-button\"\n                     md-menu-trigger\n                  >\n                     <md-icon>more_vert</md-icon>\n                  </md-button>\n\n                  <md-menu-content class=\"ticket_menu_content\">\n                     <md-menu-item\n                        v-if=\"item.step.order >= 0\"\n                        @click=\"passToNextStep(item)\"\n                     >\n                        <md-icon>skip_next</md-icon>\n                        <span>Pass to next step</span>\n                     </md-menu-item>\n\n                     <md-menu-item\n                        v-if=\"item.step.order > 0\"\n                        @click=\"backToPreviousStep(item)\"\n                     >\n                        <md-icon>skip_previous</md-icon>\n                        <span>Back to previous step</span>\n                     </md-menu-item>\n\n                     <md-menu-item @click=\"sendMessage(item)\">\n                        <md-icon>comment</md-icon>\n                        <span>Add comment</span>\n                     </md-menu-item>\n\n                     <md-menu-item\n                        v-if=\"!isArchived(item)\"\n                        @click=\"archiveTicket(item)\"\n                     >\n                        <md-icon>archive</md-icon>\n                        <span>Archive</span>\n                     </md-menu-item>\n\n                     <md-menu-item\n                        v-if=\"isArchived(item)\"\n                        @click=\"unarchiveTicket(item)\"\n                     >\n                        <md-icon>unarchive</md-icon>\n                        <span>Unarchive</span>\n                     </md-menu-item>\n\n                     <md-menu-item @click=\"seeDetails(item)\">\n                        <md-icon>assignment_late</md-icon>\n                        <span>See Details</span>\n                     </md-menu-item>\n\n                     <!-- <md-menu-item @click=\"seeLogs(item)\">\n                <md-icon>receipt_long</md-icon>\n                <span>See Logs</span>\n              </md-menu-item> -->\n\n                  </md-menu-content>\n\n               </md-menu>\n            </md-table-cell>\n\n         </md-table-row>\n      </md-table>\n   </md-content>\n</template>\n\n<script>\nimport { TICKET_PRIORITIES } from \"spinal-service-ticket/dist/Constants\";\n\nconst {\n   spinalPanelManagerService,\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nimport { spinalIO } from \"../../../extensions/spinalIO\";\n\nimport moment from \"moment\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport { serviceTicketPersonalized } from \"spinal-service-ticket\";\n\nimport { TICKET_EVENTS } from \"../../../extensions/ticketsEvents\";\nimport EventBUS from \"../../../extensions/Event\";\nimport { SelectElementOnMaquette } from \"../../../buttons/standard_buttons/selectElement\";\nimport { IsolateElementOnMaquette } from \"../../../buttons/standard_buttons/isolate\";\nimport { ARCHIVED_STEP } from \"spinal-service-ticket/dist/Constants\";\n\nconst selectBtn = new SelectElementOnMaquette();\nconst isolateBtn = new IsolateElementOnMaquette();\n\nexport default {\n   name: \"ticketsVue\",\n   props: {\n      data: {},\n   },\n   data() {\n      return {\n         selected: [],\n         // tickets: [],\n         searched: [],\n         searchByName: \"\",\n      };\n   },\n   mounted() {\n      EventBUS.$on(TICKET_EVENTS.created, (data) => this.$emit(\"reload\", data));\n      EventBUS.$on(TICKET_EVENTS.changeStep, (data) =>\n         this.$emit(\"reload\", data)\n      );\n\n      this.searched = this.data;\n   },\n   methods: {\n      onSelect(items) {\n         this.selected = items;\n      },\n\n      searchOnTable() {\n         this.searched = this.data.filter((el) =>\n            el.name.toLowerCase().includes(this.searchByName.toLowerCase())\n         );\n\n         // console.log(\"this.searchByName\", this.searchByName);\n      },\n\n      async passToNextStep(item) {\n         const user = await spinalIO.getUserConnected();\n\n         const contextId = item.contextId\n            ? item.contextId\n            : this.getItemContext(item.id).id.get();\n\n         const processId = item.step.processId;\n         const ticketId = item.id;\n\n         serviceTicketPersonalized\n            .moveTicketToNextStep(contextId, processId, ticketId, user)\n            .then((step) => {\n               const info = SpinalGraphService.getInfo(ticketId).get();\n               EventBUS.$emit(TICKET_EVENTS.changeStep, {\n                  ticket: info,\n                  step: step,\n               });\n            });\n      },\n\n      async backToPreviousStep(item) {\n         const user = await spinalIO.getUserConnected();\n\n         const contextId = item.contextId\n            ? item.contextId\n            : this.getItemContext(item.id).id.get();\n\n         const processId = item.step.processId;\n         const ticketId = item.id;\n         serviceTicketPersonalized\n            .moveTicketToPreviousStep(contextId, processId, ticketId, user)\n            .then((step) => {\n               const info = SpinalGraphService.getInfo(ticketId).get();\n               EventBUS.$emit(TICKET_EVENTS.changeStep, {\n                  ticket: info,\n                  step: step,\n               });\n            });\n      },\n\n      sendMessage(item) {\n         let obj = {\n            selectedNode: SpinalGraphService.getRealNode(item.id),\n         };\n         spinalPanelManagerService.openPanel(\"panel-notes\", obj);\n      },\n\n      seeDetails(item) {\n         const context = SpinalGraphService.getInfo(item.contextId);\n         const params = {\n            selectedNode: SpinalGraphService.getInfo(item.id).get(),\n            context: context\n               ? context.get()\n               : this.getItemContext(item.id).get(),\n         };\n\n         spinalPanelManagerService.openPanel(\"ticketDetailDialog\", params);\n      },\n\n      getItemContext(id) {\n         const realNode = SpinalGraphService.getRealNode(id);\n         const contextId = realNode.contextIds._attribute_names[0];\n         return SpinalGraphService.getInfo(contextId);\n      },\n\n      seeLogs(item) {},\n\n      selectOnMaquette(item) {\n         const params = {\n            selectedNode: SpinalGraphService.getInfo(item.id),\n            context: item.contextId\n               ? SpinalGraphService.getInfo(item.contextId)\n               : this.getItemContext(item.id),\n         };\n\n         selectBtn.action(params);\n      },\n\n      isolateOnMaquette(item) {\n         const params = {\n            selectedNode: SpinalGraphService.getInfo(item.id),\n            context: item.contextId\n               ? SpinalGraphService.getInfo(item.contextId)\n               : this.getItemContext(item.id),\n         };\n\n         isolateBtn.action(params);\n      },\n\n      deselectOnMaquette() {\n         window.spinal.ForgeViewer.viewer.select();\n      },\n\n      async archiveTicket(item) {\n         const contextId = item.contextId\n            ? item.contextId\n            : this.getItemContext(item.id).id.get();\n\n         const user = await spinalIO.getUserConnected();\n\n         serviceTicketPersonalized\n            .ArchiveTickets(contextId, item.step.processId, item.id, user)\n            .then((step) => {\n               const info = SpinalGraphService.getInfo(item.id).get();\n               EventBUS.$emit(TICKET_EVENTS.changeStep, {\n                  ticket: info,\n                  step: step,\n               });\n            });\n      },\n\n      async unarchiveTicket(item) {\n         const contextId = item.contextId\n            ? item.contextId\n            : this.getItemContext(item.id).id.get();\n\n         const user = await spinalIO.getUserConnected();\n         serviceTicketPersonalized\n            .unarchiveTicket(contextId, item.step.processId, item.id, user)\n            .then((step) => {\n               const info = SpinalGraphService.getInfo(item.id).get();\n               EventBUS.$emit(TICKET_EVENTS.changeStep, {\n                  ticket: info,\n                  step: step,\n               });\n            });\n      },\n\n      isArchived(item) {\n         return item.step.order === ARCHIVED_STEP.order;\n      },\n   },\n\n   filters: {\n      formatCreationDate: function (date) {\n         return moment(date).fromNow();\n      },\n\n      displayPriority: function (priority) {\n         for (const key in TICKET_PRIORITIES) {\n            if (TICKET_PRIORITIES.hasOwnProperty(key)) {\n               const value = TICKET_PRIORITIES[key];\n               if (value === priority) return key;\n            }\n         }\n      },\n\n      userName: function (user) {\n         if (user && user.name) {\n            return user.name;\n         } else if (user && user.username) {\n            return user.username;\n         }\n         return \"unknow\";\n      },\n   },\n   watch: {\n      data() {\n         // console.log(\"update Data\");\n         if (this.data) {\n            this.searched = this.data;\n         }\n      },\n   },\n};\n</script>\n\n<style scoped>\n.table_container {\n   width: 100%;\n   height: 100%;\n   /* overflow: auto; */\n}\n\n.table_container .mdTable {\n   width: 100%;\n   height: calc(100% - 7px);\n}\n\n.table_container .mdTable .tableName {\n   cursor: pointer;\n}\n\n.table_container .mdTable .myToolbar {\n   padding: 0px !important;\n}\n\n.table_container .mdTable .myToolbar .filters {\n   /* width: 99%; */\n   justify-content: space-between;\n}\n\n.table_container .mdTable .myToolbar .filters ._fields {\n   width: 98%;\n}\n\n.table_container .mdTable .ticketName .color {\n   width: 5px;\n   height: 50px;\n   margin-right: 10px;\n}\n\n.table_container .mdTable .ticketName .name {\n   display: flex;\n   align-items: center;\n}\n</style>\n\n<style>\n.md-table-cell.ticketName .md-table-cell-container {\n   display: flex;\n}\n\n.md-table-cell\n   .md-table-cell-container\n   .md-menu.ticket_menu\n   .md-button\n   .md-ripple {\n   padding: 0px !important;\n}\n\n.ticket_menu_content .md-menu-content-container .md-list-item-content {\n   justify-content: flex-start;\n}\n</style>\n\n<style>\n.table_container .mdTable .myToolbar .filters ._fields .md-input {\n   padding: 0px;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\"\n             class=\"mdDialog\">\n    <md-dialog-title class=\"mdDialogTitle\">Create Ticket context\n    </md-dialog-title>\n\n    <md-dialog-content>\n      <md-field>\n        <label>Common incident name</label>\n        <md-input v-model=\"inputValue\"\n                  ref=\"nameTextField\"></md-input>\n      </md-field>\n\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n\n      <md-button :disabled=\"inputValue.trim().length === 0\"\n                 class=\"md-primary\"\n                 @click=\"closeDialog(true)\">Save</md-button>\n    </md-dialog-actions>\n\n    <!-- <form class=\"dialogForm\"\n          @submit.prevent=\"closeDialog(true)\">\n      <md-dialog-content>\n        <md-field>\n          <label>Context name</label>\n          <md-input v-model=\"inputValue\"overflow: hidden ;\n      <md-dialog-actions>\n        <md-button class=\"md-primary\"\n                   @click=\"closeDialog(false)\">Close</md-button>\n\n        <md-button class=\"md-primary\"\n                   type=\"submit\"\n                   :disabled=\"!(inputValue.trim().length > 0)\">Save</md-button>\n      </md-dialog-actions>\n    </form> -->\n  </md-dialog>\n</template>\n\n<script>\nimport { serviceTicketPersonalized } from \"spinal-service-ticket\";\n\nimport SortableList from \"./components/sortable-list.vue\";\nimport EventBus from \"../../extensions/Event\";\n\nexport default {\n  name: \"createCommonIncidentDialog\",\n  props: [\"onFinised\"],\n  components: {\n    \"sortable-list\": SortableList,\n  },\n  data() {\n    return {\n      showDialog: true,\n      inputValue: \"\",\n      processId: null,\n      callback: undefined,\n    };\n  },\n  methods: {\n    opened(option) {\n      this.processId = option.id;\n      this.callback = option.callback;\n      this.autoFocusNameInput();\n    },\n\n    async removed(res) {\n      const value = res.inputValue.trim();\n\n      if (res.closeResult && value.length > 0) {\n        const id = await serviceTicketPersonalized.addCommonIncident(\n          this.processId,\n          value\n        );\n\n        EventBus.$emit(\"commonIncidentCreated\", id);\n\n        // if (this.callback) {\n        //   this.callback(id);\n        // }\n      }\n\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised({\n          closeResult,\n          inputValue: this.inputValue,\n        });\n      }\n    },\n\n    autoFocusNameInput() {\n      setTimeout(() => {\n        this.$refs[\"nameTextField\"].$el.focus();\n      }, 200);\n    },\n  },\n};\n</script>\n\n\n\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\"\n             class=\"mdDialog\">\n    <md-dialog-title class=\"mdDialogTitle\">Create Ticket context\n    </md-dialog-title>\n\n    <md-dialog-content>\n      {{message}}\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-accent\"\n                 @click=\"closeDialog(false)\">NO</md-button>\n\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(true)\">YES</md-button>\n    </md-dialog-actions>\n\n  </md-dialog>\n</template>\n\n<script>\nexport default {\n  name: \"confirmationDialog\",\n  props: [\"onFinised\"],\n  data() {\n    return {\n      showDialog: true,\n      message: \"\",\n      callback: undefined,\n    };\n  },\n  methods: {\n    opened(option) {\n      this.message = option.message;\n      this.callback = option.callback;\n    },\n\n    async removed(res) {\n      if (res.closeResult && this.callback) {\n        this.callback();\n      }\n\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised({\n          closeResult,\n        });\n      }\n    },\n  },\n};\n</script>","import TicketManagerPanel from './ticketManager.vue';\nimport TicketDetailDialog from \"./ticketDetailPanel.vue\";\nimport ManageTicketPanel from \"./manageTicketPanel.vue\";\nimport Vue from \"vue\";\n\nconst {\n  SpinalForgeExtention,\n} = require(\"spinal-env-viewer-panel-manager-service_spinalforgeextention\");\n\n\nconst panels = [{\n    name: \"ticketManagerPanel\",\n    vueMountComponent: Vue.extend(TicketManagerPanel),\n    panel: {\n      title: \"Ticket Manager\",\n      closeBehaviour: \"hide\",\n    },\n    style: {\n      height: \"475px\",\n      left: \"400px\",\n    },\n  },\n  {\n    name: \"ticketDetailDialog\",\n    vueMountComponent: Vue.extend(TicketDetailDialog),\n    panel: {\n      title: \"Ticket Detail\",\n      closeBehaviour: \"hide\",\n    },\n    style: {\n      minWidth: \"770px\",\n      height: \"475px\",\n      left: \"400px\",\n    },\n  },\n  {\n    name: \"manageTicketPanel\",\n    vueMountComponent: Vue.extend(ManageTicketPanel),\n    panel: {\n      title: \"Manage Ticket\",\n      closeBehaviour: \"hide\",\n    },\n    style: {\n      height: \"475px\",\n      left: \"400px\",\n    },\n  }\n]\n\nfor (let index = 0; index < panels.length; index++) {\n  const element = panels[index];\n  const panelExtension = SpinalForgeExtention.createExtention(element);\n  SpinalForgeExtention.registerExtention(element.name, panelExtension);\n}","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-content class=\"ticket_container\">\n    <div class=\"breadcrumb\" v-if=\"contextSelected\">\n      <!-- <div class=\"breadcrumbItem\"\n           v-for=\"(breadcrumb,index) in breadcrumbs\"\n           :key=\"breadcrumb.id\"\n           @click=\"selectBreadcrumb(index,breadcrumb)\">\n        {{breadcrumb.name}}\n      </div> -->\n\n      <md-button @click=\"goBack\">\n        <md-icon>arrow_back</md-icon>\n        Back\n      </md-button>\n    </div>\n\n    <div class=\"data-content\">\n      <list-item\n        v-if=\"pageDisplayed === PAGES.contexts\"\n        :data=\"data\"\n        @select=\"selectContext\"\n      ></list-item>\n\n      <list-item\n        v-else-if=\"pageDisplayed === PAGES.processes\"\n        :data=\"processes\"\n        @select=\"selectProcess\"\n      ></list-item>\n\n      <list-item\n        v-else-if=\"pageDisplayed === PAGES.steps\"\n        :data=\"steps\"\n        @select=\"selectStep\"\n      >\n        <md-list-item @click=\"selectAllTickets\">\n          <div class=\"stepsColor\"></div>\n          <span class=\"md-list-item-text\">All</span>\n          <md-icon>keyboard_arrow_right</md-icon>\n        </md-list-item>\n      </list-item>\n\n      <tickets-vue\n        v-else-if=\"pageDisplayed === PAGES.tickets\"\n        :data=\"tickets\"\n        @reload=\"reloadData\"\n      ></tickets-vue>\n    </div>\n  </md-content>\n</template>\n\n<script>\nimport { utilities } from './service/utilities';\nimport ListItem from './components/listItem.vue';\n// import processesVue from \"./components/processes.vue\";\n// import stepsVue from \"./components/steps.vue\";\nimport ticketsVue from './components/tickets.vue';\n\nexport default {\n  name: 'ticketManagerPanel',\n  components: {\n    'list-item': ListItem,\n    // \"contexts-vue\": contextsVue,\n    // \"processes-vue\": processesVue,\n    // \"steps-vue\": stepsVue,\n    'tickets-vue': ticketsVue,\n  },\n  data() {\n    this.PAGES = {\n      contexts: 0,\n      processes: 1,\n      steps: 2,\n      tickets: 3,\n    };\n    return {\n      data: [],\n      pageDisplayed: this.PAGES.contexts,\n      contextSelected: undefined,\n      processSelected: undefined,\n      stepSelected: undefined,\n      processes: [],\n      steps: [],\n      tickets: [],\n    };\n  },\n  async mounted() {\n    await this.updateData();\n  },\n  methods: {\n    async opened(params) {\n      await this.updateData();\n      this.getContextId(params);\n      this.getProcessId(params);\n      this.getStepId(params);\n    },\n    selectContext(contextId) {\n      this.contextSelected = contextId;\n      this.pageDisplayed = this.PAGES.processes;\n    },\n    selectProcess(processId) {\n      this.processSelected = processId;\n      this.pageDisplayed = this.PAGES.steps;\n    },\n    selectStep(stepId) {\n      this.stepSelected = stepId;\n      this.pageDisplayed = this.PAGES.tickets;\n    },\n    selectAllTickets() {\n      this.pageDisplayed = this.PAGES.tickets;\n      this.formatAllTickets();\n    },\n    formatAllTickets() {\n      const res = [];\n      for (const step of this.steps) {\n        res.push(...this._formatTickets(step));\n      }\n      this.tickets = res;\n    },\n    async updateData() {\n      this.data = await utilities.getAllData();\n    },\n    updateProcesses() {\n      const find = this.data.find((el) => el.id === this.contextSelected);\n      if (find) {\n        this.processes = find.processes;\n      }\n    },\n    updateSteps() {\n      const find = this.processes.find((el) => el.id === this.processSelected);\n      if (find) {\n        this.steps = find.steps;\n      }\n    },\n    updateTickets() {\n      if (this.stepSelected) {\n        const find = this.steps.find((el) => el.id === this.stepSelected);\n        if (find) {\n          // this.breadcrumbs.push(find);\n          this.tickets = this._formatTickets(find);\n        }\n      } else {\n        this.formatAllTickets();\n      }\n    },\n    resetProcesses() {\n      this.contextSelected = undefined;\n      this.processes = [];\n    },\n    resetSteps() {\n      this.processSelected = undefined;\n      this.steps = [];\n    },\n    resetTickets() {\n      this.tickets = [];\n      this.stepSelected = undefined;\n    },\n    goBack() {\n      switch (this.pageDisplayed) {\n        case this.PAGES.processes:\n          this.pageDisplayed = this.PAGES.contexts;\n          this.resetProcesses();\n          break;\n        case this.PAGES.steps:\n          this.pageDisplayed = this.PAGES.processes;\n          this.resetSteps();\n          break;\n        case this.PAGES.tickets:\n          this.pageDisplayed = this.PAGES.steps;\n          this.resetTickets();\n          break;\n        default:\n          break;\n      }\n    },\n    _formatTickets(step) {\n      return step.tickets.map((el) => {\n        el['step'] = step;\n        el['contextId'] = this.contextSelected;\n        return el;\n      });\n    },\n    async reloadData() {\n      await this.updateData();\n    },\n    getContextId(params) {\n      this.selectContext(params.context.id);\n    },\n    getProcessId(params) {\n      if (params.context.id === params.selectedNode.id) return;\n      let nodeId =\n        typeof params.selectedNode.processId === 'undefined'\n          ? params.selectedNode.id\n          : params.selectedNode.processId;\n      this.selectProcess(nodeId);\n    },\n    getStepId(params) {\n      if (typeof params.selectedNode.processId !== 'undefined')\n        this.selectStep(params.selectedNode.id);\n    },\n  },\n  watch: {\n    contextSelected() {\n      if (this.contextSelected) this.updateProcesses();\n    },\n    processSelected() {\n      if (this.processSelected) this.updateSteps();\n    },\n    stepSelected() {\n      if (this.stepSelected) this.updateTickets();\n    },\n    data() {\n      this.updateProcesses();\n      this.updateSteps();\n      this.updateTickets();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.ticket_container {\n  width: 100%;\n  height: calc(100% - 15px);\n}\n\n.ticket_container .breadcrumb {\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n}\n\n.ticket_container .data-content {\n  width: 100%;\n  height: calc(100% - 50px);\n}\n\n.stepsColor {\n  width: 5px;\n  height: 50px;\n  margin-right: 10px;\n  background-color: white;\n}\n</style>\n","import {\n  serviceTicketPersonalized\n} from \"spinal-service-ticket\";\n\nclass Utilities {\n  constructor() {}\n\n  getAllData() {\n    let contexts = this.getContexts();\n    const promises = contexts.map(async (context) => {\n      const processes = await this.getProcess(context.id);\n      context[\"processes\"] = await this._formatProcesses(\n        context.id,\n        processes\n      );\n      return context;\n    });\n\n    return Promise.all(promises);\n\n  }\n\n  getContexts() {\n    return serviceTicketPersonalized.getContexts();\n  }\n\n  getProcess(contextId) {\n    return serviceTicketPersonalized.getAllProcess(contextId);\n  }\n\n  getSteps(contextId, processId) {\n    return serviceTicketPersonalized.getStepsFromProcess(processId,\n    contextId);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////\n  //                                    Private                                          //\n  /////////////////////////////////////////////////////////////////////////////////////////\n\n  _formatProcesses(contextId, processes) {\n    const promises = processes.map(async (argProcess) => {\n      let process = argProcess.get();\n\n      const steps = await this.getSteps(contextId, process.id);\n      process[\"steps\"] = await this._formatSteps(contextId, process.id,\n        steps);\n      return process;\n    });\n\n    return Promise.all(promises);\n  }\n\n  _formatSteps(contextId, processId, steps) {\n    const promises = steps.map(async (argStep) => {\n      let step = argStep.get();\n      const tickets = await serviceTicketPersonalized\n        .getTicketsFromStep(step.id);\n      step[\"tickets\"] = tickets.map(el => el.get());\n      return step;\n    });\n\n    return Promise.all(promises);\n  }\n}\n\nexport const utilities = new Utilities();","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-content class=\"t_container md-srollbar\">\n    <md-list class=\"myList\">\n      <slot></slot>\n      <md-list-item v-for=\"item in data\"\n                    :key=\"item.id\"\n                    @click=\"select(item.id)\">\n        <div class=\"color\"\n             v-if=\"item.color\"\n             :style=\"{'background-color' : item.color}\"></div>\n        <span class=\"md-list-item-text\">{{item.name}}</span>\n        <md-icon>keyboard_arrow_right</md-icon>\n      </md-list-item>\n    </md-list>\n  </md-content>\n</template>\n\n<script>\nexport default {\n  name: \"contextsVue\",\n  props: {\n    data: {},\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    select(id) {\n      this.$emit(\"select\", id);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.t_container {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n}\n\n.t_container .myList .color {\n  width: 5px;\n  height: 50px;\n  margin-right: 10px;\n}\n</style>\n\n<style>\n.t_container .myList .md-ripple {\n  width: unset !important;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <!-- <md-dialog class=\"mdDialogContainer\"\n             :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title class=\"mdDialogTitle\">Detail Ticket</md-dialog-title>\n\n    <md-dialog-content class=\"mdDialogContent\"\n                       v-if=\"ticket\"> -->\n  <div class=\"mdDialogContainer\">\n    <div class=\"mdDialogContent\"\n         v-if=\"ticket && !isLoading\">\n      <div class=\"ticketDetail\">\n        <md-content class=\"details md-scrollbar\">\n          <div class=\"detail\">\n            <div class=\"label\">Name</div>\n            <div class=\"value\">{{ticket.name}}</div>\n          </div>\n\n          <div class=\"detail\">\n            <div class=\"label\">Actual Step</div>\n            <div class=\"value\">{{formatStepId}}</div>\n          </div>\n\n          <div class=\"detail\">\n            <div class=\"label\">Priority</div>\n            <div class=\"value\">{{ticket.priority | formatPriority}}</div>\n          </div>\n\n          <div class=\"detail\"\n               v-if=\"ticket.user\">\n            <div class=\"label\">Created By</div>\n            <div class=\"value\">{{ticket.user.name}}</div>\n          </div>\n\n          <div class=\"detail\">\n            <div class=\"label\">Date creation</div>\n            <div class=\"value\">{{ticket.creationDate | formatDate}}</div>\n          </div>\n        </md-content>\n\n        <div class=\"ticketActions\">\n          <md-list class=\"actionList\">\n            <md-list-item class=\"actions\">\n              <div class=\"maquette_icons\">\n\n                <md-button class=\"md-icon-button md-primary\"\n                           @click=\"selectOnMaquette\"\n                           title=\"Select on 3D Model\">\n                  <md-icon>find_in_page</md-icon>\n                </md-button>\n\n                <md-button class=\"md-icon-button md-primary\"\n                           @click=\"zoomOnMaquette\"\n                           title=\"Zoom on 3D Model\">\n                  <md-icon>zoom_in</md-icon>\n                </md-button>\n\n                <md-button class=\"md-icon-button md-primary\"\n                           @click=\"isolateOnMaquette\"\n                           title=\"Isolate on 3D Model\">\n                  <md-icon>settings_overscan</md-icon>\n                </md-button>\n\n              </div>\n            </md-list-item>\n\n            <md-list-item class=\"actions\"\n                          @click=\"passToNext\">\n              <md-icon>skip_next</md-icon>\n              <span class=\"md-list-item-text\">Pass to next step</span>\n            </md-list-item>\n\n            <md-list-item class=\"actions\"\n                          @click=\"backToPrevious\">\n              <md-icon>skip_previous</md-icon>\n              <span class=\"md-list-item-text\">Back to previous step</span>\n            </md-list-item>\n\n          </md-list>\n        </div>\n      </div>\n\n      <div class=\"content\">\n        <div class=\"ticketsNotes\">\n          <div class=\"title\">Comments</div>\n          <md-content class=\"events md-scrollbar\">\n\n            <message-component :nodeInfo=\"nodeInfo\"></message-component>\n          </md-content>\n        </div>\n        <div class=\"ticketsLogs\">\n          <div class=\"title\">Events</div>\n          <md-content class=\"events\">\n            <logs-template :logs=\"logs\"></logs-template>\n          </md-content>\n        </div>\n      </div>\n    </div>\n\n    <div v-else-if=\"isLoading\"\n         class=\"loading\">\n      <md-progress-spinner md-mode=\"indeterminate\"></md-progress-spinner>\n    </div>\n  </div>\n  <!-- </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      \n    </md-dialog-actions> -->\n\n  <!-- </md-dialog> -->\n</template>\n\n<script>\nimport { TICKET_PRIORITIES } from \"spinal-service-ticket/dist/Constants\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport { serviceTicketPersonalized } from \"spinal-service-ticket\";\nimport { spinalIO } from \"../../extensions/spinalIO\";\nimport messageComponentVue from \"spinal-env-viewer-plugin-documentation/view/notes/components/messageComponent.vue\";\n\n// import attachmentVue from \"./components/attachment.vue\";\nimport logsTemplateVue from \"./components/logsTemplate.vue\";\n// import messageVue from \"spinal-env-viewer-plugin-documentation/view/notes/components/message.vue\";\nimport moment from \"moment\";\n\nimport { TICKET_EVENTS } from \"../../extensions/ticketsEvents\";\nimport EventBUS from \"../../extensions/Event\";\n\nimport { IsolateElementOnMaquette } from \"../../buttons/standard_buttons/isolate\";\nimport { SelectElementOnMaquette } from \"../../buttons/standard_buttons/selectElement\";\nimport { ZoomElementOnMaquette } from \"../../buttons/standard_buttons/zoom\";\n\nexport default {\n  name: \"ticketDetailDialog\",\n  // props: [\"onFinised\"],\n  components: {\n    \"logs-template\": logsTemplateVue,\n    \"message-component\": messageComponentVue,\n    // \"attachment-component\": attachmentVue,\n  },\n  data() {\n    this.params = undefined;\n\n    return {\n      showDialog: true,\n      nodeInfo: undefined,\n      ticket: {},\n      step: {},\n      logs: [],\n      isLoading: false,\n      messages: [],\n      formatStepId: \"\",\n      note: {\n        messageUser: \"\",\n        pj: [],\n      },\n    };\n  },\n\n  mounted() {\n    EventBUS.$on(TICKET_EVENTS.changeStep, async (data) => {\n      if (data.ticket.id === this.ticket.id && data.step) {\n        this.step = data.step;\n        this.logs = await this.getLogs(this.ticket.id);\n      }\n    });\n  },\n\n  methods: {\n    async opened(option) {\n      this.isLoading = true;\n\n      this.ticket = option.selectedNode;\n      this.nodeInfo = {\n        selectedNode: SpinalGraphService.getRealNode(option.selectedNode.id),\n      };\n\n      await Promise.all([\n        this.getStep(option.selectedNode.stepId),\n        this.getLogs(option.selectedNode.id),\n      ]).then((values) => {\n        const contextId = this.ticket.contextId\n          ? this.ticket.contextId\n          : this.getItemContext(this.ticket.id).id;\n\n        this.step = values[0];\n        this.logs = values[1];\n\n        this.params = {\n          selectedNode: SpinalGraphService.getInfo(this.ticket.id),\n          context: SpinalGraphService.getInfo(contextId),\n        };\n\n        this.isLoading = false;\n\n        // this.messages = values[2];\n      });\n    },\n\n    async removed(res) {\n      // if (res.closeResult) {\n      // }\n      // this.showDialog = false;\n    },\n\n    closed() {},\n\n    getStep(id) {\n      const info = SpinalGraphService.getInfo(id);\n      if (info) return Promise.resolve(info.get());\n\n      return SpinalGraphService.getNodeAsync(id).then((result) => {\n        return result.get();\n      });\n    },\n\n    getLogs(id) {\n      return serviceTicketPersonalized.getLogs(id);\n    },\n\n    async passToNext() {\n      const user = await spinalIO.getUserConnected();\n\n      const contextId = this.ticket.contextId\n        ? this.ticket.contextId\n        : this.getItemContext(this.ticket.id).id;\n\n      const processId = this.step.processId;\n      const ticketId = this.ticket.id;\n\n      serviceTicketPersonalized\n        .moveTicketToNextStep(contextId, processId, ticketId, user)\n        .then(async (nextStep) => {\n          this.ticket = SpinalGraphService.getInfo(ticketId).get();\n          // this.step = nextStep;\n          EventBUS.$emit(TICKET_EVENTS.changeStep, {\n            ticket: this.ticket,\n            step: nextStep,\n          });\n        });\n    },\n\n    async backToPrevious() {\n      const user = await spinalIO.getUserConnected();\n\n      const contextId = this.ticket.contextId\n        ? this.ticket.contextId\n        : this.getItemContext(this.ticket.id).id;\n\n      const processId = this.step.processId;\n      const ticketId = this.ticket.id;\n\n      serviceTicketPersonalized\n        .moveTicketToPreviousStep(contextId, processId, ticketId, user)\n        .then((previousStep) => {\n          this.ticket = SpinalGraphService.getInfo(ticketId).get();\n          // this.step = previousStep;\n          EventBUS.$emit(TICKET_EVENTS.changeStep, {\n            ticket: this.ticket,\n            step: previousStep,\n          });\n        });\n    },\n\n    getItemContext(id) {\n      const realNode = SpinalGraphService.getRealNode(id);\n      const contextId = realNode.contextIds._attribute_names[0];\n      return SpinalGraphService.getInfo(contextId).get();\n    },\n\n    selectOnMaquette() {\n      const button = new SelectElementOnMaquette();\n      button.action(this.params);\n    },\n\n    zoomOnMaquette() {\n      const button = new ZoomElementOnMaquette();\n      button.action(this.params);\n    },\n\n    isolateOnMaquette() {\n      const button = new IsolateElementOnMaquette();\n      button.action(this.params);\n    },\n  },\n  watch: {\n    step() {\n      this.formatStepId = this.step && this.step.name ? this.step.name : \"\";\n    },\n  },\n  computed: {\n    // formatStepId(stepId) {\n    //   return this.step && this.step.name ? this.step.name : \"\";\n    // },\n  },\n  filters: {\n    formatDate(date) {\n      return moment(parseInt(date)).format(\"LL\");\n    },\n\n    formatPriority(priority) {\n      for (const key of Object.keys(TICKET_PRIORITIES)) {\n        if (TICKET_PRIORITIES[key] == priority) return key;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.mdDialogContainer {\n  width: 100%;\n  height: calc(100% - 15px);\n}\n\n.mdDialogContainer .loading {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.mdDialogContainer .mdDialogContent {\n  width: calc(100% - 48px);\n  height: 100%;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.mdDialogContainer .mdDialogContent .ticketDetail {\n  width: 100%;\n  height: calc(40% - 10px);\n  display: flex;\n  justify-content: space-between;\n}\n\n.mdDialogContainer .mdDialogContent .ticketDetail .ticketActions {\n  width: 49%;\n  height: 100%;\n  background: transparent !important;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.mdDialogContainer .mdDialogContent .ticketDetail .ticketActions .actionList {\n  width: 70%;\n  display: flex;\n  justify-content: center;\n  background: transparent !important;\n}\n\n.mdDialogContainer\n  .mdDialogContent\n  .ticketDetail\n  .ticketActions\n  .actionList\n  .actions {\n  border: 1px solid grey;\n  margin-bottom: 10px;\n}\n\n.mdDialogContainer\n  .mdDialogContent\n  .ticketDetail\n  .ticketActions\n  .actionList\n  .maquette_icons {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n}\n\n.mdDialogContainer .mdDialogContent .ticketDetail .details {\n  width: 49%;\n  height: 100%;\n  padding-right: 10px;\n  overflow: auto;\n  background: transparent !important;\n}\n\n.mdDialogContainer .mdDialogContent .ticketDetail .details .detail {\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.mdDialogContainer .mdDialogContent .ticketDetail .details .detail .value {\n  color: #448aff;\n  text-transform: capitalize;\n}\n\n.mdDialogContainer .mdDialogContent .content {\n  width: 100%;\n  height: 60%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.mdDialogContainer .mdDialogContent .content .ticketsNotes,\n.mdDialogContainer .mdDialogContent .content .ticketsLogs {\n  width: 49%;\n  height: calc(100% - 5px);\n  border: 1px solid grey;\n}\n\n.mdDialogContainer .mdDialogContent .content .ticketsNotes .title,\n.mdDialogContainer .mdDialogContent .content .ticketsLogs .title {\n  width: 100%;\n  height: 50px;\n  border-bottom: 1px solid grey;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.mdDialogContainer .mdDialogContent .content .ticketsNotes .events,\n.mdDialogContainer .mdDialogContent .content .ticketsLogs .events {\n  width: 100%;\n  height: calc(100% - 60px);\n  padding-bottom: 5px;\n  overflow: auto;\n  background: transparent !important;\n}\n\n.mdDialogContainer .mdDialogContent .content .ticketsNotes .events {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n</style>\n\n<style>\n.mdDialogContainer\n  .mdDialogContent\n  .ticketDetail\n  .ticketActions\n  .actionList\n  .maquette_icons\n  .md-button\n  .md-ripple {\n  padding: 0px !important;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-content class=\"logs_container md-scrollbar\">\n\n    <md-table class=\"logs_table md-scrollbar\">\n      <md-table-row>\n        <md-table-head>Date</md-table-head>\n        <md-table-head>User</md-table-head>\n        <md-table-head>Action</md-table-head>\n      </md-table-row>\n\n      <log-vue v-for=\"(log,index) of logs\"\n               :key=\"index\"\n               :log=\"log\"></log-vue>\n\n    </md-table>\n\n  </md-content>\n</template>\n\n<script>\nimport logVue from \"./log.vue\";\n\nexport default {\n  name: \"logsTemplate\",\n  props: {\n    logs: {},\n  },\n  components: {\n    \"log-vue\": logVue,\n  },\n  data() {\n    return {};\n  },\n  methods: {},\n};\n</script>\n\n<style scoped>\n.logs_container {\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  overflow: auto;\n}\n\n.logs_container .logs_table {\n  background-color: transparent;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n   <!-- <div class=\"logs\">\n    <div class=\"date\">{{log.creationDate | formatDate}}</div>\n    <div class=\"username\">{{username.length > 0 ? username : \"unknown\"}}</div>\n    <div class=\"content\">{{texte}}</div>\n  </div> -->\n\n   <md-table-row>\n      <md-table-cell>{{log.creationDate | formatDate}}</md-table-cell>\n      <md-table-cell>{{username.length > 0 ? username : \"unknown\"}}\n      </md-table-cell>\n      <md-table-cell>{{texte}}</md-table-cell>\n   </md-table-row>\n</template>\n\n<script>\nimport { LOGS_EVENTS } from \"spinal-service-ticket/dist/Constants\";\nimport moment from \"moment\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\nexport default {\n   name: \"logVue\",\n   props: [\"log\"],\n   data() {\n      return {\n         texte: \"\",\n         username: \"\",\n      };\n   },\n   mounted() {\n      this.formatEvent();\n   },\n   methods: {\n      async formatEvent() {\n         // this.username =\n         //    this.log.user && this.log.user.name ? this.log.user.name : \"\";\n\n         if (this.log.user && this.log.user.name) {\n            this.username = this.log.user.name;\n         } else if (this.log.user && this.log.user.username) {\n            this.username = this.log.user.username;\n         } else {\n            this.username = \"\";\n         }\n\n         if (this.log.event == LOGS_EVENTS.creation) {\n            this.texte = \"created\";\n         } else if (this.log.event == LOGS_EVENTS.archived) {\n            this.texte = \"archived\";\n         } else if (this.log.event == LOGS_EVENTS.unarchive) {\n            this.texte = \"unarchived\";\n         } else {\n            const promises = this.log.steps.map((el) =>\n               SpinalGraphService.getNodeAsync(el)\n            );\n\n            Promise.all(promises).then((result) => {\n               const step1 = result[0].name.get();\n               const step2 = result[1].name.get();\n               // const pre = this.log.event == LOGS_EVENTS.moveToNext ? true : false;\n               // // this.log.event == LOGS_EVENTS.moveToNext\n               // //   ? \"moving forward\"\n               // //   : \"move back\";\n\n               // this.texte = pre\n               //   ? `Passed from ${step1} to ${step2}`\n               //   : `Backward from ${step1} to ${step2}`;\n\n               this.texte = `moved from ${step1} to ${step2}`;\n            });\n         }\n      },\n   },\n   filters: {\n      formatDate(data) {\n         // return moment(parseInt(data)).format(\"MMM Do YYYY\");\n         return moment(data).fromNow();\n      },\n   },\n};\n</script>\n\n<style scoped>\n.logs {\n   width: 100%;\n   height: 50px;\n   display: flex;\n   justify-content: space-between;\n}\n\n.logs .date {\n   width: 30%;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   /* color: #448aff; */\n}\n\n.logs .username {\n   width: 30%;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   /* color: #448aff; */\n}\n\n.logs .content {\n   width: 39%;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   /* color: #448aff; */\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div class=\"my_content\"\n       v-if=\"!isLoading\">\n    <md-button class=\"md-fab md-mini md-primary md-fab-bottom-right\"\n               title=\"create ticket\"\n               @click=\"createTicket\">\n      <md-icon>add</md-icon>\n    </md-button>\n\n    <tickets-vue class=\"tickets_class\"\n                 :data=\"tickets\"\n                 @reload=\"reloadData\"></tickets-vue>\n  </div>\n\n  <div class=\"loading\"\n       v-else>\n    <md-progress-spinner md-mode=\"indeterminate\"></md-progress-spinner>\n  </div>\n</template>\n\n<script>\nimport { serviceTicketPersonalized } from \"spinal-service-ticket\";\nimport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\nimport EventBus from \"../../extensions/Event\";\nimport ticketsVue from \"./components/tickets.vue\";\n\nexport default {\n  name: \"manageTicketPanel\",\n  components: {\n    \"tickets-vue\": ticketsVue,\n  },\n  data() {\n    return {\n      tickets: [],\n      selectedNode: undefined,\n      isLoading: false,\n    };\n  },\n  methods: {\n    async opened(option) {\n      // console.log(\"option\", option);\n      this.isLoading = true;\n      this.selectedNode = option.selectedNode;\n      SpinalGraphService._addNode(option.selectedNode);\n      const nodeId = option.selectedNode.getId().get();\n\n      this.tickets = await this.getNodeTickets(nodeId);\n      this.isLoading = false;\n    },\n\n    closed() {},\n\n    getNodeTickets(nodeId) {\n      return serviceTicketPersonalized\n        .getTicketsFromNode(nodeId)\n        .then((tickets) => {\n          // console.log(tickets);\n          const promises = tickets.map(async (ticket) => {\n            ticket.step = await this.getStep(ticket);\n            return ticket;\n          });\n\n          return Promise.all(promises).then((result) => {\n            return result.filter((el) => el.step);\n          });\n        });\n    },\n\n    async getStep(ticketInfo) {\n      const stepId = ticketInfo.stepId;\n\n      const info = SpinalGraphService.getInfo(stepId);\n      if (info) return info.get();\n\n      const parents = await SpinalGraphService.getParents(ticketInfo.id, []);\n      // console.log(parents);\n\n      const found = parents.find((el) => el.id.get() === stepId);\n      if (found) return found.get();\n\n      // //  return SpinalGraphService.getNodeAsync(id).then((result) => {\n      // //     return result.get();\n      // //  });\n    },\n\n    async reloadData() {\n      const id = this.selectedNode.getId().get();\n      this.tickets = await this.getNodeTickets(id);\n    },\n\n    createTicket() {\n      spinalPanelManagerService.openPanel(\"selectProcessDialog\", {\n        selectedNode: this.selectedNode,\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.my_content {\n  width: 100%;\n  height: calc(100% - 15px);\n}\n\n.loading {\n  width: 100%;\n  height: calc(100% - 15px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst {\n  spinalPanelManagerService,\n  SpinalPanelApp\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst SpinalForgeExtention = require(\"./SpinalForgeExtention.js\")(\n  spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  SpinalForgeExtention\n};\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (typeof option.toolbar !== \"undefined\") {\n    cfg.toolbar = {\n      icon: option.toolbar.icon || \"done\",\n      label: option.toolbar.label || \"label\",\n      subToolbarName: option.toolbar.subToolbarName || \"spinalcom\",\n      styleBtn: {},\n      styleIcon: {}\n    };\n    Object.assign(cfg.toolbar.styleBtn, option.toolbar.styleBtn);\n    Object.assign(cfg.toolbar.styleIcon, option.toolbar.styleIcon);\n  }\n  if (typeof option.panel !== \"undefined\") {\n    cfg.panel = {\n      title: option.panel.title || \"Spinalcom Panel\",\n      classname: option.panel.classname || \"spinal-pannel\",\n      closeBehaviour: option.panel.closeBehaviour || \"hide\"\n    };\n    if (typeof option.style !== \"undefined\") {\n      cfg.style = {};\n      Object.assign(cfg.style, option.style);\n    }\n  }\n  cfg.name = option.name || \"spinalExtention\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.onLoad = option.onLoad;\n  cfg.onUnLoad = option.onUnLoad;\n  return cfg;\n}\n\nfunction onToolbarCreated() {\n  this.viewer.removeEventListener(\n    window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n    this.onToolbarCreatedBinded\n  );\n  this.onToolbarCreatedBinded = null;\n  createToolbar.call(this);\n}\n\nfunction createToolbar() {\n  this.toolbarButton = new window.Autodesk.Viewing.UI.Button(\n    this.cfg.toolbar.label\n  );\n  this.toolbarButton.onClick = () => {\n    this.tooglePanel(this.cfg);\n  };\n  var icon = this.toolbarButton.container.firstChild;\n  icon.className = \"adsk-button-icon md-icon md-icon-font md-theme-default\";\n  icon.innerHTML = this.cfg.toolbar.icon;\n\n  for (var key in this.cfg.toolbar.styleIcon) {\n    if (this.cfg.toolbar.styleIcon.hasOwnProperty(key)) {\n      icon.style[key] = this.cfg.toolbar.styleIcon[key];\n    }\n  }\n  for (var key in this.cfg.toolbar.styleBtn) {\n    if (this.cfg.toolbar.styleBtn.hasOwnProperty(key)) {\n      this.toolbarButton.container.style[key] = this.cfg.toolbar.styleBtn[key];\n    }\n  }\n\n  this.toolbarButton.setToolTip(this.cfg.toolbar.label);\n  this.subToolbar = this.viewer.toolbar.getControl(\n    this.cfg.toolbar.subToolbarName\n  );\n  if (!this.subToolbar) {\n    this.subToolbar = new window.Autodesk.Viewing.UI.ControlGroup(\n      this.cfg.toolbar.subToolbarName\n    );\n    this.viewer.toolbar.addControl(this.subToolbar);\n  }\n  this.subToolbar.addControl(this.toolbarButton);\n}\n\nfunction closeComponent() {\n  if (this.cfg.panel.closeBehaviour !== \"hide\") {\n    try {\n      this.component.removed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n    this.panel.container.remove();\n    this.panel = null;\n  } else {\n    try {\n      this.component.closed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction getPanel() {\n  if (this.panel === null) {\n    this.panel = new window.PanelClass(this.viewer, this.cfg.panel.title);\n    var _container = document.createElement(\"div\");\n    var _scrollContainer = this.panel.createScrollContainer();\n\n    _container.className +=\n      this.panel.container.id + \"-panelcontainer \" + this.cfg.panel.classname;\n    for (var key in this.cfg.style) {\n      if (this.cfg.style.hasOwnProperty(key)) {\n        this.panel.container.style[key] = this.cfg.style[key];\n      }\n    }\n\n    if (this.panel.container.style.left) {\n      this.panel.container.style.left = \"0\";\n    }\n\n    this.panel.container.appendChild(_scrollContainer);\n    _scrollContainer.style.height = \"calc(100% - 52px)\";\n    _scrollContainer.appendChild(_container);\n\n    var _footer = this.panel.createFooter();\n    this.panel.container.appendChild(_footer);\n\n    if (this.cfg.vueMountComponent) {\n      this.component = new this.cfg.vueMountComponent().$mount(_container);\n    }\n\n    const _this = this;\n    this.panel.addVisibilityListener(open => {\n      if (!open) {\n        closeComponent.call(_this);\n      }\n    });\n  }\n  return this.panel;\n}\n\n/**\n *\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { createExtention, registerExtention }\n */\nmodule.exports = function (spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n     * factory function to create a dynamic class that extends the `SpinalPanelApp` class\n     *```js\n{\n  name: \"extention_name\",\n  vueMountComponent: Vue.extend(aVueCompoment),\n  onLoad: () => {console.log(\"onLoad\");},\n  onUnLoad: () => {console.log(\"onUnLoad\");},\n  toolbar: {\n    icon: \"done\",\n    label: \"testLabel\",\n    subToolbarName: \"spinalcom\"\n  },\n  panel: {\n    title: \"Spinalcom Panel\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"hide\"\n  },\n  style: {}\n}\n```\n     * @param {object} option see description\n     * @returns SpinalForgeExtention\n     */\n    createExtention(option) {\n      const cfg = configInit(option);\n      /**\n       * class returned by createExtention\n       * this extention is also registered in autodesk viweer\n       * @extends SpinalPanelApp\n       * @property {AutodeskViewer} viewer the autodesk view\n       * @property {AutodeskPanel} panel the panel\n       * @property {Vue.component} component the component mounted\n       * @property {Object} cfg the option given on creation\n       */\n      const SpinalForgeExtention = class extends SpinalPanelApp {\n        constructor(viewer, options) {\n          super();\n          window.Autodesk.Viewing.Extension.call(this, viewer, options);\n          this.viewer = viewer;\n          this.panel = null;\n          this.cfg = cfg;\n          spinalPanelManagerService.registerPanel(cfg.name, this);\n        }\n        /**\n         * method called on load of the extention (managed by the autodesk viewer)\n         * the method create a button in the toolbar if put in the option of `createExtention`.\n         */\n        load() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            // add toolbar\n            if (this.viewer.toolbar) {\n              createToolbar.call(this);\n            } else {\n              this.onToolbarCreatedBinded = onToolbarCreated.bind(this);\n              this.viewer.addEventListener(\n                window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n                this.onToolbarCreatedBinded\n              );\n            }\n          }\n          if (typeof cfg.onLoad !== \"undefined\") cfg.onLoad.call(this);\n          return true;\n        }\n        /**\n         * method called when the viewer unload of the extention\n         * (managed by the autodesk viewer)\n         */\n        unload() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            this.viewer.subToolbar.removeControl(this.toolbarButton);\n          }\n          if (typeof cfg.onUnLoad !== \"undefined\") cfg.onUnLoad.call(this);\n          return true;\n        }\n\n        activate() {\n          return this.load();\n        }\n\n        deactivate() {\n          return this.unload();\n        }\n\n        /**\n         *\n         * @param {*} option\n         */\n        openPanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(true);\n          try {\n            this.component.opened.call(this.component, option, this.viewer);\n          } catch (e) {\n            console.error(e);\n          }\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        closePanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(false);\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        tooglePanel(option) {\n          if (this.panel === null || this.panel.isVisible() === false) {\n            this.openPanel.call(this, option);\n          } else { this.closePanel.call(this, option); }\n        }\n      };\n      return SpinalForgeExtention;\n    },\n\n    /**\n     * Method to register an extention to the viewer and the forge viewer\n     * @param {string} name name of the extention\n     * @param {*} classExtention an extention created by `createExtention`\n     */\n    registerExtention(name, classExtention) {\n      // register to forge\n      window.Autodesk.Viewing.theExtensionManager.registerExtension(\n        name,\n        classExtention\n      );\n      // register to viewer\n      window.spinal.ForgeExtentionManager.addExtention(name);\n    }\n  };\n};\n","///////////////////////////////////////////////////////////////////////////////\n// Autodesk.ADN.Viewing.Extension.Color\n//\n///////////////////////////////////////////////////////////////////////////////\nAutodeskNamespace(\"Autodesk.ADN.Viewing.Extension\");\nAutodesk.ADN.Viewing.Extension.Color = function (viewer, options) {\n  Autodesk.Viewing.Extension.call(this, viewer, options);\n\n  // var overlayName = \"temperary-colored-overlay\";\n  var _self = this;\n  _self.viewer = viewer;\n  _self.materials = {};\n  var promise = null;\n\n  function initialize() {\n    if (promise == null)\n      promise = new Promise(res => {\n        _self.viewer.addEventListener(\n          Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n          function onObjectTreeLoadEvent() {\n            _self.viewer.removeEventListener(\n              Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n              onObjectTreeLoadEvent\n            );\n            res();\n          }\n        );\n      })\n    return promise;\n  }\n  _self.load = function () {\n    initialize();\n    // console.log(\"Autodesk.ADN.Viewing.Extension.Color loaded\");\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    // Generate GUID\n    //\n    ///////////////////////////////////////////////////////////////////////////\n    function newGuid() {\n      var d = new Date().getTime();\n      var guid = \"xxxx-xxxx-xxxx-xxxx-xxxx\".replace(/[xy]/g, function (c) {\n        var r = ((d + Math.random() * 16) % 16) | 0;\n        d = Math.floor(d / 16);\n        return (c == \"x\" ? r : (r & 0x7) | 0x8).toString(16);\n      });\n      return guid;\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    // add new material\n    //\n    ///////////////////////////////////////////////////////////////////////////\n    function addMaterial(color, id) {\n      _self.materials[id] = new THREE.MeshPhongMaterial({\n        color: color\n      });\n      //viewer.impl.matman().addMaterial(newGuid(), material);\n\n      _self.viewer.impl.createOverlayScene(\n        id,\n        _self.materials[id],\n        _self.materials[id]\n      );\n      return _self.materials[id];\n    }\n\n    function cutHex(h) {\n      return h.charAt(0) == \"#\" ? h.substring(1, 7) : h;\n    }\n    ///////////////////////////////////////////////////////////////////////////\n    // Set color for nodes\n    // objectIds should be an array of dbId\n    //\n    //\n    ///////////////////////////////////////////////////////////////////////////\n    Autodesk.Viewing.Viewer3D.prototype.setColorMaterial = function (\n      objectIds,\n      color\n    ) {\n      initialize().then(() => {\n\n        for (var i = 0; i < objectIds.length; i++) {\n          var dbid = objectIds[i];\n\n\n          if (_self.materials[dbid]) {\n            _self.materials[dbid].color.setHex(parseInt(cutHex(color),\n              16));\n            _self.viewer.impl.invalidate(false, false, true);\n          } else {\n            var material = addMaterial(color, dbid);\n            //from dbid to node, to fragid\n\n\n            let it = _self.viewer.model.getData().instanceTree;\n            it.enumNodeFragments(\n              dbid,\n              function (fragId) {\n                var renderProxy = _self.viewer.impl.getRenderProxy(\n                  _self.viewer.model,\n                  fragId\n                );\n                renderProxy[dbid] = new THREE.Mesh(\n                  renderProxy.geometry,\n                  material\n                );\n\n                renderProxy[dbid].matrix.copy(renderProxy\n                  .matrixWorld);\n                renderProxy[dbid].matrixWorldNeedsUpdate = true;\n                renderProxy[dbid].matrixAutoUpdate = false;\n                renderProxy[dbid].frustumCulled = false;\n\n                _self.viewer.impl.addOverlay(dbid, renderProxy[\n                  dbid]);\n                _self.viewer.impl.invalidate(true);\n              },\n              false\n            );\n          }\n        }\n      }).catch(err => {\n        console.error(err)\n      });\n    };\n\n    Autodesk.Viewing.Viewer3D.prototype.restoreColorMaterial = function (\n      objectIds\n    ) {\n      for (var i = 0; i < objectIds.length; i++) {\n        var dbid = objectIds[i];\n\n        //from dbid to node, to fragid\n        var it = _self.viewer.model.getData().instanceTree;\n\n        if (_self.materials[dbid]) delete _self.materials[dbid];\n\n        it.enumNodeFragments(\n          dbid,\n          function (fragId) {\n            var renderProxy = _self.viewer.impl.getRenderProxy(\n              _self.viewer.model,\n              fragId\n            );\n\n            if (renderProxy[dbid]) {\n              //remove all overlays with same name\n              _self.viewer.impl.clearOverlay(dbid);\n              //_self.viewer.impl.removeOverlay(id, renderProxy[id]);\n              delete renderProxy[dbid];\n\n              //refresh the sence\n              _self.viewer.impl.invalidate(true);\n            }\n          },\n          true\n        );\n      }\n    };\n\n    Autodesk.Viewing.Viewer3D.prototype.colorAllMaterials = function (\n      objects) {\n      for (var i = 0; i < objects.length; i++) {\n        this.setColorMaterial(objects[i].ids, objects[i].color, objects[i]\n          .id);\n      }\n    };\n\n    Autodesk.Viewing.Viewer3D.prototype.restoreAllMaterialColor = function (\n      objects\n    ) {\n      for (var i = 0; i < objects.length; i++) {\n        this.restoreColorMaterial(objects[i].ids, objects[i].id);\n      }\n    };\n\n    _self.unload = function () {\n      // console.log(\"Autodesk.ADN.Viewing.Extension.Color unloaded\");\n      return true;\n    };\n\n    return true;\n  };\n};\nAutodesk.ADN.Viewing.Extension.Color.prototype = Object.create(\n  Autodesk.Viewing.Extension.prototype\n);\nAutodesk.ADN.Viewing.Extension.Color.prototype.constructor =\n  Autodesk.ADN.Viewing.Extension.Color;\nAutodesk.Viewing.theExtensionManager.registerExtension(\n  \"Autodesk.ADN.Viewing.Extension.Color\",\n  Autodesk.ADN.Viewing.Extension.Color\n);","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bimService_1 = require(\"./bimObjects/bimService\");\nexports.bimObjectManagerService = bimService_1.default;\n//# sourceMappingURL=index.js.map",null,"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BimObjectManagerService {\n    constructor() { }\n    getAllBimObjectsProperties(model) {\n        return this.getBimObjectProperties([\n            {\n                model: model,\n                selection: this.getLeafDbIds(model).selection\n            }\n        ]);\n    }\n    getBimObjectProperties(argBimObjects) {\n        // let properties = [];\n        let bimOjects = Array.isArray(argBimObjects)\n            ? argBimObjects\n            : [argBimObjects];\n        let promises = bimOjects.map(el => {\n            return this._getProperties(el.model, el.selection);\n        });\n        return Promise.all(promises).then(res => {\n            return res;\n        });\n    }\n    getLeafDbIds(model, rootId) {\n        const tree = model.getInstanceTree();\n        const dbIds = [];\n        if (typeof rootId === \"undefined\") {\n            rootId = [tree.nodeAccess.rootId];\n        }\n        else {\n            rootId = Array.isArray(rootId) ? rootId : [rootId];\n        }\n        rootId.forEach(el => {\n            const queue = [el];\n            let hasChildren;\n            while (queue.length) {\n                let id = queue.pop();\n                hasChildren = false;\n                tree.enumNodeChildren(id, childId => {\n                    hasChildren = true;\n                    queue.push(childId);\n                });\n                if (!hasChildren) {\n                    dbIds.push(id);\n                }\n            }\n        });\n        return { model: model, selection: dbIds };\n    }\n    getBimObjectsByPropertiesName(model, properties) {\n        return this.getAllBimObjectsProperties(model).then(res => {\n            let result = [];\n            for (let i = 0; i < res.length; i++) {\n                const element = res[i];\n                for (let j = 0; j < element.properties.length; j++) {\n                    const property = element.properties[j];\n                    if (typeof this._getLabel(property, properties) !== \"undefined\") {\n                        result.push(property);\n                    }\n                    // }\n                }\n                return result;\n            }\n        });\n    }\n    getBimObjectsValidated(referential, regEx) {\n        return this.getBimObjectProperties(referential).then(res => {\n            return res.map(element => {\n                return {\n                    model: element.model,\n                    properties: element.properties.filter(el => {\n                        return this._isValid(el, regEx);\n                    })\n                };\n            });\n        });\n    }\n    getBimObjectsByName(model, bimObjectName, labelName) {\n        return new Promise(resolve => {\n            model.search(bimObjectName.trim(), (res) => __awaiter(this, void 0, void 0, function* () {\n                let properties = yield this.getBimObjectProperties([\n                    { model: model, selection: res }\n                ]);\n                resolve(properties);\n            }), () => {\n                resolve([]);\n            }, labelName);\n        });\n    }\n    ////////////////////////////////////////////////////////////////////////\n    //                             PRIVATES                               //\n    ////////////////////////////////////////////////////////////////////////\n    _getProperties(model, selection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let properties = selection.map(el => {\n                return new Promise(resolve => {\n                    model.getProperties(el, res => {\n                        // properties.push(res);\n                        resolve(res);\n                    }, err => {\n                        resolve(undefined);\n                    });\n                });\n            });\n            return {\n                model: model,\n                properties: yield Promise.all(properties)\n            };\n        });\n    }\n    _getAllDbIds(model) {\n        var instanceTree = model.getData().instanceTree;\n        var allDbIdsStr = Object.keys(instanceTree.nodeAccess.dbIdToIndex);\n        return allDbIdsStr.map(function (id) {\n            return parseInt(id);\n        });\n    }\n    _getLabel(bim, properties) {\n        for (let i = 0; i < properties.length; i++) {\n            const propertieValue = properties[i].value;\n            const propertyName = properties[i].name;\n            const found = bim.properties.find(el => {\n                return typeof propertieValue === \"undefined\" ||\n                    propertieValue.length === 0\n                    ? el.displayName.toLowerCase() ===\n                        propertyName.trim().toLocaleLowerCase()\n                    : el.displayName.toLowerCase() ===\n                        propertyName.trim().toLocaleLowerCase() &&\n                        propertieValue == el.displayValue;\n            });\n            if (typeof found === \"undefined\") {\n                return undefined;\n            }\n        }\n        return true;\n    }\n    _isValid(el, regEx) {\n        for (let i = 0; i < regEx.length; i++) {\n            let nameRegex = regEx[i].nameRegex;\n            let valueRegex = regEx[i].valueRegex;\n            let found = el.properties.find(res => {\n                if (typeof valueRegex === \"undefined\") {\n                    return nameRegex.test(res.displayName);\n                }\n                return (nameRegex.test(res.displayName) && valueRegex.test(res.displayValue));\n            });\n            if (typeof found === \"undefined\") {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.default = new BimObjectManagerService();\n//# sourceMappingURL=bimService.js.map",null,"\"use strict\";"],"names":[],"version":3,"file":"spinal-env-viewer-plugin-ticket.3d655dba.js.map"}