{"mappings":"","sources":["node_modules/spinal-env-viewer-plugin-standard_button/vue/colorDialog.vue"],"sourcesContent":["<template>\n  <md-dialog :md-active.sync=\"showDialog\" @md-closed=\"closeDialog(false)\">\n    <md-dialog-title>Edit Color</md-dialog-title>\n\n    <md-dialog-content class=\"colorDialogContainer\">\n      <chrome-picker v-model=\"color\" />\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\" @click=\"closeDialog(false)\"\n        >Cancel</md-button\n      >\n      <md-button class=\"md-primary\" @click=\"closeDialog(true)\">Save</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n<script>\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport { Chrome } from \"vue-color\";\n\nexport default {\n  name: \"editColordialogComponent\",\n  props: [\"onFinised\"],\n  components: {\n    \"chrome-picker\": Chrome,\n  },\n  data() {\n    return {\n      showDialog: true,\n      color: \"#000000\",\n      selectedNode: null,\n    };\n  },\n  methods: {\n    opened(option) {\n      if (option.selectedNode.color) {\n        this.color = option.selectedNode.color.get();\n      }\n      this.selectedNode = SpinalGraphService.getRealNode(\n        option.selectedNode.id.get()\n      );\n    },\n    removed(option) {\n      if (option.closeResult === true) {\n        const color =\n          typeof this.color === \"string\" ? this.color : this.color.hex;\n        if (this.selectedNode.info.color) {\n          this.selectedNode.info.color.set(color);\n        } else {\n          this.selectedNode.info.add_attr({ color: color });\n        }\n      }\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised({ closeResult, inputValue: this.inputValue });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.colorDialogContainer {\n}\n</style>"],"names":[],"version":3,"file":"spinal-env-viewer-plugin-standard_button.e637ba35.css.map"}