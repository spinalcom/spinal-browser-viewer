{"mappings":"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O,CAAC;IACrD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A;A;A,I,gB;I,M;I,Y;uB,C,G,8C,A;I;I,M;Q,O;Y,e,C;Y,e,E;Y,qB;Y,W,E;Y,c,E;Y,U;Y,S;Q;I;I,U;Q,M;Y,I,I,C,a,C,c,C,S,O,I,C,a,C,I;Y,O;Q;I;I,O;Q,e;Y,S,S,K;gB,I,M,c,C,e;oB,I,C,a,G,I,C,gB,C;oB,I,I,C,a,C,M,G,G,I,C,mB,G,I,C,a,C,E;oB,O,I,C,W,C,I,C,mB;gB;Y;Y,W;Q;I;I,S;Q,S,I;Y,M,O;gB,Y,K,U;Y;Y,I,K,I,C,I,E,K,I,G,K,I,C,I,C,G;Y,I,K,I,C,E,E,K,E,G,K,I,C,E,C,G;Y,O;Q;Q,gB,O;Y,M,W,C,G,+C,A,E,W,C,Q,E,C,G;Y,M,O;gB,Y,S,U;Y;Y,I,S,I,C,I,E,K,I,G,S,I,C,I,C,G;Y,I,S,I,C,E,E,K,E,G,S,I,C,E,C,G;Y,O;Q;Q,kB,a;Y,M,O,C,G,qC,A,E,Q,C,c,U,C;Y,O,K,gB;Q;Q,Q,S,M;Y,I,C,a,G,I,C,c,C,O,Y;Y,I,C,O,G;Q;Q,Q,Y;Q,iB,S,E;Y,C,G,+C,A,E,e,C,G,G;Y,I,I,I,G,I,I,C,S,C,M,E,I;gB,M,Q,I,C,S,C,E;gBAqDf,IAAA,MAAA,EAAA,CAAA,GAAA,MAAA,MAAA,GAAA,IAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA;YACA;QACA;QACA,kBAAA,SAAA,EAAA;YACA,QAAA,GAAA,CAAA,wBAAA;QACA,gDAAA;QACA,oDAAA;QACA,qCAAA;QACA,iEAAA;QACA,IAAA;QACA;QACA,MAAA,aAAA,YAAA;YACA,MAAA,WAAA,CAAA,GAAA,qCAAA,AAAA,EAAA,QAAA,CAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA;YACA,MAAA,WAAA,MAAA,SAAA,WAAA,CAAA;gBAAA;aAAA;YACA,IAAA,CAAA,SAAA,GAAA,SAAA,GAAA,CAAA,CAAA;gBACA,MAAA,OAAA;oBAAA,YAAA,KAAA,UAAA;gBAAA;gBACA,IAAA,KAAA,IAAA,CAAA,IAAA,EAAA,KAAA,IAAA,GAAA,KAAA,IAA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B;Y;Q;Q,I,E,C;Q,G,qB;Y,a;gB,mB;Y;Q,G;Y,I,Q,K,Q,G,a;gB,a;gB,a;oB,a;gB;gB,I;oB,S,I,Y;gB;Y,G;gB,G,W;oB,I,E,C;iB;a,E,K,G,O;gB,G,a;oB,a;oB,a;wB,a;oB;oB,I;wB,S,I,S;oB;gB,G;oB,G,W;wB,I,E,C;qB;iB,E;gB,I,E,C;gB,G,a;oB,a;oB,a;wB,a;oB;oB,I;wB,S,I,Q;oB;gB,G;oB,G,W;wB,I,E,C;qB;iB,E;a,E;Y,I,E,C;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,I,O,G;oB;gB;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADhGA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;AELA;;;;;;;;;;;;;;;;;;;;;;CAsBC;;AAUD,yDAAa;AARb;AAEA;AACA;AAKO,MAAM,4BAA4B,CAAA,GAAA,mDAAgB,AAAD;IACtD,aAAc;QACZ,KAAK,CAAC,kBAAkB,sBAAsB;YAC5C,MAAM;YACN,WAAW;YACX,iBAAiB;QACnB;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,IAAI,OAAO,cAAc,CAAC,iBACxB,OAAO,QAAQ,OAAO,CAAC;QAEzB,IAAI,OAAO,KAAK,IAAI,OAAO,cAAc,CAAC,iBACxC,OAAO,QAAQ,OAAO,CAAC;aAEvB,OAAO,QAAQ,OAAO,CAAC;IAE3B;IAEA,OAAO,MAAM,EAAE;QACb,IAAI,eAAe,OAAO,YAAY;QAEtC,IAAI,OAAO,YAAY,YAAY,CAAA,GAAA,uCAAU,AAAD,GAAG;YAC7C,CAAA,GAAA,+CAAkB,AAAD,EAAE,QAAQ,CAAC,OAAO,YAAY;YAC/C,eAAe,CAAA,GAAA,+CAAkB,AAAD,EAAE,OAAO,CAAC,OAAO,YAAY,CAAC,KAAK;QACrE;QACA,MAAM,QAAQ;YACZ,cAAc;QAChB;QACA,CAAA,GAAA,6DAAyB,AAAD,EAAE,SAAS,CAAC,yBAAyB;IAC/D;AAEF","sources":["node_modules/spinal-env-viewer-plugin-node-inspector/index.js","node_modules/spinal-env-viewer-panel-manager-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelManagerService.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelApp.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalMountExtention.js","node_modules/spinal-env-viewer-plugin-node-inspector/src/node-inspector-modal.vue","node_modules/spinal-env-viewer-plugin-node-inspector/src/reorderUtils.js","node_modules/spinal-env-viewer-plugin-node-inspector/src/button/NodeInspectorButton.js"],"sourcesContent":["import vue from 'vue';\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\nimport { SpinalMountExtention } from 'spinal-env-viewer-panel-manager-service';\nimport NodeInspectorModal from './src/node-inspector-modal.vue'\nimport { NodeInspectorButton } from \"./src/button/NodeInspectorButton\";\n\n\nconst sideBarName = \"GraphManagerSideBar\";\nconst circularMenu = \"circularMenu\";\nspinalContextMenuService.registerApp(sideBarName, new NodeInspectorButton(),\n  [7]);\nspinalContextMenuService.registerApp(circularMenu, new NodeInspectorButton(),\n  [7]);\nSpinalMountExtention.mount( {\n  name: 'plugin-node-inspector',\n  vueMountComponent: vue.extend( NodeInspectorModal ),\n  parentContainer: document.body\n  \n} );\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalPanelManagerService = require(\"./SpinalPanelManagerService\");\nconst SpinalPanelApp = require(\"./SpinalPanelApp\");\n\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalPanelManagerService === \"undefined\")\n  G_root.spinal.spinalPanelManagerService = new SpinalPanelManagerService();\nconst SpinalMountExtention = require(\"./SpinalMountExtention.js\")(\n  G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  spinalPanelManagerService: G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp,\n  SpinalMountExtention,\n  install(Vue) {\n    Vue.prototype.$spinalPanelManagerService =\n      G_root.spinal.spinalPanelManagerService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} panels key = panelName, value = an instance of SpinalPanelApp\n * @class SpinalPanelManagerService\n */\nclass SpinalPanelManagerService {\n  /**\n   *Creates an instance of SpinalPanelManagerService.\n   * @memberof SpinalPanelManagerService\n   */\n  constructor() {\n    this.panels = {};\n  }\n\n  /**\n   * method to register an Panel Application\n   *\n   * @param {string} panelName the name of the panel\n   * @param {SpinalPanelApp} spinalPanelApp the application\n   * @memberof SpinalPanelManagerService\n   */\n  registerPanel(panelName, spinalPanelApp) {\n    this.panels[panelName] = spinalPanelApp;\n  }\n\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  openPanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].openPanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  closePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].closePanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  tooglePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].tooglePanel(option);\n    return false;\n  }\n}\n\nmodule.exports = SpinalPanelManagerService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n * Base interface like class of a panel\n *\n * @class SpinalPanelApp\n */\nclass SpinalPanelApp {\n  constructor() {}\n\n  openPanel(option) {}\n  closePanel(option) {}\n  tooglePanel(option) {}\n}\n\nmodule.exports = SpinalPanelApp;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (!option.vueMountComponent) {\n    throw new Error(\"mount : missing option vueMountComponent\");\n  }\n\n  cfg.name = option.name || \"SpinalMount\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.parentContainer = option.parentContainer || document.body;\n  return cfg;\n}\n\nfunction getDialog() {\n  if (!this.dialog) {\n    this.dialog = document.createElement(\"div\");\n    const _compo = document.createElement(\"div\");\n    this.dialog.className = \"spinal-modal-container\";\n    this.cfg.parentContainer.appendChild(this.dialog);\n    this.dialog.appendChild(_compo);\n    this.compoment = new this.cfg.vueMountComponent({\n      propsData: {\n        onFinised: this.onFinised.bind(this)\n      }\n    }).$mount(_compo);\n  }\n  return this.dialog;\n}\n\n/**\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { mount }\n */\nmodule.exports = function(spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n```js\n{\n  name: \"myCustomDialogName\",\n  vueMountComponent: Vue.extend(aVueCompomentDialog),\n  parentContainer: document.body\n}```\n     *\n     * @param {*} option\n     */\n    mount(option) {\n      let cfg = configInit(option);\n      const SpinalMount = class extends SpinalPanelApp {\n        constructor() {\n          super();\n          this.cfg = cfg;\n          this.dialog = null;\n          this.compoment = null;\n        }\n\n        openPanel(opt) {\n          getDialog.call(this);\n          this.compoment.opened(opt);\n        }\n        closePanel(opt) {\n          if (this.dialog !== null) {\n            this.compoment.removed(opt);\n            this.dialog.remove();\n            this.dialog = null;\n            this.compoment = null;\n          }\n        }\n\n        tooglePanel(opt) {\n          if (this.dialog !== null) {\n            this.closePanel(opt);\n          } else {\n            this.openPanel(opt);\n          }\n        }\n\n        /**\n         * called when dialog closed by the dialog itself\n         */\n        onFinised(closeResult) {\n          this.closePanel(closeResult);\n        }\n      };\n      let SpinalMountInstance = new SpinalMount();\n      spinalPanelManagerService.registerPanel(cfg.name, SpinalMountInstance);\n    }\n  };\n};\n","<!--\nCopyright 2021 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog style=\"min-width: 50vw;\"\n             :md-active=\"display\">\n    <md-dialog-title>{{ name }}</md-dialog-title>\n    <node-inspector ref=\"nodeInspector\"\n                    class=\"node-inspector\"\n                    :edit-mode=\"editMode\"\n                    :child-info=\"childInfo\"\n                    :relation-names=\"relationNames\"\n                    :default-relation-name=\"defaultRelationName\"\n                    @get-children=\"getChildren($event)\"\n                    @remove-from-graph=\"removeFromGraph($event)\"\n                    @remove-from-parent=\"removeFromParent($event)\" />\n    <md-dialog-actions style=\"justify-content: space-between;\">\n      <md-button v-if=\"editMode===false\"\n                 class=\"md-fab md-mini md-primary\"\n                 style=\"min-width: 0;\"\n                 @click=\"startEditBtn\">\n        <md-icon>edit</md-icon>\n      </md-button>\n      <div v-else>\n        <md-button class=\"md-fab md-mini\"\n                   style=\"min-width: 0;\"\n                   @click=\"cancelBtn\">\n          <md-icon>cancel</md-icon>\n        </md-button>\n        <md-button class=\"md-fab md-mini md-primary\"\n                   style=\"min-width: 0;\"\n                   @click=\"validBtn\">\n          <md-icon>check</md-icon>\n        </md-button>\n      </div>\n      <!-- <md-button class=\"md-primary\"\n                 @click=\"display = false\">\n      </md-button> -->\n\n      <md-button class=\"md-primary\"\n                 @click=\"display = false\">\n        close\n      </md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n<script>\nimport { NodeInspector } from \"spinal-env-viewer-vue-components-lib\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport { FileSystem } from \"spinal-core-connectorjs_type\";\nimport { reorderChildren } from \"./reorderUtils\";\nexport default {\n  name: \"NodeInspectorModal\",\n  components: { NodeInspector },\n  data: function () {\n    return {\n      inspectedNode: {},\n      relationNames: [],\n      defaultRelationName: \"\",\n      childInfo: [],\n      childInfoBkp: [],\n      editMode: false,\n      display: false\n    };\n  },\n  computed: {\n    name: function () {\n      if (this.inspectedNode.hasOwnProperty(\"name\")) {\n        return this.inspectedNode.name;\n      }\n      return \"\";\n    }\n  },\n  watch: {\n    inspectedNode: {\n      handler: function (value) {\n        if (value.hasOwnProperty(\"_server_id\")) {\n          this.relationNames = this.getRelationNames(value);\n          if (this.relationNames.length > 0) {\n            this.defaultRelationName = this.relationNames[0];\n          }\n          return this.getChildren(this.defaultRelationName);\n        }\n      },\n      immediate: true\n    }\n  },\n\n  methods: {\n    getInfo(node) {\n      const item = { _server_id: node._server_id };\n      if (node.info.name) item.name = node.info.name.get();\n      if (node.info.id) item.id = node.info.id.get();\n      return item;\n    },\n    getInfoFromRef(nodeRef) {\n      const realNode = SpinalGraphService.getRealNode(nodeRef.id.get());\n      const item = { _server_id: realNode._server_id };\n      if (realNode.info.name) item.name = realNode.info.name.get();\n      if (realNode.info.id) item.id = realNode.info.id.get();\n      return item;\n    },\n    getRelationNames(inspectedNode) {\n      const node = FileSystem._objects[inspectedNode._server_id];\n      return node.getRelationNames();\n    },\n    opened: function (option) {\n      this.inspectedNode = this.getInfoFromRef(option.selectedNode);\n      this.display = true;\n    },\n    closed: function () {},\n    removeFromGraph: function (id) {\n      SpinalGraphService.removeFromGraph(id.get());\n      for (let i = 0; i < this.childInfo.length; i++) {\n        const child = this.childInfo[i];\n        if (child.id.get() == event.get()) this.childInfo.splice(i);\n      }\n    },\n    removeFromParent: function (id) {\n      console.log(\"removeFromParent NYI\", id);\n      // SpinalGraphService.removeFromGraph(id.get());\n      // for (let i = 0; i < this.childInfo.length; i++) {\n      //   const child = this.childInfo[i];\n      //   if (child.id.get() == event.get()) this.childInfo.splice(i);\n      // }\n    },\n    async getChildren(relationName) {\n      const realNode = FileSystem._objects[this.inspectedNode._server_id];\n      const children = await realNode.getChildren([relationName]);\n      this.childInfo = children.map((node) => {\n        const item = { _server_id: node._server_id };\n        if (node.info.name) item.name = node.info.name.get();\n        if (node.info.id) item.id = node.info.id.get();\n        return item;\n      });\n    },\n    cancelBtn() {\n      this.editMode = false;\n      // this.childInfo = this.childInfoBkp;\n      this.$refs.nodeInspector.reset();\n    },\n    validBtn() {\n      this.editMode = false;\n      const realNode = FileSystem._objects[this.inspectedNode._server_id];\n      console.log(realNode);\n      const sortedArray = this.$refs.nodeInspector.returnSort();\n      const relationName = this.$refs.nodeInspector.relationName;\n      reorderChildren(realNode, relationName, sortedArray);\n      // this.childInfo = data;\n    },\n    startEditBtn() {\n      this.editMode = true;\n      // this.$refs.nodeInspector.\n      // this.childInfoBkp = this.childInfo.concat();\n    }\n    // reorder() {\n    // }\n    // getChildren: function (event) {\n    //   SpinalGraphService.getChildren(this.inspectedNode.id.get(), [event]).then(\n    //     (children) => {\n    //       this.childInfo = [];\n    //       this.childInfo.push(...children);\n    //     }\n    //   );\n    // }\n  }\n};\n</script>\n\n<style scoped>\n.node-inspector {\n  margin: 16px;\n  /* width: 30vw; */\n}\n</style>\n","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n/* eslint-disable no-await-in-loop */\nimport { SpinalNode } from \"spinal-env-viewer-graph-service\";\n\n/**\n * @param {SpinalNode} node\n * @param {string} relationName\n * @param {{id: string, name: string, _server_id: number}[] } orderArr\n */\nexport async function reorderChildren(node, relationName, orderArr) {\n  for (const [relationType, map] of node.children) {\n    for (const [relName, relation] of map) {\n      if (relName === relationName) {\n        if (relationType === \"Ref\") {\n          reorderRef(relation, orderArr);\n        } else if (relationType === \"PtrLst\") {\n          await reorderPtrLst(relation, orderArr);\n        } else if (relationType === \"LstPtr\") {\n          await reorderLstPtr(relation, orderArr);\n        }\n      }\n    }\n  }\n}\n\nfunction reorderRef(relation, orderArr) {\n  const arr = [];\n  for (const item of orderArr) {\n    for (let i = 0; i < relation.children.length; i++) {\n      const lstChild = relation.children[i];\n      if (item._server_id === lstChild._server_id) {\n        arr.push(lstChild);\n        break;\n      }\n    }\n  }\n  relation.children.clear();\n  arr.forEach(itm => relation.children.push(itm));\n}\n\nasync function reorderPtrLst(relation, orderArr) {\n  const arr = [];\n  const children = await relation.children.load();\n  for (const item of orderArr) {\n    for (let i = 0; i < children.length; i++) {\n      const lstChild = children[i];\n      if (item._server_id === lstChild._server_id) {\n        arr.push(lstChild);\n        break;\n      }\n    }\n  }\n  children.clear();\n  relation.children.info.ids.clear();\n  arr.forEach(itm => {\n    relation.children.info.ids.push(itm.info.id.get());\n    children.push(itm);\n  });\n\n}\n\nasync function reorderLstPtr(relation, orderArr) {\n  const arr = [];\n  for (const item of orderArr) {\n    for (let i = 0; i < relation.children.length; i++) {\n      const lstChild = relation.children[i];\n      const child = await lstChild.load();\n      if (item._server_id === child._server_id) {\n        arr.push(lstChild);\n        break;\n      }\n    }\n  }\n  relation.children.clear();\n  arr.forEach(itm => relation.children.push(itm));\n}\n","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport {SpinalContextApp} from \"spinal-env-viewer-context-menu-service\";\n\nimport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\nimport {\n  SpinalNode,\n  SpinalGraphService\n} from 'spinal-env-viewer-graph-service';\n\nexport class NodeInspectorButton extends SpinalContextApp {\n  constructor() {\n    super(\"Node Inspector\", \"Open NodeInspector\", {\n      icon: \"crop_free\",\n      icon_type: \"in\",\n      backgroundColor: \"#ffebf8\"\n    });\n  }\n\n  isShown(option) {\n    if (option.hasOwnProperty('selectedNode')) {\n      return Promise.resolve(true);\n    }\n    if (option.exist || option.hasOwnProperty('selectedNode')) {\n      return Promise.resolve(true);\n    } else {\n      return Promise.resolve(-1);\n    }\n  }\n\n  action(option) {\n    let selectedNode = option.selectedNode;\n\n    if (option.selectedNode instanceof SpinalNode) {\n      SpinalGraphService._addNode(option.selectedNode);\n      selectedNode = SpinalGraphService.getInfo(option.selectedNode.getId());\n    }\n    const param = {\n      selectedNode: selectedNode\n    };\n    spinalPanelManagerService.openPanel(\"plugin-node-inspector\", param);\n  }\n\n}\n"],"names":[],"version":3,"file":"spinal-env-viewer-plugin-node-inspector.cdfc840a.js.map"}