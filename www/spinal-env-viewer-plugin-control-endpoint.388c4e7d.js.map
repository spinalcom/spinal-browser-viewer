{"mappings":"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,iBAAiB,SAAS,IAAI;IAChC;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,gCAAmB,AAAD;QAChD,iBAAiB,SAAS,IAAI;IAChC;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,yCAAsB,AAAD;QACnD,iBAAiB,SAAS,IAAI;IAChC;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,gCAAoB,AAAD;QACjD,iBAAiB,SAAS,IAAI;IAChC;CAOD;AAED,IAAK,IAAI,QAAQ,GAAG,QAAQ,QAAQ,MAAM,EAAE,QAC1C,CAAA,GAAA,wDAAoB,AAAD,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM;;;;;AC7C3C,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAgC,MAAM;IACpD,OAAO,eAAe,GAAG,QAAQ,oBAAgC,eAAe;IAChF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA6B,OAAO;IAClE,QAAQ,oBAA8B,OAAO,CAAC;IAC9C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,M;Y,Y;Y,U;Q;I;I,Y;I,S;Q,Q,M;Y,I,O,Q,E,I,C,Q,G,O,Q;Q;Q,M,S,M;Y,I,Q,C,G,sE,A,E,a,C,I,C,I,C,I,I,I,C,C;gB,I,I,C,Q,I,O,I,C,Q,K,Y,I,C,Q,C,G,G;Y;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y,I,C,S,C;Q;Q;Y,O,C,C,I,C,I,I,I,C,I,C,I,G,M,G,C;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,qB;Y,G,Y;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,O,I,I;wB,U,S,G;4B,I,I,G;wB;wB,Y;oB;gB;a,E;S,E;Q,I,E,C;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,O;oB,Y,I,Q;gB;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAqC,MAAM;IACzD,OAAO,eAAe,GAAG,QAAQ,oBAAqC,eAAe;IACrF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAkC,OAAO;IACvE,QAAQ,oBAAmC,OAAO,CAAC;IACnD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;;A,I,gB;I,M;I,O;Q;K;I,Y;Q,2B,C,G,gC,A;I;I;Q,I,C,S,G;Q,I,C,O,G;Q,O;Y,M;Y,W,E;Y,Y;Q;I;I,Y;I,S;Q,Q,M;Y,I,C,S,G,O,O,C,E;Y,I,C,O,G,O,Y,C,E;Q;Q,M,S,M;Y,I,O,O,E,C,G,sE,A,E,wB,C,I,C,S,E,I,C,O,E;gB,M,I,C,I;gB,W,O,I;Y;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y,I,C,S,C;gB,S;Y;Q;Q;Y,O,C,C,I,C,I,I,I,C,I,C,I,G,M,G,K,I,C,S,C,M,G,C;Q;Q,Y,I;Y,I,I,C,I,C,I,G,M,K,G,O,M;Y,I,O,I,C,S,K,Y,I,C,S,C;gB,S;gB;Y;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;;;ACff,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAgC,MAAM;IACpD,OAAO,eAAe,GAAG,QAAQ,oBAAgC,eAAe;IAChF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA6B,OAAO;IAClE,QAAQ,oBAA8B,OAAO,CAAC;IAC9C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A,I,gB;I,M;I,O;Q,M;Y,S,E;Q;Q,U;Y,M;Y,S;Q;I;I;Q,I,C,oB,G,C,G,oE,A;Q,I,C,a,G,C,G,gE,A;Q,+C;Q,I,C,U,G;Y,G;Y,G;Q;Q,O;Y,U,E;Q;I;I;Q,I,C,Q,G,K,K,C,K,S,C,I,C,I;I,kE;I,uB;I,K;I,+D;I;I,S;Q;Y,I,C,K,C;Q;Q;Y,M,e,O,M,C,C,G,C,G,4D,A;Y,a,E,G,K,G;Y,I,C,Q,G;mB,I,C,Q;gB;a;Q;Q,Y,E;Y,I,C,Q,G,I,C,Q,C,M,C,C,K,G,E,K;Q;Q,gB,I;Y,C,G,6D,A,E,S,C,uB;gB,M,K,K,C,K,S,C;gB,U,C;oB,K,M,G;gB;Y;Q;Q;Y,I,C,Q,G,K,K,C,K,S,C,I,C,I;Y,I,C,K,C;Q;Q;Y,M,a,I,C,W;Y,I,W,M,K,G,O,M;Y,I,W,M,K,I,C,Q,C,M,E,I,C,K,C,W;iB,I,W,M,G,I,C,Q,C,M,E;gB,M,O,I,C,Q,C,M,G,W,M;gB,M,Q,O,O,C,C,E,K,yE,C;gB,I,O,I,C,K,C,W;Y;Q;Q,gB,I;Y,M,S,C,G,sD,A,E,K,Q;Y,I,Q,K,M,G;Q;Q;Y,O,I,C,Q,C,M,C,C,O,I,C,mB,C;Q,kD;Q,mC;Q,K;Q,gC;Q,2B;Q,gD;Q,M;Q,e;Q,M;Q;Q;Y,M,Q,I,C,Q,C,I,C,C,K,I,C,mB,C;Q;Q,qB,Y;Y,O,a,I,C,I,G,M,G,K,a,K,C,I,G,M,G,K,a,Q,C,I,G,M;Q;Q,e,I;Y,O;gB,C,G,oE,A,E,K;gB,C,G,oE,A,E,O;gB,C,G,oE,A,E,S;gB,C,G,oE,A,E,I;gB,C,G,oE,A,E,M;gB,C,G,oE,A,E,I;gB,C,G,oE,A,E,O;gB,C,G,oE,A,E,I;a,C,O,C,K,Q,M;Q;I;I,O;Q;Y,I,C,Q,G,K,K,C,K,S,C,I,C,I;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,Y;Y,a;Y,a,I,E,C;gB;oB,K;oB,I,S,G;wB,I,O,I,I;wB,O,A,C,I,Q,G,G,gB,C,G;4B,G,iB;gC,O;oC,Y;gC;4B,G;gC,I,E,C,Y,I,E,C,K,I,I;6B;4B,I,E,C;4B,G,iB;gC,O;oC,Y;gC;4B,G;gC,I,E,C,Y,I,E,C,K,K,I;6B;4B,I,E,C;4B,G,iB;gC,O;oC,Y;gC;4B,G;gC,I,E,C,Y,I,E,C,I,oB,C,K,Q,C,I;6B;4B,I,E,C;4B,G,iB;gC,O;oC,Y;gC;4B,G;gC,I,E,C,Y,I,E,C,K,I,I;6B;4B,I,E,C;4B,G,iB;gC,O;oC,Y;gC;4B,G;gC,I,E,C,Y,I,E,C,K,I,I,O;6B;4B,I,E,C;4B,G,iB;gC,O;oC,Y;gC;4B,G;gC,I,E,C,Y,I,E,C,I,U,C,K,O,C,I,Q;6B;4B,I,E,C;4B,G,iB;gC,O;oC,Y;gC;4B,G;gC,I,E,C,Y,I,E,C,I,U,C,K,c,C,I,Q;6B;yB,E,K,G,gB,C,G;4B,G,iB;gC,a;gC,O;oC,Y;gC;4B,G;gC,G,Y;oC,O;wC,a;oC;gC,G;oC,G,S;wC,I,E,C;qC;oC,I,E,C;oC,G,Y;wC,O;4C,O,K,I;4C,U,S,G;gD,I,I,C,M,Q;4C;4C,Y;wC;oC;iC,E;6B,E;4B,I,E,C;4B,G,iB;gC,a;gC,O;oC,Y;gC;4B,G;gC,G,Y;oC,O;wC,a;oC;gC,G;oC,G,S;wC,I,E,C;qC;oC,I,E,C;oC,G,Y;wC,O;4C,O,K,K;4C,U,S,G;gD,I,I,C,M,S;4C;4C,Y;wC;oC;iC,E;6B,E;4B,I,E,C;4B,G,iB;gC,a;gC,O;oC,Y;gC;4B,G;gC,G,Y;oC,O;wC,a;oC;gC,G;oC,G,S;wC,O;4C,O;wC;oC,G;wC,I,E,C;qC;oC,I,E,C;oC,G,a;wC,O;4C,Q;4C,M;wC;wC,I;4C,e,S,M;gD,O,I,c,C;4C;wC;wC,O;4C,O,K,Q;4C,U,S,G;gD,I,I,C,M,Y;4C;4C,Y;wC;oC,G,I,E,C,O,I,C,I,oB,G,S,I,E,K;wC,O,G,a;4C,K;4C,O;gD,S;4C;wC,G;4C,I,E,C,e,I,E,C,I,oB,C,K,I;yC;oC,I;iC,E;6B,E;4B,I,E,C;4B,G,iB;gC,a;gC,O;oC,Y;gC;4B,G;gC,G,Y;oC,O;wC,a;oC;gC,G;oC,G,S;wC,O;4C,O;wC;oC,G;wC,I,E,C;qC;oC,I,E,C;oC,G,a;wC,O;4C,Q;4C,M;wC;wC,O;4C,O,K,I;4C,U,S,G;gD,I,I,C,M,Q;4C;4C,Y;wC;oC,G,I,E,C,O,I,C,I,a,G,S,I,E,K;wC,O,G,a;4C,K;4C,O;gD,S;4C;wC,G;4C,I,E,C,e,I,E,C,I,a,C,K,I;yC;oC,I;iC,E;6B,E;4B,I,E,C;4B,G,iB;gC,a;gC,O;oC,Y;gC;4B,G;gC,G,Y;oC,O;wC,a;oC;gC,G;oC,G,S;wC,I,E,C;qC;oC,I,E,C;oC,G,Y;wC,O;4C,O,K,I;4C,U,S,G;gD,I,I,C,M,Q;4C;4C,Y;wC;oC;iC,E;6B,E;4B,I,E,C;4B,G,iB;gC,a;gC,O;oC,Y;gC;4B,G;gC,G,Y;oC,O;wC,a;oC;gC,G;oC,G,S;wC,O;4C,O;wC;oC,G;wC,I,E,C;qC;oC,I,E,C;oC,G,a;wC,O;4C,Q;4C,M;wC;wC,O;4C,O,K,O;4C,U,S,G;gD,I,I,C,M,W;4C;4C,Y;wC;oC,G;wC,G,a;4C,O;gD,S;4C;wC,G;4C,I,E,C;yC;wC,I,E,C;wC,G,a;4C,O;gD,S;4C;wC,G;4C,I,E,C;yC;qC,E;iC,E;6B,E;4B,I,E,C;4B,G,iB;gC,a;gC,O;oC,Y;gC;4B,G;gC,G,Y;oC,O;wC,a;oC;gC,G;oC,G,S;wC,O;4C,O;wC;oC,G;wC,I,E,C;qC;oC,I,E,C;oC,G,a;wC,O;4C,Q;4C,M;wC;wC,O;4C,O,K,c;4C,U,S,G;gD,I,I,C,M,kB;4C;4C,Y;wC;oC,G;wC,G,a;4C,O;gD,S;4C;wC,G;4C,I,E,C;yC;wC,I,E,C;wC,G,a;4C,O;gD,S;4C;wC,G;4C,I,E,C;yC;qC,E;iC,E;6B,E;4B,I,E,C;4B,G,iB;gC,a;4B,G;gC,G,a;oC,a;oC,O;wC,Y,I,a,C;oC;oC,I;wC,S,S,M;4C,O,I,c,C;wC;oC;gC,G;oC,G,W;wC,I,E,C;qC;iC,E;6B,E;4B,I,E,C;4B,G,iB;gC,a;4B,G;gC,G,a;oC,a;oC,I;wC,S,S,M;4C,O,I,U,C,K,E;wC;oC;gC,G;oC,G,W;wC,I,E,C;qC;iC,E;6B,E;yB,E;oB;gB;a,E,M;Y,O;gB,O,I,Q;gB,U,S,G;oB,I,Q,G;gB;gB,Y;Y;Q,G;Y,G,wB;gB,O;oB,Y;oB,kB;gB;Y;S,E;Q,I,E,C;Q,I,Q,G,G,O;Y,a;Q,G;Y,G,a;gB,a;gB,O;oB,S;gB;gB,I;oB,S,I,e;gB;Y,G;gB,G,W;oB,I,E,C;iB;a,E;Y,I,E,C;Y,G,a;gB,a;gB,O;oB,S;gB;gB,I;oB,S,I,M;gB;Y,G;gB,G,W;oB,I,E,C;iB;a,E;Y,I,E,C;Y,G,a;gB,a;gB,O;oB,S;gB;gB,I;oB,S,I,K;gB;Y,G;gB,G,W;oB,I,E,C;iB;a,E;S,E,K,I,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,qB;Y,a;Q,G;Y,G,Y;gB,a;Y,G;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,O,I,I;wB,U,S,G;4B,I,I,G;wB;wB,Y;oB;gB;a,E;Y,I,E,C;Y,G,O;gB,a;Y,G;gB,G,2B;oB,a;oB,O;wB,Q,I,S;wB,Y;oB;oB,I;wB,U,S,M;4B,O,I,W,C;wB;wB,W,I,U;oB;gB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AEJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,mBAAgC,MAAM;IACpD,OAAO,eAAe,GAAG,QAAQ,mBAAgC,eAAe;IAChF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA6B,OAAO;IAClE,QAAQ,oBAA8B,OAAO,CAAC;IAC9C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A;;A;;A;A,I,gB;I,M;I,Y;Q,0B,C,G,+B,A;Q,2B,C,G,gC,A;Q,wB,C,G,6B,A;I;I,O;Q;K;I;Q,O;Y,Q,C;Y,M,C;Y,Y;Y,U;Q;I;I,Y;I,S;Q,Q,M;Y,I,C,I,G,O,I;Y,I,C,M,G,K,K,C,K,S,C,I,C,I,C,M;Y,I,O,Q,E,I,C,Q,G,O,Q;Q;Q,M,S,M;Y,I,O,O,I,O,I,C,Q,K,Y;gB,I,I,C,Y,I,I,C,M,C,W,G,I,C,a;gB,I,C,Q,C,K,K,C,K,S,C,I,C,M;Y;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y,I,C,S,C;gB,S;Y;Q;Q;Y,O;gB,C,G,oE,A,E,K;gB,C,G,oE,A,E,O;gB,C,G,oE,A,E,S;gBAyCf,CAAA,GAAA,oEAAA,AAAA,EAAA,IAAA;gBACA,CAAA,GAAA,oEAAA,AAAA,EAAA,MAAA;gBACA,CAAA,GAAA,oEAAA,AAAA,EAAA,IAAA;a,C,O,C,I,C,I,C,Q,M;Q;QAKA;YACA,OAAA,IAAA,CAAA,IAAA,CAAA,QAAA,KAAA,CAAA,GAAA,oEAAA,AAAA,EAAA,OAAA;QACA;QAEA;YACA,OAAA,IAAA,CAAA,IAAA,CAAA,QAAA,KAAA,CAAA,GAAA,oEAAA,AAAA,EAAA,IAAA;QACA;QAEA,eAAA,MAAA;YACA,IAAA,CAAA,MAAA,GAAA,OAAA,MAAA,CAAA;QACA;QAEA,qBAAA,MAAA;YACA,OACA,AAAA,CAAA,KAAA,OAAA,GAAA,CAAA,KAAA,AAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KACA,AAAA,CAAA,KAAA,OAAA,GAAA,CAAA,KAAA,AAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KACA,AAAA,CAAA,KAAA,OAAA,OAAA,CAAA,KAAA,AAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KACA,AAAA,CAAA,KAAA,OAAA,OAAA,CAAA,KAAA,AAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KACA,AAAA,CAAA,KAAA,OAAA,GAAA,CAAA,KAAA,AAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KACA,AAAA,CAAA,KAAA,OAAA,GAAA,CAAA,KAAA,AAAA,EAAA,IAAA,GAAA,MAAA,GAAA;QAEA;QAEA,sBAAA,MAAA;YACA,O,A,C,K,O,G,C,K,A,E,I,G,M,G,KAEA,AAAA,CAAA,KAAA,OAAA,GAAA,CAAA,KAAA,AAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KACA,AAAA,CAAA,KAAA,OAAA,GAAA,CAAA,KAAA,AAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KACA,AAAA,CAAA,KAAA,OAAA,GAAA,CAAA,KAAA,AAAA,EAAA,IAAA,GAAA,MAAA,GAAA;QAEA;QAEA,mBAAA,MAAA;Y,M,Q,O,I,CAEA,CAAA,KAAA,GAAA,IAAA,CAAA,IAAA,GAAA,MAAA,KAAA,KAAA,GAAA,KAAA,CAAA,IAAA,GAAA,MAAA,KAAA;YAGA,OAAA,OAAA,UAAA;QACA;QAEA;YACA,IAAA,IAAA,CAAA,cAAA,I,O,C,I,C,mB,C,I,C,M;iBAEA,IAAA,IAAA,CAAA,YAAA,IACA,OAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,MAAA;iBACA,IAAA,IAAA,CAAA,YAAA,IACA,OAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,MAAA,CAAA,WAAA;QAEA;QAEA;YACA,MAAA,UAAA,IAAA,CAAA,KAAA,CAAA,cAAA;YACA,IAAA,SACA,OAAA,QAAA,WAAA,CAAA,MAAA,CACA,CAAA,KAAA,GAAA,IAAA,CAAA,IAAA,GAAA,MAAA,GAAA,KAAA,GAAA,KAAA,CAAA,IAAA,GAAA,MAAA,GAAA;QAIA;I;AAEA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kB,S,wC;;;;;AC7HA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA+B,MAAM;IACnD,OAAO,eAAe,GAAG,QAAQ,oBAA+B,eAAe;IAC/E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA4B,OAAO;IACjE,QAAQ,oBAA6B,OAAO,CAAC;IAC7C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A,I,gB;I,M;I,Y;Q,iB,C,G,gB,A;I;I,O;Q,Q,C;I;I;Q,O;Y,S;gB,K;gB,S;gB,K;Y;Y,U,E;Q;I;I;Q,I,C,Q,G,C,G,Y,A,E,gB,C,I,C,M,C,G,E,I,C,M,C,O,E,I,C,M,C,G;I;I,S;Q,gB,G;Y,I,C,M,C,G,C,K,G,I,G;Y,I,C,Q,G,C,G,Y,A,E,gB,C,I,C,M,C,G,E,I,C,M,C,O,E,I,C,M,C,G;Q;Q,gB,G;Y,I,C,M,C,G,C,K,G,I,G;Y,I,C,Q,G,C,G,Y,A,E,gB,C,I,C,M,C,G,E,I,C,M,C,O,E,I,C,M,C,G;Q;Q,oB,G;Y,I,C,M,C,O,C,K,G,I,G;Y,I,C,Q,G,C,G,Y,A,E,gB,C,I,C,M,C,G,E,I,C,M,C,O,E,I,C,M,C,G;Q;Q;Y,I,M,S,I,C,M,C,G,C,K;Y,I,M,S,I,C,M,C,G,C,K;Y,oD;Y,I,C,M,C,O,C,K,G,A,C,M,G,I;Q;Q,c,G;Y,I,C,O,C,I,G,C,I,C,O,C,I;Q;Q,e,K;Y,I,M,S,I,C,M,C,G,C,K;Y,I,M,S,I,C,M,C,G,C,K;Y,I,C,M,Q,C,M,M;gB,I,Q,A,C,M,G,I,Q;gB,I,M,A,C,M,G,I,C,Q,C,I;gB,O,C,E,Q,I,G,E,M,I,C;Y;Y,O;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;;;AC6Bf,2CACE;AA9CF,IAAI,eAAe,QAAQ;AAE3B,IAAI,QAAQ;IACV,kBAAiB,GAAG,EAAE,OAAO,EAAE,GAAG;QAChC,IAAI,cAAc,UAAU,KAAK;QACjC,IAAI,SAAS,UAAU;YAAC,IAAI,KAAK;YAAE,QAAQ,KAAK;YAAE,IAAI,KAAK;SAAC,GAAG;YAAC,IAAI,KAAK;YACvE,IAAI,KAAK;SACV;QAED,IAAI,WAAW,aAAa;QAE5B,OAAO,SAAS,GAAG,CAAC;IACtB;IAEA,UAAS,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa;QAC/C,IAAI,OAAO,aAAa,aAAa,OAAO,aAAa,WACvD,OAAO,QAAQ,aAAa,CAAC,EAAE,CAAC,KAAK,KAAK,aAAa,CAAC,EAAE,CAAC,KAAK;QAElE,IAAI,CAAC,MAAM,QAAQ;YACjB,IAAI,QAAQ,KAAK,KAAK,CAAC,AAAE,CAAA,QAAQ,QAAO,IAAK,KAAO,CAAA,WAClD,QAAO;YAET,IAAI,QAAQ,GACV,QAAQ;iBACH,IAAI,SAAS,cAAc,MAAM,EACtC,QAAQ,cAAc,MAAM,GAAG;YAIjC,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK;QACnC;QACA,OAAO;IAET;IAEA,sBAAqB,KAAK;QACxB,OAAO,MAAM,GAAG,CAAC,CAAA,KAAO,CAAA;gBAAC,OAAQ,GAAG,IAAI;gBAAE,OAAQ,GAAG,KAAK;YAAA,CAAA;IAC5D;IAEA,cAAa,KAAK,EAAE,KAAK;QACvB,MAAM,QAAQ,MAAM,IAAI,CAAC,CAAA,KAAM,GAAG,IAAI,KAAK;QAC3C,IAAG,OAAO,OAAO,MAAM,KAAK;IAC9B;AACF;;;A;;;;C,G,C,S,M,E,O;I,O,O,G,Q,Q;A,C,E,I,E,S,U;I;I,S,sB,C;Q,O,K,O,M,Y,a,I,I;Y,W;Q;I;I,I,sB,W,G,sB;IEzCA;;;;KAIA,GAEA;;;;;;;;;KASA,GAEA;;KAEA,GACA,IAAMA,WAAW;QAAEC,GAAG;QAAKC,GAAG;QAAKC,GAAG;QAAKC,GAAG;IAA7B;IAEjB;;KAEA,GACA,IAAMC,WAAW;QAAEC,GAAG;QAAKC,GAAG;QAAGC,GAAG;QAAGJ,GAAG;IAAzB;IAEjB;;;;;;KAMA,GACA,SAASK,QAAQC,KAAjB,EAAwBC,GAAxB,EAA6BC,KAA7B;QACI,IAAIC,OAAO,CAAA;QAEX,IAAK,IAAIC,KAAKJ,MACV,IAAIA,MAAMK,cAAN,CAAqBD,IACrBD,IAAI,CAACC,EAAL,GAAUF,UAAU,IAAI,IAAI,AAACD,CAAAA,GAAG,CAACG,EAAJ,GAASJ,KAAK,CAACI,EAAhB,AAAe,IAAOF;QAI1D,OAAOC;IACV;IAED;;;;;;;KAOA,GACA,SAASG,YAAYH,IAArB,EAA2BH,KAA3B,EAAkCO,CAAlC,EAAqCC,GAArC;QACI,IAAIC,QAAQ,CAAA;QAEZ,IAAK,IAAIL,KAAKJ,MACV,IAAIA,MAAMK,cAAN,CAAqBD,IAAI;YACzBK,KAAK,CAACL,EAAN,GAAWD,IAAI,CAACC,EAAL,GAAUG,IAAIP,KAAK,CAACI,EAA/B;YACAK,KAAK,CAACL,EAAN,GAAWK,KAAK,CAACL,EAAN,GAAW,IAAIK,KAAK,CAACL,EAAN,GAAWI,GAAG,CAACJ,EAA9B,GAAoCI,GAAG,CAACJ,EAAJ,KAAW,IAAIK,KAAK,CAACL,EAAN,GAAWI,GAAG,CAACJ,EAA9B,GAAmCK,KAAK,CAACL,EAAxF;QACH;QAGL,OAAOK;IACV;IAED;;;;;;KAMA,GACA,SAASC,eAAeC,KAAxB,EAA+BC,KAA/B,EAAsCV,KAAtC;QACI,IAAMF,QAAQW,MAAMF,KAAN,CAAYI,KAAZ;QACd,IAAMZ,MAAMW,MAAMH,KAAN,CAAYI,KAAZ;QACZ,IAAMV,OAAOJ,QAAQC,OAAOC,KAAKC;QACjC,IAAIY,WAAW;YAACH,MAAMF,KAAP;SAAf;QAEA,IAAK,IAAIF,IAAI,GAAGA,IAAIL,OAAOK,IAAK;YAC5B,IAAME,QAAQH,YAAYH,MAAMH,OAAOO,GAAGjB;YAC1CwB,SAASC,IAAT,CAAcC,mBAAAA,CAAAA,UAAS,CAACP;QAC3B;QAED,OAAOK;IACV;IAED;;;;;;;KAOA,GACA,SAASG,eAAeN,KAAxB,EAA+BC,KAA/B,EAAsCV,KAAtC,EAA6CgB,IAA7C;QACI,IAAMlB,QAAQW,MAAMF,KAAN,CAAYU,KAAZ;QACd,IAAMlB,MAAMW,MAAMH,KAAN,CAAYU,KAAZ,IAAZ,qDAAA;QAGA,IAAInB,MAAMH,CAAN,KAAY,KAAKI,IAAIJ,CAAJ,KAAU,GAC3B,OAAOa,eAAeC,OAAOC,OAAOV;QAGxC,IAAIkB;QACJ,IAAI,OAAOF,SAAS,WAChBE,gBAAgBF;aAEf;YACD,IAAMG,eAAgBrB,MAAMJ,CAAN,GAAUK,IAAIL,CAAd,IAAmBK,IAAIL,CAAJ,GAAQI,MAAMJ,CAAd,GAAkB,OAASI,MAAMJ,CAAN,GAAUK,IAAIL,CAAd,IAAmBI,MAAMJ,CAAN,GAAUK,IAAIL,CAAd,GAAkB;YACzGwB,gBAAiBF,SAAS,UAAUG,gBAAkBH,SAAS,WAAW,CAACG;QAC9E;QAED,IAAMlB,OAAOJ,QAAQC,OAAOC,KAAKC;QACjC,IAAIY,WAAW;YAACH,MAAMF,KAAP;SAAf,EAAA,gBAAA;QAGA,IAAIa;QACJ,IAAKtB,MAAMJ,CAAN,IAAWK,IAAIL,CAAf,IAAoB,CAACwB,iBAAmBpB,MAAMJ,CAAN,IAAWK,IAAIL,CAAf,IAAoBwB,eAC7DE,OAAOrB,IAAIL,CAAJ,GAAQI,MAAMJ,CAArB;aAEC,IAAIwB,eACLE,OAAO,MAAMrB,IAAIL,CAAV,GAAcI,MAAMJ,CAA3B;aAGA0B,OAAO,MAAMtB,MAAMJ,CAAZ,GAAgBK,IAAIL,CAA3B;QAEJO,KAAKP,CAAL,GAAS2B,KAAKC,GAAL,CAAS,IAAIJ,gBAAgB,IAAI,KAAKG,KAAKE,GAAL,CAASH,QAAQpB;QAEhE,IAAK,IAAIK,IAAI,GAAGA,IAAIL,OAAOK,IAAK;YAC5B,IAAME,QAAQH,YAAYH,MAAMH,OAAOO,GAAGZ;YAC1CmB,SAASC,IAAT,CAAcC,mBAAAA,CAAAA,UAAS,CAACP;QAC3B;QAED,OAAOK;IACV;IAED;;;;;KAKA,GACA,SAASY,gBAAgBC,KAAzB,EAAgCzB,KAAhC;QACI,IAAM0B,IAAID,MAAME,MAAhB,EAAA,aAAA;QAGA3B,QAAQ4B,SAAS5B,OAAO;QAExB,IAAI6B,MAAM7B,UAAUA,QAAQ,GACxB,MAAM,IAAI8B,MAAM;QAEpB,IAAI9B,QAAQ0B,GACR,MAAM,IAAII,MAAM;SACnB,uCAAA;QAGD,IAAIC,WAAW,EAAf;QAEA,IAAK,IAAI1B,IAAI,GAAGA,IAAIqB,GAAGrB,IAAK;YACxB,IAAMJ,OAAO,AAACD,CAAAA,QAAQ,CAAA,IAAMyB,CAAAA,KAAK,CAACpB,EAAN,CAAS2B,GAAT,GAAeP,KAAK,CAACpB,IAAI,EAAV,CAAa2B,GAA3C,AAA2CA;YACxDD,SAASlB,IAAT,CAAcQ,KAAKf,GAAL,CAAS,GAAGe,KAAKY,KAAL,CAAWhC;QACxC,EAAA,yBAAA;QAGD,IAAIiC,gBAAgB;QACpB,IAAK,IAAIC,IAAIT,IAAI,GAAGS,KAAMD,iBAAiBH,QAAQ,CAACI,EAA1B;QAE1B,MAAOD,kBAAkBlC,MACrB,IAAIkC,gBAAgBlC,OAAO;YACvB,IAAMoC,MAAMf,KAAKe,GAAL,CAASC,KAAT,CAAe,MAAMN;YACjCA,QAAQ,CAACA,SAASO,OAAT,CAAiBF,KAA1B;YACAF;QACH,OACI;YACD,IAAM5B,MAAMe,KAAKf,GAAL,CAAS+B,KAAT,CAAe,MAAMN;YACjCA,QAAQ,CAACA,SAASO,OAAT,CAAiBhC,KAA1B;YACA4B;QACH;QAGL,OAAOH;IACV;IAED;;;;;;;KAOA,GACA,SAASQ,UAAUd,KAAnB,EAA0BO,GAA1B,EAA+BQ,MAA/B,EAAuClC,GAAvC;QACI,IAAI0B,MAAM,KAAKA,MAAM,GACjB,MAAM,IAAIF,MAAM;QAGpB,IAAIhC,OAAOC;QACX,IAAK,IAAIM,IAAI,GAAGqB,IAAID,MAAME,MAA1B,EAAkCtB,IAAIqB,IAAI,GAAGrB,IACzC,IAAI2B,OAAOP,KAAK,CAACpB,EAAN,CAAS2B,GAAhB,IAAuBA,MAAMP,KAAK,CAACpB,IAAI,EAAV,CAAa2B,GAA9C,EAAmD;YAC/ClC,QAAQ2B,KAAK,CAACpB,EAAd;YACAN,MAAM0B,KAAK,CAACpB,IAAI,EAAhB;YACA;QACH;QAGL,IAAI,CAACP,OACDA,QAAQC,MAAM0B,KAAK,CAACA,MAAME,MAAN,GAAe,EAAnC;QAGJ,IAAM1B,OAAOJ,QAAQC,MAAMS,KAAN,CAAYiC,OAAZ,IAAuBzC,IAAIQ,KAAJ,CAAUiC,OAAV,IAAqB,AAACzC,CAAAA,IAAIiC,GAAJ,GAAUlC,MAAMkC,GAAjB,AAAiBA,IAAO;QACzF,IAAMzB,QAAQH,YAAYH,MAAMH,MAAMS,KAAN,CAAYiC,OAAZ,IAAuB,AAACR,CAAAA,MAAMlC,MAAMkC,GAAb,AAAaA,IAAO,KAAK1B;QAChF,OAAOQ,mBAAAA,CAAAA,UAAS,CAACP;IACpB;IAEKkC,IAAAA,eAAAA,WAAAA,GAAAA;Q;;;OAIN,GACI,SAAA,aAAYhB,KAAZ;Y,a;YAEI,IAAIA,MAAME,MAAN,GAAe,GACf,MAAM,IAAIG,MAAM;YAGpB,IAAMY,kBAAkBjB,KAAK,CAAC,EAAN,CAASO,GAAT,KAAiBW;YACzC,IAAIjB,IAAID,MAAME,MAAd;YACA,IAAIiB,IAAI;YACR,IAAIC,gBAAgB,OAApB,+CAAA;YAEA,IAAA,CAAKpB,KAAL,GAAaA,MAAMqB,GAAN,CAAU,SAACC,IAAD,EAAO1C,CAAP;gBACnB,IAAM2C,cAAcD,KAAKf,GAAL,KAAaW;gBACjC,IAAID,kBAAkBM,aAClB,MAAM,IAAIlB,MAAM;gBAGpB,IAAIkB,aAAa;oBACb,IAAMC,WAAWF,KAAKxC,KAAL,KAAeoC;oBAChC,IAAI,CAACM,YAAaJ,CAAAA,iBAAiBxC,MAAM,KAAKA,MAAMqB,IAAI,CAAA,GACpD,MAAM,IAAII,MAAM;oBAEpBe,gBAAgB,CAACI;oBAEjBF,OAAO;wBACHxC,OAAW0C,WAAWnC,mBAAAA,CAAAA,UAAS,CAACiC,KAAKxC,KAAN,IAAe;wBAC9C2C,WAAW,CAACD;wBACZjB,KAAWe,KAAKf,GAAhBA;oBAHG;oBAMP,IAAIe,KAAKf,GAAL,GAAW,KAAKe,KAAKf,GAAL,GAAW,GAC3B,MAAM,IAAIF,MAAM;yBAEf,IAAIiB,KAAKf,GAAL,GAAWY,GAChB,MAAM,IAAId,MAAM;oBAEpBc,IAAIG,KAAKf,GAAT;gBACH,OAEGe,OAAO;oBACHxC,OAAOO,mBAAAA,CAAAA,UAAS,CAACiC,KAAKxC,KAAL,KAAeoC,YAAYI,KAAKxC,KAAhC,GAAwCwC;oBACzDf,KAAO3B,IAAKqB,CAAAA,IAAI,CAAA;gBAFb;gBAMX,OAAOqB;YACV;YAED,IAAI,IAAA,CAAKtB,KAAL,CAAW,EAAX,CAAcO,GAAd,KAAsB,GAAG;gBACzB,IAAA,CAAKP,KAAL,CAAW0B,OAAX,CAAmB;oBACf5C,OAAO,IAAA,CAAKkB,KAAL,CAAW,EAAX,CAAclB,KADN;oBAEfyB,KAAO;gBAFQ;gBAInBN;YACH;YACD,IAAI,IAAA,CAAKD,KAAL,CAAWC,IAAI,EAAf,CAAkBM,GAAlB,KAA0B,GAC1B,IAAA,CAAKP,KAAL,CAAWZ,IAAX,CAAgB;gBACZN,OAAO,IAAA,CAAKkB,KAAL,CAAWC,IAAI,EAAf,CAAkBnB,KADb;gBAEZyB,KAAO;YAFK;QAKvB;Q;;;OAKL,G,I,S,a,S;QACIoB,OAAAA,OAAAA,GAAA,SAAA;YACI,IAAI3B,QAAQ,EAAZ;YAEA,IAAA,CAAKA,KAAL,CAAW4B,OAAX,CAAmB,SAAUN,IAAV;gBACftB,MAAMZ,IAAN,CAAW;oBACPN,OAAOwC,KAAKxC,KADL;oBAEPyB,KAAO,IAAIe,KAAKf,GAAhBA;gBAFO;YAId;YAED,OAAO,IAAIS,aAAahB,MAAM2B,OAAN;QAC3B,E;;;OAKL;QACIE,OAAAA,IAAAA,GAAA,SAAA;YACI,IAAIC,SAAS,EAAb;YACA,IAAIC,SAAS,EAAb;YAEA,IAAA,CAAK/B,KAAL,CAAW4B,OAAX,CAAmB,SAACN,IAAD;gBACfQ,OAAO1C,IAAP,CAAY;oBACRN,OAAOwC,KAAKxC,KADJ;oBAERyB,KAAOe,KAAKf,GAAL,GAAW;gBAFV;YAIf;YAED,IAAA,CAAKP,KAAL,CAAWgC,KAAX,CAAiB,GAAG,IAAIJ,OAAxB,CAAgC,SAACN,IAAD;gBAC5BS,OAAO3C,IAAP,CAAY;oBACRN,OAAOwC,KAAKxC,KADJ;oBAERyB,KAAO,IAAIe,KAAKf,GAAL,GAAW;gBAFd;YAIf;YAED,OAAO,IAAIS,aAAac,OAAOG,MAAP,CAAcF,OAAOJ,OAAP;QACzC,E;;;;OAML;QACIO,OAAAA,GAAAA,GAAA,SAAA,IAAI3D,KAAJ;YAAW,IAAA,QAAA,IAAA;YACP,IAAM+B,WAAWP,gBAAgB,IAAA,CAAKC,KAAN,EAAazB;YAC7C,IAAIY,WAAW,EAAf;YAEA,IAAA,CAAKa,KAAL,CAAW4B,OAAX,CAAmB,SAACN,IAAD,EAAO1C,CAAP;gBACf,IAAI0C,KAAKG,SAAT,EACIH,KAAKxC,KAAL,GAAaC,eAAe,MAAKiB,KAAL,CAAWpB,IAAI,EAAhB,EAAoB,MAAKoB,KAAL,CAAWpB,IAAI,EAAnC,EAAuC,EAArD,CAAwD,EAArE;YAEP;YAED,IAAK,IAAIA,IAAI,GAAGqB,IAAI,IAAA,CAAKD,KAAL,CAAWE,MAA/B,EAAuCtB,IAAIqB,IAAI,GAAGrB,IAAK;gBACnD,IAAMsD,MAAMnD,eAAe,IAAA,CAAKiB,KAAL,CAAWpB,EAAZ,EAAgB,IAAA,CAAKoB,KAAL,CAAWpB,IAAI,EAA/B,EAAmC0B,QAAQ,CAAC1B,EAA5C;gBAC1BO,SAASgD,MAAT,CAAA,KAAA,CAAAhD,UAAQ;oBAAQA,SAASe,MAAjB;oBAAyB;iBAAzB,CAAA,MAAA,CAA+BgC;YAC1C;YAED/C,SAASC,IAAT,CAAc,IAAA,CAAKY,KAAL,CAAW,IAAA,CAAKA,KAAL,CAAWE,MAAX,GAAoB,EAA/B,CAAkCpB,KAAhD;YAEA,OAAOK;QACV,E;;;;;;;;;OAWL;QACIiD,OAAAA,GAAAA,GAAA,SAAA,IAAI7D,KAAJ,EAAWgB,IAAX;YAAiB,IAAA,SAAA,IAAA;YACb,IAAMe,WAAWP,gBAAgB,IAAA,CAAKC,KAAN,EAAazB;YAC7C,IAAIY,WAAW,EAAf;YAEA,IAAA,CAAKa,KAAL,CAAW4B,OAAX,CAAmB,SAACN,IAAD,EAAO1C,CAAP;gBACf,IAAI0C,KAAKG,SAAT,EACIH,KAAKxC,KAAL,GAAaQ,eAAe,OAAKU,KAAL,CAAWpB,IAAI,EAAhB,EAAoB,OAAKoB,KAAL,CAAWpB,IAAI,EAAnC,EAAuC,GAAGW,KAAxD,CAA8D,EAA3E;YAEP;YAED,IAAK,IAAIX,IAAI,GAAGqB,IAAI,IAAA,CAAKD,KAAL,CAAWE,MAA/B,EAAuCtB,IAAIqB,IAAI,GAAGrB,IAAK;gBACnD,IAAMwD,MAAM9C,eAAe,IAAA,CAAKU,KAAL,CAAWpB,EAAZ,EAAgB,IAAA,CAAKoB,KAAL,CAAWpB,IAAI,EAA/B,EAAmC0B,QAAQ,CAAC1B,EAA5C,EAAgDW;gBAC1EJ,SAASgD,MAAT,CAAA,KAAA,CAAAhD,UAAQ;oBAAQA,SAASe,MAAjB;oBAAyB;iBAAzB,CAAA,MAAA,CAA+BkC;YAC1C;YAEDjD,SAASC,IAAT,CAAc,IAAA,CAAKY,KAAL,CAAW,IAAA,CAAKA,KAAL,CAAWE,MAAX,GAAoB,EAA/B,CAAkCpB,KAAhD;YAEA,OAAOK;QACV,E;;;;;OAOL;QACIkD,OAAAA,GAAAA,GAAA,SAAA,IAAI9C,IAAJ,EAAU+C,SAAV;YACI/C,OAAOA,QAAQ;YACf+C,YAAYA,aAAc/C,CAAAA,SAAS,WAAW,aAAa,mBAAA;YAE3D,IAAI8C,MAAM9C,OAAO,eAAe+C;YAChC,IAAA,CAAKtC,KAAL,CAAW4B,OAAX,CAAmB,SAAUN,IAAV;gBACfe,OAAO,OAAQf,CAAAA,KAAKG,SAAL,GAAiB,KAAKH,KAAKxC,KAAL,CAAWyD,WAAX,KAA2B,GAAA,IAAQjB,KAAKf,GAAL,GAAW,MAAO;YAC7F;YACD8B,OAAO;YACP,OAAOA;QACV,E;;;;OAML;QACIG,OAAAA,KAAAA,GAAA,SAAA,MAAMjC,GAAN;YACI,OAAOO,UAAU,IAAA,CAAKd,KAAN,EAAaO,KAAK,SAAS5C;QAC9C,E;;;;OAML;QACI8E,OAAAA,KAAAA,GAAA,SAAA,MAAMlC,GAAN;YACI,OAAOO,UAAU,IAAA,CAAKd,KAAN,EAAaO,KAAK,SAASvC;QAC9C;Q,O;I;IAGL;;;KAGA,GACc,IAAA,eAAG,SAAA,aAAUgC,KAAV;Q,U;QAEb,IAAI0C,UAAUxC,MAAV,KAAqB,GAAG;YACxB,IAAI,CAACyC,MAAMC,OAAN,CAAcF,SAAS,CAAC,EAAxB,GACD,MAAM,IAAIrC,MAAM;YAEpBL,QAAQ0C,SAAS,CAAC,EAAlB;QACH,OAEG1C,QAAQ2C,MAAME,SAAN,CAAgBb,KAAhB,CAAsBc,IAAtB,CAA2BJ;QAGvC,OAAO,IAAI1B,aAAahB;IAC3B;I,O;A;;;ACrbD,+DAA+D;AAC9D,CAAA,SAAU,MAAM,EAAE,OAAO;IACuC,OAAO,OAAO,GAAG;AAGlF,CAAA,EAAG,IAAI,EAAG;IAAc;IAEtB,SAAS,QAAQ,GAAG;QAClB;QAEA,OAAO,UAAU,cAAc,OAAO,UAAU,YAAY,OAAO,OAAO,QAAQ,GAAG,SAAU,GAAG;YAChG,OAAO,OAAO;QAChB,IAAI,SAAU,GAAG;YACf,OAAO,OAAO,cAAc,OAAO,UAAU,IAAI,WAAW,KAAK,UAAU,QAAQ,OAAO,SAAS,GAAG,WAAW,OAAO;QAC1H,GAAG,QAAQ;IACb;IAEA,sCAAsC;IACtC,+BAA+B;IAE/B,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,SAAS,UAAU,KAAK,EAAE,IAAI;QAC5B,QAAQ,QAAQ,QAAQ;QACxB,OAAO,QAAQ,CAAC;QAEhB,iDAAiD;QACjD,IAAI,iBAAiB,WACnB,OAAO;QAET,yDAAyD;QACzD,IAAI,CAAE,CAAA,IAAI,YAAY,SAAQ,GAC5B,OAAO,IAAI,UAAU,OAAO;QAE9B,IAAI,MAAM,WAAW;QACrB,IAAI,CAAC,cAAc,GAAG,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,GAAG,KAAK,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE,IAAI,KAAK,IAAI,CAAC,OAAO,GAAG,KAAK,MAAM,IAAI,IAAI,MAAM;QACzL,IAAI,CAAC,aAAa,GAAG,KAAK,YAAY;QAEtC,qDAAqD;QACrD,6EAA6E;QAC7E,iEAAiE;QACjE,+EAA+E;QAC/E,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE;QAC7C,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE;QAC7C,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE;QAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE;IACnB;IACA,UAAU,SAAS,GAAG;QACpB,QAAQ,SAAS;YACf,OAAO,IAAI,CAAC,aAAa,KAAK;QAChC;QACA,SAAS,SAAS;YAChB,OAAO,CAAC,IAAI,CAAC,MAAM;QACrB;QACA,SAAS,SAAS;YAChB,OAAO,IAAI,CAAC,GAAG;QACjB;QACA,kBAAkB,SAAS;YACzB,OAAO,IAAI,CAAC,cAAc;QAC5B;QACA,WAAW,SAAS;YAClB,OAAO,IAAI,CAAC,OAAO;QACrB;QACA,UAAU,SAAS;YACjB,OAAO,IAAI,CAAC,EAAE;QAChB;QACA,eAAe,SAAS;YACtB,0CAA0C;YAC1C,IAAI,MAAM,IAAI,CAAC,KAAK;YACpB,OAAO,AAAC,CAAA,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,GAAE,IAAK;QACrD;QACA,cAAc,SAAS;YACrB,qEAAqE;YACrE,IAAI,MAAM,IAAI,CAAC,KAAK;YACpB,IAAI,OAAO,OAAO,OAAO,GAAG,GAAG;YAC/B,QAAQ,IAAI,CAAC,GAAG;YAChB,QAAQ,IAAI,CAAC,GAAG;YAChB,QAAQ,IAAI,CAAC,GAAG;YAChB,IAAI,SAAS,SAAS,IAAI,QAAQ;iBAAW,IAAI,KAAK,GAAG,CAAC,AAAC,CAAA,QAAQ,KAAI,IAAK,OAAO;YACnF,IAAI,SAAS,SAAS,IAAI,QAAQ;iBAAW,IAAI,KAAK,GAAG,CAAC,AAAC,CAAA,QAAQ,KAAI,IAAK,OAAO;YACnF,IAAI,SAAS,SAAS,IAAI,QAAQ;iBAAW,IAAI,KAAK,GAAG,CAAC,AAAC,CAAA,QAAQ,KAAI,IAAK,OAAO;YACnF,OAAO,SAAS,IAAI,SAAS,IAAI,SAAS;QAC5C;QACA,UAAU,SAAS,SAAS,KAAK;YAC/B,IAAI,CAAC,EAAE,GAAG,WAAW;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE,IAAI;YAC3C,OAAO,IAAI;QACb;QACA,OAAO,SAAS;YACd,IAAI,MAAM,SAAS,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;YAC5C,OAAO;gBACL,GAAG,IAAI,CAAC,GAAG;gBACX,GAAG,IAAI,CAAC;gBACR,GAAG,IAAI,CAAC;gBACR,GAAG,IAAI,CAAC,EAAE;YACZ;QACF;QACA,aAAa,SAAS;YACpB,IAAI,MAAM,SAAS,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;YAC5C,IAAI,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,MACzB,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,MACvB,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG;YACzB,OAAO,IAAI,CAAC,EAAE,IAAI,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,OAAO,UAAU,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,CAAC,OAAO,GAAG;QAC/H;QACA,OAAO,SAAS;YACd,IAAI,MAAM,SAAS,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;YAC5C,OAAO;gBACL,GAAG,IAAI,CAAC,GAAG;gBACX,GAAG,IAAI,CAAC;gBACR,GAAG,IAAI,CAAC;gBACR,GAAG,IAAI,CAAC,EAAE;YACZ;QACF;QACA,aAAa,SAAS;YACpB,IAAI,MAAM,SAAS,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;YAC5C,IAAI,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,MACzB,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,MACvB,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG;YACzB,OAAO,IAAI,CAAC,EAAE,IAAI,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,OAAO,UAAU,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,CAAC,OAAO,GAAG;QAC/H;QACA,OAAO,SAAS,MAAM,UAAU;YAC9B,OAAO,SAAS,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;QAC7C;QACA,aAAa,SAAS,YAAY,UAAU;YAC1C,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC;QAC1B;QACA,QAAQ,SAAS,OAAO,UAAU;YAChC,OAAO,UAAU,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;QACvD;QACA,cAAc,SAAS,aAAa,UAAU;YAC5C,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC;QAC3B;QACA,OAAO,SAAS;YACd,OAAO;gBACL,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE;gBACrB,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE;gBACrB,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE;gBACrB,GAAG,IAAI,CAAC,EAAE;YACZ;QACF;QACA,aAAa,SAAS;YACpB,OAAO,IAAI,CAAC,EAAE,IAAI,IAAI,SAAS,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,UAAU,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,OAAO,IAAI,CAAC,OAAO,GAAG;QACvO;QACA,iBAAiB,SAAS;YACxB,OAAO;gBACL,GAAG,KAAK,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,OAAO;gBAC7C,GAAG,KAAK,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,OAAO;gBAC7C,GAAG,KAAK,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,OAAO;gBAC7C,GAAG,IAAI,CAAC,EAAE;YACZ;QACF;QACA,uBAAuB,SAAS;YAC9B,OAAO,IAAI,CAAC,EAAE,IAAI,IAAI,SAAS,KAAK,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,OAAO,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,OAAO,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,OAAO,OAAO,UAAU,KAAK,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,OAAO,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,OAAO,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,OAAO,QAAQ,IAAI,CAAC,OAAO,GAAG;QACrW;QACA,QAAQ,SAAS;YACf,IAAI,IAAI,CAAC,EAAE,KAAK,GACd,OAAO;YAET,IAAI,IAAI,CAAC,EAAE,GAAG,GACZ,OAAO;YAET,OAAO,QAAQ,CAAC,SAAS,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,IAAI;QAChE;QACA,UAAU,SAAS,SAAS,WAAW;YACrC,IAAI,aAAa,MAAM,cAAc,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;YACvE,IAAI,mBAAmB;YACvB,IAAI,eAAe,IAAI,CAAC,aAAa,GAAG,uBAAuB;YAC/D,IAAI,aAAa;gBACf,IAAI,IAAI,UAAU;gBAClB,mBAAmB,MAAM,cAAc,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC/D;YACA,OAAO,gDAAgD,eAAe,mBAAmB,aAAa,kBAAkB,mBAAmB;QAC7I;QACA,UAAU,SAAS,SAAS,MAAM;YAChC,IAAI,YAAY,CAAC,CAAC;YAClB,SAAS,UAAU,IAAI,CAAC,OAAO;YAC/B,IAAI,kBAAkB;YACtB,IAAI,WAAW,IAAI,CAAC,EAAE,GAAG,KAAK,IAAI,CAAC,EAAE,IAAI;YACzC,IAAI,mBAAmB,CAAC,aAAa,YAAa,CAAA,WAAW,SAAS,WAAW,UAAU,WAAW,UAAU,WAAW,UAAU,WAAW,UAAU,WAAW,MAAK;YAC1K,IAAI,kBAAkB;gBACpB,8DAA8D;gBAC9D,+CAA+C;gBAC/C,IAAI,WAAW,UAAU,IAAI,CAAC,EAAE,KAAK,GACnC,OAAO,IAAI,CAAC,MAAM;gBAEpB,OAAO,IAAI,CAAC,WAAW;YACzB;YACA,IAAI,WAAW,OACb,kBAAkB,IAAI,CAAC,WAAW;YAEpC,IAAI,WAAW,QACb,kBAAkB,IAAI,CAAC,qBAAqB;YAE9C,IAAI,WAAW,SAAS,WAAW,QACjC,kBAAkB,IAAI,CAAC,WAAW;YAEpC,IAAI,WAAW,QACb,kBAAkB,IAAI,CAAC,WAAW,CAAC;YAErC,IAAI,WAAW,QACb,kBAAkB,IAAI,CAAC,YAAY,CAAC;YAEtC,IAAI,WAAW,QACb,kBAAkB,IAAI,CAAC,YAAY;YAErC,IAAI,WAAW,QACb,kBAAkB,IAAI,CAAC,MAAM;YAE/B,IAAI,WAAW,OACb,kBAAkB,IAAI,CAAC,WAAW;YAEpC,IAAI,WAAW,OACb,kBAAkB,IAAI,CAAC,WAAW;YAEpC,OAAO,mBAAmB,IAAI,CAAC,WAAW;QAC5C;QACA,OAAO,SAAS;YACd,OAAO,UAAU,IAAI,CAAC,QAAQ;QAChC;QACA,oBAAoB,SAAS,mBAAmB,EAAE,EAAE,IAAI;YACtD,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM;gBAAC,IAAI;aAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;YACvD,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;YAClB,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;YAClB,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACtB,OAAO,IAAI;QACb;QACA,SAAS,SAAS;YAChB,OAAO,IAAI,CAAC,kBAAkB,CAAC,UAAU;QAC3C;QACA,UAAU,SAAS;YACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC,WAAW;QAC5C;QACA,QAAQ,SAAS;YACf,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS;QAC1C;QACA,YAAY,SAAS;YACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC,aAAa;QAC9C;QACA,UAAU,SAAS;YACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC,WAAW;QAC5C;QACA,WAAW,SAAS;YAClB,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY;QAC7C;QACA,MAAM,SAAS;YACb,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO;QACxC;QACA,mBAAmB,SAAS,kBAAkB,EAAE,EAAE,IAAI;YACpD,OAAO,GAAG,KAAK,CAAC,MAAM;gBAAC,IAAI;aAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;QACpD;QACA,WAAW,SAAS;YAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY;QAC5C;QACA,YAAY,SAAS;YACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa;QAC7C;QACA,eAAe,SAAS;YACtB,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB;QAChD;QACA,iBAAiB,SAAS;YACxB,OAAO,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;QAClD;QACA,gEAAgE;QAChE,8BAA8B;QAC9B,qDAAqD;QACrD,KAAK;QACL,OAAO,SAAS;YACd,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ;gBAAC;aAAE;QAC3C;QACA,QAAQ,SAAS;YACf,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ;gBAAC;aAAE;QAC3C;IACF;IAEA,sEAAsE;IACtE,kEAAkE;IAClE,UAAU,SAAS,GAAG,SAAU,KAAK,EAAE,IAAI;QACzC,IAAI,QAAQ,UAAU,UAAU;YAC9B,IAAI,WAAW,CAAC;YAChB,IAAK,IAAI,KAAK,MACZ,IAAI,MAAM,cAAc,CAAC;gBACvB,IAAI,MAAM,KACR,QAAQ,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE;qBAEtB,QAAQ,CAAC,EAAE,GAAG,oBAAoB,KAAK,CAAC,EAAE;;YAIhD,QAAQ;QACV;QACA,OAAO,UAAU,OAAO;IAC1B;IAEA,sDAAsD;IACtD,0BAA0B;IAC1B,EAAE;IACF,YAAY;IACZ,sBAAsB;IACtB,4BAA4B;IAC5B,gCAAgC;IAChC,yCAAyC;IACzC,uCAAuC;IACvC,mDAAmD;IACnD,mDAAmD;IACnD,8CAA8C;IAC9C,sDAAsD;IACtD,gDAAgD;IAChD,EAAE;IACF,SAAS,WAAW,KAAK;QACvB,IAAI,MAAM;YACR,GAAG;YACH,GAAG;YACH,GAAG;QACL;QACA,IAAI,IAAI;QACR,IAAI,IAAI;QACR,IAAI,IAAI;QACR,IAAI,IAAI;QACR,IAAI,KAAK;QACT,IAAI,SAAS;QACb,IAAI,OAAO,SAAS,UAClB,QAAQ,oBAAoB;QAE9B,IAAI,QAAQ,UAAU,UAAU;YAC9B,IAAI,eAAe,MAAM,CAAC,KAAK,eAAe,MAAM,CAAC,KAAK,eAAe,MAAM,CAAC,GAAG;gBACjF,MAAM,SAAS,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;gBACxC,KAAK;gBACL,SAAS,OAAO,MAAM,CAAC,EAAE,MAAM,CAAC,QAAQ,MAAM,SAAS;YACzD,OAAO,IAAI,eAAe,MAAM,CAAC,KAAK,eAAe,MAAM,CAAC,KAAK,eAAe,MAAM,CAAC,GAAG;gBACxF,IAAI,oBAAoB,MAAM,CAAC;gBAC/B,IAAI,oBAAoB,MAAM,CAAC;gBAC/B,MAAM,SAAS,MAAM,CAAC,EAAE,GAAG;gBAC3B,KAAK;gBACL,SAAS;YACX,OAAO,IAAI,eAAe,MAAM,CAAC,KAAK,eAAe,MAAM,CAAC,KAAK,eAAe,MAAM,CAAC,GAAG;gBACxF,IAAI,oBAAoB,MAAM,CAAC;gBAC/B,IAAI,oBAAoB,MAAM,CAAC;gBAC/B,MAAM,SAAS,MAAM,CAAC,EAAE,GAAG;gBAC3B,KAAK;gBACL,SAAS;YACX;YACA,IAAI,MAAM,cAAc,CAAC,MACvB,IAAI,MAAM,CAAC;QAEf;QACA,IAAI,WAAW;QACf,OAAO;YACL,IAAI;YACJ,QAAQ,MAAM,MAAM,IAAI;YACxB,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE;YACjC,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE;YACjC,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE;YACjC,GAAG;QACL;IACF;IAEA,uBAAuB;IACvB,uBAAuB;IAEvB,gEAAgE;IAChE,4GAA4G;IAE5G,aAAa;IACb,mEAAmE;IACnE,qCAAqC;IACrC,2CAA2C;IAC3C,qCAAqC;IACrC,SAAS,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC;QACvB,OAAO;YACL,GAAG,QAAQ,GAAG,OAAO;YACrB,GAAG,QAAQ,GAAG,OAAO;YACrB,GAAG,QAAQ,GAAG,OAAO;QACvB;IACF;IAEA,aAAa;IACb,sCAAsC;IACtC,6DAA6D;IAC7D,kCAAkC;IAClC,SAAS,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC;QACvB,IAAI,QAAQ,GAAG;QACf,IAAI,QAAQ,GAAG;QACf,IAAI,QAAQ,GAAG;QACf,IAAI,MAAM,KAAK,GAAG,CAAC,GAAG,GAAG,IACvB,MAAM,KAAK,GAAG,CAAC,GAAG,GAAG;QACvB,IAAI,GACF,GACA,IAAI,AAAC,CAAA,MAAM,GAAE,IAAK;QACpB,IAAI,OAAO,KACT,IAAI,IAAI,GAAG,aAAa;aACnB;YACL,IAAI,IAAI,MAAM;YACd,IAAI,IAAI,MAAM,IAAK,CAAA,IAAI,MAAM,GAAE,IAAK,IAAK,CAAA,MAAM,GAAE;YACjD,OAAQ;gBACN,KAAK;oBACH,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,IAAK,CAAA,IAAI,IAAI,IAAI,CAAA;oBAC/B;gBACF,KAAK;oBACH,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,IAAI;oBAClB;gBACF,KAAK;oBACH,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,IAAI;oBAClB;YACJ;YACA,KAAK;QACP;QACA,OAAO;YACL,GAAG;YACH,GAAG;YACH,GAAG;QACL;IACF;IAEA,aAAa;IACb,sCAAsC;IACtC,+FAA+F;IAC/F,6CAA6C;IAC7C,SAAS,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC;QACvB,IAAI,GAAG,GAAG;QACV,IAAI,QAAQ,GAAG;QACf,IAAI,QAAQ,GAAG;QACf,IAAI,QAAQ,GAAG;QACf,SAAS,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;YACtB,IAAI,IAAI,GAAG,KAAK;YAChB,IAAI,IAAI,GAAG,KAAK;YAChB,IAAI,IAAI,IAAI,GAAG,OAAO,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,IAAI;YACxC,IAAI,IAAI,KAAO,OAAO;YACtB,IAAI,IAAI,IAAI,GAAG,OAAO,IAAI,AAAC,CAAA,IAAI,CAAA,IAAM,CAAA,IAAI,IAAI,CAAA,IAAK;YAClD,OAAO;QACT;QACA,IAAI,MAAM,GACR,IAAI,IAAI,IAAI,GAAG,aAAa;aACvB;YACL,IAAI,IAAI,IAAI,MAAM,IAAK,CAAA,IAAI,CAAA,IAAK,IAAI,IAAI,IAAI;YAC5C,IAAI,IAAI,IAAI,IAAI;YAChB,IAAI,QAAQ,GAAG,GAAG,IAAI,IAAI;YAC1B,IAAI,QAAQ,GAAG,GAAG;YAClB,IAAI,QAAQ,GAAG,GAAG,IAAI,IAAI;QAC5B;QACA,OAAO;YACL,GAAG,IAAI;YACP,GAAG,IAAI;YACP,GAAG,IAAI;QACT;IACF;IAEA,aAAa;IACb,qCAAqC;IACrC,qEAAqE;IACrE,kCAAkC;IAClC,SAAS,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC;QACvB,IAAI,QAAQ,GAAG;QACf,IAAI,QAAQ,GAAG;QACf,IAAI,QAAQ,GAAG;QACf,IAAI,MAAM,KAAK,GAAG,CAAC,GAAG,GAAG,IACvB,MAAM,KAAK,GAAG,CAAC,GAAG,GAAG;QACvB,IAAI,GACF,GACA,IAAI;QACN,IAAI,IAAI,MAAM;QACd,IAAI,QAAQ,IAAI,IAAI,IAAI;QACxB,IAAI,OAAO,KACT,IAAI,GAAG,aAAa;aACf;YACL,OAAQ;gBACN,KAAK;oBACH,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,IAAK,CAAA,IAAI,IAAI,IAAI,CAAA;oBAC/B;gBACF,KAAK;oBACH,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,IAAI;oBAClB;gBACF,KAAK;oBACH,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,IAAI;oBAClB;YACJ;YACA,KAAK;QACP;QACA,OAAO;YACL,GAAG;YACH,GAAG;YACH,GAAG;QACL;IACF;IAEA,aAAa;IACb,sCAAsC;IACtC,kGAAkG;IAClG,6CAA6C;IAC7C,SAAS,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC;QACvB,IAAI,QAAQ,GAAG,OAAO;QACtB,IAAI,QAAQ,GAAG;QACf,IAAI,QAAQ,GAAG;QACf,IAAI,IAAI,KAAK,KAAK,CAAC,IACjB,IAAI,IAAI,GACR,IAAI,IAAK,CAAA,IAAI,CAAA,GACb,IAAI,IAAK,CAAA,IAAI,IAAI,CAAA,GACjB,IAAI,IAAK,CAAA,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,CAAA,GACvB,MAAM,IAAI,GACV,IAAI;YAAC;YAAG;YAAG;YAAG;YAAG;YAAG;SAAE,CAAC,IAAI,EAC3B,IAAI;YAAC;YAAG;YAAG;YAAG;YAAG;YAAG;SAAE,CAAC,IAAI,EAC3B,IAAI;YAAC;YAAG;YAAG;YAAG;YAAG;YAAG;SAAE,CAAC,IAAI;QAC7B,OAAO;YACL,GAAG,IAAI;YACP,GAAG,IAAI;YACP,GAAG,IAAI;QACT;IACF;IAEA,aAAa;IACb,+BAA+B;IAC/B,wDAAwD;IACxD,iCAAiC;IACjC,SAAS,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU;QACnC,IAAI,MAAM;YAAC,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,CAAC;YAAM,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,CAAC;YAAM,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,CAAC;SAAK;QAEhH,uCAAuC;QACvC,IAAI,cAAc,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,IAClI,OAAO,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC;QAE7D,OAAO,IAAI,IAAI,CAAC;IAClB;IAEA,cAAc;IACd,wDAAwD;IACxD,wDAAwD;IACxD,mDAAmD;IACnD,SAAS,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU;QACvC,IAAI,MAAM;YAAC,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,CAAC;YAAM,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,CAAC;YAAM,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,CAAC;YAAM,KAAK,oBAAoB;SAAI;QAE9I,uCAAuC;QACvC,IAAI,cAAc,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,IAC1K,OAAO,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC;QAEhF,OAAO,IAAI,IAAI,CAAC;IAClB;IAEA,kBAAkB;IAClB,gDAAgD;IAChD,6CAA6C;IAC7C,SAAS,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAC/B,IAAI,MAAM;YAAC,KAAK,oBAAoB;YAAK,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,CAAC;YAAM,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,CAAC;YAAM,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,CAAC;SAAK;QAC9I,OAAO,IAAI,IAAI,CAAC;IAClB;IAEA,WAAW;IACX,yCAAyC;IACzC,UAAU,MAAM,GAAG,SAAU,MAAM,EAAE,MAAM;QACzC,IAAI,CAAC,UAAU,CAAC,QAAQ,OAAO;QAC/B,OAAO,UAAU,QAAQ,WAAW,MAAM,UAAU,QAAQ,WAAW;IACzE;IACA,UAAU,MAAM,GAAG;QACjB,OAAO,UAAU,SAAS,CAAC;YACzB,GAAG,KAAK,MAAM;YACd,GAAG,KAAK,MAAM;YACd,GAAG,KAAK,MAAM;QAChB;IACF;IAEA,yBAAyB;IACzB,yBAAyB;IACzB,gDAAgD;IAChD,2EAA2E;IAE3E,SAAS,YAAY,KAAK,EAAE,MAAM;QAChC,SAAS,WAAW,IAAI,IAAI,UAAU;QACtC,IAAI,MAAM,UAAU,OAAO,KAAK;QAChC,IAAI,CAAC,IAAI,SAAS;QAClB,IAAI,CAAC,GAAG,QAAQ,IAAI,CAAC;QACrB,OAAO,UAAU;IACnB;IACA,SAAS,UAAU,KAAK,EAAE,MAAM;QAC9B,SAAS,WAAW,IAAI,IAAI,UAAU;QACtC,IAAI,MAAM,UAAU,OAAO,KAAK;QAChC,IAAI,CAAC,IAAI,SAAS;QAClB,IAAI,CAAC,GAAG,QAAQ,IAAI,CAAC;QACrB,OAAO,UAAU;IACnB;IACA,SAAS,WAAW,KAAK;QACvB,OAAO,UAAU,OAAO,UAAU,CAAC;IACrC;IACA,SAAS,SAAS,KAAK,EAAE,MAAM;QAC7B,SAAS,WAAW,IAAI,IAAI,UAAU;QACtC,IAAI,MAAM,UAAU,OAAO,KAAK;QAChC,IAAI,CAAC,IAAI,SAAS;QAClB,IAAI,CAAC,GAAG,QAAQ,IAAI,CAAC;QACrB,OAAO,UAAU;IACnB;IACA,SAAS,UAAU,KAAK,EAAE,MAAM;QAC9B,SAAS,WAAW,IAAI,IAAI,UAAU;QACtC,IAAI,MAAM,UAAU,OAAO,KAAK;QAChC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,MAAM,CAAE,CAAA,SAAS,GAAE;QACxE,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,MAAM,CAAE,CAAA,SAAS,GAAE;QACxE,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,MAAM,CAAE,CAAA,SAAS,GAAE;QACxE,OAAO,UAAU;IACnB;IACA,SAAS,QAAQ,KAAK,EAAE,MAAM;QAC5B,SAAS,WAAW,IAAI,IAAI,UAAU;QACtC,IAAI,MAAM,UAAU,OAAO,KAAK;QAChC,IAAI,CAAC,IAAI,SAAS;QAClB,IAAI,CAAC,GAAG,QAAQ,IAAI,CAAC;QACrB,OAAO,UAAU;IACnB;IAEA,4FAA4F;IAC5F,gEAAgE;IAChE,SAAS,MAAM,KAAK,EAAE,MAAM;QAC1B,IAAI,MAAM,UAAU,OAAO,KAAK;QAChC,IAAI,MAAM,AAAC,CAAA,IAAI,CAAC,GAAG,MAAK,IAAK;QAC7B,IAAI,CAAC,GAAG,MAAM,IAAI,MAAM,MAAM;QAC9B,OAAO,UAAU;IACnB;IAEA,wBAAwB;IACxB,wBAAwB;IACxB,6DAA6D;IAC7D,2EAA2E;IAE3E,SAAS,YAAY,KAAK;QACxB,IAAI,MAAM,UAAU,OAAO,KAAK;QAChC,IAAI,CAAC,GAAG,AAAC,CAAA,IAAI,CAAC,GAAG,GAAE,IAAK;QACxB,OAAO,UAAU;IACnB;IACA,SAAS,OAAO,KAAK,EAAE,MAAM;QAC3B,IAAI,MAAM,WAAW,UAAU,GAC7B,MAAM,IAAI,MAAM;QAElB,IAAI,MAAM,UAAU,OAAO,KAAK;QAChC,IAAI,SAAS;YAAC,UAAU;SAAO;QAC/B,IAAI,OAAO,MAAM;QACjB,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAC1B,OAAO,IAAI,CAAC,UAAU;YACpB,GAAG,AAAC,CAAA,IAAI,CAAC,GAAG,IAAI,IAAG,IAAK;YACxB,GAAG,IAAI,CAAC;YACR,GAAG,IAAI,CAAC;QACV;QAEF,OAAO;IACT;IACA,SAAS,iBAAiB,KAAK;QAC7B,IAAI,MAAM,UAAU,OAAO,KAAK;QAChC,IAAI,IAAI,IAAI,CAAC;QACb,OAAO;YAAC,UAAU;YAAQ,UAAU;gBAClC,GAAG,AAAC,CAAA,IAAI,EAAC,IAAK;gBACd,GAAG,IAAI,CAAC;gBACR,GAAG,IAAI,CAAC;YACV;YAAI,UAAU;gBACZ,GAAG,AAAC,CAAA,IAAI,GAAE,IAAK;gBACf,GAAG,IAAI,CAAC;gBACR,GAAG,IAAI,CAAC;YACV;SAAG;IACL;IACA,SAAS,WAAW,KAAK,EAAE,OAAO,EAAE,MAAM;QACxC,UAAU,WAAW;QACrB,SAAS,UAAU;QACnB,IAAI,MAAM,UAAU,OAAO,KAAK;QAChC,IAAI,OAAO,MAAM;QACjB,IAAI,MAAM;YAAC,UAAU;SAAO;QAC5B,IAAK,IAAI,CAAC,GAAG,AAAC,CAAA,IAAI,CAAC,GAAI,CAAA,OAAO,WAAW,CAAA,IAAK,GAAE,IAAK,KAAK,EAAE,SAAU;YACpE,IAAI,CAAC,GAAG,AAAC,CAAA,IAAI,CAAC,GAAG,IAAG,IAAK;YACzB,IAAI,IAAI,CAAC,UAAU;QACrB;QACA,OAAO;IACT;IACA,SAAS,eAAe,KAAK,EAAE,OAAO;QACpC,UAAU,WAAW;QACrB,IAAI,MAAM,UAAU,OAAO,KAAK;QAChC,IAAI,IAAI,IAAI,CAAC,EACX,IAAI,IAAI,CAAC,EACT,IAAI,IAAI,CAAC;QACX,IAAI,MAAM,EAAE;QACZ,IAAI,eAAe,IAAI;QACvB,MAAO,UAAW;YAChB,IAAI,IAAI,CAAC,UAAU;gBACjB,GAAG;gBACH,GAAG;gBACH,GAAG;YACL;YACA,IAAI,AAAC,CAAA,IAAI,YAAW,IAAK;QAC3B;QACA,OAAO;IACT;IAEA,oBAAoB;IACpB,wBAAwB;IAExB,UAAU,GAAG,GAAG,SAAU,MAAM,EAAE,MAAM,EAAE,MAAM;QAC9C,SAAS,WAAW,IAAI,IAAI,UAAU;QACtC,IAAI,OAAO,UAAU,QAAQ,KAAK;QAClC,IAAI,OAAO,UAAU,QAAQ,KAAK;QAClC,IAAI,IAAI,SAAS;QACjB,IAAI,OAAO;YACT,GAAG,AAAC,CAAA,KAAK,CAAC,GAAG,KAAK,CAAC,AAAD,IAAK,IAAI,KAAK,CAAC;YACjC,GAAG,AAAC,CAAA,KAAK,CAAC,GAAG,KAAK,CAAC,AAAD,IAAK,IAAI,KAAK,CAAC;YACjC,GAAG,AAAC,CAAA,KAAK,CAAC,GAAG,KAAK,CAAC,AAAD,IAAK,IAAI,KAAK,CAAC;YACjC,GAAG,AAAC,CAAA,KAAK,CAAC,GAAG,KAAK,CAAC,AAAD,IAAK,IAAI,KAAK,CAAC;QACnC;QACA,OAAO,UAAU;IACnB;IAEA,wBAAwB;IACxB,wBAAwB;IACxB,qFAAqF;IAErF,aAAa;IACb,kFAAkF;IAClF,UAAU,WAAW,GAAG,SAAU,MAAM,EAAE,MAAM;QAC9C,IAAI,KAAK,UAAU;QACnB,IAAI,KAAK,UAAU;QACnB,OAAO,AAAC,CAAA,KAAK,GAAG,CAAC,GAAG,YAAY,IAAI,GAAG,YAAY,MAAM,IAAG,IAAM,CAAA,KAAK,GAAG,CAAC,GAAG,YAAY,IAAI,GAAG,YAAY,MAAM,IAAG;IACxH;IAEA,eAAe;IACf,kFAAkF;IAClF,4CAA4C;IAC5C,+FAA+F;IAC/F,sGAAsG;IACtG,oFAAoF;IAEpF,YAAY;IACZ,mDAAmD;IACnD,6EAA6E;IAC7E,UAAU,UAAU,GAAG,SAAU,MAAM,EAAE,MAAM,EAAE,KAAK;QACpD,IAAI,cAAc,UAAU,WAAW,CAAC,QAAQ;QAChD,IAAI,YAAY;QAChB,MAAM;QACN,aAAa,mBAAmB;QAChC,OAAQ,WAAW,KAAK,GAAG,WAAW,IAAI;YACxC,KAAK;YACL,KAAK;gBACH,MAAM,eAAe;gBACrB;YACF,KAAK;gBACH,MAAM,eAAe;gBACrB;YACF,KAAK;gBACH,MAAM,eAAe;gBACrB;QACJ;QACA,OAAO;IACT;IAEA,iBAAiB;IACjB,qEAAqE;IACrE,yDAAyD;IACzD,8EAA8E;IAC9E,YAAY;IACZ,uIAAuI;IACvI,uIAAuI;IACvI,sIAAsI;IACtI,sIAAsI;IACtI,UAAU,YAAY,GAAG,SAAU,SAAS,EAAE,SAAS,EAAE,IAAI;QAC3D,IAAI,YAAY;QAChB,IAAI,YAAY;QAChB,IAAI;QACJ,IAAI,uBAAuB,OAAO;QAClC,OAAO,QAAQ,CAAC;QAChB,wBAAwB,KAAK,qBAAqB;QAClD,QAAQ,KAAK,KAAK;QAClB,OAAO,KAAK,IAAI;QAChB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;YACzC,cAAc,UAAU,WAAW,CAAC,WAAW,SAAS,CAAC,EAAE;YAC3D,IAAI,cAAc,WAAW;gBAC3B,YAAY;gBACZ,YAAY,UAAU,SAAS,CAAC,EAAE;YACpC;QACF;QACA,IAAI,UAAU,UAAU,CAAC,WAAW,WAAW;YAC7C,OAAO;YACP,MAAM;QACR,MAAM,CAAC,uBACL,OAAO;aACF;YACL,KAAK,qBAAqB,GAAG;YAC7B,OAAO,UAAU,YAAY,CAAC,WAAW;gBAAC;gBAAQ;aAAO,EAAE;QAC7D;IACF;IAEA,qBAAqB;IACrB,qBAAqB;IACrB,oDAAoD;IACpD,IAAI,QAAQ,UAAU,KAAK,GAAG;QAC5B,WAAW;QACX,cAAc;QACd,MAAM;QACN,YAAY;QACZ,OAAO;QACP,OAAO;QACP,QAAQ;QACR,OAAO;QACP,gBAAgB;QAChB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,WAAW;QACX,aAAa;QACb,WAAW;QACX,YAAY;QACZ,WAAW;QACX,OAAO;QACP,gBAAgB;QAChB,UAAU;QACV,SAAS;QACT,MAAM;QACN,UAAU;QACV,UAAU;QACV,eAAe;QACf,UAAU;QACV,WAAW;QACX,UAAU;QACV,WAAW;QACX,aAAa;QACb,gBAAgB;QAChB,YAAY;QACZ,YAAY;QACZ,SAAS;QACT,YAAY;QACZ,cAAc;QACd,eAAe;QACf,eAAe;QACf,eAAe;QACf,eAAe;QACf,YAAY;QACZ,UAAU;QACV,aAAa;QACb,SAAS;QACT,SAAS;QACT,YAAY;QACZ,WAAW;QACX,aAAa;QACb,aAAa;QACb,SAAS;QACT,WAAW;QACX,YAAY;QACZ,MAAM;QACN,WAAW;QACX,MAAM;QACN,OAAO;QACP,aAAa;QACb,MAAM;QACN,UAAU;QACV,SAAS;QACT,WAAW;QACX,QAAQ;QACR,OAAO;QACP,OAAO;QACP,UAAU;QACV,eAAe;QACf,WAAW;QACX,cAAc;QACd,WAAW;QACX,YAAY;QACZ,WAAW;QACX,sBAAsB;QACtB,WAAW;QACX,YAAY;QACZ,WAAW;QACX,WAAW;QACX,aAAa;QACb,eAAe;QACf,cAAc;QACd,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,aAAa;QACb,MAAM;QACN,WAAW;QACX,OAAO;QACP,SAAS;QACT,QAAQ;QACR,kBAAkB;QAClB,YAAY;QACZ,cAAc;QACd,cAAc;QACd,gBAAgB;QAChB,iBAAiB;QACjB,mBAAmB;QACnB,iBAAiB;QACjB,iBAAiB;QACjB,cAAc;QACd,WAAW;QACX,WAAW;QACX,UAAU;QACV,aAAa;QACb,MAAM;QACN,SAAS;QACT,OAAO;QACP,WAAW;QACX,QAAQ;QACR,WAAW;QACX,QAAQ;QACR,eAAe;QACf,WAAW;QACX,eAAe;QACf,eAAe;QACf,YAAY;QACZ,WAAW;QACX,MAAM;QACN,MAAM;QACN,MAAM;QACN,YAAY;QACZ,QAAQ;QACR,eAAe;QACf,KAAK;QACL,WAAW;QACX,WAAW;QACX,aAAa;QACb,QAAQ;QACR,YAAY;QACZ,UAAU;QACV,UAAU;QACV,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,WAAW;QACX,WAAW;QACX,WAAW;QACX,MAAM;QACN,aAAa;QACb,WAAW;QACX,KAAK;QACL,MAAM;QACN,SAAS;QACT,QAAQ;QACR,WAAW;QACX,QAAQ;QACR,OAAO;QACP,OAAO;QACP,YAAY;QACZ,QAAQ;QACR,aAAa;IACf;IAEA,oDAAoD;IACpD,IAAI,WAAW,UAAU,QAAQ,GAAG,KAAK;IAEzC,YAAY;IACZ,YAAY;IAEZ,sDAAsD;IACtD,SAAS,KAAK,CAAC;QACb,IAAI,UAAU,CAAC;QACf,IAAK,IAAI,KAAK,EACZ,IAAI,EAAE,cAAc,CAAC,IACnB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG;QAGpB,OAAO;IACT;IAEA,0EAA0E;IAC1E,SAAS,WAAW,CAAC;QACnB,IAAI,WAAW;QACf,IAAI,MAAM,MAAM,IAAI,KAAK,IAAI,GAC3B,IAAI;QAEN,OAAO;IACT;IAEA,iDAAiD;IACjD,SAAS,QAAQ,CAAC,EAAE,GAAG;QACrB,IAAI,eAAe,IAAI,IAAI;QAC3B,IAAI,iBAAiB,aAAa;QAClC,IAAI,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,WAAW;QAEzC,+CAA+C;QAC/C,IAAI,gBACF,IAAI,SAAS,IAAI,KAAK,MAAM;QAG9B,wCAAwC;QACxC,IAAI,KAAK,GAAG,CAAC,IAAI,OAAO,UACtB,OAAO;QAGT,gDAAgD;QAChD,OAAO,IAAI,MAAM,WAAW;IAC9B;IAEA,iCAAiC;IACjC,SAAS,QAAQ,GAAG;QAClB,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG;IACjC;IAEA,mDAAmD;IACnD,SAAS,gBAAgB,GAAG;QAC1B,OAAO,SAAS,KAAK;IACvB;IAEA,iGAAiG;IACjG,0GAA0G;IAC1G,SAAS,eAAe,CAAC;QACvB,OAAO,OAAO,KAAK,YAAY,EAAE,OAAO,CAAC,QAAQ,MAAM,WAAW,OAAO;IAC3E;IAEA,mDAAmD;IACnD,SAAS,aAAa,CAAC;QACrB,OAAO,OAAO,MAAM,YAAY,EAAE,OAAO,CAAC,QAAQ;IACpD;IAEA,yCAAyC;IACzC,SAAS,KAAK,CAAC;QACb,OAAO,EAAE,MAAM,IAAI,IAAI,MAAM,IAAI,KAAK;IACxC;IAEA,+CAA+C;IAC/C,SAAS,oBAAoB,CAAC;QAC5B,IAAI,KAAK,GACP,IAAI,IAAI,MAAM;QAEhB,OAAO;IACT;IAEA,oCAAoC;IACpC,SAAS,oBAAoB,CAAC;QAC5B,OAAO,KAAK,KAAK,CAAC,WAAW,KAAK,KAAK,QAAQ,CAAC;IAClD;IACA,oCAAoC;IACpC,SAAS,oBAAoB,CAAC;QAC5B,OAAO,gBAAgB,KAAK;IAC9B;IACA,IAAI,WAAW;QACb,+CAA+C;QAC/C,IAAI,cAAc;QAElB,mDAAmD;QACnD,IAAI,aAAa;QAEjB,iGAAiG;QACjG,IAAI,WAAW,QAAQ,aAAa,UAAU,cAAc;QAE5D,mBAAmB;QACnB,yDAAyD;QACzD,2DAA2D;QAC3D,IAAI,oBAAoB,gBAAgB,WAAW,eAAe,WAAW,eAAe,WAAW;QACvG,IAAI,oBAAoB,gBAAgB,WAAW,eAAe,WAAW,eAAe,WAAW,eAAe,WAAW;QACjI,OAAO;YACL,UAAU,IAAI,OAAO;YACrB,KAAK,IAAI,OAAO,QAAQ;YACxB,MAAM,IAAI,OAAO,SAAS;YAC1B,KAAK,IAAI,OAAO,QAAQ;YACxB,MAAM,IAAI,OAAO,SAAS;YAC1B,KAAK,IAAI,OAAO,QAAQ;YACxB,MAAM,IAAI,OAAO,SAAS;YAC1B,MAAM;YACN,MAAM;YACN,MAAM;YACN,MAAM;QACR;IACF;IAEA,mBAAmB;IACnB,gFAAgF;IAChF,yCAAyC;IACzC,SAAS,eAAe,KAAK;QAC3B,OAAO,CAAC,CAAC,SAAS,QAAQ,CAAC,IAAI,CAAC;IAClC;IAEA,wBAAwB;IACxB,gFAAgF;IAChF,oFAAoF;IACpF,SAAS,oBAAoB,KAAK;QAChC,QAAQ,MAAM,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,WAAW,IAAI,WAAW;QACtE,IAAI,QAAQ;QACZ,IAAI,KAAK,CAAC,MAAM,EAAE;YAChB,QAAQ,KAAK,CAAC,MAAM;YACpB,QAAQ;QACV,OAAO,IAAI,SAAS,eAClB,OAAO;YACL,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,QAAQ;QACV;QAGF,uDAAuD;QACvD,wGAAwG;QACxG,sEAAsE;QACtE,mGAAmG;QACnG,IAAI;QACJ,IAAI,QAAQ,SAAS,GAAG,CAAC,IAAI,CAAC,QAC5B,OAAO;YACL,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;QACb;QAEF,IAAI,QAAQ,SAAS,IAAI,CAAC,IAAI,CAAC,QAC7B,OAAO;YACL,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;QACb;QAEF,IAAI,QAAQ,SAAS,GAAG,CAAC,IAAI,CAAC,QAC5B,OAAO;YACL,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;QACb;QAEF,IAAI,QAAQ,SAAS,IAAI,CAAC,IAAI,CAAC,QAC7B,OAAO;YACL,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;QACb;QAEF,IAAI,QAAQ,SAAS,GAAG,CAAC,IAAI,CAAC,QAC5B,OAAO;YACL,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;QACb;QAEF,IAAI,QAAQ,SAAS,IAAI,CAAC,IAAI,CAAC,QAC7B,OAAO;YACL,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;YACX,GAAG,KAAK,CAAC,EAAE;QACb;QAEF,IAAI,QAAQ,SAAS,IAAI,CAAC,IAAI,CAAC,QAC7B,OAAO;YACL,GAAG,gBAAgB,KAAK,CAAC,EAAE;YAC3B,GAAG,gBAAgB,KAAK,CAAC,EAAE;YAC3B,GAAG,gBAAgB,KAAK,CAAC,EAAE;YAC3B,GAAG,oBAAoB,KAAK,CAAC,EAAE;YAC/B,QAAQ,QAAQ,SAAS;QAC3B;QAEF,IAAI,QAAQ,SAAS,IAAI,CAAC,IAAI,CAAC,QAC7B,OAAO;YACL,GAAG,gBAAgB,KAAK,CAAC,EAAE;YAC3B,GAAG,gBAAgB,KAAK,CAAC,EAAE;YAC3B,GAAG,gBAAgB,KAAK,CAAC,EAAE;YAC3B,QAAQ,QAAQ,SAAS;QAC3B;QAEF,IAAI,QAAQ,SAAS,IAAI,CAAC,IAAI,CAAC,QAC7B,OAAO;YACL,GAAG,gBAAgB,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,EAAE;YAC3C,GAAG,gBAAgB,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,EAAE;YAC3C,GAAG,gBAAgB,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,EAAE;YAC3C,GAAG,oBAAoB,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,EAAE;YAC/C,QAAQ,QAAQ,SAAS;QAC3B;QAEF,IAAI,QAAQ,SAAS,IAAI,CAAC,IAAI,CAAC,QAC7B,OAAO;YACL,GAAG,gBAAgB,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,EAAE;YAC3C,GAAG,gBAAgB,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,EAAE;YAC3C,GAAG,gBAAgB,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,EAAE;YAC3C,QAAQ,QAAQ,SAAS;QAC3B;QAEF,OAAO;IACT;IACA,SAAS,mBAAmB,KAAK;QAC/B,2CAA2C;QAC3C,oEAAoE;QACpE,IAAI,OAAO;QACX,QAAQ,SAAS;YACf,OAAO;YACP,MAAM;QACR;QACA,QAAQ,AAAC,CAAA,MAAM,KAAK,IAAI,IAAG,EAAG,WAAW;QACzC,OAAO,AAAC,CAAA,MAAM,IAAI,IAAI,OAAM,EAAG,WAAW;QAC1C,IAAI,UAAU,QAAQ,UAAU,OAC9B,QAAQ;QAEV,IAAI,SAAS,WAAW,SAAS,SAC/B,OAAO;QAET,OAAO;YACL,OAAO;YACP,MAAM;QACR;IACF;IAEA,OAAO;AAET;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,O;gB,a;Y,G;gB,G,Q;oB,a;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,a;oB;gB,G;oB,G,Y;wB,O;4B,Q;wB;wB,I;4B,U,I,gB;wB;wB,O;4B,O,I,M,C,G,C,K;4B,U,S,G;gC,I,I,C,I,M,C,G,E,S;4B;4B,Y;wB;oB;iB,E;gB,I,E,C;gB,G,Q;oB,a;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,O;wB,a;wB,O,uB,I,M,C,G,C,K;wB,I;4B,S,S,M;gC,O,I,Y,C;4B;wB;oB;oB,I,E,C;oB,I,O,C,G,G,G,iB;wB,a;wB,I;4B,S,I,c;wB;wB,O;4B,O,I,M,C,G,C,K;4B,U,S,G;gC,I,I,C,I,M,C,G,E,S;4B;4B,Y;wB;oB,K,I,E;iB,E;a,E;Y,I,E,C;Y,G,O;gB,a;Y,G;gB,G,Q;oB,a;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,a;oB;gB,G;oB,G,Y;wB,O;4B,Q;4B,Y;wB;wB,O;4B,O,I,M,C,O,C,K;4B,U,S,G;gC,I,I,C,I,M,C,O,E,S;4B;4B,Y;wB;oB;iB,E;gB,I,E,C;gB,G,Q;oB,a;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,O;wB,a;wB,O,uB,I,M,C,O,C,K;wB,I;4B,S,S,M;gC,O,I,Y,C;4B;wB;oB;oB,I,E,C;oB,I,O,C,O,G,G,iB;wB,a;wB,I;4B,S,I,kB;wB;wB,O;4B,O,I,M,C,O,C,K;4B,U,S,G;gC,I,I,C,I,M,C,O,E,S;4B;4B,Y;wB;oB,K,I,E;iB,E;a,E;Y,I,E,C;Y,G,O;gB,a;Y,G;gB,G,Q;oB,a;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,a;oB;gB,G;oB,G,Y;wB,O;4B,Q;wB;wB,I;4B,U,I,gB;wB;wB,O;4B,O,I,M,C,G,C,K;4B,U,S,G;gC,I,I,C,I,M,C,G,E,S;4B;4B,Y;wB;oB;iB,E;gB,I,E,C;gB,G,Q;oB,a;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,O;wB,a;wB,O,uB,I,M,C,G,C,K;wB,I;4B,S,S,M;gC,O,I,Y,C;4B;wB;oB;oB,I,E,C;oB,I,O,C,G,G,G,iB;wB,a;wB,I;4B,S,I,c;wB;wB,O;4B,O,I,M,C,G,C,K;4B,U,S,G;gC,I,I,C,I,M,C,G,E,S;4B;4B,Y;wB;oB,K,I,E;iB,E;a,E;S;Q,I,E,C;Q,G,O;Y,a;Q,G,I,E,C,I,Q,E,S,C,E,K;Y,O,G,O;gB,Y;oB;wB,M;wB,S;wB,O,I,a,C;wB,Y;oB;iB;gB,K;gB,O,wB,E,K;Y;Q,I;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AJlqCA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AKJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAgC,MAAM;IACpD,OAAO,eAAe,GAAG,QAAQ,oBAAgC,eAAe;IAChF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA6B,OAAO;IAClE,QAAQ,oBAA8B,OAAO,CAAC;IAC9C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A,I,gB;I,M;I,Y;Q,iB,C,G,gB,A;I;I,O;Q,Q,C;I;I;Q,O;Y,S;gB,K;gB,S;gB,K;Y;Y,U,E;Q;I;I;Q,I,C,Q,G,C,G,Y,A,E,gB,C,I,C,M,C,G,E,I,C,M,C,O,E,I,C,M,C,G;I;I,S;Q,gB,G;Y,I,C,M,C,G,C,K,G,I,G;Y,I,C,Q,G,C,G,Y,A,E,gB,C,I,C,M,C,G,E,I,C,M,C,O,E,I,C,M,C,G;Q;Q,gB,G;Y,I,C,M,C,G,C,K,G,I,G;Y,I,C,Q,G,C,G,Y,A,E,gB,C,I,C,M,C,G,E,I,C,M,C,O,E,I,C,M,C,G;Q;Q,oB,G;Y,I,C,M,C,O,C,K,G,I,G;Y,I,C,Q,G,C,G,Y,A,E,gB,C,I,C,M,C,G,E,I,C,M,C,O,E,I,C,M,C,G;Q;Q;Y,I,M,S,I,C,M,C,G,C,K;Y,I,M,S,I,C,M,C,G,C,K;Y,oD;Y,I,C,M,C,O,C,K,G,A,C,M,G,I;Q;Q,c,G;Y,I,C,O,C,I,G,C,I,C,O,C,I;Q;Q,e,K;Y,I,M,S,I,C,M,C,G,C,K;Y,I,M,S,I,C,M,C,G,C,K;YAmDf,IAAA,CAAA,MAAA,QAAA,CAAA,MAAA,MAAA;gB,I,Q,A,C,M,G,I,Q;gBAEA,IAAA,MAAA,AAAA,CAAA,MAAA,GAAA,IAAA,CAAA,QAAA,CAAA,IAAA;gBACA,OAAA,CAAA,EAAA,QAAA,IAAA,GAAA,EAAA,MAAA,IAAA,CAAA;YACA;YAEA,OAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,O;gB,a;Y,G;gB,G,Q;oB,a;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,O;wB,a;wB,O,uB,I,M,C,G,C,K;wB,I;4B,S,S,M;gC,O,I,Y,C;4B;wB;oB;oB,I,E,C;oB,I,O,C,G,G,G,iB;wB,a;wB,I;4B,S,I,c;wB;wB,O;4B,O,I,M,C,G,C,K;4B,U,S,G;gC,I,I,C,I,M,C,G,E,S;4B;4B,Y;wB;oB,K,I,E;iB,E;a;Y,I,E,C;Y,G,O;gB,a;Y,G;gB,G,Q;oB,a;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,O;wB,a;wB,O,uB,I,M,C,G,C,K;wB,I;4B,S,S,M;gC,O,I,Y,C;4B;wB;oB;oB,I,E,C;oB,I,O,C,G,G,G,iB;wB,a;wB,I;4B,S,I,c;wB;wB,O;4B,O,I,M,C,G,C,K;4B,U,S,G;gC,I,I,C,I,M,C,G,E,S;4B;4B,Y;wB;oB,K,I,E;iB,E;a;S;Q,I,E,C;Q,G,O;Y,a;Q,G,I,E,C,I,Q,E,S,C,E,K;Y,O,G,O;gB,Y;oB;wB,M;wB,S;wB,O,I,a,C;wB,Y;oB;iB;gB,K;gB,O,wB,E,K;Y;Q,I;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AA9EA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA6B,MAAM;IACjD,OAAO,eAAe,GAAG,QAAQ,oBAA6B,eAAe;IAC7E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA0B,OAAO;IAC/D,QAAQ,oBAA2B,OAAO,CAAC;IAC3C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A,I,gB;I,M;I,Y;Q,iB,C,G,gB,A;I;I,O;Q,Q,C;I;I;Q,O;Y,a,E;Y,S,C;Q;I;I;Q,I,C,W,G,K,K,C,K,S,C,I,C,M,C,W;I;I,S;Q,a,I,E,G;Y,K,K,G,I,G;Q;Q;Y,I,C,W,G;mB,I,C,W;gB;oB,M;oB,O;oB,I,K,G;gB;a;Q;Q,c,G;Y,I,C,O,G,O,M,C,C,G,I,C,O,E;gB,C,I,E,C,I,C,O,C,I;Y;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,c;Y,a;Q,G,I,E,C,I,W,E,S,I;Y,O,G,O;gB,K,K,E;gB,a;Y,G;gB,G,O;oB,a;gB,G;oB,G,Y;wB,O;4B,a;wB;oB,G;wB,G,Y;4B,O;gC,e;4B;4B,O;gC,O,K,I;gC,U,S,G;oC,I,I,C,M,Q;gC;gC,Y;4B;wB;qB,E;iB,E;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,O;wB,a;oB,G;wB,G,O;4B,a;4B,O,uB,K,K;4B,I;gC,S,S,M;oC,O,I,Y,C,K,E;gC;4B;wB;wB,I,E,C;wB,I,O,C,K,E,C,G,G,iB;4B,a;4B,I;gC,S,S,G;oC,O,I,W,C,M;gC;4B;4B,O;gC,O,K,K;gC,U,S,G;oC,I,I,C,M,S;gC;gC,Y;4B;wB,K,I,E;qB,E;iB;a;Q,I;Q,I,E,C;Q,G,a;Y,a;Y,I;gB,S,I,Q;Y;Q,G;Y,G,W;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,qB;Y,I,c,K,G,0B;gB,O;oB,U,I,M;gB;gB,I;oB,S,I,a;gB;Y,K,A,I,Y,K,G,2B;gB,O;oB,U,I,M;gB;gB,I;oB,S,I,a;gB;Y,K,A,I,Y,K,G,wB;gB,K;gB,O;oB,U,I,M;gB;Y,K,I,E;S,E;Q,I,E,C;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,O;oB,Y,I,Y;gB;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;APJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AQJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAyC,MAAM;IAC7D,OAAO,eAAe,GAAG,QAAQ,oBAAyC,eAAe;IACzF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAsC,OAAO;IAC3E,QAAQ,oBAAuC,OAAO,CAAC;IACvD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A;A;A;;A;A;;A,I,gB;I,M;I,Y;Q,iB,C,G,sC,A;I;I,O;Q;K;I;Q,I,C,S;Q,I,C,M;Q,I,C,M,G;Y,Q;Y,S;Y,S;Y,O;Q;Q,O;Y,Y;Y,M,E;Y,Q,E;Y,Y,E;Y,e,E;Y,iB;Y,kB;Y,e;Y,sB;Y,O,E;Y,M;Y,U;Y,O,I,C,M,C,M;Q;I;I;Q,C,G,qB,A,E,G,C,e,C;Y,I,C,U;Q;I;I,S;Q,M,Q,E,S,E,M,E,I,E,Q,E;Y,oC;Y,I,C,S,G;Y,I,C,M,G;Y,I,C,I,G;Y,I,C,Q,G;Y,I,C,K,G,I,C,M,C,O;Y,I;gB,M,I,C,U;gB,I,C,K,G,I,C,M,C,M;Y,E,O,O;gB,I,C,K,G,I,C,M,C,K;Y;Q,0B;Q;Q,M;Y,I,C,K,G,I,C,M,C,O;Y,I;gB,M,C,G,sE,A,E,uB,C,I,C,M,E,I,C,e,E,I,C,oB;gB,I,O,I,C,Q,K,a;oB,M,U,I,C,I,C,I,C,C,K,G,E,K,I,C,e;oB,M,W,I,C,U,C,I,C,C,K,G,E,K,I,C,gB;oB,M,Q,I,C,M,C,I,C,C,K,G,E,K,I,C,a;oB,I,C,Q,C,S,U;gB;gB,I,C,K,G,I,C,M,C,O;Y,E,O,O;gB,I,C,K,G,I,C,M,C,K;Y;Q;Q,M,S,M;Y,gB;Y,mC;Y,mC;Y,gC;Y,8B;Y,gB;Y,W;Y,U;YA0Ff,IAAA;Y,I,C,U,G;QAEA;Q,a,W;YAGA,IAAA,OAAA,IAAA,CAAA,SAAA,KAAA,YACA,IAAA,CAAA,SAAA,CAAA;QAEA;QAEA;YACA,OAAA,CAAA,GAAA,qBAAA,AAAA,EACA,kBAAA,CAAA,CAAA,GAAA,sEAAA,AAAA,EAAA,kBAAA,EACA,IAAA,CAAA,CAAA;gBACA,IAAA,CAAA,IAAA,GAAA;gBACA,IAAA,CAAA,cAAA;gBACA,IAAA,CAAA,YAAA;gBACA,IAAA,CAAA,mBAAA;YACA;QACA;QAEA,oBAAA;QACA,uCAAA;QAEA,gCAAA;QACA,sEAAA;QACA,oCAAA;QACA,MAAA;QACA,eAAA;QACA,KAAA;QACA;YACA,IAAA,CAAA,aAAA,GAAA;YAEA,IAAA,IAAA,CAAA,eAAA,IAAA,IAAA,CAAA,gBAAA,EAAA;gBACA,IAAA,UAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CACA,CAAA,KAAA,GAAA,EAAA,KAAA,IAAA,CAAA,eAAA;gBAEA,IAAA,SAAA;oBACA,IAAA,WAAA,QAAA,QAAA,CAAA,IAAA,CACA,CAAA,KAAA,GAAA,EAAA,IAAA,IAAA,CAAA,gBAAA;oBAGA,IAAA,UAAA,OAAA,SAAA,MAAA;gBACA;YACA;YACA,OAAA,EAAA;QACA;QAEA,eAAA;QACA,aAAA;QACA,4BAAA;QACA,6BAAA;QACA,0BAAA;Q,iC;QAEA,sCAAA;QACA,MAAA;QACA,KAAA;QAEA;YACA,CAAA,GAAA,6DAAA,AAAA,EAAA,SAAA,CAAA,4BAAA;gBACA,OAAA;gBACA,iBAAA,CAAA,GAAA,sEAAA,AAAA,EAAA,kBAAA;gBACA,UAAA,CAAA,KAAA,IAAA,CAAA,eAAA,GAAA;YACA;Q;QAGA;Y,C,G,6D,A,E,S,C,wB;gBAEA,OAAA;gBACA,WAAA,IAAA,CAAA,eAAA;gBACA,cAAA,CAAA,GAAA,+CAAA,AAAA,EAAA,OAAA,CAAA,IAAA,CAAA,eAAA;gBACA,UAAA,CAAA,KAAA,IAAA,CAAA,gBAAA,GAAA;YACA;QACA;QAEA;Y,C,G,6D,A,E,S,C,qB;gBAEA,OAAA;gBACA,WAAA,IAAA,CAAA,eAAA;gBACA,cAAA,CAAA,GAAA,+CAAA,AAAA,EAAA,OAAA,CAAA,IAAA,CAAA,gBAAA;gBACA,UAAA,CAAA,KAAA,IAAA,CAAA,aAAA,GAAA;YACA;QACA;QAEA,6EAAA;QACA,gEAAA;QACA;Y,qC;YAEA,IAAA,CAAA,UAAA,GAAA,EAAA;YACA,IAAA,IAAA,CAAA,eAAA,EAAA;gBACA,IAAA,MAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,EAAA,KAAA,IAAA,CAAA,eAAA;gBACA,IAAA,KAAA,IAAA,CAAA,UAAA,GAAA,IAAA,QAAA;YACA;QACA;Q;YAGA,kCAAA;YACA,IAAA,CAAA,MAAA,GAAA,EAAA;YACA,IAAA,IAAA,CAAA,eAAA,IAAA,IAAA,CAAA,gBAAA,EAAA;gBACA,IAAA,UAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CACA,CAAA,KAAA,GAAA,EAAA,KAAA,IAAA,CAAA,eAAA;gBAEA,IAAA,SAAA;oBACA,IAAA,WAAA,QAAA,QAAA,CAAA,IAAA,CACA,CAAA,KAAA,GAAA,EAAA,IAAA,IAAA,CAAA,gBAAA;oBAGA,IAAA,UAAA,IAAA,CAAA,MAAA,GAAA,SAAA,MAAA;gB;YAEA;QACA;QAEA,MAAA;YACA,IAAA,CAAA,aAAA,GAAA,EAAA;Y,IAEA,IAAA,CAAA,eAAA,IACA,IAAA,CAAA,gBAAA,IACA,IAAA,CAAA,aAAA,EACA;gBACA,MAAA,MAAA,MAAA,CAAA,GAAA,sEAAA,AAAA,EAAA,eAAA,CACA,IAAA,CAAA,aAAA;gBAEA,IAAA,CAAA,aAAA,GAAA,IAAA,GAAA,CAAA,CAAA,KAAA,GAAA,GAAA;YACA;QACA;QAEA,4EAAA;QACA,gEAAA;Q,e,E;YAEA,IAAA,IAAA,CAAA,eAAA,KAAA,IAAA;gBACA,IAAA,CAAA,eAAA,GAAA;gBACA;YACA;YACA,IAAA,CAAA,eAAA,GAAA;QACA;QAEA,gBAAA,EAAA;Y,I,I,C,gB,K,I;gBAEA,IAAA,CAAA,gBAAA,GAAA;gBACA;YACA;YACA,IAAA,CAAA,gBAAA,GAAA;QACA;QAEA,aAAA,EAAA;YACA,IAAA,IAAA,CAAA,aAAA,KAAA,IAAA;gB,I,C,a,G;gBAEA;YACA;YACA,IAAA,CAAA,aAAA,GAAA;QACA;Q,oB,E;YAGA,IAAA,IAAA,CAAA,oBAAA,KAAA,IAAA;gBACA,IAAA,CAAA,oBAAA,GAAA;gBACA;YACA;YACA,IAAA,CAAA,oBAAA,GAAA;QACA;IACA;IACA,UAAA;QACA;Y,O,CAEA,CAAA,IAAA,CAAA,eAAA,IACA,IAAA,CAAA,gBAAA,IACA,IAAA,CAAA,aAAA,IACA,IAAA,CAAA,oBAAA,IACA,IAAA,CAAA,KAAA,KAAA,IAAA,CAAA,MAAA,CAAA,MAAA,AAAA;QAEA;QAEA;YACA,OAAA,IAAA,CAAA,KAAA,KAAA,IAAA,CAAA,MAAA,CAAA,OAAA;QACA;QACA;YACA,OAAA,IAAA,CAAA,KAAA,KAAA,IAAA,CAAA,MAAA,CAAA,KAAA;QACA;IACA;IACA,OAAA;Q;YAEA,IAAA,CAAA,gBAAA,GAAA;YACA,IAAA,CAAA,aAAA,GAAA;YAEA,IAAA,CAAA,cAAA;YACA,IAAA,CAAA,YAAA;YACA,IAAA,CAAA,mBAAA;QACA;Q;YAGA,IAAA,CAAA,aAAA,GAAA;YAEA,IAAA,CAAA,YAAA;Y,I,C,mB;QAEA;QAEA;YACA,IAAA,CAAA,oBAAA,GAAA;YACA,IAAA,CAAA,mBAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;;;AC7SA,4DACE;AADF,gEAEE;AAVF;;AACA;;AAEA,MAAM,yBAAyB,IAAI,CAAA,GAAA,sCAAsB,AAAD;AACxD,MAAM,6BAA6B,IAAI,CAAA,GAAA,0CAA0B,AAAD;kBAEjD;;;ACNf;;;;;;;;;;;;;;;;;;;;;;CAsBC;;AAED;AAEA;AAEA;AAEA;AAEA;AAMe,MAAM;IACnB,aAAc,CAAC;IAEf,iBAAiB,MAAM,EAAE,KAAK,EAAE;QAC9B,IAAI,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC;QAE9C,IAAI,UACF,+DAA+D;QAC/D,uBAAuB;QACvB,uCAAuC;QACvC,6BAA6B;QAC7B,uEAAuE;QACvE,mBAAmB;QACnB,qBAAqB;QACrB,SAAS;QACT,QAAQ;QAER,OAAO,CAAA,GAAA,+DAAoB,AAAD,EAAE,WAAW,CAAC,UAAU,IAAI,CAAC,CAAC;YACtD,OAAO,IACJ,GAAG,CAAC,CAAC;gBACJ,IAAI,QAAQ,GAAG,OAAO,CAAC,GAAG;gBAC1B,OAAO,MAAM,GAAG,CAAC,CAAC;oBAChB,IAAI,SAAS,MAAM,OAAO,CAAC,KAAK,KAAK,MAAM,IACzC,MAAM,IAAI,CAAC,KAAK,KAAK;oBACvB,IAAI,CAAC,WAAW,GAAG,GAAG,OAAO;oBAC7B,OAAO;gBACT;YACF,GACC,IAAI;QACT;aAEA,OAAO,QAAQ,OAAO,CAAC,EAAE;IAE7B;IAEA,MAAM,WAAW,SAAS,EAAE,MAAM,EAAE;QAClC,IAAI,UAAU,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC;QAC7C,IAAI,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC;QAC9C,IAAI,MAAM;YACR,OAAO,EAAE;YACT,YAAY,EAAE;YACd,MAAM,CAAC;QACT;QAEA,IAAI,WAAW,UACb,MAAM,SAAS,aAAa,CAAC,SAAS,OAAO;YAC3C,CAAA,GAAA,+CAAkB,AAAD,EAAE,QAAQ,CAAC;YAC5B,IAAI,OAAO,KAAK,OAAO,GAAG,GAAG;YAC7B,IAAI,OAAO,KAAK,IAAI,CAAC,GAAG;YAExB,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,IAC9B,IAAI,KAAK,CAAC,IAAI,CAAC;YAGjB,IAAI,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,aAAa,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE;YAE9D,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAC9C,KAAK,EAAE,EACP,IAAI,UAAU;YAGhB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACtB;QAGF,OAAO;IACT;IAEA,sBAAsB,aAAa,EAAE,aAAa,EAAE;QAClD,IAAI,QAAQ,cAAc,WAAW;QAErC,IAAI,QACF,OAAO,MAAM,CAAC,gBAAgB,CAAC,iBAAiB,CAC9C,cAAc,SAAS,KACpB,OAAO,UAAU,CAAC,KAAK;QAE9B,MAAM,OAAO,cAAc,IAAI,IAAI,cAAc,IAAI;QAErD,IAAI,OACF,OAAO,CAAA,GAAA,yDAAuB,AAAD,EAC1B,sBAAsB,CAAC;YACtB,OAAO;YACP,WAAW;gBAAC;aAAK;QACnB,GACC,IAAI,CAAC,CAAC;YACL,IAAI,aAAa,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU;YAEhD,IAAI,QAAQ,WAAW,IAAI,CAAC,CAAC;gBAC3B,IAAI,WAAW,GAAG,aAAa,CAAC,WAAW;gBAC3C,IAAI,cAAc,GAAG,WAAW,CAAC,WAAW;gBAE5C,OAAO,aAAa,SAAS,gBAAgB;YAC/C;YAEA,IAAI,OACF,OAAO,MAAM,YAAY;iBAEzB,OAAO;QAEX,GACC,KAAK,CAAC,CAAC;YACN,QAAQ,KAAK,CAAC;QAChB;aAEF,OAAO;IAEX;IAEA,MAAM,gBAAgB,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE;QACzD,IAAI,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC;QAE9C,IAAI;QAEJ,WAAW,MAAM,CAAA,GAAA,+DAAoB,AAAD,EAAE,iBAAiB,CACrD,UACA;QAGF,IAAI,OAAO,aAAa,aACtB,WAAW,MAAM,CAAA,GAAA,+DAAoB,AAAD,EAAE,oBAAoB,CACxD,UACA;QAIJ,IAAI,OAAO;YACT,OAAO;YACP,OAAO;QACT;QACA,IAAI,SAAS,OAAO,GAAG,GAAG,OAAO,CAAA,GAAA,0BAAe,AAAD,GAC7C,KAAK,KAAK,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAC3C,SAAS,IAAI,CAAC,GAAG,IACjB;QAIJ,MAAM,CAAA,GAAA,+DAAoB,AAAD,EAAE,sBAAsB,CAC/C,UACA,UACA,KAAK,KAAK,EACV,KAAK,KAAK;IAEd;IAEA,MAAM,qBACJ,MAAM,EACN,YAAY,EACZ,aAAa,EACb,cAAc,EACd;QACA,IAAI,OAAO,MAAM,IAAI,CAAC,oBAAoB,CACxC,QACA,cACA;QAGF,IAAI,QAAQ,KAAK,KAAK,EACpB,KAAK,KAAK,CAAC,GAAG,CAAC;IAEnB;IAEA,cAAc,MAAM,EAAE;IACpB,mDAAmD;IACnD,+CAA+C;IACjD;IAEA,MAAM,qBAAqB,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE;QAC9D,IAAI,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC;QAC9C,IAAI,UAAU;YACZ,IAAI,WAAW,MAAM,CAAA,GAAA,+DAAoB,AAAD,EAAE,iBAAiB,CACzD,UACA;YAGF,IAAI,OAAO,aAAa,aACtB,WAAW,MAAM,CAAA,GAAA,+DAAoB,AAAD,EAAE,oBAAoB,CACxD,UACA;YAIJ,IAAI,aAAa,MAAM,CAAA,GAAA,+DAAoB,AAAD,EAAE,uBAAuB,CACjE,UACA;YAGF,IAAI,OAAO,WAAW,IAAI,CAAC,CAAC;gBAC1B,OAAO,GAAG,KAAK,CAAC,GAAG,OAAO;YAC5B;YAEA,IAAI,MAAM,OAAO;YAEjB,MAAM,CAAA,GAAA,+DAAoB,AAAD,EAAE,sBAAsB,CAC/C,UACA,UACA,eACA;YAGF,aAAa,MAAM,CAAA,GAAA,+DAAoB,AAAD,EAAE,uBAAuB,CAC7D,UACA;YAGF,OAAO,WAAW,IAAI,CAAC,CAAC;gBACtB,OAAO,GAAG,KAAK,CAAC,GAAG,OAAO;YAC5B;QACF;IACF;IAEA,mBAAmB,IAAI,EAAE;QACvB,6DAA6D;QAC7D,mDAAmD;QACnD,2CAA2C;QAC3C,wDAAwD;QACxD,2CAA2C;QAC3C,sDAAsD;QACtD,sBAAsB;QACtB,kCAAkC;QAElC,mDAAmD;QACnD,oCAAoC;QACpC,2DAA2D;QAC3D,gBAAgB;QAChB,kBAAkB;QAClB,OAAO;QAEP,kCAAkC;QAElC,KAAK;QAEL,qCAAqC;QAErC,OAAO,CAAA,GAAA,6DAAmB,AAAD,EAAE,gBAAgB,CAAC,MAAM,IAAI,CAAC,CAAC;YACtD,MAAM,WAAW,SAAS,GAAG,CAAC,OAAO;gBACnC,OAAO,CAAC,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;gBACvD,OAAO;YACT;YAEA,OAAO,QAAQ,GAAG,CAAC;QACrB;IACF;IAEA,MAAM,YAAY,SAAS,EAAE;QAC3B,4CAA4C;QAC5C,mCAAmC;QAEnC,yEAAyE;QACzE,kBAAkB;QAClB,mDAAmD;QACnD,gCAAgC;QAChC,6DAA6D;QAC7D,kBAAkB;QAClB,qBAAqB;QACrB,SAAS;QAET,oCAAoC;QAEpC,OAAO;QAEP,MAAM,aAAa,MAAM,CAAA,GAAA,6DAAmB,AAAD,EAAE,aAAa,CAAC;QAE3D,MAAM,WAAW,WAAW,GAAG,CAAC,OAAO;YACrC,IAAI,OAAO,SAAS,GAAG;YACvB,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;YAChD,OAAO;QACT;QAEA,OAAO,QAAQ,GAAG,CAAC;IACrB;IAEA,MAAM,SAAS,UAAU,EAAE;QACzB,wEAAwE;QAExE,oEAAoE;QACpE,WAAW;QACX,oBAAoB;QACpB,6CAA6C;QAC7C,SAAS;QAET,MAAM,SAAS,MAAM,CAAA,GAAA,6DAAmB,AAAD,EAAE,SAAS,CAAC;QAEnD,OAAO,OAAO,GAAG,CAAC,CAAC,KAAO,GAAG,GAAG;IAClC;IAEA,SAAS,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE;QACpC,+DAA+D;QAC/D,OAAO,CAAA,GAAA,6DAAmB,AAAD,EAAE,kBAAkB,CAAC,WAAW,UAAU;IACrE;AACF;kBAjSqB;;;A;A,O,c,C,S,c;I,O;A;AEtCrB,MAAA,eAAA,QAAA;AAES,QAAA,uBAAA,GAFF,aAAA,OAAuB;;;A;A,I,Y,A,I,I,I,C,S,I,S,O,E,U,E,C,E,S;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,I,E,S,O;gB,Q,O,K;Y,G,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,O,c,C,S,c;I,O;A;AEA9B,MAAM;IACJ,aAAA,CAAe;IAEf,2BAA2B,KAAU,EAArC;QACE,OAAO,IAAI,CAAC,sBAAsB,CAAC;YACjC;gBACE,OAAO;gBACP,WAAW,IAAI,CAAC,YAAY,CAAC,OAAO,SAAS;YAC9C;SACF;IACH;IAEA,uBACE,aAEmD,EAHrD;QAKE,uBAAuB;QAEvB,IAAI,YAAY,MAAM,OAAO,CAAC,iBAC1B,gBACA;YAAC;SAAc;QAEnB,IAAI,WAAW,UAAU,GAAG,CAAC,CAAA;YAC3B,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,KAAK,EAAE,GAAG,SAAS;QACnD;QAEA,OAAO,QAAQ,GAAG,CAAC,UAAU,IAAI,CAAC,CAAA;YAChC,OAAO;QACT;IACF;IAEA,aACE,KAAU,EACV,MAA+B,EAFjC;QAIE,MAAM,OAAO,MAAM,eAAe;QAClC,MAAM,QAAQ,EAAE;QAEhB,IAAI,OAAO,WAAW,aACpB,SAAS;YAAC,KAAK,UAAU,CAAC,MAAM;SAAC;aAEjC,SAAS,MAAM,OAAO,CAAC,UAAU,SAAS;YAAC;SAAO;QAGpD,OAAO,OAAO,CAAC,CAAA;YACb,MAAM,QAAQ;gBAAC;aAAG;YAElB,IAAI;YAEJ,MAAO,MAAM,MAAM,CAAE;gBACnB,IAAI,KAAK,MAAM,GAAG;gBAElB,cAAc;gBAEd,KAAK,gBAAgB,CAAC,IAAI,CAAA;oBACxB,cAAc;oBACd,MAAM,IAAI,CAAC;gBACb;gBAEA,IAAI,CAAC,aACH,MAAM,IAAI,CAAC;YAEd;QACH;QAEA,OAAO;YAAE,OAAO;YAAO,WAAW;QAAK;IACzC;IAEA,8BACE,KAAU,EACV,UAGE,EALJ;QAOE,OAAO,IAAI,CAAC,0BAA0B,CAAC,OAAO,IAAI,CAAC,CAAA;YACjD,IAAI,SAAS,EAAE;YACf,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;gBACnC,MAAM,UAAU,GAAG,CAAC,EAAE;gBACtB,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,UAAU,CAAC,MAAM,EAAE,IAAK;oBAClD,MAAM,WAAW,QAAQ,UAAU,CAAC,EAAE;oBACtC,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,gBAAgB,aAClD,OAAO,IAAI,CAAC;gBAEd,IAAI;gBACL;gBACD,OAAO;YACR;QACH;IACF;IAEA,uBAAuB,WAAgB,EAAE,KAAU,EAAnD;QACE,OAAO,IAAI,CAAC,sBAAsB,CAAC,aAAa,IAAI,CAAC,CAAA;YACnD,OAAO,IAAI,GAAG,CAAC,CAAA;gBACb,OAAO;oBACL,OAAO,QAAQ,KAAK;oBACpB,YAAY,QAAQ,UAAU,CAAC,MAAM,CAAC,CAAA;wBACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI;oBAC3B;gBACD;YACH;QACF;IACF;IAEA,oBACE,KAAU,EACV,aAAqB,EACrB,SAAkB,EAHpB;QAKE,OAAO,IAAI,QAAQ,CAAA;YACjB,MAAM,MAAM,CACV,cAAc,IAAI,IAClB,CAAM,MAFR,UAAA,IAAA,EAAA,KAAA,GAAA,KAAA,GAAA;oBAGI,IAAI,aAAa,MAAM,IAAI,CAAC,sBAAsB,CAAC;wBACjD;4BAAE,OAAO;4BAAO,WAAW;wBAAG;qBAC/B;oBAED,QAAQ;gBACV,IACA;gBACE,QAAQ,EAAE;YACZ,GACA;QAEJ;IACF;IAEA,wEAAwE;IACxE,wEAAwE;IACxE,wEAAwE;IAElE,eAAe,KAAU,EAAE,SAAwB,EAAnD;Q,O,U,I,E,K,G,K,G;YACJ,IAAI,aAAa,UAAU,GAAG,CAAC,CAAA;gBAC7B,OAAO,IAAI,QAAQ,CAAA;oBACjB,MAAM,aAAa,CACjB,IACA,CAAA;wBACE,wBAAwB;wBACxB,QAAQ;oBACV,GACA,CAAA;wBACE,QAAQ;oBACV;gBAEJ;YACF;YAEA,OAAO;gBACL,OAAO;gBACP,YAAY,MAAM,QAAQ,GAAG,CAAC;YAC/B;QACH;IAAC;IAED,aAAa,KAAU,EAAvB;QACE,IAAI,eAAe,MAAM,OAAO,GAAG,YAAY;QAE/C,IAAI,cAAc,OAAO,IAAI,CAAC,aAAa,UAAU,CAAC,WAAW;QAEjE,OAAO,YAAY,GAAG,CAAC,SAAS,EAAE;YAChC,OAAO,SAAS;QAClB;IACF;IAEA,UACE,GAKC,EACD,UAGE,EAVJ;QAYE,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;YAC1C,MAAM,iBAAiB,UAAU,CAAC,EAAE,CAAC,KAAK;YAC1C,MAAM,eAAe,UAAU,CAAC,EAAE,CAAC,IAAI;YAEvC,MAAM,QAAQ,IAAI,UAAU,CAAC,IAAI,CAAC,CAAA;gBAChC,OAAO,OAAO,mBAAmB,eAC/B,eAAe,MAAM,KAAK,IACxB,GAAG,WAAW,CAAC,WAAW,OACxB,aAAa,IAAI,GAAG,iBAAiB,KACvC,GAAG,WAAW,CAAC,WAAW,OACxB,aAAa,IAAI,GAAG,iBAAiB,MACrC,kBAAkB,GAAG,YAAY;YACzC;YAEA,IAAI,OAAO,UAAU,aACnB,OAAO;QAEV;QAED,OAAO;IACT;IAEA,SAAS,EAAE,EAAE,KAAK,EAAlB;QACE,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,IAAI,YAAY,KAAK,CAAC,EAAE,CAAC,SAAS;YAClC,IAAI,aAAa,KAAK,CAAC,EAAE,CAAC,UAAU;YAEpC,IAAI,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,CAAA;gBAC7B,IAAI,OAAO,eAAe,aACxB,OAAO,UAAU,IAAI,CAAC,IAAI,WAAW;gBAGvC,OACE,UAAU,IAAI,CAAC,IAAI,WAAW,KAAK,WAAW,IAAI,CAAC,IAAI,YAAY;YAEvE;YAEA,IAAI,OAAO,UAAU,aACnB,OAAO;QAEV;QAED,OAAO;IACT;AACD;AAED,QAAA,OAAA,GAAe,IAAI;;;;;AC9NnB;AAKA;AAIe,MAAM;IACnB,aAAc;QACZ,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,yBAAyB,GAAG;QACjC,IAAI,CAAC,cAAc,GAAG;IACxB;IAEA,MAAM,qBAAqB;QACzB,MAAM,UAAU,MAAM,CAAA,GAAA,6DAAmB,AAAD,EAAE,kBAAkB,CAC1D,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,yBAAyB;QAGhC,OAAO;IACT;IAEA,MAAM,eAAe,YAAY,EAAE,QAAQ,EAAE;QAC3C,MAAM,UAAU,MAAM,IAAI,CAAC,kBAAkB;QAC7C,MAAM,YAAY,UAAU,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,KAAK;QAEpD,OAAO,CAAA,GAAA,6DAAmB,AAAD,EAAE,WAAW,CAAC,WAAW,cAAc;IAClE;IAEA,MAAM,YAAY,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE;QACnD,MAAM,UAAU,MAAM,IAAI,CAAC,kBAAkB;QAC7C,MAAM,YAAY,UAAU,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,KAAK;QAEpD,OAAO,CAAA,GAAA,6DAAmB,AAAD,EAAE,QAAQ,CACjC,WACA,YACA,WACA;IAEJ;IAEA,MAAM,oBACJ,OAAO,EACP,iBAAiB,EACjB,0BAA0B,EAAE,EAC5B;QACA,MAAM,UAAU,MAAM,IAAI,CAAC,kBAAkB;QAC7C,MAAM,YAAY,UAAU,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,KAAK;QAEpD,MAAM,sBAAsB,CAAA,GAAA,+CAAkB,AAAD,EAAE,UAAU,CAAC;YACtD,MAAM;YACN,MAAM,IAAI,CAAC,yBAAyB;QACtC,GACA,IAAI,MAAM;YACR,MAAM;YACN,YAAY;QACd;QAGF,MAAM,CAAA,GAAA,6DAAmB,AAAD,EAAE,kBAAkB,CAC1C,WACA,SACA;QAGF,OAAO,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC;IACxC;IAEA,0BAA0B,MAAM,EAAE;QAChC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAC;YAC9B,IAAI,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC;YAE9C,IAAI,UAAU;gBACZ,IAAI,QAAQ,IAAI,CAAC,oBAAoB,EACnC,QAAQ,IAAI,CAAC,QAAQ,CAAC;gBAGxB,QAAQ,IAAI,CAAC,QAAQ,CAAC;oBACpB,sBAAsB,IAAI,IAAI;gBAChC;YACF;QACF;IACF;IAEA,MAAM,oBAAoB;QACxB,MAAM,UAAU,MAAM,IAAI,CAAC,kBAAkB;QAC7C,IAAI,WAAW,QAAQ,IAAI,CAAC,oBAAoB,EAC9C,QAAQ,IAAI,CAAC,QAAQ,CAAC;IAC1B;IAEA,0BAA0B;QACxB,OAAO,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAC;YACrC,IAAI,UAAU,QAAQ,IAAI,CAAC,oBAAoB;YAE/C,IAAI,OAAO,YAAY,aACrB,OAAO,IAAI,QAAQ,CAAC;gBAClB,QAAQ,IAAI,CAAC,CAAC;oBACZ,CAAA,GAAA,+CAAkB,AAAD,EAAE,QAAQ,CAAC;oBAC5B,OAAO,SAAS,UAAU,GAAG,IAAI,CAAC,CAAC;wBACjC,IAAI,UAAU,GAAG,GAAG;wBACpB,OAAO,CAAC,KAAK,GAAG,SAAS,IAAI,CAAC,EAAE,CAAC,GAAG;wBACpC,QAAQ;oBACV;gBACF;YACF;YAGF,OAAO;gBACL,MAAM;gBACN,YAAY,EAAE;YAChB;QACF;IACF;IAEA,kBAAkB,eAAe,EAAE,oBAAoB,EAAE;QACvD,IAAI,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC;QAE9C,IAAI,UACF,SAAS,UAAU,GAAG,IAAI,CAAC,CAAC;YAC1B,QAAQ,GAAG,CAAC;QACd;IAEJ;IAEA,MAAM,qBAAqB,QAAQ,EAAE;QACnC,MAAM,WAAW,CAAA,GAAA,+CAAkB,AAAD,EAAE,WAAW,CAAC;QAEhD,IAAI,UAAU;YACZ,MAAM,eAAe,MAAM,SAAS,UAAU;YAE9C,IAAI,cAAc;gBAChB,IAAI,UAAU,aAAa,GAAG;gBAC9B,OAAO,CAAC,KAAK,GAAG;gBAChB,OAAO;YACT;QACF;IAEF;IAEA,MAAM,gBAAgB;QACpB,MAAM,UAAU,MAAM,IAAI,CAAC,kBAAkB;QAC7C,OAAO,CAAA,GAAA,6DAAmB,AAAD,EAAE,aAAa,CAAC,QAAQ,IAAI,CAAC,EAAE,CAAC,GAAG;IAC9D;IAEA,UAAU,MAAM,EAAE;QAChB,mDAAmD;QACnD,OAAO,CAAA,GAAA,6DAAmB,AAAD,EAAE,SAAS,CAAC;IACvC;IAEA,kBAAkB,OAAO,EAAE;QACzB,OAAO,CAAA,GAAA,6DAAmB,AAAD,EAAE,wBAAwB,CAAC;IACtD;IAGA,QAAQ,IAAI,EAAE;QACZ,OAAO,CAAA,GAAA,6DAAmB,AAAD,EAAE,OAAO,CAAC;IACrC;IAEA,WAAW,IAAI,EAAE;QACf,OAAO,CAAA,GAAA,6DAAmB,AAAD,EAAE,UAAU,CAAC;IACxC;IAEA,MAAM,gBAAgB,EAAE,EAAE;QACxB,MAAM,UAAU,MAAM,CAAA,GAAA,+CAAkB,AAAD,EAAE,UAAU,CAAC,IAAI,EAAE;QAE1D,OAAO,OAAO,CAAC,EAAE;IACnB;IAEA,MAAM,QAAQ,IAAI,EAAE;QAClB,MAAM,MAAM;YACV,YAAY;YACZ,SAAS;YACT,UAAU;QACZ;QAEA,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,GAE3B,IAAI,UAAU,GAAG,KAAK,EAAE;aAEnB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,GAAG;YAElC,MAAM,WAAW,MAAM,CAAA,GAAA,6DAAmB,AAAD,EAAE,gBAAgB,CAAC,KAAK,EAAE;YACnE,IAAI,UAAU,IAAI,UAAU,GAAG,SAAS,EAAE,CAAC,GAAG;YAE9C,IAAI,OAAO,GAAG,KAAK,EAAE;QAEvB,OAAO,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,yBAAyB,EAAE;YAEvD,IAAI,QAAQ,GAAG,KAAK,EAAE;YACtB,MAAM,QAAQ,MAAM,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;YAEhD,IAAI,OAAO;gBACT,IAAI,OAAO,GAAG,MAAM,EAAE,CAAC,GAAG;gBAC1B,MAAM,WAAW,MAAM,CAAA,GAAA,6DAAmB,AAAD,EAAE,gBAAgB,CAAC,MAAM,EAAE,CACjE,GAAG;gBAEN,IAAI,UAAU,IAAI,UAAU,GAAG,SAAS,EAAE,CAAC,GAAG;YAEhD;QAEF;QAEA,OAAO;IAET;AAEF;kBAxMqB;;;;;ACRrB,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAsC,MAAM;IAC1D,OAAO,eAAe,GAAG,QAAQ,oBAAsC,eAAe;IACtF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAmC,OAAO;IACxE,QAAQ,oBAAoC,OAAO,CAAC;IACpD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q;Q;Q;Q;K;I,S;Q;Y,I,C,K,C;Q;Q,Y,E;Y,I,C,K,C,U;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,O;gB,I,E,C,I,E,C,I,K;a;S;Q,I,E,C;Q,G,c;Y,a;Q,G;Y,G,W,I,E,C,I,I,E,S,I,E,K;gB,O,G,gB;oB,Y;wB;4B,M;4B,S;4B,O,K,I;4B,Y;wB;qB;oB,K;oB,a;oB,O;wB,Y,K,E,K,I,Y;oB;oB,I;wB,S,S,M;4B,O,I,U,C,K,E;wB;oB;gB,G;oB,G,Q;wB,a;oB,G;wB,I,E,C,I,E,C,K,I;qB;iB;Y,I;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACLA;;AACA;;AAGA,MAAM,WAAW,IAAI,CAAA,GAAA,mBAAG,AAAD;AAEvB,SAAS,GAAG,CAAC,aAAa,CAAC;IACzB,CAAA,GAAA,yBAAS,AAAD,EAAE,aAAa,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAA;QACpC,IAAI,aAAa,EAAE;QAEnB,IAAI,OAAO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gBAAE,IAAI,CAAC,cAAc;aAAC;SACpD;QAED,IAAI,CAAC,0BAA0B,GAAG,IAAI,IAAI;YACxC;gBAAC,IAAI,CAAC,WAAW;gBAAE,IAAI,CAAC,uBAAuB;aAAC;YAChD;gBAAC,IAAI,CAAC,gBAAgB;gBAAE,IAAI,CACzB,4BAA4B;aAC9B;YACD;gBAAC,IAAI,CAAC,cAAc;gBAAE,IAAI,CAAC,0BAA0B;aAAC;SAEvD;IACH;AAEF;AAEA,OAAO,OAAO,GAAG,IAAI;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,qB;Y,I,K,K,I,M,C,M,G,G,O;gB,a;Y,G;gB,G,O;oB,a;gB,G;oB,G,iB;wB,O;4B,S;4B,Q,I,I;4B,gB,I,e;4B,c;wB;wB,I;4B,U,I,a;4B,U,I,a;wB;oB;iB,E;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,iB;wB,O;4B,S;4B,Q,I,U;4B,gB,I,gB;4B,c,C,I,e;wB;wB,I;4B,U,I,c;4B,U,I,c;wB;oB;iB,E;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,iB;wB,O;4B,S;4B,Q,I,M;4B,gB,I,a;4B,c,C,I,gB;wB;wB,I;4B,U,I,W;4B,U,I,W;wB;oB;iB,E;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,iB;wB,O;4B,S;4B,Q,I,a;4B,gB,I,oB;4B,c,C,I,gB;wB;wB,I;4B,U,I,W;4B,U,I,kB;wB;oB;iB,E;a,I,G,O;gB,a;Y,G;gB,I,K,K,I,M,C,O,G,G,uB;oB,O;wB,W;oB;gB,K,A,I,K,K,I,M,C,K,G,G,W;oB,a;gB,G;oB,I,E,C;iB,I,A,I,K,K,I,M,C,O,G,G,W;oB,a;gB,G;oB,I,E,C;iB,I,I,E;a,E;S;Q,I,E,C;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,O;oB,Y,I,Q;gB;gB,I;oB,S,I,I;gB;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AZhIrB,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AaJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAgC,MAAM;IACpD,OAAO,eAAe,GAAG,QAAQ,oBAAgC,eAAe;IAChF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA6B,OAAO;IAClE,QAAQ,oBAA8B,OAAO,CAAC;IAC9C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A,I,gB;I,M;I,O;Q;K;I;Q,I,C,S;Q,I,C,M;Q,O;Y,Y;Y,O,E;Y,M;Y,U;Q;I;I,Y;I,S;Q,M,Q,E,I,E,Q,E;Y,8B;Y,wB;Y,I,C,Q,G;Y,I,C,I,G;Y,I,C,K,G,I,C,Q,C;Q;Q,M,S,M;Y,I,U,O,I,C,Q,K,a,I,C,Q,C,I,C,I;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y,I,C,S,C;Q;Q,U,I;Y,oB;Y,0C;Y,c;Y,W;Y,e;Y,qC;Y,sD;Y,iB;Y,K;Y,K;Y,gB;Y,M,Q,C,G,iC,A,E,O,C;YA8Cf,IAAA,UAAA,IAAA,OAAA,GAAA,iCAAA;Y,O,C,G,iC,A,E,K,C;QAGA;Q;YAGA,OAAA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,qB;Y,a;Q,G;Y,G,Y;gB,G,S;oB,O;wB,O;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,a;oB,O;wB,Q;wB,M;oB;oB,O;wB,O,I,I;wB,U,S,G;4B,I,I,G;wB;wB,Y;oB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AA,IAAA,SAAA,EACA,IAAA,CAAA,IAAA,GAAA,IAAA,SAAA,CAAA,GAAA;QAEA;QAEA;YACA,IAAA,CAAA,QAAA,GAAA;QACA;QAEA;YACA,IAAA,CAAA,QAAA,GAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,C,I,Q,G,G,a;Y,a;Y,I;gB,S,I,c;Y;Q,G;Y,G,W;gB,I,E,C;a;S,E,K,I,E;Q,I,E,C;Q,G,qB;Y,O;gB,Y,I,Q;gB,Q,I,I;Y;Y,I;gB,U,I,gB;gB,W,I,O;Y;Q;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAhEA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA0C,MAAM;IAC9D,OAAO,eAAe,GAAG,QAAQ,oBAA0C,eAAe;IAC1F,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAuC,OAAO;IAC5E,QAAQ,oBAAwC,OAAO,CAAC;IACxD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A,M,E,yB,E,G,Q;A,I,gB;I,M;I,O;Q;K;I;Q,I,C,K,G;Y,Q;Y,S;Y,O;Q;Q,I,C,O;Q,O;Y,Y;Y,O,I,C,K,C,O;Y,kB,E;Q;I;I,Y;I,S;Q,Q,E,E,E,I,E;Y,I,C,K,G,I,C,K,C,O;Y,I,C,O,G;Y,I,C,qB,C,I,I,C,C;gB,I,C,Q,C;gB,I,C,gB,G,O,G,C,C,K,G,G;gB,I,C,K,G,I,C,K,C,M;Y,G,K,C,C;gB,Q,K,C;gB,I,C,K,G,I,C,K,C,K;Y;Q;Q,W;Q,6B;Q,gD;Q,mC;Q,M;Q,K;Q,uB,O;Y,O,C,G,sE,A,E,gB,C;Q;Q,oB,c;Y,I,C,K,G,I,C,K,C,O;Y,O,C,G,sE,A,E,yB,C,I,C,O,E,gB,I,C;gB,I,C,gB,G,I,C,gB,C,M,C,C,K,G,E,K;gB,I,C,K,G,I,C,K,C,M;Y;Q;Q,U,K;Y,0B,M,C,uB,C,K,C,Q,C,C,gC,E,M,C;Q;I;AAyDf;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,I,K,K,I,K,C,M,G,G,O;Y,a;Q,G;Y,I,gB,C,M,K,I,G,O;gB,a;Y,G;gB,I,E,C;a,I,G,W;gB,a;Y,G,I,E,C,I,gB,E,S,I;gB,O,G,gB;oB,K,K,E;gB,G;oB,G,Q;wB,a;oB,G;wB,I,E,C,I,E,C,K,I;qB;oB,I,E,C;oB,G,a;wB,a;wB,I;4B,S,S,M;gC,O,I,kB,C,K,E;4B;wB;oB,G;wB,G,W;4B,a;wB,G;4B,I,E,C;yB;qB,E;iB,E;Y,I;S,E,K,G,O;Y,a;Q,G;Y,I,K,K,I,K,C,O,G,G,uB;gB,O;oB,W;gB;Y,K,G,W;gB,a;Y,G;gB,I,E,C;a;S,E;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AA3EA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;ACLA;;AACA;;AAEA,IAAI,0BAA0B,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,mCAAc,AAAD;AACtD,IAAI,MAAM,IAAI;AAEd,IAAI,MAAM;AACV,SAAS,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,GAAG;;;;;ACN5D,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAoC,MAAM;IACxD,OAAO,eAAe,GAAG,QAAQ,oBAAoC,eAAe;IACpF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAiC,OAAO;IACtE,QAAQ,oBAAkC,OAAO,CAAC;IAClD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;;A;A;A,I,gB;I,M;I,Y;Q,kB,C,G,0B,A;I;I;Q,I,C,M;Q,O;Y,c;Y,M,C;Q;I;I;Q,I,C,S;Q,I,C,c;I;I,S;Q,yB;Q,4C;Q,8B;Q,mC;Q,gD;Q,2B;Q,0C;Q,c;Q,M;Q,iD;Q,mE;Q,K;Q,M,Y,O;Y,M,O,M,C,G,sE,A,E,e,C;Y,O;Q;Q,a,O;Y,I,I,C,I,C,Q,E;gBA2Bf,IAAA,CAAA,aAAA,CAAA;gBACA,MAAA,MAAA,OAAA,MAAA,CAAA,CAAA,GAAA,IAAA,CAAA,IAAA;gBACA,OAAA,GAAA,CAAA,QAAA;gBACA,IAAA,CAAA,IAAA,GAAA,OAAA,MAAA,CAAA,CAAA,GAAA;gBACA,IAAA,CAAA,YAAA,GAAA,OAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA;gBACA,CAAA,GAAA,4BAAA,AAAA,EAAA,MAAA,CAAA;gBACA,IAAA,IAAA,CAAA,MAAA,EAAA,IAAA,CAAA,MAAA,CAAA,SAAA,GAAA;gBACA;YACA;QACA;QAEA,eAAA,EAAA;YACA,IAAA,OAAA,IAAA,CAAA,KAAA,CAAA,GAAA,KAAA,aACA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,EAAA,CAAA,QAAA;QAEA;QAEA,WAAA;QAEA;YACA,CAAA,GAAA,eAAA,AAAA,EAAA,GAAA,CAAA,gBAAA,OAAA;gBACA,MAAA,UAAA,OAAA,YAAA,CAAA,EAAA;gBACA,IAAA,CAAA,MAAA,GAAA,OAAA,MAAA;gBAEA,IAAA,IAAA,CAAA,IAAA,CAAA,QAAA,EAAA;oBACA,IAAA,CAAA,aAAA,CAAA;oBACA,MAAA,MAAA,OAAA,MAAA,CAAA,CAAA,GAAA,IAAA,CAAA,IAAA;oBACA,OAAA,GAAA,CAAA,QAAA;oBACA,IAAA,CAAA,IAAA,GAAA,OAAA,MAAA,CAAA,CAAA,GAAA;oBACA,IAAA,CAAA,YAAA,GAAA,OAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA;oBAEA;gBACA;gB,M,O,M,I,C,U,C;gBAIA,IAAA,KAAA,MAAA,KAAA,GAAA;oBACA,MAAA;oBACA,IAAA,IAAA,CAAA,MAAA,EAAA,IAAA,CAAA,MAAA,CAAA,SAAA,GAAA;oB;gBAEA;gBAEA,IAAA,CAAA,IAAA,GAAA,OAAA,MAAA,CAAA,CAAA,GAAA,IAAA,CAAA,IAAA,EAAA;oBAAA,CAAA,QAAA,EAAA;gBAAA;gBACA,IAAA,CAAA,YAAA,GAAA,OAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA;YACA;QACA;QAEA;YACA,CAAA,GAAA,eAAA,AAAA,EAAA,GAAA,CAAA,uBAAA,CAAA;gBACA,OAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,GAAA,CAAA,OAAA;oBACA,MAAA,OAAA,MAAA,IAAA,CAAA,UAAA,CAAA;oBACA,IAAA,CAAA,IAAA,CAAA,QAAA,GAAA;gB;YAEA;QACA;IACA;AACA;A,I,U,O,kB,a,c,O,G;kBAGA,SAAA,wCAAA;;;;;ACrGA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA0B,MAAM;IAC9C,OAAO,eAAe,GAAG,QAAQ,oBAA0B,eAAe;IAC1E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAuB,OAAO;IAC5D,QAAQ,oBAAwB,OAAO,CAAC;IACxC,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A;;A,I,gB;I,M;I,O;Q,e,C;Q,I,C;I;I;Q,M,O,C,G,+C,A,E,O,C,I,C,E;Q,I,M,I,C,K,G,K,I,C,G;Q,I,C,U;I,6D;I,kE;I,sD;I,6D;I,iE;I,I;I;I;Q,I,C,c,G,I;Q,I,C,iB,G,E;Q,O;Y,O;Y,sB;Y,sB;Y,iB,E;Y,U,E;Q;I;I,S;Q,8C;Q,iE;Q,kD;Q,yE;Q,qB;Q,0D;Q,M;Q,K;Q,oB,M;Y,wC;Y,I,Q;gB,iC;gB,I,C,oB,G,O,E;gB,I,C,oB,G,O,S;gB,I,C,Q,G,I,C,iB,C,O,M;gB,I,C,Y,C;Y,O,I,C,Q,G,E;Q;Q,mB,M;Y,I,O,W,E,O,C,G,Y,A,E,oB,C,O,W;Y,I,U,C,G,Y,A,E,gB,C,O,G,E,O,O,E,O,G;Y,O,Q,G,C,C,I;gB,O;oB,O,C,C,E,G,K,G,C;oB,O,I,C,Q,C,O,O,G,C,K,E,O,G,C,K;gB;Y;Q;Q,U,K,E,G,E,G;Y,I,M,S,S,M,S,O,O,Q,S;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CA,CAAA,KAAA,GAAA,EAAA,KAAA,IAAA,CAAA,oBAAA;YAEA,IAAA;Y,I,SAGA,QAAA,QAAA,eAAA,CAAA,IAAA,C,C,K,G,E,K,I,C,oB;YAIA,IAAA,CAAA,UAAA,CAAA;QACA;I;AAEA;A,I,U,O,kB,a,c,O,G;kBAGA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,O;Y,Y;gB;oB,M;oB,S;oB,O,W,I,K;oB,Y;gB;a;Y,a;Y,I;gB,S,I,W;Y;Q,G;Y,I,E,C;S;Q,I,E,C;Q,G,O;Y,Y;gB;oB,M;oB,S;oB,O,I,K;oB,Y;gB;a;Y,a;Q,G;Y,I,E,C,I,E,C,I,K;S;Q,I,E,C;Q,G,W;Y,a;Y,O;gB,W;gB,kB;Y;Q,G;Y,G,a;gB,a;gB,O;oB,mB;gB;Y,G;gB,G,W;oB,a;gB,G;oB,I,E,C;iB;a,E;Y,I,E,C;Y,G,mB,I,E,C,I,e,E,S,M;gB,O,G,gB;oB,K,O,E;oB,I;wB,S,S,M;4B,O,I,kB,C;wB;oB;gB,G;oB,I,E,C,e,I,E,C,O,K,I;iB;Y,I;S,E;Q,I,E,C;Q,G,O;Y,a;Q,G,I,E,C,I,C,Q,E,S,C,E,K;Y,O,G,O;gB,K;gB,a;Y,G;gB,G,O;oB,a;oB,O;wB,oB,E,K;oB;gB;gB,I,E,C;gB,G,O;oB,Y;wB;4B,M;4B,S;4B,O,E,K,G;4B,Y;wB;qB;oB,a;gB,G;oB,I,E,C,I,E,C,E,K;iB;a;Q,I;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAtQA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,I,Y,G,I,G,c;Y,a;Q,G,I,E,C,O,I,C,I,I,G,S,G;Y,O,G,O;gB,K;gB,a;Y,G;gB,G,kB;oB,K;oB,U;oB,O;wB,M;wB,iB,I,I,C,I;oB;oB,I;wB,S,I,W;oB;gB;a,E;Q,I,K,I,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf","sources":["node_modules/spinal-env-viewer-plugin-control-endpoint/index.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/buttons/index.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/buttons/createContext.js","node_modules/spinal-env-viewer-context-menu-service/index.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextMenuService.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","node_modules/spinal-env-viewer-context-menu-service/constants.js","node_modules/spinal-env-viewer-panel-manager-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelManagerService.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelApp.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalMountExtention.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/buttons/createControlPoint.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/buttons/controlPointDetail.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/buttons/linkControlPoint.js","node_modules/spinal-env-viewer-context-geographic-service/build/constants.js","node_modules/spinal-env-viewer-context-geographic-service/src/constants.ts","node_modules/spinal-env-viewer-plugin-control-endpoint/src/utilities/utitlities.js","node_modules/spinal-env-viewer-plugin-forge/dist/Constants.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/buttons/seeHeatmap.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/utilities/itemsColored.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/utilities/event.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/buttons/unLinkControlPoint.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/dialogs/index.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/dialogs/createContext.vue","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/dialogs/createControlPoint.vue","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/components/controlPoints.vue","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/dialogs/configuration.vue","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/components/config-components/numberConfig.vue","node_modules/spinal-env-viewer-plugin-control-endpoint/src/utilities/color.js","node_modules/tinygradient/browser.js","node_modules/tinygradient/index.js","node_modules/tinycolor2/cjs/tinycolor.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/components/config-components/booleanConfig.vue","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/components/config-components/enumConfig.vue","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/dialogs/linkControlPointDialog.vue","node_modules/spinal-env-viewer-plugin-attribute-manager/src/services/index.js","node_modules/spinal-env-viewer-plugin-attribute-manager/src/services/classes/spinalAttributeService.js","node_modules/spinal-env-viewer-bim-manager-service/dist/index.js","node_modules/spinal-env-viewer-bim-manager-service/src/index.ts","node_modules/spinal-env-viewer-bim-manager-service/dist/bimObjects/bimService.js","node_modules/spinal-env-viewer-bim-manager-service/src/bimObjects/bimService.ts","node_modules/spinal-env-viewer-plugin-attribute-manager/src/services/classes/spinalConfigurationService.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/components/linkTogroupTemplate.vue","node_modules/spinal-env-viewer-room-manager/js/event.js","node_modules/spinal-env-viewer-room-manager/js/utilities.js","node_modules/spinal-env-viewer-room-manager/services/service.js","node_modules/spinal-env-viewer-room-manager/services/constants.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/dialogs/selectGeoType.vue","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/panels/index.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/index.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/SpinalForgeExtention.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/panels/controlPointEdit.vue","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/panels/unLinkControlPointPanel.vue","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/legends/index.js","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/legends/heatmap-container.vue","node_modules/spinal-env-viewer-plugin-control-endpoint/src/vue/components/heatmap.vue"],"sourcesContent":["import \"./src/buttons\";\nimport \"./src/vue/dialogs\";\nimport \"./src/vue/panels\";\nimport \"./src/vue/legends\";","import \"./createContext\";\nimport \"./createControlPoint\";\nimport \"./controlPointDetail\";\nimport \"./linkControlPoint\";\nimport \"./seeHeatmap\";\nimport \"./unLinkControlPoint\";\n","import {\n  SpinalContextApp,\n  spinalContextMenuService\n} from \"spinal-env-viewer-context-menu-service\";\n\nimport {\n  spinalPanelManagerService\n} from \"spinal-env-viewer-panel-manager-service\";\n\nconst HEADERBAR = \"GraphManagerTopBar\";\n\n\nclass CreateControlEndpointContextButton extends SpinalContextApp {\n  constructor() {\n    super(\"create control point context\",\n      \"create control point context\", {\n        icon: \"games\",\n        icon_type: \"in\",\n        backgroundColor: \"#FF0000\",\n        fontColor: \"#FFFFFF\"\n      })\n  }\n\n  isShown() {\n    return Promise.resolve(true);\n  }\n\n  action() {\n    spinalPanelManagerService.openPanel(\n      \"createControlEndpointContextDialog\", {});\n  }\n\n}\n\nconst createControlEndpointContext =\n  new CreateControlEndpointContextButton();\n\nspinalContextMenuService.registerApp(HEADERBAR, createControlEndpointContext, [\n  3\n]);\n\nexport default createControlEndpointContext;","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalContextMenuService = require(\"./SpinalContextMenuService\");\nconst SpinalContextApp = require(\"./SpinalContextApp\");\nconst Constant = require('./constants');\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalContextMenuService === \"undefined\")\n  G_root.spinal.spinalContextMenuService = new SpinalContextMenuService();\n\nmodule.exports = {\n  constants: Constant,\n  spinalContextMenuService: G_root.spinal.spinalContextMenuService,\n  SpinalContextApp,\n  install(Vue) {\n    Vue.prototype.$spinalContextMenuService =\n      G_root.spinal.spinalContextMenuService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport * as Q from 'q';\nvar debounce = require('lodash.debounce');\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} apps key = hookname, value array of apps\n * @class SpinalContextMenuService\n */\nclass SpinalContextMenuService {\n  /**\n   *Creates an instance of SpinalContextMenuService.\n   * @memberof SpinalContextMenuService\n   */\n  constructor() {\n    this.apps = {};\n    this.promiseByAppProfileId = {};\n    this.appRdy = Q.defer();\n    this.debouncedRdy = debounce(\n      () => {\n        this.appRdy.resolve();\n        this.debouncedRdy = () => {};\n      },\n      1000,\n      { leading: false, trailing: true }\n    );\n  }\n\n  // waitRdy() {\n  //   this.appRdy.promise;\n  // }\n\n  /**\n   * Return true if user has access to this appProfile\n   * @param appProfileId\n   * @return {PromiseLike<boolean > | Promise<boolean>}\n   */\n  async hasUserRight(appProfileId) {\n    this.debouncedRdy();\n    await window.spinal.spinalSystem.init();\n    const path =\n      '/etc/UserProfileDir/' + window.spinal.spinalSystem.getUser().username;\n    const userProfile = await window.spinal.spinalSystem.load(path);\n    let res = false;\n    if (userProfile) {\n      for (let i = 0; i < userProfile.appProfiles.length && !res; i++) {\n        res = ((1 << userProfile.appProfiles[i]) & appProfileId) !== 0;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * method to register the Application to a hook\n   *\n   * @param {string} hookname the place where is application button is located\n   * @param {SpinalContextApp} spinalContextApp the application\n   * @param {number} appProfileId id of the group that can use the application\n   * button\n   * @memberof SpinalContextMenuService\n   */\n  registerApp(hookname, spinalContextApp, appProfileId) {\n    this.debouncedRdy();\n    if (typeof appProfileId === 'undefined') {\n      console.warn(\n        'Deprecated: The usage of this function without the third' +\n          ' parameter appProfileId is deprecated your button is lock for admin' +\n          ' only until you set the third parameter'\n      );\n      appProfileId = 1;\n    }\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      appsInHooks = this.apps[hookname] = [];\n    }\n\n    if (!this.promiseByAppProfileId.hasOwnProperty(appProfileId)) {\n      this.promiseByAppProfileId[appProfileId] =\n        this.hasUserRight(appProfileId);\n    }\n\n    this.promiseByAppProfileId[appProfileId].then((hasAccess) => {\n      // push the app if not exist ans user has access to the button\n      if (hasAccess && appsInHooks.indexOf(spinalContextApp) === -1) {\n        appsInHooks.push(spinalContextApp);\n      }\n    });\n  }\n\n  /**\n   * method to get the applications registered to a hookname\n   *\n   * @param {String} hookname\n   * @param {object} option\n   * @memberof SpinalContextMenuService\n   * @returns {Promise} resolve : [spinalContextApp, ...]; reject: Error\n   */\n  async getApps(hookname, option) {\n    await this.appRdy.promise;\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      return Promise.resolve([]);\n    }\n    let promises = appsInHooks.map(async function (e, idx) {\n      try {\n        const res = await e.isShown(option);\n        return res === -1 ? -1 : e;\n      } catch (error) {\n        console.error(error);\n        return -1;\n      }\n    });\n    try {\n      const appRes = await Promise.all(promises);\n      return appRes.filter((itm) => itm !== -1);\n    } catch (error) {\n      console.error(error);\n      return [];\n    }\n  }\n}\n\nmodule.exports = SpinalContextMenuService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Interface like class to define a Contextual Application button\n * @see https://material.io/tools/icons/?style=baseline for material icons\n *\n * @class SpinalContextApp\n * @property {string} label=notset short name to be shown in the application\n * @property {string} description description of what the Application button do\n * @property {object} buttonCfg Object configuration of the Application button\n * @property {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n * @property {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n * @property {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n * @property {string} buttonCfg.fontColor=#FFFFFF font color of the button\n * @property {objet} [badgeCfg] Object configuration of the Application button badge\n * @property {string} badgeCfg.label string shown in a badge; if empty it's not shown\n * @property {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n * @property {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n */\nclass SpinalContextApp {\n  /**\n   * Creates an instance of SpinalContextApp.\n   * @param {string} label=notset short name to be shown in the application\n   * @param {string} description description of what the Application button do\n   * @param {object} buttonCfg Object configuration of the Application button\n   * @param {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n   * @param {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n   * @param {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n   * @param {string} buttonCfg.fontColor=#FFFFFF font color of the button\n   * @param {objet} [badgeCfg] Object configuration of the Application button badge\n   * @param {string} badgeCfg.label string shown in a badge; if empty it's not shown\n   * @param {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n   * @param {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n   * @memberof SpinalContextApp\n   */\n  constructor(label, description, buttonCfg, badgeCfg = {}) {\n    this.label = label || \"notset\";\n    this.description = description || \"\";\n    this.buttonCfg = {\n      icon: buttonCfg.icon || \"tab\",\n      icon_type: buttonCfg.icon_type || \"in\",\n      backgroundColor: colorHash(buttonCfg.backgroundColor || \"#0000FF\"),\n      fontColor: colorHash(buttonCfg.fontColor || \"#FFFFFF\")\n    };\n\n    this.badgeCfg = {\n      label: badgeCfg.label || \"\",\n      backgroundColor: colorHash(badgeCfg.backgroundColor || \"#FF0000\"),\n      fontColor: colorHash(badgeCfg.fontColor || \"#FFFFFF\")\n    };\n  }\n\n  /**\n   * Method called by `SpinalContextMenuService.getApps`\n   * to filter the Application button to show in the context hook\n   *\n   * @param {object} option\n   * @memberof SpinalContextApp\n   * @returns {Promise} Resolve: not shown if === -1;\n   */\n  isShown(option) {}\n\n  /**\n   * Method to call on click of the application button\n   *\n   * @param {object} option {}\n   * @memberof SpinalContextApp\n   */\n  action(option) {}\n}\n\nmodule.exports = SpinalContextApp;\n\nfunction colorHash(color) {\n  if (color[0] === \"#\") return color;\n  return \"#\" + color;\n}\n","\n\nmodule.exports = {\n  ADMINISTRATEUR: 'ADMINISTRATEUR',\n  MAINTENEUR: 'MAINTENEUR',\n  INTEGRATEUR: 'INTEGRATEUR',\n  ASSET_MANAGEUR: 'ASSET MANAGER',\n};","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalPanelManagerService = require(\"./SpinalPanelManagerService\");\nconst SpinalPanelApp = require(\"./SpinalPanelApp\");\n\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalPanelManagerService === \"undefined\")\n  G_root.spinal.spinalPanelManagerService = new SpinalPanelManagerService();\nconst SpinalMountExtention = require(\"./SpinalMountExtention.js\")(\n  G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  spinalPanelManagerService: G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp,\n  SpinalMountExtention,\n  install(Vue) {\n    Vue.prototype.$spinalPanelManagerService =\n      G_root.spinal.spinalPanelManagerService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} panels key = panelName, value = an instance of SpinalPanelApp\n * @class SpinalPanelManagerService\n */\nclass SpinalPanelManagerService {\n  /**\n   *Creates an instance of SpinalPanelManagerService.\n   * @memberof SpinalPanelManagerService\n   */\n  constructor() {\n    this.panels = {};\n  }\n\n  /**\n   * method to register an Panel Application\n   *\n   * @param {string} panelName the name of the panel\n   * @param {SpinalPanelApp} spinalPanelApp the application\n   * @memberof SpinalPanelManagerService\n   */\n  registerPanel(panelName, spinalPanelApp) {\n    this.panels[panelName] = spinalPanelApp;\n  }\n\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  openPanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].openPanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  closePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].closePanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  tooglePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].tooglePanel(option);\n    return false;\n  }\n}\n\nmodule.exports = SpinalPanelManagerService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n * Base interface like class of a panel\n *\n * @class SpinalPanelApp\n */\nclass SpinalPanelApp {\n  constructor() {}\n\n  openPanel(option) {}\n  closePanel(option) {}\n  tooglePanel(option) {}\n}\n\nmodule.exports = SpinalPanelApp;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (!option.vueMountComponent) {\n    throw new Error(\"mount : missing option vueMountComponent\");\n  }\n\n  cfg.name = option.name || \"SpinalMount\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.parentContainer = option.parentContainer || document.body;\n  return cfg;\n}\n\nfunction getDialog() {\n  if (!this.dialog) {\n    this.dialog = document.createElement(\"div\");\n    const _compo = document.createElement(\"div\");\n    this.dialog.className = \"spinal-modal-container\";\n    this.cfg.parentContainer.appendChild(this.dialog);\n    this.dialog.appendChild(_compo);\n    this.compoment = new this.cfg.vueMountComponent({\n      propsData: {\n        onFinised: this.onFinised.bind(this)\n      }\n    }).$mount(_compo);\n  }\n  return this.dialog;\n}\n\n/**\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { mount }\n */\nmodule.exports = function(spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n```js\n{\n  name: \"myCustomDialogName\",\n  vueMountComponent: Vue.extend(aVueCompomentDialog),\n  parentContainer: document.body\n}```\n     *\n     * @param {*} option\n     */\n    mount(option) {\n      let cfg = configInit(option);\n      const SpinalMount = class extends SpinalPanelApp {\n        constructor() {\n          super();\n          this.cfg = cfg;\n          this.dialog = null;\n          this.compoment = null;\n        }\n\n        openPanel(opt) {\n          getDialog.call(this);\n          this.compoment.opened(opt);\n        }\n        closePanel(opt) {\n          if (this.dialog !== null) {\n            this.compoment.removed(opt);\n            this.dialog.remove();\n            this.dialog = null;\n            this.compoment = null;\n          }\n        }\n\n        tooglePanel(opt) {\n          if (this.dialog !== null) {\n            this.closePanel(opt);\n          } else {\n            this.openPanel(opt);\n          }\n        }\n\n        /**\n         * called when dialog closed by the dialog itself\n         */\n        onFinised(closeResult) {\n          this.closePanel(closeResult);\n        }\n      };\n      let SpinalMountInstance = new SpinalMount();\n      spinalPanelManagerService.registerPanel(cfg.name, SpinalMountInstance);\n    }\n  };\n};\n","import {\n  SpinalContextApp,\n  spinalContextMenuService\n} from \"spinal-env-viewer-context-menu-service\";\n\nimport {\n  spinalPanelManagerService\n} from \"spinal-env-viewer-panel-manager-service\";\n\nimport {\n  spinalControlPointService\n} from \"spinal-env-viewer-plugin-control-endpoint-service\";\n\n\nconst SIDEBAR = \"GraphManagerSideBar\";\n\n\nclass CreateControlPointButton extends SpinalContextApp {\n  constructor() {\n    super(\"create control point\",\n      \"create control point\", {\n        icon: \"games\",\n        icon_type: \"in\",\n        backgroundColor: \"#FF0000\",\n        fontColor: \"#FFFFFF\"\n      })\n  }\n\n  isShown(option) {\n    const isControlPointContext = spinalControlPointService\n      .isControlPointContext(option.context.id.get());\n\n    if (!isControlPointContext) return Promise.resolve(-1);\n\n    const isControlPointGroup = spinalControlPointService.isControlPointGroup(\n      option.selectedNode.id.get());\n\n    return Promise.resolve(isControlPointGroup ? true : -1);\n  }\n\n  action(option) {\n    spinalPanelManagerService.openPanel(\"createControlPointDialog\", {\n      selectedNode: option.selectedNode.get(),\n      context: option.context.get()\n    });\n  }\n\n}\n\nconst createControlPointContext =\n  new CreateControlPointButton();\n\nspinalContextMenuService.registerApp(SIDEBAR, createControlPointContext, [\n  3\n]);\n\nexport default createControlPointContext;","import {\n    SpinalContextApp,\n    spinalContextMenuService\n  } from \"spinal-env-viewer-context-menu-service\";\n  \n  import {\n    spinalPanelManagerService\n  } from \"spinal-env-viewer-panel-manager-service\";\n  \n  import {\n    spinalControlPointService,\n  } from \"spinal-env-viewer-plugin-control-endpoint-service\";\n  \n  \n  const SIDEBAR = \"GraphManagerSideBar\";\n  \n  \n  class SeeControlPointDetail extends SpinalContextApp {\n    constructor() {\n      super(\"see control point detail\",\n        \"see control point detail\", {\n          icon: \"games\",\n          icon_type: \"in\",\n          backgroundColor: \"#FF0000\",\n          fontColor: \"#FFFFFF\"\n        })\n    }\n  \n    isShown(option) {\n      const isControlPointContext = spinalControlPointService\n        .isControlPointContext(option.context.id.get());\n  \n      if (!isControlPointContext) return Promise.resolve(-1);\n  \n      const isControlPoint = \n        option.selectedNode.type.get() === spinalControlPointService.CONTROL_POINT_TYPE\n  \n      return Promise.resolve(isControlPoint ? true : -1);\n    }\n  \n    action(option) {\n      spinalPanelManagerService.openPanel(\"editControlPointPanel\", {\n        selectedNode: option.selectedNode.get(),\n        context: option.context.get()\n      });\n    }\n  \n  }\n  \n  const seeControlPointDetail =\n    new SeeControlPointDetail();\n  \n  spinalContextMenuService.registerApp(SIDEBAR, seeControlPointDetail, [\n    3\n  ]);\n  \n  export default seeControlPointDetail;","import {\n  SpinalContextApp,\n  spinalContextMenuService,\n} from \"spinal-env-viewer-context-menu-service\";\n\nimport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\n\n// import {\n//   spinalControlPointService\n// } from \"spinal-env-viewer-plugin-control-endpoint-service\";\n\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\nimport {\n  CONTEXT_TYPE,\n  GEOGRAPHIC_TYPES_ORDER,\n} from \"spinal-env-viewer-context-geographic-service/build/constants\";\nimport utilities from \"../utilities/utitlities\";\n\nconst SIDEBAR = \"GraphManagerSideBar\";\n\nclass LinkControlPointToGroup extends SpinalContextApp {\n  constructor() {\n    super(\"Link control point\", \"Link control point\", {\n      icon: \"games\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\",\n    });\n  }\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    // const isRoomGroupContext = groupManagerService.isRoomGroupContext(contextType);\n\n    // const isContextGeo = contextType === CONTEXT_TYPE;\n    // if(isContextGeo) return Promise.resolve(true);\n\n    const isGroupContext = groupManagerService.isContext(contextType);\n\n    if (!isGroupContext) return Promise.resolve(-1);\n\n    const type = option.selectedNode.type.get();\n\n    const isCategory = groupManagerService.isCategory(type);\n    const isGroup = groupManagerService.isGroup(type);\n    const isContext = type === contextType;\n\n    if (isCategory || isGroup || isContext) {\n      const type = utilities.getGroupType(contextType);\n      return Promise.resolve(GEOGRAPHIC_TYPES_ORDER.indexOf(type));\n    }\n\n    return Promise.resolve(-1);\n  }\n\n  action(option) {\n    // let nodeType = option.context.type.get();\n    const contextId = option.context.id.get();\n    const nodeId = option.selectedNode.id.get();\n    const contextType = option.context.type.get();\n\n    const isGeographicContext = contextType === CONTEXT_TYPE;\n\n    if (!isGeographicContext) {\n      const type = utilities.getGroupType(contextType);\n      return openDialog(contextId, nodeId, type);\n    } else {\n      spinalPanelManagerService.openPanel(\"cp_selectGeographicType\", {\n        type: option.selectedNode.type.get(),\n        callback: (argType) => {\n          openDialog(contextId, nodeId, argType);\n        },\n      });\n    }\n  }\n}\n\nconst openDialog = (contextId, nodeId, type) => {\n  spinalPanelManagerService.openPanel(\"linkControlToRoomDialog\", {\n    contextId,\n    nodeId,\n    type,\n  });\n};\n\nconst linkControlPointToGroup = new LinkControlPointToGroup();\n\nspinalContextMenuService.registerApp(SIDEBAR, linkControlPointToGroup, [3]);\n\nexport default linkControlPointToGroup;\n","\"use strict\";\n/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REFERENCE_ROOM_RELATION = exports.ROOM_REFERENCE_CONTEXT = exports.ZONE_REFERENCE_CONTEXT = exports.FLOOR_REFERENCE_CONTEXT = exports.BUILDING_REFERENCE_CONTEXT = exports.SITE_REFERENCE_CONTEXT = exports.REFERENCE_RELATION = exports.REFERENCE_TYPE = exports.MAP_RELATION_TYPE = exports.MAP_TYPE_RELATION = exports.GEOGRAPHIC_RELATIONS_ORDER = exports.EQUIPMENT_RELATION = exports.GEOGRAPHIC_RELATIONS = exports.ROOM_RELATION = exports.ZONE_RELATION = exports.FLOOR_RELATION = exports.BUILDING_RELATION = exports.SITE_RELATION = exports.GEOGRAPHIC_TYPES_ORDER = exports.EQUIPMENT_TYPE = exports.GEOGRAPHIC_TYPES = exports.ROOM_TYPE = exports.ZONE_TYPE = exports.FLOOR_TYPE = exports.BUILDING_TYPE = exports.SITE_TYPE = exports.CONTEXT_TYPE = void 0;\nconst CONTEXT_TYPE = 'geographicContext';\nexports.CONTEXT_TYPE = CONTEXT_TYPE;\nconst SITE_TYPE = 'geographicSite';\nexports.SITE_TYPE = SITE_TYPE;\nconst BUILDING_TYPE = 'geographicBuilding';\nexports.BUILDING_TYPE = BUILDING_TYPE;\nconst FLOOR_TYPE = 'geographicFloor';\nexports.FLOOR_TYPE = FLOOR_TYPE;\nconst ZONE_TYPE = 'geographicZone';\nexports.ZONE_TYPE = ZONE_TYPE;\nconst ROOM_TYPE = 'geographicRoom';\nexports.ROOM_TYPE = ROOM_TYPE;\nconst EQUIPMENT_TYPE = 'BIMObject';\nexports.EQUIPMENT_TYPE = EQUIPMENT_TYPE;\nconst REFERENCE_TYPE = 'geographicReference';\nexports.REFERENCE_TYPE = REFERENCE_TYPE;\nconst SITE_RELATION = 'hasGeographicSite';\nexports.SITE_RELATION = SITE_RELATION;\nconst BUILDING_RELATION = 'hasGeographicBuilding';\nexports.BUILDING_RELATION = BUILDING_RELATION;\nconst FLOOR_RELATION = 'hasGeographicFloor';\nexports.FLOOR_RELATION = FLOOR_RELATION;\nconst ZONE_RELATION = 'hasGeographicZone';\nexports.ZONE_RELATION = ZONE_RELATION;\nconst ROOM_RELATION = 'hasGeographicRoom';\nexports.ROOM_RELATION = ROOM_RELATION;\nconst EQUIPMENT_RELATION = 'hasBimObject';\nexports.EQUIPMENT_RELATION = EQUIPMENT_RELATION;\nconst REFERENCE_RELATION = 'hasReferenceObject';\nexports.REFERENCE_RELATION = REFERENCE_RELATION;\nconst REFERENCE_ROOM_RELATION = 'hasReferenceObject.ROOM';\nexports.REFERENCE_ROOM_RELATION = REFERENCE_ROOM_RELATION;\nconst SITE_REFERENCE_CONTEXT = '.SiteContext';\nexports.SITE_REFERENCE_CONTEXT = SITE_REFERENCE_CONTEXT;\nconst BUILDING_REFERENCE_CONTEXT = '.BuildingContext';\nexports.BUILDING_REFERENCE_CONTEXT = BUILDING_REFERENCE_CONTEXT;\nconst FLOOR_REFERENCE_CONTEXT = '.FloorContext';\nexports.FLOOR_REFERENCE_CONTEXT = FLOOR_REFERENCE_CONTEXT;\nconst ZONE_REFERENCE_CONTEXT = '.ZoneContext';\nexports.ZONE_REFERENCE_CONTEXT = ZONE_REFERENCE_CONTEXT;\nconst ROOM_REFERENCE_CONTEXT = '.RoomContext';\nexports.ROOM_REFERENCE_CONTEXT = ROOM_REFERENCE_CONTEXT;\nconst GEOGRAPHIC_TYPES = Object.freeze([\n    SITE_TYPE,\n    BUILDING_TYPE,\n    FLOOR_TYPE,\n    ZONE_TYPE,\n    ROOM_TYPE,\n]);\nexports.GEOGRAPHIC_TYPES = GEOGRAPHIC_TYPES;\nconst GEOGRAPHIC_TYPES_ORDER = Object.freeze([\n    CONTEXT_TYPE,\n    SITE_TYPE,\n    BUILDING_TYPE,\n    FLOOR_TYPE,\n    ZONE_TYPE,\n    ROOM_TYPE,\n    EQUIPMENT_TYPE,\n]);\nexports.GEOGRAPHIC_TYPES_ORDER = GEOGRAPHIC_TYPES_ORDER;\nconst GEOGRAPHIC_RELATIONS = Object.freeze([\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n]);\nexports.GEOGRAPHIC_RELATIONS = GEOGRAPHIC_RELATIONS;\nconst GEOGRAPHIC_RELATIONS_ORDER = Object.freeze([\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n]);\nexports.GEOGRAPHIC_RELATIONS_ORDER = GEOGRAPHIC_RELATIONS_ORDER;\nconst MAP_TYPE_RELATION = Object.freeze(new Map([\n    [SITE_TYPE, SITE_RELATION],\n    [BUILDING_TYPE, BUILDING_RELATION],\n    [FLOOR_TYPE, FLOOR_RELATION],\n    [ZONE_TYPE, ZONE_RELATION],\n    [ROOM_TYPE, ROOM_RELATION],\n    [EQUIPMENT_TYPE, EQUIPMENT_RELATION],\n]));\nexports.MAP_TYPE_RELATION = MAP_TYPE_RELATION;\nconst MAP_RELATION_TYPE = Object.freeze(new Map([\n    [SITE_RELATION, SITE_TYPE],\n    [BUILDING_RELATION, BUILDING_TYPE],\n    [FLOOR_RELATION, FLOOR_TYPE],\n    [ZONE_RELATION, ZONE_TYPE],\n    [ROOM_RELATION, ROOM_TYPE],\n    [EQUIPMENT_RELATION, EQUIPMENT_TYPE],\n]));\nexports.MAP_RELATION_TYPE = MAP_RELATION_TYPE;\n//# sourceMappingURL=constants.js.map","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst CONTEXT_TYPE = 'geographicContext';\nconst SITE_TYPE = 'geographicSite';\nconst BUILDING_TYPE = 'geographicBuilding';\nconst FLOOR_TYPE = 'geographicFloor';\nconst ZONE_TYPE = 'geographicZone';\nconst ROOM_TYPE = 'geographicRoom';\nconst EQUIPMENT_TYPE = 'BIMObject';\nconst REFERENCE_TYPE = 'geographicReference';\n\nconst SITE_RELATION = 'hasGeographicSite';\nconst BUILDING_RELATION = 'hasGeographicBuilding';\nconst FLOOR_RELATION = 'hasGeographicFloor';\nconst ZONE_RELATION = 'hasGeographicZone';\nconst ROOM_RELATION = 'hasGeographicRoom';\nconst EQUIPMENT_RELATION = 'hasBimObject';\nconst REFERENCE_RELATION = 'hasReferenceObject';\nconst REFERENCE_ROOM_RELATION = 'hasReferenceObject.ROOM';\n\nconst SITE_REFERENCE_CONTEXT = '.SiteContext';\nconst BUILDING_REFERENCE_CONTEXT = '.BuildingContext';\nconst FLOOR_REFERENCE_CONTEXT = '.FloorContext';\nconst ZONE_REFERENCE_CONTEXT = '.ZoneContext';\nconst ROOM_REFERENCE_CONTEXT = '.RoomContext';\n\nconst GEOGRAPHIC_TYPES = Object.freeze([\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n]) as string[];\n\nconst GEOGRAPHIC_TYPES_ORDER = Object.freeze([\n  CONTEXT_TYPE,\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  EQUIPMENT_TYPE,\n]) as string[];\n\nconst GEOGRAPHIC_RELATIONS = Object.freeze([\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n]) as string[];\n\nconst GEOGRAPHIC_RELATIONS_ORDER = Object.freeze([\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n]) as string[];\n\nconst MAP_TYPE_RELATION = Object.freeze(\n  new Map([\n    [SITE_TYPE, SITE_RELATION],\n    [BUILDING_TYPE, BUILDING_RELATION],\n    [FLOOR_TYPE, FLOOR_RELATION],\n    [ZONE_TYPE, ZONE_RELATION],\n    [ROOM_TYPE, ROOM_RELATION],\n    [EQUIPMENT_TYPE, EQUIPMENT_RELATION],\n  ])\n) as Map<string, string>;\n\nconst MAP_RELATION_TYPE = Object.freeze(\n  new Map([\n    [SITE_RELATION, SITE_TYPE],\n    [BUILDING_RELATION, BUILDING_TYPE],\n    [FLOOR_RELATION, FLOOR_TYPE],\n    [ZONE_RELATION, ZONE_TYPE],\n    [ROOM_RELATION, ROOM_TYPE],\n    [EQUIPMENT_RELATION, EQUIPMENT_TYPE],\n  ])\n) as Map<string, string>;\n\nexport {\n  CONTEXT_TYPE,\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  GEOGRAPHIC_TYPES,\n  EQUIPMENT_TYPE,\n  GEOGRAPHIC_TYPES_ORDER,\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  GEOGRAPHIC_RELATIONS,\n  EQUIPMENT_RELATION,\n  GEOGRAPHIC_RELATIONS_ORDER,\n  MAP_TYPE_RELATION,\n  MAP_RELATION_TYPE,\n  REFERENCE_TYPE,\n  REFERENCE_RELATION,\n  SITE_REFERENCE_CONTEXT,\n  BUILDING_REFERENCE_CONTEXT,\n  FLOOR_REFERENCE_CONTEXT,\n  ZONE_REFERENCE_CONTEXT,\n  ROOM_REFERENCE_CONTEXT,\n  REFERENCE_ROOM_RELATION\n};\n","import { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\nimport {\n  REFERENCE_OBJECT_RELATION_NAME,\n  BIM_OBJECT_TYPE,\n} from \"spinal-env-viewer-plugin-forge/dist/Constants\";\n\nexport default {\n  convertHexColorToRGB(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result\n      ? {\n          r: parseInt(result[1], 16),\n          g: parseInt(result[2], 16),\n          b: parseInt(result[3], 16),\n        }\n      : null;\n  },\n\n  convertColorToTHREE_Vector(color) {\n    let rgbColor = this.convertHexColorToRGB(`#${color}`);\n    return rgbColor\n      ? // eslint-disable-next-line no-undef\n        new THREE.Vector4(\n          rgbColor.r / 255,\n          rgbColor.g / 255,\n          rgbColor.b / 255,\n          0.7\n        )\n      : // eslint-disable-next-line no-undef\n        new THREE.Vector4(1, 0, 0, 0);\n  },\n\n  async getReferenceObject(roomId) {\n    const info = SpinalGraphService.getInfo(roomId);\n    let references = [];\n\n    if (info && info.type.get() === BIM_OBJECT_TYPE) {\n      references = [info];\n    } else {\n      references = await SpinalGraphService.getChildren(roomId, [\n        REFERENCE_OBJECT_RELATION_NAME,\n      ]);\n    }\n\n    const bims = references.map((el) => el.get());\n\n    const bimMap = new Map();\n\n    for (const bimObject of bims) {\n      const bimFileId = bimObject.bimFileId;\n      const dbid = bimObject.dbid;\n\n      if (typeof bimMap.get(bimFileId) === \"undefined\") {\n        bimMap.set(bimFileId, new Set());\n      }\n\n      bimMap.get(bimFileId).add(dbid);\n    }\n\n    const res = [];\n\n    for (const [key, value] of bimMap.entries()) {\n      res.push({\n        model: window.spinal.BimObjectService.getModelByBimfile(key),\n        ids: Array.from(value),\n      });\n    }\n\n    return res;\n  },\n\n  getGroupType(contextType) {\n    return contextType.replace(/GroupContext$/, \"\");\n  },\n};\n","\"use strict\";\n/*\n * Copyright 2020 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\nexports.__esModule = true;\nexports.REFERENCE_OBJECT_RELATION_TYPE = exports.BIM_OBJECT_RELATION_TYPE = exports.BIM_NODE_RELATION_TYPE = exports.BIM_OBJECT_VERSION_RELATION_TYPE = exports.REFERENCE_OBJECT_RELATION_NAME = exports.BIM_OBJECT_VERSION_RELATION_NAME = exports.BIM_OBJECT_RELATION_NAME = exports.BIM_NODE_RELATION_NAME = exports.BIM_CONTEXT_RELATION_TYPE = exports.BIM_CONTEXT_RELATION_NAME = exports.BIM_OBJECT_TYPE = exports.PART_RELATION_TYPE = exports.SCENE_RELATION_TYPE = exports.PART_RELATION_NAME = exports.SCENE_TYPE = exports.SCENE_RELATION_NAME = void 0;\nvar spinal_env_viewer_graph_service_1 = require(\"spinal-env-viewer-graph-service\");\nvar constants_js_1 = require(\"spinal-env-viewer-context-geographic-service/build/constants.js\");\nexports.SCENE_RELATION_NAME = 'hasScene';\nexports.SCENE_TYPE = \"scene\";\nexports.PART_RELATION_NAME = 'hasParts';\nexports.SCENE_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.PART_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.BIM_OBJECT_TYPE = constants_js_1.EQUIPMENT_TYPE;\nexports.BIM_CONTEXT_RELATION_NAME = \"hasBimContext\";\nexports.BIM_CONTEXT_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.BIM_NODE_RELATION_NAME = \"hasBimNode\";\nexports.BIM_OBJECT_RELATION_NAME = constants_js_1.EQUIPMENT_RELATION;\nexports.BIM_OBJECT_VERSION_RELATION_NAME = \"hasBimVersion\";\nexports.REFERENCE_OBJECT_RELATION_NAME = constants_js_1.REFERENCE_RELATION;\nexports.BIM_OBJECT_VERSION_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.BIM_NODE_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.BIM_OBJECT_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.REFERENCE_OBJECT_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\n","import {\n  SpinalContextApp,\n  spinalContextMenuService,\n} from \"spinal-env-viewer-context-menu-service\";\n\nimport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\n\nimport { spinalControlPointService } from \"spinal-env-viewer-plugin-control-endpoint-service\";\n\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\n\nimport { itemColoredMap, isColored } from \"../utilities/itemsColored\";\nimport {\n  CONTEXT_TYPE,\n  GEOGRAPHIC_TYPES_ORDER,\n} from \"spinal-env-viewer-context-geographic-service/build/constants\";\n\nimport utilities from \"../utilities/utitlities\";\n\nconst SIDEBAR = \"GraphManagerSideBar\";\n\nimport { EventBus } from \"../utilities/event\";\n\nclass SeeHeatMapButton extends SpinalContextApp {\n  constructor() {\n    super(\"See heatpmap\", \"See heatpmap\", {\n      icon: \"gradient\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\",\n    });\n  }\n\n  isShown(option) {\n    // const contextType = option.context.type.get();\n    // const isRoomGroupContext = groupManagerService.isRoomGroupContext(contextType);\n    // const isEquipementGroup = groupManagerService.isEquipmentGroupContext(contextType);\n\n    // if(!isRoomGroupContext && !isEquipementGroup) return Promise.resolve(-1);\n\n    // const type = option.selectedNode.type.get()\n    // const isGroup = groupManagerService.isGroup(type)\n\n    // if(!isGroup) return Promise.resolve(-1);\n\n    // const id = option.selectedNode.id.get()\n\n    // this.buttonCfg.fontColor = isColored(id) ? \"#FF0000\" : \"#FFFFFF\";\n\n    // return Promise.resolve(true);\n\n    const type = option.selectedNode.type.get();\n\n    const isGroup = groupManagerService.isGroup(type);\n\n    if (isGroup) {\n      const contextType = option.context.type.get();\n      const groupType = utilities.getGroupType(contextType);\n      return Promise.resolve(GEOGRAPHIC_TYPES_ORDER.indexOf(groupType));\n    }\n\n    return Promise.resolve(-1);\n  }\n\n  action(option) {\n    const id = option.selectedNode.id.get();\n\n    if (isColored(id)) {\n      itemColoredMap.delete(id);\n      this.fontColor = \"#FFFFFF\";\n    } else {\n      itemColoredMap.set(id, id);\n      this.fontColor = \"#FF0000\";\n    }\n\n    EventBus.$emit(\"heatmapPanel\", {\n      selectedNode: option.selectedNode.get(),\n      context: option.context.get(),\n      button: this,\n    });\n\n    // spinalPanelManagerService.openPanel(\"heatmapPanel\",{\n    //   selectedNode : option.selectedNode.get(),\n    //   context : option.context.get()\n    // })\n  }\n}\n\nconst seeHeatMapButton = new SeeHeatMapButton();\n\nspinalContextMenuService.registerApp(SIDEBAR, seeHeatMapButton, [3]);\n\nexport default seeHeatMapButton;\n","export const itemColoredMap = new Map();\n\nexport const isColored = (id) => {\n    return typeof itemColoredMap.get(id) !== \"undefined\";\n}","import vue from 'vue';\n\nexport const EventBus = new vue();","import {\n  SpinalContextApp,\n  spinalContextMenuService,\n} from \"spinal-env-viewer-context-menu-service\";\n\n// import {\n//   spinalControlPointService\n// } from \"spinal-env-viewer-plugin-control-endpoint-service\";\n\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\nimport { GEOGRAPHIC_TYPES_ORDER } from \"spinal-env-viewer-context-geographic-service/build/constants\";\n\nimport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\n\nimport utilities from \"../utilities/utitlities\";\n\nconst SIDEBAR = \"GraphManagerSideBar\";\n\nclass UnLinkControlPointToGroup extends SpinalContextApp {\n  constructor() {\n    super(\"unlink control point\", \"unlink control point\", {\n      icon: \"link_off\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\",\n    });\n  }\n\n  isShown(option) {\n    const type = option.selectedNode.type.get();\n\n    const isGroup = groupManagerService.isGroup(type);\n\n    if (isGroup) {\n      const contextType = option.context.type.get();\n      const groupType = utilities.getGroupType(contextType);\n      return Promise.resolve(GEOGRAPHIC_TYPES_ORDER.indexOf(groupType));\n    }\n\n    return Promise.resolve(-1);\n  }\n\n  action(option) {\n    // const nodeId = option.selectedNode.id.get();\n    // const contextId = option.context.id.get();\n\n    spinalPanelManagerService.openPanel(\n      \"UnLinkControlpointPanel\",\n      option.selectedNode.get()\n    );\n  }\n}\n\nconst unLinkControlPointToGroup = new UnLinkControlPointToGroup();\n\nspinalContextMenuService.registerApp(SIDEBAR, unLinkControlPointToGroup, [3]);\n\nexport default unLinkControlPointToGroup;\n","import { SpinalMountExtention } from \"spinal-env-viewer-panel-manager-service\";\n\nimport Vue from \"vue\";\n\nimport CreateControlEndpointContextDialog from \"./createContext.vue\";\nimport CreateControlPointDialog from \"./createControlPoint.vue\";\nimport ConfigurationDialog from \"./configuration.vue\";\nimport LinkControlPointDialog from \"./linkControlPointDialog.vue\";\nimport SelectGeographicType from \"./selectGeoType.vue\";\n// import UnLinkControlPointDialog from \"./unLinkControlPointDialog.vue\";\n\nconst dialogs = [\n  {\n    name: \"createControlEndpointContextDialog\",\n    vueMountComponent: Vue.extend(CreateControlEndpointContextDialog),\n    parentContainer: document.body,\n  },\n  {\n    name: \"createControlPointDialog\",\n    vueMountComponent: Vue.extend(CreateControlPointDialog),\n    parentContainer: document.body,\n  },\n  {\n    name: \"configurationDialog\",\n    vueMountComponent: Vue.extend(ConfigurationDialog),\n    parentContainer: document.body,\n  },\n  {\n    name: \"linkControlToRoomDialog\",\n    vueMountComponent: Vue.extend(LinkControlPointDialog),\n    parentContainer: document.body,\n  },\n  {\n    name: \"cp_selectGeographicType\",\n    vueMountComponent: Vue.extend(SelectGeographicType),\n    parentContainer: document.body,\n  },\n\n  // {\n  //   name: \"unLinkControlPointDialog\",\n  //   vueMountComponent: Vue.extend(UnLinkControlPointDialog),\n  //   parentContainer: document.body,\n  // },\n];\n\nfor (let index = 0; index < dialogs.length; index++) {\n  SpinalMountExtention.mount(dialogs[index]);\n}\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title class=\"_dialogTitle\">Create Control Point Context\n    </md-dialog-title>\n\n    <md-dialog-content>\n      <md-field>\n        <label>Context name</label>\n        <md-input v-model=\"name\"></md-input>\n      </md-field>\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Cancel</md-button>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(true)\"\n                 :disabled=\"disabled()\">OK</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n<script>\nimport { spinalControlPointService } from \"spinal-env-viewer-plugin-control-endpoint-service\";\n\nexport default {\n  name: \"createControlEndpointContextDialog\",\n  props: [\"onFinised\"],\n  data() {\n    return {\n      name: \"\",\n      showDialog: true,\n      callback: undefined,\n    };\n  },\n  mounted() {},\n  methods: {\n    opened(option) {\n      if (option.callback) {\n        this.callback = option.callback;\n      }\n    },\n    async removed(option) {\n      if (option) {\n        spinalControlPointService.createContext(this.name.trim()).then((el) => {\n          if (this.callback && typeof this.callback === \"function\") {\n            this.callback(el.get());\n          }\n        });\n      }\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised(closeResult);\n      }\n    },\n    disabled() {\n      return !(this.name && this.name.trim().length > 0);\n    },\n  },\n};\n</script>\n\n<style scoped>\n._dialogTitle {\n  text-align: center;\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n\t<md-dialog\n\t\tclass=\"_controlPointdialog\"\n\t\t:md-active.sync=\"showDialog\"\n\t\t@md-closed=\"closeDialog(false)\"\n\t>\n\t\t<md-dialog-title class=\"_dialogTitle\"\n\t\t\t>Create Control Point</md-dialog-title\n\t\t>\n\n\t\t<md-dialog-content class=\"controlPointDialogContent\">\n\t\t\t<!-- <md-button class=\"md-fab md-mini md-primary md-fab-bottom-right\"\n                 @click=\"addControlPoint\">\n        <md-icon>add</md-icon>\n      </md-button> -->\n\n\t\t\t<md-field class=\"nameInput\">\n\t\t\t\t<label>Control point name</label>\n\t\t\t\t<md-input v-model=\"name\"></md-input>\n\t\t\t</md-field>\n\n\t\t\t<div class=\"table-container\">\n\t\t\t\t<control-point-component\n\t\t\t\t\tclass=\"table-component-content\"\n\t\t\t\t\t:data=\"endpoints\"\n\t\t\t\t\t:editMode=\"true\"\n\t\t\t\t\t@cancel=\"closeDialog(false)\"\n\t\t\t\t\t@confirm=\"createData\"\n\t\t\t\t>\n\t\t\t\t</control-point-component>\n\t\t\t</div>\n\t\t</md-dialog-content>\n\n\t\t<!-- <md-dialog-actions>\n         <md-button\n            class=\"md-accent\"\n            @click=\"closeDialog(false)\"\n         >Cancel</md-button>\n         <md-button\n            class=\"md-primary\"\n            @click=\"closeDialog(true)\"\n            :disabled=\"disabled()\"\n         >Save</md-button>\n      </md-dialog-actions> -->\n\t</md-dialog>\n</template>\n\n<script>\n\timport { spinalControlPointService } from \"spinal-env-viewer-plugin-control-endpoint-service\";\n\timport ControlPointComponent from \"../components/controlPoints.vue\";\n\n\texport default {\n\t\tname: \"createControlPoint\",\n\t\tprops: [\"onFinised\"],\n\t\tcomponents: {\n\t\t\t\"control-point-component\": ControlPointComponent,\n\t\t},\n\t\tdata() {\n\t\t\tthis.contextId = \"\";\n\t\t\tthis.groupId = \"\";\n\n\t\t\treturn {\n\t\t\t\tname: \"\",\n\t\t\t\tendpoints: [],\n\t\t\t\tshowDialog: true,\n\t\t\t};\n\t\t},\n\t\tmounted() {},\n\t\tmethods: {\n\t\t\topened(option) {\n\t\t\t\tthis.contextId = option.context.id;\n\t\t\t\tthis.groupId = option.selectedNode.id;\n\t\t\t},\n\n\t\t\tasync removed(option) {\n\t\t\t\tif (option.confirm) {\n\t\t\t\t\tspinalControlPointService.createControlPointProfil(\n\t\t\t\t\t\tthis.contextId,\n\t\t\t\t\t\tthis.groupId,\n\t\t\t\t\t\t{ name: this.name, endpoints: option.data }\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis.showDialog = false;\n\t\t\t},\n\n\t\t\tcloseDialog(closeResult) {\n\t\t\t\tif (typeof this.onFinised === \"function\") {\n\t\t\t\t\tthis.onFinised({ confirm: closeResult });\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tdisabled() {\n\t\t\t\treturn !(\n\t\t\t\t\tthis.name &&\n\t\t\t\t\tthis.name.trim().length > 0 &&\n\t\t\t\t\tthis.endpoints.length > 0\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tcreateData(data) {\n\t\t\t\tif (this.name.trim().length === 0) return alert(\"name is required\");\n\t\t\t\tif (typeof this.onFinised === \"function\") {\n\t\t\t\t\tthis.onFinised({ confirm: true, data });\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t};\n</script>\n\n<style scoped>\n\t._controlPointdialog {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t._controlPointdialog ._dialogTitle {\n\t\ttext-align: center;\n\t}\n\n\t._controlPointdialog .controlPointDialogContent {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t._controlPointdialog .controlPointDialogContent .nameInput {\n\t\twidth: 100%;\n\t\theight: 50px;\n\t\tmargin-bottom: 10px;\n\t\t/* height: 60px; */\n\t}\n\n\t._controlPointdialog .controlPointDialogContent .table-container {\n\t\twidth: 100%;\n\t\theight: calc(100% - 60px);\n\t}\n\n\t._controlPointdialog\n\t\t.controlPointDialogContent\n\t\t.table-container\n\t\t.table-component-content {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n\n<style>\n\t._controlPointdialog .md-dialog-container {\n\t\tmax-width: 100%;\n\t\tmax-height: 100%;\n\t}\n\n\t._controlPointdialog .controlPointDialogContent .md-field {\n\t\tmargin: unset;\n\t}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n\t<div class=\"control-point-table\">\n\t\t<!-- <div class=\"table\"> -->\n\t\t<md-table class=\"table\" v-model=\"searched\">\n\t\t\t<md-table-empty-state\n\t\t\t\tmd-label=\"No control point found\"\n\t\t\t\t:md-description=\"`No control point found.`\"\n\t\t\t>\n\t\t\t</md-table-empty-state>\n\n\t\t\t<md-table-row\n\t\t\t\tv-if=\"!editMode\"\n\t\t\t\tslot=\"md-table-row\"\n\t\t\t\tslot-scope=\"{ item }\"\n\t\t\t>\n\t\t\t\t<md-table-cell md-label=\"Name\">\n\t\t\t\t\t{{ item.name }}\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell md-label=\"Alias\">\n\t\t\t\t\t{{ item.alias }}\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell md-label=\"DataType\">\n\t\t\t\t\t{{ controlPointDataType[item.dataType] }}\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell md-label=\"Endpoint Type\">\n\t\t\t\t\t{{ item.type }}\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<!-- <md-table-cell md-label=\"Endpoint Icon\">\n          <md-icon :title=\"item.icon\">{{item.icon}}</md-icon>\n        </md-table-cell> -->\n\n\t\t\t\t<md-table-cell md-label=\"Unit\">\n\t\t\t\t\t{{ item.unit || \"-\" }}\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell md-label=\"Command\">\n\t\t\t\t\t{{ boolValues[item.command] || \"No\" }}\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell md-label=\"Save TimeSeries\">\n\t\t\t\t\t{{ boolValues[item.saveTimeSeries] || \"No\" }}\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<!-- <md-table-cell>\n          <md-button class=\"md-icon-button md-primary\"\n                     @click=\"configureColor(item)\">\n            <md-icon>settings</md-icon>\n          </md-button>\n        </md-table-cell>\n\n        <md-table-cell v-if=\"editMode\">\n          <md-button class=\"md-icon-button md-accent\">\n            <md-icon>delete</md-icon>\n          </md-button>\n        </md-table-cell> -->\n\t\t\t</md-table-row>\n\n\t\t\t<!--\n      //////////////////////////////////// \n      //  Edit Mode \n      //////////////////////////////////// \n      -->\n\n\t\t\t<md-table-row v-else slot=\"md-table-row\" slot-scope=\"{ item }\">\n\t\t\t\t<md-table-cell class=\"tableCell\" md-label=\"Name\">\n\t\t\t\t\t<md-field md-inline>\n\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t<md-input v-model=\"item.name\"></md-input>\n\t\t\t\t\t</md-field>\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell class=\"tableCell\" md-label=\"Alias\">\n\t\t\t\t\t<md-field md-inline>\n\t\t\t\t\t\t<label>Alias</label>\n\t\t\t\t\t\t<md-input v-model=\"item.alias\"></md-input>\n\t\t\t\t\t</md-field>\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell class=\"tableCell\" md-label=\"DataType\">\n\t\t\t\t\t<md-field md-inline>\n\t\t\t\t\t\t<label for=\"command\">dataType</label>\n\t\t\t\t\t\t<md-select\n\t\t\t\t\t\t\tv-model=\"item.dataType\"\n\t\t\t\t\t\t\tname=\"dataType\"\n\t\t\t\t\t\t\tid=\"dataType\"\n\t\t\t\t\t\t\t@md-selected=\"selectDataType(item)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<md-option\n\t\t\t\t\t\t\t\tv-for=\"(type, index) in Object.keys(\n\t\t\t\t\t\t\t\t\tcontrolPointDataType\n\t\t\t\t\t\t\t\t)\"\n\t\t\t\t\t\t\t\t:value=\"type\"\n\t\t\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{{ controlPointDataType[type] }}\n\t\t\t\t\t\t\t</md-option>\n\t\t\t\t\t\t</md-select>\n\t\t\t\t\t</md-field>\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell class=\"tableCell\" md-label=\"Endpoint Type\">\n\t\t\t\t\t<md-field md-inline>\n\t\t\t\t\t\t<label for=\"command\">type</label>\n\t\t\t\t\t\t<md-select v-model=\"item.type\" name=\"type\" id=\"type\">\n\t\t\t\t\t\t\t<md-option\n\t\t\t\t\t\t\t\tv-for=\"(type, index) in Object.keys(endpointTypes)\"\n\t\t\t\t\t\t\t\t:value=\"type\"\n\t\t\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{{ endpointTypes[type] }}\n\t\t\t\t\t\t\t</md-option>\n\t\t\t\t\t\t</md-select>\n\t\t\t\t\t</md-field>\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell class=\"tableCell\" md-label=\"Unit\">\n\t\t\t\t\t<md-field md-inline>\n\t\t\t\t\t\t<label>Unit</label>\n\t\t\t\t\t\t<md-input v-model=\"item.unit\"></md-input>\n\t\t\t\t\t</md-field>\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell class=\"tableCell\" md-label=\"Command\">\n\t\t\t\t\t<md-field md-inline>\n\t\t\t\t\t\t<label for=\"command\">Command</label>\n\t\t\t\t\t\t<md-select v-model=\"item.command\" name=\"command\" id=\"command\">\n\t\t\t\t\t\t\t<md-option :value=\"1\">Yes</md-option>\n\t\t\t\t\t\t\t<md-option :value=\"0\">No</md-option>\n\t\t\t\t\t\t</md-select>\n\t\t\t\t\t</md-field>\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell class=\"tableCell\" md-label=\"Save TimeSeries\">\n\t\t\t\t\t<md-field md-inline>\n\t\t\t\t\t\t<label for=\"saveTimeSeries\">TimeSeries</label>\n\t\t\t\t\t\t<md-select\n\t\t\t\t\t\t\tv-model=\"item.saveTimeSeries\"\n\t\t\t\t\t\t\tname=\"saveTimeSeries\"\n\t\t\t\t\t\t\tid=\"saveTimeSeries\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<md-option :value=\"1\">Yes</md-option>\n\t\t\t\t\t\t\t<md-option :value=\"0\">No</md-option>\n\t\t\t\t\t\t</md-select>\n\t\t\t\t\t</md-field>\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell class=\"tableCell\">\n\t\t\t\t\t<md-button\n\t\t\t\t\t\tclass=\"md-icon-button md-primary\"\n\t\t\t\t\t\t:disabled=\"disableConfig(item)\"\n\t\t\t\t\t\t@click=\"configureColor(item)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<md-icon>settings</md-icon>\n\t\t\t\t\t</md-button>\n\t\t\t\t</md-table-cell>\n\n\t\t\t\t<md-table-cell class=\"tableCell\">\n\t\t\t\t\t<md-button\n\t\t\t\t\t\tclass=\"md-icon-button md-accent\"\n\t\t\t\t\t\t@click=\"removeItem(item.id)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<md-icon>delete</md-icon>\n\t\t\t\t\t</md-button>\n\t\t\t\t</md-table-cell>\n\t\t\t</md-table-row>\n\t\t</md-table>\n\t\t<!-- </div> -->\n\n\t\t<div class=\"fabs\" v-if=\"editMode\">\n\t\t\t<md-button\n\t\t\t\tclass=\"md-fab md-mini md-primary\"\n\t\t\t\ttitle=\"add controlPoint\"\n\t\t\t\t@click=\"addControlPoint\"\n\t\t\t>\n\t\t\t\t<md-icon>add</md-icon>\n\t\t\t</md-button>\n\n\t\t\t<md-button\n\t\t\t\tclass=\"md-fab md-mini md-accent\"\n\t\t\t\ttitle=\"cancel\"\n\t\t\t\t@click=\"cancel\"\n\t\t\t>\n\t\t\t\t<md-icon>close</md-icon>\n\t\t\t</md-button>\n\n\t\t\t<md-button\n\t\t\t\tclass=\"md-fab md-mini md-primary\"\n\t\t\t\ttitle=\"confirm\"\n\t\t\t\t@click=\"valid\"\n\t\t\t>\n\t\t\t\t<md-icon>check</md-icon>\n\t\t\t</md-button>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport {\n\t\tControlPointObj,\n\t\tControlEndpointDataType,\n\t\tgetConfig,\n\t\tControlEndpointType,\n\t} from \"spinal-env-viewer-plugin-control-endpoint-service\";\n\n\timport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\n\n\texport default {\n\t\tname: \"controlPointComponent\",\n\t\tprops: {\n\t\t\tdata: {\n\t\t\t\tdefault: [],\n\t\t\t},\n\t\t\teditMode: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false,\n\t\t\t},\n\t\t},\n\t\tdata() {\n\t\t\tthis.controlPointDataType = ControlEndpointDataType;\n\t\t\tthis.endpointTypes = ControlEndpointType;\n\n\t\t\t// this.endpointDataType = ControlEndpointType;\n\n\t\t\tthis.boolValues = {\n\t\t\t\t1: \"Yes\",\n\t\t\t\t0: \"No\",\n\t\t\t};\n\t\t\treturn {\n\t\t\t\tsearched: [],\n\t\t\t\t// endpointTypes: [],\n\t\t\t};\n\t\t},\n\t\tmounted() {\n\t\t\tthis.searched = JSON.parse(JSON.stringify(this.data));\n\t\t\t// this.endpointTypes = Object.keys(InputDataEndpointType).filter(\n\t\t\t//   (el) => !isNaN(el)\n\t\t\t// );\n\n\t\t\t// this.dataTypesValues = Object.keys(ControlEndpointDataType);\n\t\t},\n\t\tmethods: {\n\t\t\tcreateControlPoint() {\n\t\t\t\tthis.$emit(\"create\");\n\t\t\t},\n\n\t\t\taddControlPoint() {\n\t\t\t\tconst controlPoint = Object.assign({}, ControlPointObj);\n\t\t\t\tcontrolPoint.id = Date.now();\n\n\t\t\t\tthis.searched = [...this.searched, controlPoint];\n\t\t\t},\n\n\t\t\tremoveItem(id) {\n\t\t\t\tthis.searched = this.searched.filter((el) => el.id !== id);\n\t\t\t},\n\n\t\t\tconfigureColor(item) {\n\t\t\t\tspinalPanelManagerService.openPanel(\"configurationDialog\", {\n\t\t\t\t\titem: JSON.parse(JSON.stringify(item)),\n\t\t\t\t\tcallback: (config) => {\n\t\t\t\t\t\titem.config = config;\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tcancel() {\n\t\t\t\tthis.searched = JSON.parse(JSON.stringify(this.data));\n\t\t\t\tthis.$emit(\"cancel\");\n\t\t\t},\n\n\t\t\tvalid() {\n\t\t\t\tconst validItems = this.getValidRow();\n\n\t\t\t\tif (validItems.length === 0) return alert(\"no control point valid\");\n\n\t\t\t\tif (validItems.length === this.searched.length) {\n\t\t\t\t\tthis.$emit(\"confirm\", validItems);\n\t\t\t\t} else if (validItems.length < this.searched.length) {\n\t\t\t\t\tconst diff = this.searched.length - validItems.length;\n\t\t\t\t\tconst valid = window.confirm(\n\t\t\t\t\t\t`${diff} control points is/are not valid and will be deleted, will you continue ?`\n\t\t\t\t\t);\n\n\t\t\t\t\tif (valid) {\n\t\t\t\t\t\tthis.$emit(\"confirm\", validItems);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tselectDataType(item) {\n\t\t\t\tconst config = getConfig(item.dataType);\n\t\t\t\tif (config) {\n\t\t\t\t\titem.config = config;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tgetValidRow() {\n\t\t\t\treturn this.searched.filter((item) =>\n\t\t\t\t\tthis.controlPointIsValid(item)\n\t\t\t\t);\n\n\t\t\t\t// const filtered = this.searched.filter((item) =>\n\t\t\t\t//   this.controlPointIsValid(item)\n\t\t\t\t// );\n\t\t\t\t// return filtered.map((el) => {\n\t\t\t\t//   if (!isNaN(el.type)) {\n\t\t\t\t//     el.type = InputDataEndpointType[el.type];\n\t\t\t\t//   }\n\t\t\t\t//   return el;\n\t\t\t\t// });\n\t\t\t},\n\n\t\t\tisNotValid() {\n\t\t\t\tconst found = this.searched.find((el) =>\n\t\t\t\t\tthis.controlPointIsValid(el)\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tcontrolPointIsValid(controlPoint) {\n\t\t\t\treturn (\n\t\t\t\t\tcontrolPoint.name.trim().length > 0 &&\n\t\t\t\t\tcontrolPoint.alias.trim().length > 0 &&\n\t\t\t\t\tcontrolPoint.dataType.trim().length\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tdisableConfig(item) {\n\t\t\t\treturn (\n\t\t\t\t\t[\n\t\t\t\t\t\tControlEndpointDataType.Float,\n\t\t\t\t\t\tControlEndpointDataType.Integer,\n\t\t\t\t\t\tControlEndpointDataType.Integer16,\n\t\t\t\t\t\tControlEndpointDataType.Real,\n\t\t\t\t\t\tControlEndpointDataType.Double,\n\t\t\t\t\t\tControlEndpointDataType.Long,\n\t\t\t\t\t\tControlEndpointDataType.Boolean,\n\t\t\t\t\t\tControlEndpointDataType.Enum,\n\t\t\t\t\t].indexOf(item.dataType) === -1\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\twatch: {\n\t\t\tdata() {\n\t\t\t\tthis.searched = JSON.parse(JSON.stringify(this.data));\n\t\t\t},\n\t\t},\n\t};\n</script>\n\n<style scoped>\n\t.control-point-table {\n\t\twidth: 100%;\n\t\theight: calc(100% - 10px);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t.control-point-table .fabs {\n\t\twidth: 100%;\n\t\theight: 50px;\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\n\t\t/* bottom: 5px;\n   right: 5px; */\n\t\t/* position: absolute; */\n\t\t/* background-color: red; */\n\t}\n\n\t.control-point-table .table {\n\t\t/* width: 100%; */\n\t\theight: calc(100% - 50px);\n\t\toverflow: hidden;\n\t}\n</style>\n\n<style>\n\t.control-point-table .table .md-content.md-table.md-theme-default {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t}\n\n\t.control-point-table\n\t\t.table\n\t\t.md-content.md-table-content.md-scrollbar.md-theme-default {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: auto;\n\t}\n\n\t.control-point-table .table .tableCell .md-field {\n\t\tmin-height: unset;\n\t}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n\n<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\"\n             class=\"config_dialog_content\">\n    <md-dialog-title class=\"_dialogTitle\">Configuration</md-dialog-title>\n\n    <md-dialog-content>\n\n      <number-config-template v-if=\"isNumberConfig()\"\n                              :config=\"config\"\n                              @valid=\"confirmConfig\"></number-config-template>\n\n      <boolean-config-template v-else-if=\"isBoolConfig()\"\n                               :config=\"config\"\n                               @valid=\"confirmConfig\"></boolean-config-template>\n\n      <enum-config-template v-else-if=\"isEnumConfig()\"\n                            :config=\"config\"\n                            ref=\"enum-config\"></enum-config-template>\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Cancel</md-button>\n      <md-button class=\"md-primary\"\n                 :disabled=\"disableOkBtn()\"\n                 @click=\"closeDialog(true)\">OK</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n<script>\nimport NumberConfigTemplate from \"../components/config-components/numberConfig.vue\";\nimport BooleanConfigTemplate from \"../components/config-components/booleanConfig.vue\";\nimport EnumConfigTemplate from \"../components/config-components/enumConfig.vue\";\n\nimport { ControlEndpointDataType } from \"spinal-env-viewer-plugin-control-endpoint-service\";\n\nexport default {\n  name: \"configurationDialog\",\n  components: {\n    \"number-config-template\": NumberConfigTemplate,\n    \"boolean-config-template\": BooleanConfigTemplate,\n    \"enum-config-template\": EnumConfigTemplate,\n  },\n  props: [\"onFinised\"],\n  data() {\n    return {\n      config: {},\n      item: {},\n      showDialog: true,\n      callback: undefined,\n    };\n  },\n  mounted() {},\n  methods: {\n    opened(option) {\n      this.item = option.item;\n      this.config = JSON.parse(JSON.stringify(this.item.config));\n\n      if (option.callback) {\n        this.callback = option.callback;\n      }\n    },\n\n    async removed(option) {\n      if (option.confirm && typeof this.callback === \"function\") {\n        if (this.isEnumConfig()) {\n          this.config.enumeration = this.getConfigEnum();\n        }\n        this.callback(JSON.parse(JSON.stringify(this.config)));\n      }\n\n      this.showDialog = false;\n    },\n\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised({ confirm: closeResult });\n      }\n    },\n\n    isNumberConfig() {\n      return (\n        [\n          ControlEndpointDataType.Float,\n          ControlEndpointDataType.Integer,\n          ControlEndpointDataType.Integer16,\n          ControlEndpointDataType.Real,\n          ControlEndpointDataType.Double,\n          ControlEndpointDataType.Long,\n        ].indexOf(this.item.dataType) !== -1\n      );\n    },\n\n    isBoolConfig() {\n      return this.item.dataType === ControlEndpointDataType.Boolean;\n    },\n\n    isEnumConfig() {\n      return this.item.dataType === ControlEndpointDataType.Enum;\n    },\n\n    confirmConfig(config) {\n      this.config = Object.assign(config);\n    },\n\n    numberConfigIsValid(config) {\n      return (\n        (\"\" + config.min.value).trim().length > 0 &&\n        (\"\" + config.min.color).trim().length > 0 &&\n        (\"\" + config.average.value).trim().length > 0 &&\n        (\"\" + config.average.color).trim().length > 0 &&\n        (\"\" + config.max.value).trim().length > 0 &&\n        (\"\" + config.max.color).trim().length > 0\n      );\n    },\n\n    booleanConfigIsValid(config) {\n      return (\n        (\"\" + config.min.value).trim().length > 0 &&\n        (\"\" + config.min.color).trim().length > 0 &&\n        (\"\" + config.max.value).trim().length > 0 &&\n        (\"\" + config.max.color).trim().length > 0\n      );\n    },\n\n    enumConfigIsValid(config) {\n      const found = config.find(\n        (el) => el.name.trim().length === 0 || el.color.trim().length === 0\n      );\n\n      return typeof found === \"undefined\";\n    },\n\n    disableOkBtn() {\n      if (this.isNumberConfig()) {\n        return !this.numberConfigIsValid(this.config);\n      } else if (this.isBoolConfig()) {\n        return !this.booleanConfigIsValid(this.config);\n      } else if (this.isEnumConfig()) {\n        return !this.enumConfigIsValid(this.config.enumeration);\n      }\n    },\n\n    getConfigEnum() {\n      const enumRef = this.$refs[\"enum-config\"];\n      if (enumRef) {\n        return enumRef.enumeration.filter(\n          (el) => el.name.trim().length > 0 && el.color.trim().length > 0\n        );\n        // return JSON.parse(JSON.stringify(enumRef.enumeration));\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.config_dialog_content {\n  width: 50%;\n  height: 60%;\n}\n\n.config_dialog_content ._dialogTitle {\n  text-align: center;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div class=\"config_container\">\n    <div class=\"values md-layout md-gutter\">\n      <div class=\"md-layout-item md-size-33\">\n        <span class=\"md-caption\">Min</span>\n        <md-field md-inline>\n          <md-input type=\"number\"\n                    @change=\"calculateAverage\"\n                    v-model=\"config.min.value\"></md-input>\n        </md-field>\n        <span class=\"md-caption\">Color</span>\n        <div class=\"colorContainer\">\n          <div class=\"current-color\"\n               :style=\"'background-color: ' + config.min.color\"\n               @click=\"togglePicker('min')\"></div>\n          <chrome-picker class=\"colorSelect\"\n                         v-model=\"config.min.color\"\n                         v-if=\"display.min\"\n                         @input=\"updateMinColor\" />\n        </div>\n      </div>\n\n      <div class=\"md-layout-item md-size-33\">\n        <span class=\"md-caption\">Average</span>\n        <md-field md-inline>\n          <md-input type=\"number\"\n                    disabled\n                    v-model=\"config.average.value\"></md-input>\n        </md-field>\n        <span class=\"md-caption\">Color</span>\n        <div class=\"colorContainer\">\n          <div class=\"current-color\"\n               :style=\"'background-color: ' + config.average.color\"\n               @click=\"togglePicker('average')\"></div>\n          <chrome-picker class=\"colorSelect\"\n                         v-model=\"config.average.color\"\n                         v-if=\"display.average\"\n                         @input=\"updateAverageColor\" />\n        </div>\n      </div>\n\n      <div class=\"md-layout-item md-size-33\">\n        <span class=\"md-caption\">Max</span>\n        <md-field md-inline>\n          <md-input type=\"number\"\n                    @change=\"calculateAverage\"\n                    v-model=\"config.max.value\"></md-input>\n        </md-field>\n        <span class=\"md-caption\">Color</span>\n        <div class=\"colorContainer\">\n          <div class=\"current-color\"\n               :style=\"'background-color: ' + config.max.color\"\n               @click=\"togglePicker('max')\"></div>\n          <chrome-picker class=\"colorSelect\"\n                         v-model=\"config.max.color\"\n                         v-if=\"display.max\"\n                         @input=\"updateMaxColor\" />\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"colorGradient\">\n      <div v-for=\"(g,index) in gradient\"\n           :key=\"index\"\n           v-tooltip=\"getColorValue(index)\"\n           :style=\"'background-color: #' + g.toHex()\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Chrome } from \"vue-color\";\nimport { color } from \"../../../utilities/color\";\n\nexport default {\n  name: \"NumberConfigTemplate\",\n  components: { \"chrome-picker\": Chrome },\n  props: {\n    config: {},\n  },\n  data() {\n    return {\n      display: {\n        min: false,\n        average: false,\n        max: false,\n      },\n      gradient: [],\n    };\n  },\n  mounted() {\n    this.gradient = color.getGradientColor(\n      this.config.min,\n      this.config.average,\n      this.config.max\n    );\n  },\n  methods: {\n    updateMinColor(val) {\n      this.config.min.color = val.hex;\n      this.gradient = color.getGradientColor(\n        this.config.min,\n        this.config.average,\n        this.config.max\n      );\n    },\n    updateMaxColor(val) {\n      this.config.max.color = val.hex;\n      this.gradient = color.getGradientColor(\n        this.config.min,\n        this.config.average,\n        this.config.max\n      );\n    },\n    updateAverageColor(val) {\n      this.config.average.color = val.hex;\n      this.gradient = color.getGradientColor(\n        this.config.min,\n        this.config.average,\n        this.config.max\n      );\n    },\n    calculateAverage() {\n      let max = parseInt(this.config.max.value);\n      let min = parseInt(this.config.min.value);\n      //   if (!isNaN(max) && !isNaN(min) && this.average)\n      this.config.average.value = (max + min) / 2;\n    },\n\n    togglePicker(val) {\n      this.display[val] = !this.display[val];\n    },\n\n    getColorValue(index) {\n      let max = parseInt(this.config.max.value);\n      let min = parseInt(this.config.min.value);\n\n      if (!isNaN(max) && !isNaN(min)) {\n        let begin = ((max - min) * index) / 10;\n        let end = ((max - min) * (index + 1)) / 10;\n        return `${begin + min} - ${end + min}`;\n      }\n\n      return \"-\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n.config_container {\n  width: 90%;\n  height: 100%;\n  margin: auto;\n}\n\n.config_container .values {\n  height: 60%;\n}\n\n.config_container .colorSelect {\n  width: 100%;\n}\n\n.config_container .colorContainer {\n  width: 100%;\n  height: 30px;\n}\n\n.config_container .colorContainer .current-color {\n  width: 100%;\n  height: 80%;\n}\n\n.config_container .colorContainer .current-color:hover {\n  cursor: pointer;\n}\n\n.config_container .colorGradient {\n  width: 100%;\n  height: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  margin-top: 100px;\n}\n\n.config_container .colorGradient div {\n  flex-grow: 1;\n  position: relative;\n  text-align: center;\n  color: black;\n}\n\n.config_container .colorGradient div:hover {\n  cursor: pointer;\n}\n\n.colorGradient div:after {\n  content: attr(title);\n  position: absolute;\n  bottom: -15px;\n  font-family: monospace;\n  font-size: 12px;\n}\n</style>","let tinygradient = require(\"tinygradient\");\n\nlet color = {\n  getGradientColor(min, average, max) {\n    let colorLength = average ? 10 : 2;\n    let colors = average ? [min.color, average.color, max.color] : [min.color,\n      max.color\n    ];\n\n    let gradient = tinygradient(colors);\n\n    return gradient.rgb(colorLength);\n  },\n\n  getColor(value, minValue, maxValue, gradientColor) {\n    if (typeof minValue === \"boolean\" && typeof maxValue === \"boolean\")\n      return value ? gradientColor[1].toHex() : gradientColor[0].toHex();\n\n    if (!isNaN(value)) {\n      let index = Math.floor(((value - minValue) * 10) / (maxValue -\n        minValue));\n\n      if (index < 0) {\n        index = 0;\n      } else if (index >= gradientColor.length) {\n        index = gradientColor.length - 1;\n      }\n\n\n      return gradientColor[index].toHex();\n    }\n    return undefined;\n\n  },\n\n  getEnumGradientColor(liste) {\n    return liste.map(el => ({value : el.name, color : el.color}));\n  },\n\n  getEnumColor(value, liste) {\n    const found = liste.find(el => el.name === value);\n    if(found) return found.color;\n  }\n}\n\nexport {\n  color\n}","/*!\n * tinygradient (v1.1.5)\n * @copyright 2014-2021 Damien \"Mistic\" Sorel <contact@git.strangeplanet.fr>\n * @licence MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('tinycolor2')) :\n    typeof define === 'function' && define.amd ? define(['tinycolor2'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.tinygradient = factory(global.tinycolor));\n}(this, (function (tinycolor2) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var tinycolor2__default = /*#__PURE__*/_interopDefaultLegacy(tinycolor2);\n\n    /**\n     * @typedef {Object} TinyGradient.StopInput\n     * @property {ColorInput} color\n     * @property {number} pos\n     */\n\n    /**\n     * @typedef {Object} TinyGradient.StepValue\n     * @type {number} [r]\n     * @type {number} [g]\n     * @type {number} [b]\n     * @type {number} [h]\n     * @type {number} [s]\n     * @type {number} [v]\n     * @type {number} [a]\n     */\n\n    /**\n     * @type {StepValue}\n     */\n\n    var RGBA_MAX = {\n      r: 256,\n      g: 256,\n      b: 256,\n      a: 1\n    };\n    /**\n     * @type {StepValue}\n     */\n\n    var HSVA_MAX = {\n      h: 360,\n      s: 1,\n      v: 1,\n      a: 1\n    };\n    /**\n     * Linearly compute the step size between start and end (not normalized)\n     * @param {StepValue} start\n     * @param {StepValue} end\n     * @param {number} steps - number of desired steps\n     * @return {StepValue}\n     */\n\n    function stepize(start, end, steps) {\n      var step = {};\n\n      for (var k in start) {\n        if (start.hasOwnProperty(k)) {\n          step[k] = steps === 0 ? 0 : (end[k] - start[k]) / steps;\n        }\n      }\n\n      return step;\n    }\n    /**\n     * Compute the final step color\n     * @param {StepValue} step - from `stepize`\n     * @param {StepValue} start\n     * @param {number} i - color index\n     * @param {StepValue} max - rgba or hsva of maximum values for each channel\n     * @return {StepValue}\n     */\n\n\n    function interpolate(step, start, i, max) {\n      var color = {};\n\n      for (var k in start) {\n        if (start.hasOwnProperty(k)) {\n          color[k] = step[k] * i + start[k];\n          color[k] = color[k] < 0 ? color[k] + max[k] : max[k] !== 1 ? color[k] % max[k] : color[k];\n        }\n      }\n\n      return color;\n    }\n    /**\n     * Generate gradient with RGBa interpolation\n     * @param {StopInput} stop1\n     * @param {StopInput} stop2\n     * @param {number} steps\n     * @return {tinycolor[]} color1 included, color2 excluded\n     */\n\n\n    function interpolateRgb(stop1, stop2, steps) {\n      var start = stop1.color.toRgb();\n      var end = stop2.color.toRgb();\n      var step = stepize(start, end, steps);\n      var gradient = [stop1.color];\n\n      for (var i = 1; i < steps; i++) {\n        var color = interpolate(step, start, i, RGBA_MAX);\n        gradient.push(tinycolor2__default['default'](color));\n      }\n\n      return gradient;\n    }\n    /**\n     * Generate gradient with HSVa interpolation\n     * @param {StopInput} stop1\n     * @param {StopInput} stop2\n     * @param {number} steps\n     * @param {boolean|'long'|'short'} mode\n     * @return {tinycolor[]} color1 included, color2 excluded\n     */\n\n\n    function interpolateHsv(stop1, stop2, steps, mode) {\n      var start = stop1.color.toHsv();\n      var end = stop2.color.toHsv(); // rgb interpolation if one of the steps in grayscale\n\n      if (start.s === 0 || end.s === 0) {\n        return interpolateRgb(stop1, stop2, steps);\n      }\n\n      var trigonometric;\n\n      if (typeof mode === 'boolean') {\n        trigonometric = mode;\n      } else {\n        var trigShortest = start.h < end.h && end.h - start.h < 180 || start.h > end.h && start.h - end.h > 180;\n        trigonometric = mode === 'long' && trigShortest || mode === 'short' && !trigShortest;\n      }\n\n      var step = stepize(start, end, steps);\n      var gradient = [stop1.color]; // recompute hue\n\n      var diff;\n\n      if (start.h <= end.h && !trigonometric || start.h >= end.h && trigonometric) {\n        diff = end.h - start.h;\n      } else if (trigonometric) {\n        diff = 360 - end.h + start.h;\n      } else {\n        diff = 360 - start.h + end.h;\n      }\n\n      step.h = Math.pow(-1, trigonometric ? 1 : 0) * Math.abs(diff) / steps;\n\n      for (var i = 1; i < steps; i++) {\n        var color = interpolate(step, start, i, HSVA_MAX);\n        gradient.push(tinycolor2__default['default'](color));\n      }\n\n      return gradient;\n    }\n    /**\n     * Compute substeps between each stops\n     * @param {StopInput[]} stops\n     * @param {number} steps\n     * @return {number[]}\n     */\n\n\n    function computeSubsteps(stops, steps) {\n      var l = stops.length; // validation\n\n      steps = parseInt(steps, 10);\n\n      if (isNaN(steps) || steps < 2) {\n        throw new Error('Invalid number of steps (< 2)');\n      }\n\n      if (steps < l) {\n        throw new Error('Number of steps cannot be inferior to number of stops');\n      } // compute substeps from stop positions\n\n\n      var substeps = [];\n\n      for (var i = 1; i < l; i++) {\n        var step = (steps - 1) * (stops[i].pos - stops[i - 1].pos);\n        substeps.push(Math.max(1, Math.round(step)));\n      } // adjust number of steps\n\n\n      var totalSubsteps = 1;\n\n      for (var n = l - 1; n--;) {\n        totalSubsteps += substeps[n];\n      }\n\n      while (totalSubsteps !== steps) {\n        if (totalSubsteps < steps) {\n          var min = Math.min.apply(null, substeps);\n          substeps[substeps.indexOf(min)]++;\n          totalSubsteps++;\n        } else {\n          var max = Math.max.apply(null, substeps);\n          substeps[substeps.indexOf(max)]--;\n          totalSubsteps--;\n        }\n      }\n\n      return substeps;\n    }\n    /**\n     * Compute the color at a specific position\n     * @param {StopInput[]} stops\n     * @param {number} pos\n     * @param {string} method\n     * @param {StepValue} max\n     * @returns {tinycolor}\n     */\n\n\n    function computeAt(stops, pos, method, max) {\n      if (pos < 0 || pos > 1) {\n        throw new Error('Position must be between 0 and 1');\n      }\n\n      var start, end;\n\n      for (var i = 0, l = stops.length; i < l - 1; i++) {\n        if (pos >= stops[i].pos && pos < stops[i + 1].pos) {\n          start = stops[i];\n          end = stops[i + 1];\n          break;\n        }\n      }\n\n      if (!start) {\n        start = end = stops[stops.length - 1];\n      }\n\n      var step = stepize(start.color[method](), end.color[method](), (end.pos - start.pos) * 100);\n      var color = interpolate(step, start.color[method](), (pos - start.pos) * 100, max);\n      return tinycolor2__default['default'](color);\n    }\n\n    var TinyGradient = /*#__PURE__*/function () {\n      /**\n       * @param {StopInput[]|ColorInput[]} stops\n       * @returns {TinyGradient}\n       */\n      function TinyGradient(stops) {\n        // validation\n        if (stops.length < 2) {\n          throw new Error('Invalid number of stops (< 2)');\n        }\n\n        var havingPositions = stops[0].pos !== undefined;\n        var l = stops.length;\n        var p = -1;\n        var lastColorLess = false; // create tinycolor objects and clean positions\n\n        this.stops = stops.map(function (stop, i) {\n          var hasPosition = stop.pos !== undefined;\n\n          if (havingPositions ^ hasPosition) {\n            throw new Error('Cannot mix positionned and not posionned color stops');\n          }\n\n          if (hasPosition) {\n            var hasColor = stop.color !== undefined;\n\n            if (!hasColor && (lastColorLess || i === 0 || i === l - 1)) {\n              throw new Error('Cannot define two consecutive position-only stops');\n            }\n\n            lastColorLess = !hasColor;\n            stop = {\n              color: hasColor ? tinycolor2__default['default'](stop.color) : null,\n              colorLess: !hasColor,\n              pos: stop.pos\n            };\n\n            if (stop.pos < 0 || stop.pos > 1) {\n              throw new Error('Color stops positions must be between 0 and 1');\n            } else if (stop.pos < p) {\n              throw new Error('Color stops positions are not ordered');\n            }\n\n            p = stop.pos;\n          } else {\n            stop = {\n              color: tinycolor2__default['default'](stop.color !== undefined ? stop.color : stop),\n              pos: i / (l - 1)\n            };\n          }\n\n          return stop;\n        });\n\n        if (this.stops[0].pos !== 0) {\n          this.stops.unshift({\n            color: this.stops[0].color,\n            pos: 0\n          });\n          l++;\n        }\n\n        if (this.stops[l - 1].pos !== 1) {\n          this.stops.push({\n            color: this.stops[l - 1].color,\n            pos: 1\n          });\n        }\n      }\n      /**\n       * Return new instance with reversed stops\n       * @return {TinyGradient}\n       */\n\n\n      var _proto = TinyGradient.prototype;\n\n      _proto.reverse = function reverse() {\n        var stops = [];\n        this.stops.forEach(function (stop) {\n          stops.push({\n            color: stop.color,\n            pos: 1 - stop.pos\n          });\n        });\n        return new TinyGradient(stops.reverse());\n      }\n      /**\n       * Return new instance with looped stops\n       * @return {TinyGradient}\n       */\n      ;\n\n      _proto.loop = function loop() {\n        var stops1 = [];\n        var stops2 = [];\n        this.stops.forEach(function (stop) {\n          stops1.push({\n            color: stop.color,\n            pos: stop.pos / 2\n          });\n        });\n        this.stops.slice(0, -1).forEach(function (stop) {\n          stops2.push({\n            color: stop.color,\n            pos: 1 - stop.pos / 2\n          });\n        });\n        return new TinyGradient(stops1.concat(stops2.reverse()));\n      }\n      /**\n       * Generate gradient with RGBa interpolation\n       * @param {number} steps\n       * @return {tinycolor[]}\n       */\n      ;\n\n      _proto.rgb = function rgb(steps) {\n        var _this = this;\n\n        var substeps = computeSubsteps(this.stops, steps);\n        var gradient = [];\n        this.stops.forEach(function (stop, i) {\n          if (stop.colorLess) {\n            stop.color = interpolateRgb(_this.stops[i - 1], _this.stops[i + 1], 2)[1];\n          }\n        });\n\n        for (var i = 0, l = this.stops.length; i < l - 1; i++) {\n          var rgb = interpolateRgb(this.stops[i], this.stops[i + 1], substeps[i]);\n          gradient.splice.apply(gradient, [gradient.length, 0].concat(rgb));\n        }\n\n        gradient.push(this.stops[this.stops.length - 1].color);\n        return gradient;\n      }\n      /**\n       * Generate gradient with HSVa interpolation\n       * @param {number} steps\n       * @param {boolean|'long'|'short'} [mode=false]\n       *    - false to step in clockwise\n       *    - true to step in trigonometric order\n       *    - 'short' to use the shortest way\n       *    - 'long' to use the longest way\n       * @return {tinycolor[]}\n       */\n      ;\n\n      _proto.hsv = function hsv(steps, mode) {\n        var _this2 = this;\n\n        var substeps = computeSubsteps(this.stops, steps);\n        var gradient = [];\n        this.stops.forEach(function (stop, i) {\n          if (stop.colorLess) {\n            stop.color = interpolateHsv(_this2.stops[i - 1], _this2.stops[i + 1], 2, mode)[1];\n          }\n        });\n\n        for (var i = 0, l = this.stops.length; i < l - 1; i++) {\n          var hsv = interpolateHsv(this.stops[i], this.stops[i + 1], substeps[i], mode);\n          gradient.splice.apply(gradient, [gradient.length, 0].concat(hsv));\n        }\n\n        gradient.push(this.stops[this.stops.length - 1].color);\n        return gradient;\n      }\n      /**\n       * Generate CSS3 command (no prefix) for this gradient\n       * @param {String} [mode=linear] - 'linear' or 'radial'\n       * @param {String} [direction] - default is 'to right' or 'ellipse at center'\n       * @return {String}\n       */\n      ;\n\n      _proto.css = function css(mode, direction) {\n        mode = mode || 'linear';\n        direction = direction || (mode === 'linear' ? 'to right' : 'ellipse at center');\n        var css = mode + '-gradient(' + direction;\n        this.stops.forEach(function (stop) {\n          css += ', ' + (stop.colorLess ? '' : stop.color.toRgbString() + ' ') + stop.pos * 100 + '%';\n        });\n        css += ')';\n        return css;\n      }\n      /**\n       * Returns the color at specific position with RGBa interpolation\n       * @param {number} pos, between 0 and 1\n       * @return {tinycolor}\n       */\n      ;\n\n      _proto.rgbAt = function rgbAt(pos) {\n        return computeAt(this.stops, pos, 'toRgb', RGBA_MAX);\n      }\n      /**\n       * Returns the color at specific position with HSVa interpolation\n       * @param {number} pos, between 0 and 1\n       * @return {tinycolor}\n       */\n      ;\n\n      _proto.hsvAt = function hsvAt(pos) {\n        return computeAt(this.stops, pos, 'toHsv', HSVA_MAX);\n      };\n\n      return TinyGradient;\n    }();\n    /**\n     * @param {StopInput[]|ColorInput[]|StopInput...|ColorInput...} stops\n     * @returns {TinyGradient}\n     */\n\n\n    var tinygradient = function tinygradient(stops) {\n      // varargs\n      if (arguments.length === 1) {\n        if (!Array.isArray(arguments[0])) {\n          throw new Error('\"stops\" is not an array');\n        }\n\n        stops = arguments[0];\n      } else {\n        stops = Array.prototype.slice.call(arguments);\n      }\n\n      return new TinyGradient(stops);\n    };\n\n    return tinygradient;\n\n})));\n//# sourceMappingURL=browser.js.map\n","const tinycolor = require('tinycolor2');\n\n/**\n * @typedef {Object} TinyGradient.StopInput\n * @property {ColorInput} color\n * @property {number} pos\n */\n\n/**\n * @typedef {Object} TinyGradient.StepValue\n * @type {number} [r]\n * @type {number} [g]\n * @type {number} [b]\n * @type {number} [h]\n * @type {number} [s]\n * @type {number} [v]\n * @type {number} [a]\n */\n\n/**\n * @type {StepValue}\n */\nconst RGBA_MAX = { r: 256, g: 256, b: 256, a: 1 };\n\n/**\n * @type {StepValue}\n */\nconst HSVA_MAX = { h: 360, s: 1, v: 1, a: 1 };\n\n/**\n * Linearly compute the step size between start and end (not normalized)\n * @param {StepValue} start\n * @param {StepValue} end\n * @param {number} steps - number of desired steps\n * @return {StepValue}\n */\nfunction stepize(start, end, steps) {\n    let step = {};\n\n    for (let k in start) {\n        if (start.hasOwnProperty(k)) {\n            step[k] = steps === 0 ? 0 : (end[k] - start[k]) / steps;\n        }\n    }\n\n    return step;\n}\n\n/**\n * Compute the final step color\n * @param {StepValue} step - from `stepize`\n * @param {StepValue} start\n * @param {number} i - color index\n * @param {StepValue} max - rgba or hsva of maximum values for each channel\n * @return {StepValue}\n */\nfunction interpolate(step, start, i, max) {\n    let color = {};\n\n    for (let k in start) {\n        if (start.hasOwnProperty(k)) {\n            color[k] = step[k] * i + start[k];\n            color[k] = color[k] < 0 ? color[k] + max[k] : (max[k] !== 1 ? color[k] % max[k] : color[k]);\n        }\n    }\n\n    return color;\n}\n\n/**\n * Generate gradient with RGBa interpolation\n * @param {StopInput} stop1\n * @param {StopInput} stop2\n * @param {number} steps\n * @return {tinycolor[]} color1 included, color2 excluded\n */\nfunction interpolateRgb(stop1, stop2, steps) {\n    const start = stop1.color.toRgb();\n    const end = stop2.color.toRgb();\n    const step = stepize(start, end, steps);\n    let gradient = [stop1.color];\n\n    for (let i = 1; i < steps; i++) {\n        const color = interpolate(step, start, i, RGBA_MAX);\n        gradient.push(tinycolor(color));\n    }\n\n    return gradient;\n}\n\n/**\n * Generate gradient with HSVa interpolation\n * @param {StopInput} stop1\n * @param {StopInput} stop2\n * @param {number} steps\n * @param {boolean|'long'|'short'} mode\n * @return {tinycolor[]} color1 included, color2 excluded\n */\nfunction interpolateHsv(stop1, stop2, steps, mode) {\n    const start = stop1.color.toHsv();\n    const end = stop2.color.toHsv();\n\n    // rgb interpolation if one of the steps in grayscale\n    if (start.s === 0 || end.s === 0) {\n        return interpolateRgb(stop1, stop2, steps);\n    }\n\n    let trigonometric;\n    if (typeof mode === 'boolean') {\n        trigonometric = mode;\n    }\n    else {\n        const trigShortest = (start.h < end.h && end.h - start.h < 180) || (start.h > end.h && start.h - end.h > 180);\n        trigonometric = (mode === 'long' && trigShortest) || (mode === 'short' && !trigShortest);\n    }\n\n    const step = stepize(start, end, steps);\n    let gradient = [stop1.color];\n\n    // recompute hue\n    let diff;\n    if ((start.h <= end.h && !trigonometric) || (start.h >= end.h && trigonometric)) {\n        diff = end.h - start.h;\n    }\n    else if (trigonometric) {\n        diff = 360 - end.h + start.h;\n    }\n    else {\n        diff = 360 - start.h + end.h;\n    }\n    step.h = Math.pow(-1, trigonometric ? 1 : 0) * Math.abs(diff) / steps;\n\n    for (let i = 1; i < steps; i++) {\n        const color = interpolate(step, start, i, HSVA_MAX);\n        gradient.push(tinycolor(color));\n    }\n\n    return gradient;\n}\n\n/**\n * Compute substeps between each stops\n * @param {StopInput[]} stops\n * @param {number} steps\n * @return {number[]}\n */\nfunction computeSubsteps(stops, steps) {\n    const l = stops.length;\n\n    // validation\n    steps = parseInt(steps, 10);\n\n    if (isNaN(steps) || steps < 2) {\n        throw new Error('Invalid number of steps (< 2)');\n    }\n    if (steps < l) {\n        throw new Error('Number of steps cannot be inferior to number of stops');\n    }\n\n    // compute substeps from stop positions\n    let substeps = [];\n\n    for (let i = 1; i < l; i++) {\n        const step = (steps - 1) * (stops[i].pos - stops[i - 1].pos);\n        substeps.push(Math.max(1, Math.round(step)));\n    }\n\n    // adjust number of steps\n    let totalSubsteps = 1;\n    for (let n = l - 1; n--;) totalSubsteps += substeps[n];\n\n    while (totalSubsteps !== steps) {\n        if (totalSubsteps < steps) {\n            const min = Math.min.apply(null, substeps);\n            substeps[substeps.indexOf(min)]++;\n            totalSubsteps++;\n        }\n        else {\n            const max = Math.max.apply(null, substeps);\n            substeps[substeps.indexOf(max)]--;\n            totalSubsteps--;\n        }\n    }\n\n    return substeps;\n}\n\n/**\n * Compute the color at a specific position\n * @param {StopInput[]} stops\n * @param {number} pos\n * @param {string} method\n * @param {StepValue} max\n * @returns {tinycolor}\n */\nfunction computeAt(stops, pos, method, max) {\n    if (pos < 0 || pos > 1) {\n        throw new Error('Position must be between 0 and 1');\n    }\n\n    let start, end;\n    for (let i = 0, l = stops.length; i < l - 1; i++) {\n        if (pos >= stops[i].pos && pos < stops[i + 1].pos) {\n            start = stops[i];\n            end = stops[i + 1];\n            break;\n        }\n    }\n\n    if (!start) {\n        start = end = stops[stops.length - 1];\n    }\n\n    const step = stepize(start.color[method](), end.color[method](), (end.pos - start.pos) * 100);\n    const color = interpolate(step, start.color[method](), (pos - start.pos) * 100, max);\n    return tinycolor(color);\n}\n\nclass TinyGradient {\n    /**\n     * @param {StopInput[]|ColorInput[]} stops\n     * @returns {TinyGradient}\n     */\n    constructor(stops) {\n        // validation\n        if (stops.length < 2) {\n            throw new Error('Invalid number of stops (< 2)');\n        }\n\n        const havingPositions = stops[0].pos !== undefined;\n        let l = stops.length;\n        let p = -1;\n        let lastColorLess = false;\n        // create tinycolor objects and clean positions\n        this.stops = stops.map((stop, i) => {\n            const hasPosition = stop.pos !== undefined;\n            if (havingPositions ^ hasPosition) {\n                throw new Error('Cannot mix positionned and not posionned color stops');\n            }\n\n            if (hasPosition) {\n                const hasColor = stop.color !== undefined;\n                if (!hasColor && (lastColorLess || i === 0 || i === l - 1)) {\n                    throw new Error('Cannot define two consecutive position-only stops');\n                }\n                lastColorLess = !hasColor;\n\n                stop = {\n                    color    : hasColor ? tinycolor(stop.color) : null,\n                    colorLess: !hasColor,\n                    pos      : stop.pos\n                };\n\n                if (stop.pos < 0 || stop.pos > 1) {\n                    throw new Error('Color stops positions must be between 0 and 1');\n                }\n                else if (stop.pos < p) {\n                    throw new Error('Color stops positions are not ordered');\n                }\n                p = stop.pos;\n            }\n            else {\n                stop = {\n                    color: tinycolor(stop.color !== undefined ? stop.color : stop),\n                    pos  : i / (l - 1)\n                };\n            }\n\n            return stop;\n        });\n\n        if (this.stops[0].pos !== 0) {\n            this.stops.unshift({\n                color: this.stops[0].color,\n                pos  : 0\n            });\n            l++;\n        }\n        if (this.stops[l - 1].pos !== 1) {\n            this.stops.push({\n                color: this.stops[l - 1].color,\n                pos  : 1\n            });\n        }\n    }\n\n    /**\n     * Return new instance with reversed stops\n     * @return {TinyGradient}\n     */\n    reverse() {\n        let stops = [];\n\n        this.stops.forEach(function (stop) {\n            stops.push({\n                color: stop.color,\n                pos  : 1 - stop.pos\n            });\n        });\n\n        return new TinyGradient(stops.reverse());\n    }\n\n    /**\n     * Return new instance with looped stops\n     * @return {TinyGradient}\n     */\n    loop() {\n        let stops1 = [];\n        let stops2 = [];\n\n        this.stops.forEach((stop) => {\n            stops1.push({\n                color: stop.color,\n                pos  : stop.pos / 2\n            });\n        });\n\n        this.stops.slice(0, -1).forEach((stop) => {\n            stops2.push({\n                color: stop.color,\n                pos  : 1 - stop.pos / 2\n            });\n        });\n\n        return new TinyGradient(stops1.concat(stops2.reverse()));\n    }\n\n    /**\n     * Generate gradient with RGBa interpolation\n     * @param {number} steps\n     * @return {tinycolor[]}\n     */\n    rgb(steps) {\n        const substeps = computeSubsteps(this.stops, steps);\n        let gradient = [];\n\n        this.stops.forEach((stop, i) => {\n            if (stop.colorLess) {\n                stop.color = interpolateRgb(this.stops[i - 1], this.stops[i + 1], 2)[1];\n            }\n        });\n\n        for (let i = 0, l = this.stops.length; i < l - 1; i++) {\n            const rgb = interpolateRgb(this.stops[i], this.stops[i + 1], substeps[i]);\n            gradient.splice(gradient.length, 0, ...rgb);\n        }\n\n        gradient.push(this.stops[this.stops.length - 1].color);\n\n        return gradient;\n    }\n\n    /**\n     * Generate gradient with HSVa interpolation\n     * @param {number} steps\n     * @param {boolean|'long'|'short'} [mode=false]\n     *    - false to step in clockwise\n     *    - true to step in trigonometric order\n     *    - 'short' to use the shortest way\n     *    - 'long' to use the longest way\n     * @return {tinycolor[]}\n     */\n    hsv(steps, mode) {\n        const substeps = computeSubsteps(this.stops, steps);\n        let gradient = [];\n\n        this.stops.forEach((stop, i) => {\n            if (stop.colorLess) {\n                stop.color = interpolateHsv(this.stops[i - 1], this.stops[i + 1], 2, mode)[1];\n            }\n        });\n\n        for (let i = 0, l = this.stops.length; i < l - 1; i++) {\n            const hsv = interpolateHsv(this.stops[i], this.stops[i + 1], substeps[i], mode);\n            gradient.splice(gradient.length, 0, ...hsv);\n        }\n\n        gradient.push(this.stops[this.stops.length - 1].color);\n\n        return gradient;\n    }\n\n    /**\n     * Generate CSS3 command (no prefix) for this gradient\n     * @param {String} [mode=linear] - 'linear' or 'radial'\n     * @param {String} [direction] - default is 'to right' or 'ellipse at center'\n     * @return {String}\n     */\n    css(mode, direction) {\n        mode = mode || 'linear';\n        direction = direction || (mode === 'linear' ? 'to right' : 'ellipse at center');\n\n        let css = mode + '-gradient(' + direction;\n        this.stops.forEach(function (stop) {\n            css += ', ' + (stop.colorLess ? '' : stop.color.toRgbString() + ' ') + (stop.pos * 100) + '%';\n        });\n        css += ')';\n        return css;\n    }\n\n    /**\n     * Returns the color at specific position with RGBa interpolation\n     * @param {number} pos, between 0 and 1\n     * @return {tinycolor}\n     */\n    rgbAt(pos) {\n        return computeAt(this.stops, pos, 'toRgb', RGBA_MAX);\n    }\n\n    /**\n     * Returns the color at specific position with HSVa interpolation\n     * @param {number} pos, between 0 and 1\n     * @return {tinycolor}\n     */\n    hsvAt(pos) {\n        return computeAt(this.stops, pos, 'toHsv', HSVA_MAX);\n    }\n}\n\n/**\n * @param {StopInput[]|ColorInput[]|StopInput...|ColorInput...} stops\n * @returns {TinyGradient}\n */\nmodule.exports = function (stops) {\n    // varargs\n    if (arguments.length === 1) {\n        if (!Array.isArray(arguments[0])) {\n            throw new Error('\"stops\" is not an array');\n        }\n        stops = arguments[0];\n    }\n    else {\n        stops = Array.prototype.slice.call(arguments);\n    }\n\n    return new TinyGradient(stops);\n};\n","// This file is autogenerated. It's used to publish CJS to npm.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.tinycolor = factory());\n})(this, (function () { 'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n  }\n\n  // https://github.com/bgrins/TinyColor\n  // Brian Grinstead, MIT License\n\n  var trimLeft = /^\\s+/;\n  var trimRight = /\\s+$/;\n  function tinycolor(color, opts) {\n    color = color ? color : \"\";\n    opts = opts || {};\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n      return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n      return new tinycolor(color, opts);\n    }\n    var rgb = inputToRGB(color);\n    this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) this._r = Math.round(this._r);\n    if (this._g < 1) this._g = Math.round(this._g);\n    if (this._b < 1) this._b = Math.round(this._b);\n    this._ok = rgb.ok;\n  }\n  tinycolor.prototype = {\n    isDark: function isDark() {\n      return this.getBrightness() < 128;\n    },\n    isLight: function isLight() {\n      return !this.isDark();\n    },\n    isValid: function isValid() {\n      return this._ok;\n    },\n    getOriginalInput: function getOriginalInput() {\n      return this._originalInput;\n    },\n    getFormat: function getFormat() {\n      return this._format;\n    },\n    getAlpha: function getAlpha() {\n      return this._a;\n    },\n    getBrightness: function getBrightness() {\n      //http://www.w3.org/TR/AERT#color-contrast\n      var rgb = this.toRgb();\n      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function getLuminance() {\n      //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n      var rgb = this.toRgb();\n      var RsRGB, GsRGB, BsRGB, R, G, B;\n      RsRGB = rgb.r / 255;\n      GsRGB = rgb.g / 255;\n      BsRGB = rgb.b / 255;\n      if (RsRGB <= 0.03928) R = RsRGB / 12.92;else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n      if (GsRGB <= 0.03928) G = GsRGB / 12.92;else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n      if (BsRGB <= 0.03928) B = BsRGB / 12.92;else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n      return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    },\n    setAlpha: function setAlpha(value) {\n      this._a = boundAlpha(value);\n      this._roundA = Math.round(100 * this._a) / 100;\n      return this;\n    },\n    toHsv: function toHsv() {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      return {\n        h: hsv.h * 360,\n        s: hsv.s,\n        v: hsv.v,\n        a: this._a\n      };\n    },\n    toHsvString: function toHsvString() {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      var h = Math.round(hsv.h * 360),\n        s = Math.round(hsv.s * 100),\n        v = Math.round(hsv.v * 100);\n      return this._a == 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n    },\n    toHsl: function toHsl() {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      return {\n        h: hsl.h * 360,\n        s: hsl.s,\n        l: hsl.l,\n        a: this._a\n      };\n    },\n    toHslString: function toHslString() {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      var h = Math.round(hsl.h * 360),\n        s = Math.round(hsl.s * 100),\n        l = Math.round(hsl.l * 100);\n      return this._a == 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n    },\n    toHex: function toHex(allow3Char) {\n      return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function toHexString(allow3Char) {\n      return \"#\" + this.toHex(allow3Char);\n    },\n    toHex8: function toHex8(allow4Char) {\n      return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function toHex8String(allow4Char) {\n      return \"#\" + this.toHex8(allow4Char);\n    },\n    toRgb: function toRgb() {\n      return {\n        r: Math.round(this._r),\n        g: Math.round(this._g),\n        b: Math.round(this._b),\n        a: this._a\n      };\n    },\n    toRgbString: function toRgbString() {\n      return this._a == 1 ? \"rgb(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \")\" : \"rgba(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function toPercentageRgb() {\n      return {\n        r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n        g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n        b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n        a: this._a\n      };\n    },\n    toPercentageRgbString: function toPercentageRgbString() {\n      return this._a == 1 ? \"rgb(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%)\" : \"rgba(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function toName() {\n      if (this._a === 0) {\n        return \"transparent\";\n      }\n      if (this._a < 1) {\n        return false;\n      }\n      return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function toFilter(secondColor) {\n      var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n      var secondHex8String = hex8String;\n      var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n      if (secondColor) {\n        var s = tinycolor(secondColor);\n        secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n      }\n      return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n    },\n    toString: function toString(format) {\n      var formatSet = !!format;\n      format = format || this._format;\n      var formattedString = false;\n      var hasAlpha = this._a < 1 && this._a >= 0;\n      var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n      if (needsAlphaFormat) {\n        // Special case for \"transparent\", all other non-alpha formats\n        // will return rgba when there is transparency.\n        if (format === \"name\" && this._a === 0) {\n          return this.toName();\n        }\n        return this.toRgbString();\n      }\n      if (format === \"rgb\") {\n        formattedString = this.toRgbString();\n      }\n      if (format === \"prgb\") {\n        formattedString = this.toPercentageRgbString();\n      }\n      if (format === \"hex\" || format === \"hex6\") {\n        formattedString = this.toHexString();\n      }\n      if (format === \"hex3\") {\n        formattedString = this.toHexString(true);\n      }\n      if (format === \"hex4\") {\n        formattedString = this.toHex8String(true);\n      }\n      if (format === \"hex8\") {\n        formattedString = this.toHex8String();\n      }\n      if (format === \"name\") {\n        formattedString = this.toName();\n      }\n      if (format === \"hsl\") {\n        formattedString = this.toHslString();\n      }\n      if (format === \"hsv\") {\n        formattedString = this.toHsvString();\n      }\n      return formattedString || this.toHexString();\n    },\n    clone: function clone() {\n      return tinycolor(this.toString());\n    },\n    _applyModification: function _applyModification(fn, args) {\n      var color = fn.apply(null, [this].concat([].slice.call(args)));\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this.setAlpha(color._a);\n      return this;\n    },\n    lighten: function lighten() {\n      return this._applyModification(_lighten, arguments);\n    },\n    brighten: function brighten() {\n      return this._applyModification(_brighten, arguments);\n    },\n    darken: function darken() {\n      return this._applyModification(_darken, arguments);\n    },\n    desaturate: function desaturate() {\n      return this._applyModification(_desaturate, arguments);\n    },\n    saturate: function saturate() {\n      return this._applyModification(_saturate, arguments);\n    },\n    greyscale: function greyscale() {\n      return this._applyModification(_greyscale, arguments);\n    },\n    spin: function spin() {\n      return this._applyModification(_spin, arguments);\n    },\n    _applyCombination: function _applyCombination(fn, args) {\n      return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function analogous() {\n      return this._applyCombination(_analogous, arguments);\n    },\n    complement: function complement() {\n      return this._applyCombination(_complement, arguments);\n    },\n    monochromatic: function monochromatic() {\n      return this._applyCombination(_monochromatic, arguments);\n    },\n    splitcomplement: function splitcomplement() {\n      return this._applyCombination(_splitcomplement, arguments);\n    },\n    // Disabled until https://github.com/bgrins/TinyColor/issues/254\n    // polyad: function (number) {\n    //   return this._applyCombination(polyad, [number]);\n    // },\n    triad: function triad() {\n      return this._applyCombination(polyad, [3]);\n    },\n    tetrad: function tetrad() {\n      return this._applyCombination(polyad, [4]);\n    }\n  };\n\n  // If input is an object, force 1 into \"1.0\" to handle ratios properly\n  // String input requires \"1.0\" as input, so 1 will be treated as 1\n  tinycolor.fromRatio = function (color, opts) {\n    if (_typeof(color) == \"object\") {\n      var newColor = {};\n      for (var i in color) {\n        if (color.hasOwnProperty(i)) {\n          if (i === \"a\") {\n            newColor[i] = color[i];\n          } else {\n            newColor[i] = convertToPercentage(color[i]);\n          }\n        }\n      }\n      color = newColor;\n    }\n    return tinycolor(color, opts);\n  };\n\n  // Given a string or object, convert that input to RGB\n  // Possible string inputs:\n  //\n  //     \"red\"\n  //     \"#f00\" or \"f00\"\n  //     \"#ff0000\" or \"ff0000\"\n  //     \"#ff000000\" or \"ff000000\"\n  //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n  //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n  //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n  //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n  //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n  //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n  //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n  //\n  function inputToRGB(color) {\n    var rgb = {\n      r: 0,\n      g: 0,\n      b: 0\n    };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color == \"string\") {\n      color = stringInputToObject(color);\n    }\n    if (_typeof(color) == \"object\") {\n      if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n        rgb = rgbToRgb(color.r, color.g, color.b);\n        ok = true;\n        format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n        s = convertToPercentage(color.s);\n        v = convertToPercentage(color.v);\n        rgb = hsvToRgb(color.h, s, v);\n        ok = true;\n        format = \"hsv\";\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n        s = convertToPercentage(color.s);\n        l = convertToPercentage(color.l);\n        rgb = hslToRgb(color.h, s, l);\n        ok = true;\n        format = \"hsl\";\n      }\n      if (color.hasOwnProperty(\"a\")) {\n        a = color.a;\n      }\n    }\n    a = boundAlpha(a);\n    return {\n      ok: ok,\n      format: color.format || format,\n      r: Math.min(255, Math.max(rgb.r, 0)),\n      g: Math.min(255, Math.max(rgb.g, 0)),\n      b: Math.min(255, Math.max(rgb.b, 0)),\n      a: a\n    };\n  }\n\n  // Conversion Functions\n  // --------------------\n\n  // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n  // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n  // `rgbToRgb`\n  // Handle bounds / percentage checking to conform to CSS color spec\n  // <http://www.w3.org/TR/css3-color/>\n  // *Assumes:* r, g, b in [0, 255] or [0, 1]\n  // *Returns:* { r, g, b } in [0, 255]\n  function rgbToRgb(r, g, b) {\n    return {\n      r: bound01(r, 255) * 255,\n      g: bound01(g, 255) * 255,\n      b: bound01(b, 255) * 255\n    };\n  }\n\n  // `rgbToHsl`\n  // Converts an RGB color value to HSL.\n  // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n  // *Returns:* { h, s, l } in [0,1]\n  function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    var h,\n      s,\n      l = (max + min) / 2;\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n    return {\n      h: h,\n      s: s,\n      l: l\n    };\n  }\n\n  // `hslToRgb`\n  // Converts an HSL color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hslToRgb(h, s, l) {\n    var r, g, b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255\n    };\n  }\n\n  // `rgbToHsv`\n  // Converts an RGB color value to HSV\n  // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n  // *Returns:* { h, s, v } in [0,1]\n  function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    var h,\n      s,\n      v = max;\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n    if (max == min) {\n      h = 0; // achromatic\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n    return {\n      h: h,\n      s: s,\n      v: v\n    };\n  }\n\n  // `hsvToRgb`\n  // Converts an HSV color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h),\n      f = h - i,\n      p = v * (1 - s),\n      q = v * (1 - f * s),\n      t = v * (1 - (1 - f) * s),\n      mod = i % 6,\n      r = [v, q, p, p, t, v][mod],\n      g = [t, v, v, q, p, p][mod],\n      b = [p, p, t, v, v, q][mod];\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255\n    };\n  }\n\n  // `rgbToHex`\n  // Converts an RGB color to hex\n  // Assumes r, g, and b are contained in the set [0, 255]\n  // Returns a 3 or 6 character hex\n  function rgbToHex(r, g, b, allow3Char) {\n    var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join(\"\");\n  }\n\n  // `rgbaToHex`\n  // Converts an RGBA color plus alpha transparency to hex\n  // Assumes r, g, b are contained in the set [0, 255] and\n  // a in [0, 1]. Returns a 4 or 8 character rgba hex\n  function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join(\"\");\n  }\n\n  // `rgbaToArgbHex`\n  // Converts an RGBA color to an ARGB Hex8 string\n  // Rarely used, but required for \"toFilter()\"\n  function rgbaToArgbHex(r, g, b, a) {\n    var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n    return hex.join(\"\");\n  }\n\n  // `equals`\n  // Can be called with any tinycolor input\n  tinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) return false;\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n  };\n  tinycolor.random = function () {\n    return tinycolor.fromRatio({\n      r: Math.random(),\n      g: Math.random(),\n      b: Math.random()\n    });\n  };\n\n  // Modification Functions\n  // ----------------------\n  // Thanks to less.js for some of the basics here\n  // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n  function _desaturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n  function _saturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n  function _greyscale(color) {\n    return tinycolor(color).desaturate(100);\n  }\n  function _lighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n  function _brighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n    return tinycolor(rgb);\n  }\n  function _darken(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n\n  // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n  // Values outside of this range will be wrapped into this range.\n  function _spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n  }\n\n  // Combination Functions\n  // ---------------------\n  // Thanks to jQuery xColor for some of the ideas behind these\n  // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n  function _complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n  }\n  function polyad(color, number) {\n    if (isNaN(number) || number <= 0) {\n      throw new Error(\"Argument to polyad must be a positive number\");\n    }\n    var hsl = tinycolor(color).toHsl();\n    var result = [tinycolor(color)];\n    var step = 360 / number;\n    for (var i = 1; i < number; i++) {\n      result.push(tinycolor({\n        h: (hsl.h + i * step) % 360,\n        s: hsl.s,\n        l: hsl.l\n      }));\n    }\n    return result;\n  }\n  function _splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [tinycolor(color), tinycolor({\n      h: (h + 72) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), tinycolor({\n      h: (h + 216) % 360,\n      s: hsl.s,\n      l: hsl.l\n    })];\n  }\n  function _analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n    for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n      hsl.h = (hsl.h + part) % 360;\n      ret.push(tinycolor(hsl));\n    }\n    return ret;\n  }\n  function _monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h,\n      s = hsv.s,\n      v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n    while (results--) {\n      ret.push(tinycolor({\n        h: h,\n        s: s,\n        v: v\n      }));\n      v = (v + modification) % 1;\n    }\n    return ret;\n  }\n\n  // Utility Functions\n  // ---------------------\n\n  tinycolor.mix = function (color1, color2, amount) {\n    amount = amount === 0 ? 0 : amount || 50;\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n    var p = amount / 100;\n    var rgba = {\n      r: (rgb2.r - rgb1.r) * p + rgb1.r,\n      g: (rgb2.g - rgb1.g) * p + rgb1.g,\n      b: (rgb2.b - rgb1.b) * p + rgb1.b,\n      a: (rgb2.a - rgb1.a) * p + rgb1.a\n    };\n    return tinycolor(rgba);\n  };\n\n  // Readability Functions\n  // ---------------------\n  // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n  // `contrast`\n  // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n  tinycolor.readability = function (color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\n  };\n\n  // `isReadable`\n  // Ensure that foreground and background color combinations meet WCAG2 guidelines.\n  // The third argument is an optional Object.\n  //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n  //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n  // If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n  // *Example*\n  //    tinycolor.isReadable(\"#000\", \"#111\") => false\n  //    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\n  tinycolor.isReadable = function (color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n    out = false;\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n      case \"AAsmall\":\n      case \"AAAlarge\":\n        out = readability >= 4.5;\n        break;\n      case \"AAlarge\":\n        out = readability >= 3;\n        break;\n      case \"AAAsmall\":\n        out = readability >= 7;\n        break;\n    }\n    return out;\n  };\n\n  // `mostReadable`\n  // Given a base color and a list of possible foreground or background\n  // colors for that base, returns the most readable color.\n  // Optionally returns Black or White if the most readable color is unreadable.\n  // *Example*\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\n  tinycolor.mostReadable = function (baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors;\n    level = args.level;\n    size = args.size;\n    for (var i = 0; i < colorList.length; i++) {\n      readability = tinycolor.readability(baseColor, colorList[i]);\n      if (readability > bestScore) {\n        bestScore = readability;\n        bestColor = tinycolor(colorList[i]);\n      }\n    }\n    if (tinycolor.isReadable(baseColor, bestColor, {\n      level: level,\n      size: size\n    }) || !includeFallbackColors) {\n      return bestColor;\n    } else {\n      args.includeFallbackColors = false;\n      return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n    }\n  };\n\n  // Big List of Colors\n  // ------------------\n  // <https://www.w3.org/TR/css-color-4/#named-colors>\n  var names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n  };\n\n  // Make it easy to access colors via `hexNames[hex]`\n  var hexNames = tinycolor.hexNames = flip(names);\n\n  // Utilities\n  // ---------\n\n  // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n  function flip(o) {\n    var flipped = {};\n    for (var i in o) {\n      if (o.hasOwnProperty(i)) {\n        flipped[o[i]] = i;\n      }\n    }\n    return flipped;\n  }\n\n  // Return a valid alpha value [0,1] with all invalid values being set to 1\n  function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n      a = 1;\n    }\n    return a;\n  }\n\n  // Take input from [0, n] and return it as [0, 1]\n  function bound01(n, max) {\n    if (isOnePointZero(n)) n = \"100%\";\n    var processPercent = isPercentage(n);\n    n = Math.min(max, Math.max(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n      n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n      return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return n % max / parseFloat(max);\n  }\n\n  // Force a number between 0 and 1\n  function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n  }\n\n  // Parse a base-16 hex value into a base-10 integer\n  function parseIntFromHex(val) {\n    return parseInt(val, 16);\n  }\n\n  // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n  // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n  function isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n  }\n\n  // Check to see if string passed in is a percentage\n  function isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n  }\n\n  // Force a hex value to have 2 characters\n  function pad2(c) {\n    return c.length == 1 ? \"0\" + c : \"\" + c;\n  }\n\n  // Replace a decimal with it's percentage value\n  function convertToPercentage(n) {\n    if (n <= 1) {\n      n = n * 100 + \"%\";\n    }\n    return n;\n  }\n\n  // Converts a decimal to a hex value\n  function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n  }\n  // Converts a hex value to a decimal\n  function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n  }\n  var matchers = function () {\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    return {\n      CSS_UNIT: new RegExp(CSS_UNIT),\n      rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n      rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n      hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n      hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n      hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n      hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n      hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n      hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n  }();\n\n  // `isValidCSSUnit`\n  // Take in a single string / number and check to see if it looks like a CSS unit\n  // (see `matchers` above for definition).\n  function isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n  }\n\n  // `stringInputToObject`\n  // Permissive string parsing.  Take in a number of formats, and output an object\n  // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n  function stringInputToObject(color) {\n    color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n    var named = false;\n    if (names[color]) {\n      color = names[color];\n      named = true;\n    } else if (color == \"transparent\") {\n      return {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0,\n        format: \"name\"\n      };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if (match = matchers.rgb.exec(color)) {\n      return {\n        r: match[1],\n        g: match[2],\n        b: match[3]\n      };\n    }\n    if (match = matchers.rgba.exec(color)) {\n      return {\n        r: match[1],\n        g: match[2],\n        b: match[3],\n        a: match[4]\n      };\n    }\n    if (match = matchers.hsl.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        l: match[3]\n      };\n    }\n    if (match = matchers.hsla.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        l: match[3],\n        a: match[4]\n      };\n    }\n    if (match = matchers.hsv.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        v: match[3]\n      };\n    }\n    if (match = matchers.hsva.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        v: match[3],\n        a: match[4]\n      };\n    }\n    if (match = matchers.hex8.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        a: convertHexToDecimal(match[4]),\n        format: named ? \"name\" : \"hex8\"\n      };\n    }\n    if (match = matchers.hex6.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        format: named ? \"name\" : \"hex\"\n      };\n    }\n    if (match = matchers.hex4.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1] + \"\" + match[1]),\n        g: parseIntFromHex(match[2] + \"\" + match[2]),\n        b: parseIntFromHex(match[3] + \"\" + match[3]),\n        a: convertHexToDecimal(match[4] + \"\" + match[4]),\n        format: named ? \"name\" : \"hex8\"\n      };\n    }\n    if (match = matchers.hex3.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1] + \"\" + match[1]),\n        g: parseIntFromHex(match[2] + \"\" + match[2]),\n        b: parseIntFromHex(match[3] + \"\" + match[3]),\n        format: named ? \"name\" : \"hex\"\n      };\n    }\n    return false;\n  }\n  function validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\n      level: \"AA\",\n      size: \"small\"\n    };\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n      level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n      size = \"small\";\n    }\n    return {\n      level: level,\n      size: size\n    };\n  }\n\n  return tinycolor;\n\n}));\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div class=\"config_container\">\n    <div class=\"values md-layout md-gutter\">\n      <div class=\"md-layout-item md-size-50\">\n        <span class=\"md-caption\">False</span>\n        <div class=\"colorContainer\">\n          <div class=\"current-color\"\n               :style=\"'background-color: ' + config.min.color\"\n               @click=\"togglePicker('min')\"></div>\n          <chrome-picker class=\"colorSelect\"\n                         v-model=\"config.min.color\"\n                         v-if=\"display.min\"\n                         @input=\"updateMinColor\" />\n        </div>\n      </div>\n\n      <div class=\"md-layout-item md-size-50\">\n        <span class=\"md-caption\">True</span>\n        <div class=\"colorContainer\">\n          <div class=\"current-color\"\n               :style=\"'background-color: ' + config.max.color\"\n               @click=\"togglePicker('max')\"></div>\n          <chrome-picker class=\"colorSelect\"\n                         v-model=\"config.max.color\"\n                         v-if=\"display.max\"\n                         @input=\"updateMaxColor\" />\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"colorGradient\">\n      <div v-for=\"(g,index) in gradient\"\n           :key=\"index\"\n           v-tooltip=\"getColorValue(index)\"\n           :style=\"'background-color: #' + g.toHex()\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Chrome } from \"vue-color\";\nimport { color } from \"../../../utilities/color\";\n\nexport default {\n  name: \"NumberConfigTemplate\",\n  components: { \"chrome-picker\": Chrome },\n  props: {\n    config: {},\n  },\n  data() {\n    return {\n      display: {\n        min: false,\n        average: false,\n        max: false,\n      },\n      gradient: [],\n    };\n  },\n  mounted() {\n    this.gradient = color.getGradientColor(\n      this.config.min,\n      this.config.average,\n      this.config.max\n    );\n  },\n  methods: {\n    updateMinColor(val) {\n      this.config.min.color = val.hex;\n      this.gradient = color.getGradientColor(\n        this.config.min,\n        this.config.average,\n        this.config.max\n      );\n    },\n    updateMaxColor(val) {\n      this.config.max.color = val.hex;\n      this.gradient = color.getGradientColor(\n        this.config.min,\n        this.config.average,\n        this.config.max\n      );\n    },\n    updateAverageColor(val) {\n      this.config.average.color = val.hex;\n      this.gradient = color.getGradientColor(\n        this.config.min,\n        this.config.average,\n        this.config.max\n      );\n    },\n    calculateAverage() {\n      let max = parseInt(this.config.max.value);\n      let min = parseInt(this.config.min.value);\n      //   if (!isNaN(max) && !isNaN(min) && this.average)\n      this.config.average.value = (max + min) / 2;\n    },\n\n    togglePicker(val) {\n      this.display[val] = !this.display[val];\n    },\n\n    getColorValue(index) {\n      let max = parseInt(this.config.max.value);\n      let min = parseInt(this.config.min.value);\n\n      if (!isNaN(max) && !isNaN(min)) {\n        let begin = ((max - min) * index) / 10;\n        let end = ((max - min) * (index + 1)) / 10;\n        return `${begin + min} - ${end + min}`;\n      }\n\n      return \"-\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n.config_container {\n  width: 90%;\n  height: 100%;\n  margin: auto;\n}\n\n.config_container .values {\n  height: 60%;\n}\n\n.config_container {\n  width: 90%;\n  height: 100%;\n  margin: auto;\n}\n\n.config_container .values {\n  height: 60%;\n}\n\n.config_container .colorSelect {\n  width: 100%;\n}\n\n.config_container .colorContainer {\n  width: 100%;\n  height: 30px;\n}\n\n.config_container .colorContainer .current-color {\n  width: 100%;\n  height: 80%;\n}\n\n.config_container .colorContainer .current-color:hover {\n  cursor: pointer;\n}\n\n.config_container .colorGradient {\n  width: 100%;\n  height: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  margin-top: 100px;\n}\n\n.config_container .colorGradient div {\n  flex-grow: 1;\n  position: relative;\n  text-align: center;\n  color: black;\n}\n\n.config_container .colorGradient div:hover {\n  cursor: pointer;\n}\n\n.colorGradient div:after {\n  content: attr(title);\n  position: absolute;\n  bottom: -15px;\n  font-family: monospace;\n  font-size: 12px;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div class=\"config_container\">\n\n    <md-content class=\"colors md-scrollbar\">\n      <div class=\"md-layout md-gutter item\"\n           v-for=\"item in enumeration\"\n           :key=\"item.id\">\n        <div class=\"md-layout-item md-size-45\">\n          <md-field md-inline>\n            <md-input v-model=\"item.name\"\n                      placeholder=\"name\"></md-input>\n          </md-field>\n        </div>\n\n        <div class=\"md-layout-item md-size-45\">\n          <!-- <span class=\"md-caption\">Color</span> -->\n          <div class=\"colorContainer\">\n            <div class=\"current-color\"\n                 :style=\"'background-color: ' + item.color\"\n                 @click=\"togglePicker(item.id)\"></div>\n            <chrome-picker v-if=\"display[item.id]\"\n                           class=\"colorSelect\"\n                           v-model=\"item.color\"\n                           @input=\"(val) => updateColor(item,val)\" />\n          </div>\n        </div>\n      </div>\n    </md-content>\n\n    <md-button class=\"md-fab md-mini md-primary md-fab-bottom-right\"\n               @click=\"addColor\">\n      <md-icon>add</md-icon>\n    </md-button>\n  </div>\n</template>\n\n<script>\nimport { Chrome } from \"vue-color\";\n\nexport default {\n  name: \"enumConfigTemplate\",\n  components: { \"chrome-picker\": Chrome },\n  props: {\n    config: {},\n  },\n  data() {\n    return {\n      enumeration: [],\n      display: {},\n    };\n  },\n  mounted() {\n    this.enumeration = JSON.parse(JSON.stringify(this.config.enumeration));\n  },\n  methods: {\n    updateColor(item, val) {\n      item.color = val.hex;\n    },\n    addColor() {\n      this.enumeration = [\n        ...this.enumeration,\n        { name: \"\", color: \"#000000\", id: Date.now() },\n      ];\n    },\n    togglePicker(val) {\n      this.display = Object.assign({}, this.display, {\n        [val]: !this.display[val],\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.config_container {\n  width: 90%;\n  height: 100%;\n  margin: auto;\n}\n\n.config_container .colors {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n}\n\n.config_container .colors .item {\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n}\n\n.config_container .colorContainer {\n  width: 100%;\n  height: 30px;\n}\n\n.config_container .colorSelect {\n  width: 100%;\n}\n\n.config_container .colorContainer .current-color {\n  width: 100%;\n  height: 80%;\n}\n\n.config_container .colorContainer .current-color:hover {\n  cursor: pointer;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n\t<md-dialog\n\t\tclass=\"mdDialogContainer\"\n\t\t:md-active.sync=\"showDialog\"\n\t\t@md-closed=\"closeDialog(false)\"\n\t>\n\t\t<md-dialog-title class=\"dialogTitle\">\n\t\t\tSelect Controlpoint\n\t\t</md-dialog-title>\n\t\t<md-dialog-content>\n\t\t\t<div class=\"content\" v-if=\"state === STATES.normal\">\n\t\t\t\t<div class=\"section\">\n\t\t\t\t\t<link-template\n\t\t\t\t\t\t:title=\"'Contexts'\"\n\t\t\t\t\t\t:data=\"data\"\n\t\t\t\t\t\t:itemSelected=\"contextSelected\"\n\t\t\t\t\t\t@create=\"createContext\"\n\t\t\t\t\t\t@select=\"selectContext\"\n\t\t\t\t\t\t:disableBtn=\"false\"\n\t\t\t\t\t></link-template>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"section\">\n\t\t\t\t\t<link-template\n\t\t\t\t\t\t:title=\"'Categories'\"\n\t\t\t\t\t\t:data=\"categories\"\n\t\t\t\t\t\t:itemSelected=\"categorySelected\"\n\t\t\t\t\t\t@create=\"createCategory\"\n\t\t\t\t\t\t@select=\"selectCategory\"\n\t\t\t\t\t\t:disableBtn=\"!contextSelected\"\n\t\t\t\t\t></link-template>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"section\">\n\t\t\t\t\t<link-template\n\t\t\t\t\t\t:title=\"'Groups'\"\n\t\t\t\t\t\t:data=\"groups\"\n\t\t\t\t\t\t:itemSelected=\"groupSelected\"\n\t\t\t\t\t\t@create=\"createGroup\"\n\t\t\t\t\t\t@select=\"selectGroup\"\n\t\t\t\t\t\t:disableBtn=\"!categorySelected\"\n\t\t\t\t\t></link-template>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"section\">\n\t\t\t\t\t<link-template\n\t\t\t\t\t\t:title=\"'Control Points'\"\n\t\t\t\t\t\t:data=\"controlPoints\"\n\t\t\t\t\t\t:itemSelected=\"controlPointSelected\"\n\t\t\t\t\t\t@create=\"createGroup\"\n\t\t\t\t\t\t@select=\"selectControlPoint\"\n\t\t\t\t\t\t:disableBtn=\"!categorySelected\"\n\t\t\t\t\t></link-template>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"states\" v-else>\n\t\t\t\t<md-progress-spinner\n\t\t\t\t\tmd-mode=\"indeterminate\"\n\t\t\t\t\tv-if=\"state === STATES.loading\"\n\t\t\t\t></md-progress-spinner>\n\n\t\t\t\t<md-icon class=\"md-size-5x\" v-else-if=\"state === STATES.error\"\n\t\t\t\t\t>close</md-icon\n\t\t\t\t>\n\t\t\t\t<md-icon class=\"md-size-5x\" v-else-if=\"state === STATES.success\"\n\t\t\t\t\t>check</md-icon\n\t\t\t\t>\n\t\t\t</div>\n\t\t</md-dialog-content>\n\t\t<md-dialog-actions>\n\t\t\t<md-button class=\"md-primary\" @click=\"closeDialog(false)\"\n\t\t\t\t>Close</md-button\n\t\t\t>\n\t\t\t<md-button class=\"md-primary\" :disabled=\"disabled\" @click=\"link\"\n\t\t\t\t>Save</md-button\n\t\t\t>\n\t\t</md-dialog-actions>\n\t</md-dialog>\n</template>\n\n<script>\n\timport attributeService from \"spinal-env-viewer-plugin-attribute-manager/src/services/index\";\n\n\timport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\n\timport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\n\timport LinkToGroupTemplate from \"../components/linkTogroupTemplate.vue\";\n\timport { spinalControlPointService } from \"spinal-env-viewer-plugin-control-endpoint-service\";\n\n\timport EventBus from \"spinal-env-viewer-room-manager/js/event\";\n\n\texport default {\n\t\tname: \"dialogComponent\",\n\t\tcomponents: {\n\t\t\t\"link-template\": LinkToGroupTemplate,\n\t\t},\n\t\tprops: [\"onFinised\"],\n\t\tdata() {\n\t\t\tthis.contextId;\n\t\t\tthis.nodeId;\n\t\t\tthis.STATES = {\n\t\t\t\tnormal: \"normal\",\n\t\t\t\tloading: \"loading\",\n\t\t\t\tsuccess: \"success\",\n\t\t\t\terror: \"error\",\n\t\t\t};\n\t\t\treturn {\n\t\t\t\tshowDialog: true,\n\t\t\t\tdata: [],\n\t\t\t\tgroups: [],\n\t\t\t\tcategories: [],\n\t\t\t\tcontrolPoints: [],\n\t\t\t\tcontextSelected: undefined,\n\t\t\t\tcategorySelected: undefined,\n\t\t\t\tgroupSelected: undefined,\n\t\t\t\tcontrolPointSelected: undefined,\n\t\t\t\titems: [],\n\t\t\t\ttype: undefined,\n\t\t\t\tcallback: undefined,\n\t\t\t\tstate: this.STATES.normal,\n\t\t\t};\n\t\t},\n\n\t\tmounted() {\n\t\t\tEventBus.$on(\"itemCreated\", (id) => {\n\t\t\t\tthis.getAllData();\n\t\t\t});\n\t\t},\n\n\t\tmethods: {\n\t\t\tasync opened({ contextId, nodeId, type, callback }) {\n\t\t\t\t// this.items = option.itemSelected;\n\t\t\t\tthis.contextId = contextId;\n\t\t\t\tthis.nodeId = nodeId;\n\n\t\t\t\tthis.type = type;\n\t\t\t\tthis.callback = callback;\n\t\t\t\tthis.state = this.STATES.loading;\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.getAllData();\n\t\t\t\t\tthis.state = this.STATES.normal;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.state = this.STATES.error;\n\t\t\t\t}\n\n\t\t\t\t// console.log(this.data);\n\t\t\t},\n\n\t\t\tasync link() {\n\t\t\t\tthis.state = this.STATES.loading;\n\t\t\t\ttry {\n\t\t\t\t\tawait spinalControlPointService.linkControlPointToGroup(\n\t\t\t\t\t\tthis.nodeId,\n\t\t\t\t\t\tthis.contextSelected,\n\t\t\t\t\t\tthis.controlPointSelected\n\t\t\t\t\t);\n\n\t\t\t\t\tif (typeof this.callback !== \"undefined\") {\n\t\t\t\t\t\tconst context = this.data.find(\n\t\t\t\t\t\t\t(el) => el.id === this.contextSelected\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst category = this.categories.find(\n\t\t\t\t\t\t\t(el) => el.id === this.categorySelected\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst group = this.groups.find(\n\t\t\t\t\t\t\t(el) => el.id === this.groupSelected\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.callback(context, category, group);\n\t\t\t\t\t}\n\t\t\t\t\tthis.state = this.STATES.success;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.state = this.STATES.error;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tasync removed(option) {\n\t\t\t\t// if (option) {\n\t\t\t\t// \t// this.items.forEach((el) => {\n\t\t\t\t// \t//   attributeService.linkItem(\n\t\t\t\t// \t//     this.contextSelected,\n\t\t\t\t// \t//     this.groupSelected,\n\t\t\t\t// \t//     el.id\n\t\t\t\t// \t//   );\n\t\t\t\t// \t// });\n\t\t\t\t// }\n\t\t\t\tthis.showDialog = false;\n\t\t\t},\n\n\t\t\tcloseDialog(closeResult) {\n\t\t\t\tif (typeof this.onFinised === \"function\") {\n\t\t\t\t\tthis.onFinised(closeResult);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tgetAllData() {\n\t\t\t\treturn attributeService\n\t\t\t\t\t.getAllGroupContext(spinalControlPointService.CONTROL_POINT_TYPE)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tthis.data = res;\n\t\t\t\t\t\tthis.updateCategory();\n\t\t\t\t\t\tthis.updateGroups();\n\t\t\t\t\t\tthis.updateControlPoints();\n\t\t\t\t\t});\n\t\t\t},\n\n\t\t\t// getCategories() {\n\t\t\t//   this.categorySelected = undefined;\n\n\t\t\t//   if (this.contextSelected) {\n\t\t\t//     let val = this.data.find(el => el.id === this.contextSelected);\n\t\t\t//     if (val) return val.category;\n\t\t\t//   }\n\t\t\t//   return [];\n\t\t\t// },\n\t\t\tgetGroups() {\n\t\t\t\tthis.groupSelected = undefined;\n\n\t\t\t\tif (this.contextSelected && this.categorySelected) {\n\t\t\t\t\tlet context = this.data.find(\n\t\t\t\t\t\t(el) => el.id === this.contextSelected\n\t\t\t\t\t);\n\t\t\t\t\tif (context) {\n\t\t\t\t\t\tlet category = context.category.find(\n\t\t\t\t\t\t\t(el) => el.id == this.categorySelected\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (category) return category.groups;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t},\n\n\t\t\t// disabled() {\n\t\t\t// \treturn !(\n\t\t\t// \t\tthis.contextSelected &&\n\t\t\t// \t\tthis.categorySelected &&\n\t\t\t// \t\tthis.groupSelected &&\n\t\t\t// \t\tthis.controlPointSelected &&\n\t\t\t// \t\tthis.state === this.STATES.normal\n\t\t\t// \t);\n\t\t\t// },\n\n\t\t\tcreateContext() {\n\t\t\t\tspinalPanelManagerService.openPanel(\"createGroupContextDialog\", {\n\t\t\t\t\ttitle: \"Create a Grouping Context\",\n\t\t\t\t\ttypePreselected: spinalControlPointService.CONTROL_POINT_TYPE,\n\t\t\t\t\tcallback: (id) => (this.contextSelected = id),\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tcreateCategory() {\n\t\t\t\tspinalPanelManagerService.openPanel(\"createCategoryDialog\", {\n\t\t\t\t\ttitle: \"add Category\",\n\t\t\t\t\tcontextId: this.contextSelected,\n\t\t\t\t\tselectedNode: SpinalGraphService.getInfo(this.contextSelected),\n\t\t\t\t\tcallback: (id) => (this.categorySelected = id),\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tcreateGroup() {\n\t\t\t\tspinalPanelManagerService.openPanel(\"createGroupDialog\", {\n\t\t\t\t\ttitle: \"add Group\",\n\t\t\t\t\tcontextId: this.contextSelected,\n\t\t\t\t\tselectedNode: SpinalGraphService.getInfo(this.categorySelected),\n\t\t\t\t\tcallback: (id) => (this.groupSelected = id),\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t//////////////////////////////////////////////////////////////////\n\t\t\t// Updates\n\t\t\t//////////////////////////////////////////////////////////////////\n\n\t\t\tupdateCategory() {\n\t\t\t\t// this.categorySelected = undefined;\n\t\t\t\tthis.categories = [];\n\t\t\t\tif (this.contextSelected) {\n\t\t\t\t\tlet val = this.data.find((el) => el.id === this.contextSelected);\n\t\t\t\t\tif (val) this.categories = val.category;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdateGroups() {\n\t\t\t\t// this.groupSelected = undefined;\n\t\t\t\tthis.groups = [];\n\t\t\t\tif (this.contextSelected && this.categorySelected) {\n\t\t\t\t\tlet context = this.data.find(\n\t\t\t\t\t\t(el) => el.id === this.contextSelected\n\t\t\t\t\t);\n\t\t\t\t\tif (context) {\n\t\t\t\t\t\tlet category = context.category.find(\n\t\t\t\t\t\t\t(el) => el.id == this.categorySelected\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (category) this.groups = category.groups;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tasync updateControlPoints() {\n\t\t\t\tthis.controlPoints = [];\n\t\t\t\tif (\n\t\t\t\t\tthis.contextSelected &&\n\t\t\t\t\tthis.categorySelected &&\n\t\t\t\t\tthis.groupSelected\n\t\t\t\t) {\n\t\t\t\t\tconst res = await spinalControlPointService.getControlPoint(\n\t\t\t\t\t\tthis.groupSelected\n\t\t\t\t\t);\n\t\t\t\t\tthis.controlPoints = res.map((el) => el.get());\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t//////////////////////////////////////////////////////////////////\n\t\t\t// Select\n\t\t\t//////////////////////////////////////////////////////////////////\n\n\t\t\tselectContext(id) {\n\t\t\t\tif (this.contextSelected === id) {\n\t\t\t\t\tthis.contextSelected = undefined;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.contextSelected = id;\n\t\t\t},\n\n\t\t\tselectCategory(id) {\n\t\t\t\tif (this.categorySelected === id) {\n\t\t\t\t\tthis.categorySelected = undefined;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.categorySelected = id;\n\t\t\t},\n\n\t\t\tselectGroup(id) {\n\t\t\t\tif (this.groupSelected === id) {\n\t\t\t\t\tthis.groupSelected = undefined;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.groupSelected = id;\n\t\t\t},\n\n\t\t\tselectControlPoint(id) {\n\t\t\t\tif (this.controlPointSelected === id) {\n\t\t\t\t\tthis.controlPointSelected = undefined;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.controlPointSelected = id;\n\t\t\t},\n\t\t},\n\t\tcomputed: {\n\t\t\tdisabled() {\n\t\t\t\treturn !(\n\t\t\t\t\tthis.contextSelected &&\n\t\t\t\t\tthis.categorySelected &&\n\t\t\t\t\tthis.groupSelected &&\n\t\t\t\t\tthis.controlPointSelected &&\n\t\t\t\t\tthis.state === this.STATES.normal\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tsuccess() {\n\t\t\t\treturn this.state === this.STATES.success;\n\t\t\t},\n\t\t\terror() {\n\t\t\t\treturn this.state === this.STATES.error;\n\t\t\t},\n\t\t},\n\t\twatch: {\n\t\t\tcontextSelected() {\n\t\t\t\tthis.categorySelected = undefined;\n\t\t\t\tthis.groupSelected = undefined;\n\n\t\t\t\tthis.updateCategory();\n\t\t\t\tthis.updateGroups();\n\t\t\t\tthis.updateControlPoints();\n\t\t\t},\n\n\t\t\tcategorySelected() {\n\t\t\t\tthis.groupSelected = undefined;\n\n\t\t\t\tthis.updateGroups();\n\t\t\t\tthis.updateControlPoints();\n\t\t\t},\n\n\t\t\tgroupSelected() {\n\t\t\t\tthis.controlPointSelected = undefined;\n\t\t\t\tthis.updateControlPoints();\n\t\t\t},\n\t\t},\n\t};\n</script>\n\n<style scoped>\n\t.mdDialogContainer {\n\t\twidth: 100%;\n\t\theight: 600px;\n\t}\n\n\t.mdDialogContainer .dialogTitle {\n\t\ttext-align: center;\n\t}\n\n\t.mdDialogContainer .content {\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: stretch;\n\t}\n\n\t.md-dialog-container .states {\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t.mdDialogContainer .content .section {\n\t\twidth: 24%;\n\t\tborder: 1px solid grey;\n\t\tborder-radius: 4% 4% 0 0;\n\t\tpadding: 15px;\n\t}\n\n\t/* .mdIcon {\n  display: flex;\n  align-items: center;\n} */\n</style>\n\n<style>\n\t.mdDialogContainer .md-dialog-container {\n\t\tmax-width: 100%;\n\t\tmax-height: 100%;\n\t}\n</style>\n","import SpinalAttributeService from './classes/spinalAttributeService';\nimport SpinalConfigurationService from './classes/spinalConfigurationService';\n\nconst spinalAttributeService = new SpinalAttributeService();\nconst spinalConfigurationService = new SpinalConfigurationService()\n\nexport default spinalAttributeService;\n\nexport {\n  spinalAttributeService,\n  spinalConfigurationService\n}","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport {SpinalGraphService} from 'spinal-env-viewer-graph-service';\n\nimport {serviceDocumentation} from 'spinal-env-viewer-plugin-documentation-service';\n\nimport {BIM_OBJECT_TYPE} from 'spinal-env-viewer-plugin-forge/dist/Constants';\n\nimport {bimObjectManagerService} from 'spinal-env-viewer-bim-manager-service';\n\nimport {groupManagerService} from 'spinal-env-viewer-plugin-group-manager-service';\n\n// import {\n//   groupService\n// } from \"spinal-env-viewer-room-manager/services/service.js\";\n\nexport default class SpinalAttributeService {\n  constructor() {}\n\n  getAllAttributes(nodeId, liste) {\n    let realNode = SpinalGraphService.getRealNode(nodeId);\n\n    if (realNode) {\n      // return serviceDocumentation.getAllAttributes(realNode).then(\n      //   argAttributes => {\n      //     return argAttributes.map(el => {\n      //       let info = el.get();\n      //       if (liste && liste.indexOf(info.label) === -1) liste.push(info\n      //         .label);\n      //       return info;\n      //     })\n      //   });\n\n      return serviceDocumentation.getCategory(realNode).then((res) => {\n        return res\n          .map((el) => {\n            let attrs = el.element.get();\n            return attrs.map((attr) => {\n              if (liste && liste.indexOf(attr.label) === -1)\n                liste.push(attr.label);\n              attr['category'] = el.nameCat;\n              return attr;\n            });\n          })\n          .flat();\n      });\n    } else {\n      return Promise.resolve([]);\n    }\n  }\n\n  async getAllData(contextId, nodeId) {\n    let context = SpinalGraphService.getRealNode(contextId);\n    let realNode = SpinalGraphService.getRealNode(nodeId);\n    let res = {\n      types: [],\n      attributes: [],\n      data: {},\n    };\n\n    if (context && realNode) {\n      await realNode.findInContext(context, async (node) => {\n        SpinalGraphService._addNode(node);\n        let type = node.getType().get();\n        let info = node.info.get();\n\n        if (res.types.indexOf(type) === -1) {\n          res.types.push(type);\n        }\n\n        if (typeof res.data[type] === 'undefined') res.data[type] = [];\n\n        info['attributes'] = await this.getAllAttributes(\n          info.id,\n          res.attributes\n        );\n\n        res.data[type].push(info);\n      });\n    }\n\n    return res;\n  }\n\n  getBimObjectAttribute(bimObjectInfo, attributeName) {\n    let value = attributeName.toLowerCase();\n\n    let model =\n      window.spinal.BimObjectService.getModelByBimfile(\n        bimObjectInfo.bimFileId\n      ) || window.NOP_VIEWER.model;\n\n    const dbId = bimObjectInfo.dbid || bimObjectInfo.dbId;\n\n    if (model) {\n      return bimObjectManagerService\n        .getBimObjectProperties({\n          model: model,\n          selection: [dbId],\n        })\n        .then((res) => {\n          let properties = res[0].properties[0].properties;\n\n          let found = properties.find((el) => {\n            let attrName = el.attributeName.toLowerCase();\n            let displayName = el.displayName.toLowerCase();\n\n            return attrName === value || displayName === value;\n          });\n\n          if (found) {\n            return found.displayValue;\n          } else {\n            return '-';\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    } else {\n      return '-';\n    }\n  }\n\n  async createAttribute(nodeId, categoryName, attributeName) {\n    let realNode = SpinalGraphService.getRealNode(nodeId);\n\n    let category;\n\n    category = await serviceDocumentation.getCategoryByName(\n      realNode,\n      categoryName\n    );\n\n    if (typeof category === 'undefined') {\n      category = await serviceDocumentation.addCategoryAttribute(\n        realNode,\n        categoryName\n      );\n    }\n\n    let attr = {\n      label: attributeName,\n      value: '-',\n    };\n    if (realNode.getType().get() === BIM_OBJECT_TYPE) {\n      attr.value = await this.getBimObjectAttribute(\n        realNode.info.get(),\n        attributeName\n      );\n    }\n\n    await serviceDocumentation.addAttributeByCategory(\n      realNode,\n      category,\n      attr.label,\n      attr.value\n    );\n  }\n\n  async updateAttributeValue(\n    nodeId,\n    categoryName,\n    attributeName,\n    attributeValue\n  ) {\n    let attr = await this.getOrCreateAttribute(\n      nodeId,\n      categoryName,\n      attributeName\n    );\n\n    if (attr && attr.value) {\n      attr.value.set(attributeValue);\n    }\n  }\n\n  getBimObjects(nodeId) {\n    // console.log(SpinalGraphService.getInfo(nodeId));\n    // return SpinalGraphService.findNodes(nodeId,)\n  }\n\n  async getOrCreateAttribute(nodeId, categoryName, attributeName) {\n    let realNode = SpinalGraphService.getRealNode(nodeId);\n    if (realNode) {\n      let category = await serviceDocumentation.getCategoryByName(\n        realNode,\n        categoryName\n      );\n\n      if (typeof category === 'undefined') {\n        category = await serviceDocumentation.addCategoryAttribute(\n          realNode,\n          categoryName\n        );\n      }\n\n      let attributes = await serviceDocumentation.getAttributesByCategory(\n        realNode,\n        categoryName\n      );\n\n      let attr = attributes.find((el) => {\n        return el.label.get() === attributeName;\n      });\n\n      if (attr) return attr;\n\n      await serviceDocumentation.addAttributeByCategory(\n        realNode,\n        category,\n        attributeName,\n        '-'\n      );\n\n      attributes = await serviceDocumentation.getAttributesByCategory(\n        realNode,\n        categoryName\n      );\n\n      return attributes.find((el) => {\n        return el.label.get() === attributeName;\n      });\n    }\n  }\n\n  getAllGroupContext(type) {\n    // return Promise.all([SpinalGraphService.getContextWithType(\n    //     groupService.constants.ROOMS_GROUP_CONTEXT),\n    //   SpinalGraphService.getContextWithType(\n    //     groupService.constants.EQUIPMENTS_GROUP_CONTEXT),\n    //   SpinalGraphService.getContextWithType(\n    //     groupService.constants.ENDPOINTS_GROUP_CONTEXT)\n    // ]).then(values => {\n    //   let contexts = values.flat();\n\n    //   let promises = contexts.map(async context => {\n    //     let res = context.info.get();\n    //     res[\"category\"] = await this.getCategory(res.id, res\n    //       .type);\n    //     return res;\n    //   })\n\n    //   return Promise.all(promises);\n\n    // })\n\n    // console.log(\"service type\", type);\n\n    return groupManagerService.getGroupContexts(type).then((contexts) => {\n      const promises = contexts.map(async (context) => {\n        context['category'] = await this.getCategory(context.id);\n        return context;\n      });\n\n      return Promise.all(promises);\n    });\n  }\n\n  async getCategory(contextId) {\n    // let relationName = groupService.constants\n    //   .CONTEXT_TO_CATEGORY_RELATION;\n\n    // return SpinalGraphService.getChildren(contextId, [relationName]).then(\n    //   children => {\n    //     let promises = children.map(async child => {\n    //       let info = child.get();\n    //       info[\"groups\"] = await this.getGroup(child.id, child\n    //         .type);\n    //       return info;\n    //     })\n\n    //     return Promise.all(promises);\n\n    //   })\n\n    const categories = await groupManagerService.getCategories(contextId);\n\n    const promises = categories.map(async (category) => {\n      let info = category.get();\n      info['groups'] = await this.getGroup(category.id);\n      return info;\n    });\n\n    return Promise.all(promises);\n  }\n\n  async getGroup(categoryId) {\n    // let relationName = groupService.constants.CATEGORY_TO_GROUP_RELATION;\n\n    // return SpinalGraphService.getChildren(categoryId, [relationName])\n    //   .then(\n    //     children => {\n    //       return children.map(el => el.get());\n    //     })\n\n    const groups = await groupManagerService.getGroups(categoryId);\n\n    return groups.map((el) => el.get());\n  }\n\n  linkItem(contextId, parentId, itemId) {\n    // groupService.linkElementToGroup(parentId, itemId, contextId)\n    return groupManagerService.linkElementToGroup(contextId, parentId, itemId);\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bimService_1 = require(\"./bimObjects/bimService\");\nexports.bimObjectManagerService = bimService_1.default;\n//# sourceMappingURL=index.js.map",null,"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BimObjectManagerService {\n    constructor() { }\n    getAllBimObjectsProperties(model) {\n        return this.getBimObjectProperties([\n            {\n                model: model,\n                selection: this.getLeafDbIds(model).selection\n            }\n        ]);\n    }\n    getBimObjectProperties(argBimObjects) {\n        // let properties = [];\n        let bimOjects = Array.isArray(argBimObjects)\n            ? argBimObjects\n            : [argBimObjects];\n        let promises = bimOjects.map(el => {\n            return this._getProperties(el.model, el.selection);\n        });\n        return Promise.all(promises).then(res => {\n            return res;\n        });\n    }\n    getLeafDbIds(model, rootId) {\n        const tree = model.getInstanceTree();\n        const dbIds = [];\n        if (typeof rootId === \"undefined\") {\n            rootId = [tree.nodeAccess.rootId];\n        }\n        else {\n            rootId = Array.isArray(rootId) ? rootId : [rootId];\n        }\n        rootId.forEach(el => {\n            const queue = [el];\n            let hasChildren;\n            while (queue.length) {\n                let id = queue.pop();\n                hasChildren = false;\n                tree.enumNodeChildren(id, childId => {\n                    hasChildren = true;\n                    queue.push(childId);\n                });\n                if (!hasChildren) {\n                    dbIds.push(id);\n                }\n            }\n        });\n        return { model: model, selection: dbIds };\n    }\n    getBimObjectsByPropertiesName(model, properties) {\n        return this.getAllBimObjectsProperties(model).then(res => {\n            let result = [];\n            for (let i = 0; i < res.length; i++) {\n                const element = res[i];\n                for (let j = 0; j < element.properties.length; j++) {\n                    const property = element.properties[j];\n                    if (typeof this._getLabel(property, properties) !== \"undefined\") {\n                        result.push(property);\n                    }\n                    // }\n                }\n                return result;\n            }\n        });\n    }\n    getBimObjectsValidated(referential, regEx) {\n        return this.getBimObjectProperties(referential).then(res => {\n            return res.map(element => {\n                return {\n                    model: element.model,\n                    properties: element.properties.filter(el => {\n                        return this._isValid(el, regEx);\n                    })\n                };\n            });\n        });\n    }\n    getBimObjectsByName(model, bimObjectName, labelName) {\n        return new Promise(resolve => {\n            model.search(bimObjectName.trim(), (res) => __awaiter(this, void 0, void 0, function* () {\n                let properties = yield this.getBimObjectProperties([\n                    { model: model, selection: res }\n                ]);\n                resolve(properties);\n            }), () => {\n                resolve([]);\n            }, labelName);\n        });\n    }\n    ////////////////////////////////////////////////////////////////////////\n    //                             PRIVATES                               //\n    ////////////////////////////////////////////////////////////////////////\n    _getProperties(model, selection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let properties = selection.map(el => {\n                return new Promise(resolve => {\n                    model.getProperties(el, res => {\n                        // properties.push(res);\n                        resolve(res);\n                    }, err => {\n                        resolve(undefined);\n                    });\n                });\n            });\n            return {\n                model: model,\n                properties: yield Promise.all(properties)\n            };\n        });\n    }\n    _getAllDbIds(model) {\n        var instanceTree = model.getData().instanceTree;\n        var allDbIdsStr = Object.keys(instanceTree.nodeAccess.dbIdToIndex);\n        return allDbIdsStr.map(function (id) {\n            return parseInt(id);\n        });\n    }\n    _getLabel(bim, properties) {\n        for (let i = 0; i < properties.length; i++) {\n            const propertieValue = properties[i].value;\n            const propertyName = properties[i].name;\n            const found = bim.properties.find(el => {\n                return typeof propertieValue === \"undefined\" ||\n                    propertieValue.length === 0\n                    ? el.displayName.toLowerCase() ===\n                        propertyName.trim().toLocaleLowerCase()\n                    : el.displayName.toLowerCase() ===\n                        propertyName.trim().toLocaleLowerCase() &&\n                        propertieValue == el.displayValue;\n            });\n            if (typeof found === \"undefined\") {\n                return undefined;\n            }\n        }\n        return true;\n    }\n    _isValid(el, regEx) {\n        for (let i = 0; i < regEx.length; i++) {\n            let nameRegex = regEx[i].nameRegex;\n            let valueRegex = regEx[i].valueRegex;\n            let found = el.properties.find(res => {\n                if (typeof valueRegex === \"undefined\") {\n                    return nameRegex.test(res.displayName);\n                }\n                return (nameRegex.test(res.displayName) && valueRegex.test(res.displayValue));\n            });\n            if (typeof found === \"undefined\") {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.default = new BimObjectManagerService();\n//# sourceMappingURL=bimService.js.map",null,"import {\n  groupManagerService\n} from \"spinal-env-viewer-plugin-group-manager-service\";\n\n\nimport {\n  SpinalGraphService\n} from \"spinal-env-viewer-graph-service\";\n\nexport default class SpinalConfigurationService {\n  constructor() {\n    this.CONTEXT_NAME = \"NomenclatureConfiguration\";\n    this.CONFIGURATION_PROFIL_TYPE = \"AttributeConfiguration\";\n    this.ATTRIBUTE_TYPE = \"configurationAttribute\";\n  }\n\n  async createOrGetContext() {\n    const context = await groupManagerService.createGroupContext(\n      this.CONTEXT_NAME,\n      this.CONFIGURATION_PROFIL_TYPE\n    );\n\n    return context;\n  }\n\n  async createCategory(categoryName, iconName) {\n    const context = await this.createOrGetContext();\n    const contextId = context ? context.info.id.get() : undefined;\n\n    return groupManagerService.addCategory(contextId, categoryName, iconName);\n  }\n\n  async createGroup(categoryId, groupName, groupColor) {\n    const context = await this.createOrGetContext();\n    const contextId = context ? context.info.id.get() : undefined;\n\n    return groupManagerService.addGroup(\n      contextId,\n      categoryId,\n      groupName,\n      groupColor\n    );\n  }\n\n  async createConfiguration(\n    groupId,\n    configurationName,\n    configurationCategories = []\n  ) {\n    const context = await this.createOrGetContext();\n    const contextId = context ? context.info.id.get() : undefined;\n\n    const configurationNodeId = SpinalGraphService.createNode({\n        name: configurationName,\n        type: this.CONFIGURATION_PROFIL_TYPE,\n      },\n      new Model({\n        name: configurationName,\n        categories: configurationCategories,\n      })\n    );\n\n    await groupManagerService.linkElementToGroup(\n      contextId,\n      groupId,\n      configurationNodeId\n    );\n\n    return SpinalGraphService.getRealNode(configurationNodeId);\n  }\n\n  setAsCurrentConfiguration(nodeId) {\n    this.createOrGetContext().then((context) => {\n      let realNode = SpinalGraphService.getRealNode(nodeId);\n\n      if (realNode) {\n        if (context.info.currentConfiguration) {\n          context.info.rem_attr(\"currentConfiguration\");\n        }\n\n        context.info.add_attr({\n          currentConfiguration: new Ptr(realNode),\n        });\n      }\n    });\n  }\n\n  async deleteCurrentConf() {\n    const context = await this.createOrGetContext();\n    if (context && context.info.currentConfiguration)\n      context.info.rem_attr(\"currentConfiguration\");\n  }\n\n  getCurrentConfiguration() {\n    return this.createOrGetContext().then((context) => {\n      let confPtr = context.info.currentConfiguration;\n\n      if (typeof confPtr !== \"undefined\") {\n        return new Promise((resolve) => {\n          confPtr.load((realNode) => {\n            SpinalGraphService._addNode(realNode);\n            return realNode.getElement().then((el) => {\n              let element = el.get();\n              element[\"id\"] = realNode.info.id.get();\n              resolve(element);\n            });\n          });\n        });\n      }\n\n      return {\n        name: \"\",\n        categories: [],\n      };\n    });\n  }\n\n  editConfiguration(configurationId, configurationElement) {\n    let realNode = SpinalGraphService.getRealNode(configurationId);\n\n    if (realNode) {\n      realNode.getElement().then((element) => {\n        element.set(configurationElement);\n      });\n    }\n  }\n\n  async getConfigurationById(configId) {\n    const realNode = SpinalGraphService.getRealNode(configId);\n\n    if (realNode) {\n      const elementModel = await realNode.getElement();\n\n      if (elementModel) {\n        let element = elementModel.get();\n        element[\"id\"] = configId;\n        return element;\n      }\n    }\n\n  }\n\n  async getCategories() {\n    const context = await this.createOrGetContext();\n    return groupManagerService.getCategories(context.info.id.get());\n  }\n\n  getGroups(nodeId) {\n    // const context = await this.createOrGetContext();\n    return groupManagerService.getGroups(nodeId);\n  }\n\n  getConfigurations(groupId) {\n    return groupManagerService.getElementsLinkedToGroup(groupId);\n  }\n\n\n  isGroup(type) {\n    return groupManagerService.isGroup(type);\n  }\n\n  isCategory(type) {\n    return groupManagerService.isCategory(type);\n  }\n\n  async getElementGroup(id) {\n    const parents = await SpinalGraphService.getParents(id, []);\n\n    return parents[0];\n  }\n\n  async getTree(info) {\n    const obj = {\n      categoryId: undefined,\n      groupId: undefined,\n      configId: undefined\n    }\n\n    if (this.isCategory(info.type)) {\n\n      obj.categoryId = info.id;\n\n    } else if (this.isGroup(info.type)) {\n\n      const category = await groupManagerService.getGroupCategory(info.id);\n      if (category) obj.categoryId = category.id.get();\n\n      obj.groupId = info.id;\n\n    } else if (info.type === this.CONFIGURATION_PROFIL_TYPE) {\n\n      obj.configId = info.id;\n      const group = await this.getElementGroup(info.id);\n\n      if (group) {\n        obj.groupId = group.id.get();\n        const category = await groupManagerService.getGroupCategory(group.id\n          .get());\n\n        if (category) obj.categoryId = category.id.get();\n\n      }\n\n    }\n\n    return obj;\n\n  }\n\n}","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n   <div class=\"subContent\">\n      <div class=\"title\">\n         <div>{{title}}</div>\n         <!-- <div class=\"md-layout-item md-size-10 mdIcon\">\n        <md-button class=\"md-icon-button\"\n                   @click=\"createEvent\"\n                   :disabled=\"disableBtn\">\n          <md-icon>control_point</md-icon>\n        </md-button>\n      </div> -->\n      </div>\n\n      <md-content class=\"container md-scrollbar\">\n         <md-list>\n            <md-list-item\n               class=\"list-item\"\n               v-for=\"(item,index) in data\"\n               :key=\"index\"\n               @click=\"selectItem(item.id)\"\n               :class=\"{'selected' : item.id === itemSelected}\"\n               v-tooltip=\"item.name\"\n            >\n\n               <span class=\"md-list-item-text\">{{item.name}}</span>\n\n            </md-list-item>\n         </md-list>\n      </md-content>\n\n   </div>\n</template>\n\n<script>\nexport default {\n   name: \"linkToGroupTemplate\",\n   props: [\"data\", \"title\", \"itemSelected\", \"disableBtn\"],\n   methods: {\n      createEvent() {\n         this.$emit(\"create\");\n      },\n      selectItem(id) {\n         this.$emit(\"select\", id);\n      },\n   },\n};\n</script>\n\n<style scoped>\n.subContent {\n   width: 100%;\n   height: 100%;\n}\n\n.subContent .title {\n   width: 100%;\n   height: 10%;\n   /* text-align: center; */\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   padding: 0 15px 0 15px;\n   border-bottom: 1px dashed grey;\n}\n\n.subContent .container {\n   width: 100%;\n   height: 90%;\n   padding: 0px !important;\n   /* border: 1px solid red; */\n   overflow: hidden;\n   overflow-y: auto;\n}\n\n.subContent .container .list-item {\n   border-bottom: 1px solid grey;\n}\n\n.subContent .container .list-item .md-list-item-text {\n   width: 100%;\n   display: block;\n   overflow: hidden;\n   white-space: nowrap;\n   text-overflow: ellipsis;\n}\n\n.subContent .container .list-item.selected {\n   background-color: #448aff;\n}\n</style>","import Vue from 'vue';\nimport utilities from \"./utilities\";\n\n\nconst EventBus = new Vue();\n\nEventBus.$on(\"mouseover\", (item) => {\n  utilities.getBimObjects(item.id).then(res => {\n    let selections = [];\n\n    res.forEach(el => {\n      let info = el.get();\n      let model = window.spinal.BimObjectService.getModelByBimfile(\n        info.bimFileId);\n\n      let selected = selections.find(el2 => {\n        return el2.model.id === model.id\n      });\n\n      if (selected) {\n        selected.ids.push(el.dbid);\n      } else {\n        selections.push({\n          model: model,\n          ids: [info.dbid]\n        })\n      }\n\n\n    })\n\n    window.spinal.ForgeViewer.viewer.impl.selector\n      .setAggregateSelection(selections);\n\n  })\n})\n\nEventBus.$on(\"mouseleave\", () => {\n  window.spinal.ForgeViewer.viewer.select();\n})\n\nexport default EventBus;","import {\n  // ROOMS_CATEGORY_RELATION,\n  // ROOMS_GROUP_RELATION,\n  // ROOMS_TO_ELEMENT_RELATION,\n  // EQUIPMENTS_CATEGORY_RELATION,\n  // EQUIPMENTS_GROUP_RELATION,\n  // EQUIPMENTS_TO_ELEMENT_RELATION,\n  // ROOMS_GROUP_CONTEXT,\n  // ROOMS_GROUP,\n  // ROOMS_CATEGORY,\n  // EQUIPMENTS_GROUP_CONTEXT,\n  // EQUIPMENTS_CATEGORY,\n  // EQUIPMENTS_GROUP\n  groupService,\n} from \"../services/service\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\nimport { BIM_OBJECT_TYPE } from \"spinal-env-viewer-plugin-forge/dist/Constants\";\n\nimport geographicService from \"spinal-env-viewer-context-geographic-service\";\n\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\n\nlet ItemColoredMap = new Map();\nlet BimElementsColor = new Map();\n\nconst ROOMS_RELATIONS = [\n  // groupService.constants.CATEGORY_TO_GROUP_RELATION,\n  // groupService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  // groupService.constants.GROUP_TO_ROOMS_RELATION,\n  groupManagerService.constants.CATEGORY_TO_GROUP_RELATION,\n  groupManagerService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  groupManagerService.constants.OLD_RELATIONS_TYPES.GROUP_TO_ROOMS_RELATION,\n  `groupHas${geographicService.constants.ROOM_TYPE}`,\n  geographicService.constants.REFERENCE_RELATION,\n  geographicService.constants.EQUIPMENT_RELATION,\n];\n\nconst EQUIPMENTS_RELATIONS = [\n  // groupService.constants.CATEGORY_TO_GROUP_RELATION,\n  // groupService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  groupManagerService.constants.CATEGORY_TO_GROUP_RELATION,\n  groupManagerService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  groupManagerService.constants.OLD_RELATIONS_TYPES\n    .GROUP_TO_EQUIPMENTS_RELATION,\n  `groupHas${geographicService.constants.EQUIPMENT_TYPE}`,\n];\n\nconst ROOMS_TYPES = [\n  groupManagerService.constants.OLD_CONTEXTS_TYPES.ROOMS_GROUP_CONTEXT,\n  groupManagerService.constants.CATEGORY_TYPE,\n  groupManagerService.constants.OLD_GROUPS_TYPES.ROOMS_GROUP,\n  `${geographicService.constants.ROOM_TYPE}GroupContext`,\n  `${geographicService.constants.ROOM_TYPE}Group`,\n];\n\n// eslint-disable-next-line no-unused-vars\nconst EQUIPMENTS_TYPES = [\n  groupManagerService.constants.OLD_CONTEXTS_TYPES.EQUIPMENTS_GROUP_CONTEXT,\n  groupManagerService.constants.CATEGORY_TYPE,\n  groupManagerService.constants.OLD_GROUPS_TYPES.EQUIPMENTS_GROUP,\n  `${geographicService.constants.EQUIPMENT_TYPE}GroupContext`,\n  `${geographicService.constants.EQUIPMENT_TYPE}Group`,\n];\n\nlet utilities = {\n  getIcon(selectedNode) {\n    return this._isColored(selectedNode).then((isColored) => {\n      return isColored;\n    });\n  },\n\n  getBimObjects(nodeId) {\n    let nodeInfo = SpinalGraphService.getInfo(nodeId);\n    let type = nodeInfo.type.get();\n\n    if (type === BIM_OBJECT_TYPE) {\n      return Promise.resolve([nodeInfo]);\n    } else if (type === geographicService.constants.ROOM_TYPE) {\n      return SpinalGraphService.getChildren(nodeId, [\n        geographicService.constants.REFERENCE_RELATION,\n        geographicService.constants.EQUIPMENT_RELATION,\n      ]);\n    } else {\n      let relations = [\n        groupService.constants.CONTEXT_TO_CATEGORY_RELATION,\n        groupService.constants.GROUP_TO_ROOMS_RELATION,\n        geographicService.constants.REFERENCE_RELATION,\n        geographicService.constants.EQUIPMENT_RELATION,\n        groupService.constants.CATEGORY_TO_GROUP_RELATION,\n        groupService.constants.GROUP_TO_EQUIPMENTS_RELATION,\n      ];\n\n      if (ROOMS_TYPES.indexOf(type) !== -1) {\n        relations = ROOMS_RELATIONS;\n      } else {\n        relations = EQUIPMENTS_RELATIONS;\n      }\n\n      return SpinalGraphService.findNodes(nodeId, relations, (node) => {\n        return node.getType().get() === BIM_OBJECT_TYPE;\n      }).then((res) => {\n        return res.map((el) => {\n          SpinalGraphService._addNode(el);\n          return el.info;\n        });\n      });\n    }\n  },\n\n  getGroups(selectedNode) {\n    let type = selectedNode.type.get();\n    let nodeId = selectedNode.id.get();\n\n    if (groupManagerService.isGroup(type)) {\n      return Promise.resolve([selectedNode]);\n    }\n\n    let relations = [];\n\n    return SpinalGraphService.findNodes(nodeId, relations, (node) => {\n      let argType = node.getType().get();\n      return groupManagerService.isGroup(argType);\n    }).then((res) => {\n      return res.map((el) => {\n        SpinalGraphService._addNode(el);\n        return el.info;\n      });\n    });\n  },\n\n  colorItem(selectedNode) {\n    this.getGroups(selectedNode).then((res) => {\n      res.forEach((el) => {\n        let id = el.id.get();\n        let color = el.color ? el.color.get() : undefined;\n        this.colorGroup(id, color);\n      });\n    });\n  },\n\n  restoreItem(selectedNode) {\n    this.getGroups(selectedNode).then((res) => {\n      res.forEach((el) => {\n        let id = el.id.get();\n        this.restoreGroup(id);\n      });\n    });\n  },\n\n  colorGroup(groupId, argColor) {\n    this.getBimObjects(groupId).then((res) => {\n      let color =\n        typeof argColor !== \"undefined\"\n          ? this._convertHexColorToRGB(argColor)\n          : this._convertHexColorToRGB(\"#000000\");\n\n      ItemColoredMap.set(groupId, groupId);\n\n      res.forEach((child) => {\n        let BimColors = BimElementsColor.get(child.dbid.get())\n          ? BimElementsColor.get(child.dbid.get())\n          : [];\n\n        BimColors.push({\n          id: groupId, //node.id.get(),\n          color: color,\n        });\n\n        BimElementsColor.set(child.dbid.get(), BimColors);\n\n        let model = window.spinal.BimObjectService.getModelByBimfile(\n          child.bimFileId.get()\n        );\n\n        console.log(\"model\", model);\n\n        model.setThemingColor(\n          child.dbid.get(),\n          new THREE.Vector4(\n            color.r / 255,\n            color.g / 255,\n            color.b / 255,\n            0.7,\n            true\n          )\n        );\n      });\n    });\n  },\n\n  restoreGroup(groupId) {\n    ItemColoredMap.delete(groupId);\n    this.getBimObjects(groupId).then((res) => {\n      res.forEach((child) => {\n        let model = window.spinal.BimObjectService.getModelByBimfile(\n          child.bimFileId.get()\n        );\n\n        model.setThemingColor(\n          child.dbid.get(),\n          // eslint-disable-next-line no-undef\n          new THREE.Vector4(0, 0, 0, 0),\n          true\n        );\n\n        let allColors = BimElementsColor.get(child.dbid.get());\n\n        if (allColors) {\n          //   allColors = allColors.filter(el => el.id !== node.id.get());\n          allColors = allColors.filter((el) => el.id !== groupId);\n          BimElementsColor.set(child.dbid.get(), allColors);\n\n          if (allColors.length > 0) {\n            let color = allColors[0].color;\n            model.setThemingColor(\n              child.dbid.get(),\n              // eslint-disable-next-line no-undef\n              new THREE.Vector4(\n                color.r / 255,\n                color.g / 255,\n                color.b / 255,\n                0.7\n              ),\n              true\n            );\n          }\n        }\n      });\n    });\n  },\n\n  async consumeBatch(promises, batchSize = 2) {\n    let index = 0;\n    const result = { successed: [], failed: [] };\n    while (index < promises.length) {\n      let endIndex = index + batchSize;\n      if (promises.length <= endIndex) endIndex = promises.length;\n      const slice = promises.slice(index, endIndex);\n      // const resProm = await Promise.all(slice.map((e) => e()));\n      // result.push(...resProm);\n      const { successed, failed } = await this.getPromiseResult(\n        slice.map((e) => e())\n      );\n      result.successed.push(...successed);\n      result.failed.push(...failed);\n\n      index = endIndex;\n    }\n    return result;\n  },\n\n  getPromiseResult(liste) {\n    return Promise.allSettled(liste).then((result) => {\n      const obj = { successed: [], failed: [] };\n      for (const { status, value } of result) {\n        if (status === \"fulfilled\") obj.successed.push(value);\n        else obj.failed.push(value);\n      }\n      return obj;\n    });\n  },\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  //                                                    Private                                   //\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n  _isColored(selectedNode) {\n    return this.getGroups(selectedNode).then((res) => {\n      if (res.length === 0) return false;\n\n      for (let index = 0; index < res.length; index++) {\n        const id = res[index].id.get();\n\n        if (typeof ItemColoredMap.get(id) === \"undefined\") {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  },\n\n  _convertHexColorToRGB(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result\n      ? {\n          r: parseInt(result[1], 16),\n          g: parseInt(result[2], 16),\n          b: parseInt(result[3], 16),\n        }\n      : null;\n  },\n\n  ///////////////////////////////////////////////////////////////////////////////////////////\n  //                                    Parcours ascendant                                 //\n  ///////////////////////////////////////////////////////////////////////////////////////////\n\n  async getGeographicTree(endNodeId) {\n    let obj = {\n      id: endNodeId,\n      children: [],\n    };\n\n    let parents = [];\n\n    do {\n      let tempParents = await SpinalGraphService.getParents(\n        id,\n        geographicService.constants.GEOGRAPHIC_RELATIONS\n      );\n\n      parents = tempParents && tempParents.map((el) => el.get());\n\n      // parent && result.push(parent.get());\n\n      // id = (parent && parent.id) && parent.id.get();\n    } while (parents.length);\n\n    // return result;\n  },\n\n  addObjToParent(obj, parentId) {\n    return {\n      id: parentId,\n      children: obj,\n    };\n  },\n};\n\nexport default utilities;\n","const {\n  SPINAL_RELATION_PTR_LST_TYPE,\n  SpinalGraphService\n} = require(\"spinal-env-viewer-graph-service\");\n\nconst {\n  Model\n} = require(\"spinal-core-connectorjs_type\");\n\nconst constants = require(\"./constants\");\n\n\nlet groupService = {\n  constants: constants,\n  createGroupContext(name, type) {\n    const context = SpinalGraphService.getContext(name);\n\n    if (typeof context !== \"undefined\") return Promise.resolve(false);\n\n    return SpinalGraphService.addContext(\n      name,\n      type,\n      new Model({\n        name: name\n      })\n    );\n  },\n  addElement(contextId, elementId, elementType, elementName, iconName,\n    color) {\n    let contextInfo = SpinalGraphService.getInfo(contextId)\n    let contextType = contextInfo && contextInfo.type ? contextInfo.type\n      .get() : undefined;\n\n    let typeAndRelation = this.getTypeAndRelation(elementType, contextType);\n\n\n    let type = typeAndRelation.type;\n    let relationName = typeAndRelation.relation;\n\n    if (typeof type !== \"undefined\" && typeof relationName !== \"undefined\") {\n      let info = {\n        name: elementName,\n        type: type\n      }\n\n      if (iconName) {\n        info[\"icon\"] = iconName;\n      }\n\n      if (color) {\n        info[\"color\"] = color;\n      }\n\n      let childId = SpinalGraphService.createNode(info,\n        new Model({\n          name: elementName\n        })\n      );\n\n\n      return SpinalGraphService.addChildInContext(\n        elementId,\n        childId,\n        contextId,\n        relationName,\n        SPINAL_RELATION_PTR_LST_TYPE\n      );\n    }\n\n    // // let type =\n    // //   contextType === ROOMS_GROUP_CONTEXT ? ROOMS_GROUP : EQUIPMENTS_GROUP;\n\n    // // let relationName =\n    // //   contextType === ROOMS_GROUP_CONTEXT ?\n    // //   ROOMS_GROUP_RELATION :\n    // //   EQUIPMENTS_GROUP_RELATION;\n\n\n\n  },\n  elementIsLinkedToGroup(groupId, elementId) {\n    let realNode = SpinalGraphService.getRealNode(groupId);\n    const type = realNode.getType().get();\n\n    let relationName = constants.GROUP_RELATION_ASSOCIATION.get(type)\n\n    try {\n      let ids = realNode.children[SPINAL_RELATION_PTR_LST_TYPE][relationName]\n        .children.info.ids;\n\n      return Promise.resolve(ids.has((el) => {\n        return el.get() === elementId\n      }))\n    } catch (error) {\n      // let type = SpinalGraphService.getInfo(groupId).type.get();\n      // let relationName = type === ROOMS_GROUP ? ROOMS_TO_ELEMENT_RELATION :\n      //   EQUIPMENTS_TO_ELEMENT_RELATION;\n\n      return SpinalGraphService.getChildren(groupId, [relationName]).then(\n        children => {\n          for (let i = 0; i < children.length; i++) {\n            const element = children[i];\n            if (element.id.get() === elementId) return true;\n\n          }\n          return false;\n        });\n    }\n\n  },\n  linkElementToGroup(groupId, elementId, contextId) {\n\n    let groupInfo = SpinalGraphService.getInfo(groupId);\n\n    let relationName = constants.GROUP_RELATION_ASSOCIATION.get(groupInfo.type\n      .get());\n\n\n    return this.getCategorie(groupInfo).then(category => {\n\n      return this.elementIsInCategorie(category[0].id.get(), elementId)\n        .then(\n          group => {\n            let result = {\n              old_group: undefined,\n              newGroup: groupId\n            }\n\n            if (typeof group !== \"undefined\") {\n              this.removeLink(group.id.get(), elementId);\n              result.old_group = group.id.get();\n            }\n\n            SpinalGraphService.addChildInContext(groupId,\n              elementId, contextId, relationName,\n              SPINAL_RELATION_PTR_LST_TYPE);\n\n\n            return result;\n\n          })\n    })\n\n  },\n  removeLink(groupId, elementId) {\n    let type = SpinalGraphService.getInfo(groupId).type.get();\n    let relationName = constants.GROUP_RELATION_ASSOCIATION.get(type);\n\n    return SpinalGraphService.removeChild(groupId, elementId,\n      relationName,\n      SPINAL_RELATION_PTR_LST_TYPE)\n  },\n  getTypeAndRelation(elementType, contextType) {\n\n    switch (elementType) {\n      case contextType:\n        return {\n          type: constants.CATEGORY_TYPE,\n            relation: constants.CONTEXT_TO_CATEGORY_RELATION\n        };\n\n        // case ROOMS_GROUP:\n        //   return {\n        //     type: \"undefined\",\n        //       relation:\n        //   };\n      case constants.CATEGORY_TYPE:\n        // eslint-disable-next-line no-case-declarations\n        let type = constants.CONTEXT_GROUP_ASSOCIATION.get(contextType);\n        return {\n          type: type,\n            relation: constants.CATEGORY_TO_GROUP_RELATION\n        };\n\n        // case constants.ROOMS_GROUP:\n        // case constants.EQUIPMENTS_GROUP:\n        // case constants.ENDPOINT_GROUP:\n        //   return {\n        //     type: \"\",\n        //       relation: constants.GROUP_RELATION_ASSOCIATION.get(elementType)\n        //   }\n\n      default:\n        return {};\n    }\n  },\n\n  getElementsLinked(groupId) {\n    let type = SpinalGraphService.getInfo(groupId).type.get();\n    let relationName = constants.GROUP_RELATION_ASSOCIATION.get(type);\n\n    return SpinalGraphService.getChildren(groupId, [relationName]);\n  },\n\n  getGroups(selectedNode) {\n\n    // const ROOMS_TYPES = [\n    //   ROOMS_GROUP_CONTEXT,\n    //   ROOMS_CATEGORY,\n    //   ROOMS_GROUP\n    // ]\n\n\n    let type = selectedNode.type.get();\n    let nodeId = selectedNode.id.get();\n\n    if (typeof constants.GROUP_RELATION_ASSOCIATION.get(type) !==\n      \"undefined\") {\n      return Promise.resolve([selectedNode]);\n    }\n\n    let relations = [\n      constants.CONTEXT_TO_CATEGORY_RELATION,\n      constants.CATEGORY_TO_GROUP_RELATION,\n      constants.GROUP_TO_ROOMS_RELATION,\n      constants.GROUP_TO_EQUIPMENTS_RELATION,\n      constants.GROUP_TO_ENDPOINT_RELATION\n    ];\n\n    return SpinalGraphService.findNodes(nodeId, relations, (node) => {\n      let argType = node.getType().get()\n      return typeof constants.GROUP_RELATION_ASSOCIATION.get(argType) !==\n        \"undefined\"\n    }).then(res => {\n      return res.map(el => {\n        SpinalGraphService._addNode(el);\n        return el.info;\n      })\n    })\n  },\n\n  getCategorie(selectedNode) {\n    let type = selectedNode.type.get();\n    let nodeId = selectedNode.id.get();\n\n    if (type === constants.CATEGORY_TYPE) {\n      return Promise.resolve(selectedNode);\n    } else if (constants.CONTEXTS_TYPES.indexOf(type) !== -1) {\n      return SpinalGraphService.getChildren(nodeId, [constants\n        .CONTEXT_TO_CATEGORY_RELATION\n      ]);\n\n    } else {\n      let relationRefPromises = [];\n\n\n      let node = SpinalGraphService.getRealNode(nodeId);\n\n      let relationList = node.parents[constants.CATEGORY_TO_GROUP_RELATION];\n\n      if (relationList) {\n        for (let i = 0; i < relationList.length; i++) {\n          const element = relationList[i];\n          relationRefPromises.push(element.load());\n        }\n\n      }\n\n      return Promise.all(relationRefPromises).then(refs => {\n\n        let promises = refs.map(node => {\n          return node.parent.load();\n        })\n\n\n        return Promise.all(promises).then(parents => {\n          // let p = [];\n          // parents.forEach(el => {\n          //   if (el && !(el instanceof SpinalContext)) {\n          //     p.push(new SpinalCalNode(el));\n          //   }\n          // })\n\n          // return p;\n\n          return parents.map(el => {\n            return el.info;\n          });\n\n        });\n\n      })\n\n\n    }\n  },\n\n  elementIsInCategorie(categoryId, elementId) {\n\n    // let nodeInfo = SpinalGraphService.getInfo(categoryId);\n    // let type = nodeInfo.type.get();\n\n    // let relationName =\n    //   type === ROOMS_CATEGORY ?\n    //   ROOMS_GROUP_RELATION :\n    //   EQUIPMENTS_GROUP_RELATION;\n\n    return SpinalGraphService.getChildren(categoryId, [constants\n        .CATEGORY_TO_GROUP_RELATION\n      ])\n      .then(\n        children => {\n\n          return children.find(child => {\n            return child.childrenIds.find(el => {\n              return el === elementId\n            })\n          })\n\n        })\n\n  }\n\n};\n\nmodule.exports = {\n  // ROOMS_GROUP_CONTEXT,\n  // ROOMS_GROUP,\n  // EQUIPMENTS_GROUP,\n  // ROOMS_GROUP_RELATION,\n  // EQUIPMENTS_GROUP_RELATION,\n  // EQUIPMENTS_GROUP_CONTEXT,\n  // ROOMS_TO_ELEMENT_RELATION,\n  // EQUIPMENTS_TO_ELEMENT_RELATION,\n  // ROOMS_CATEGORY,\n  // ROOMS_CATEGORY_RELATION,\n  // EQUIPMENTS_CATEGORY,\n  // EQUIPMENTS_CATEGORY_RELATION,\n  // typeLst,\n  // TYPE_AND_RELATION,\n\n  groupService\n};","// ////////////////////////////////////////////////////\n// // ROOMS\n// ////////////////////////////////////////////////////\n// const ROOMS_GROUP_CONTEXT = \"RoomsGroupContext\";\n// const ROOMS_GROUP = \"RoomsGroup\";\n// const ROOMS_GROUP_RELATION = \"hasRoomsGroup\";\n// const ROOMS_TO_ELEMENT_RELATION = \"groupHasRooms\";\n// const ROOMS_CATEGORY = \"Rooms_category\";\n// const ROOMS_CATEGORY_RELATION = \"hasRoomsCategory\";\n\n\n\n// ///////////////////////////////////////////////////////\n// // BimObject\n// ///////////////////////////////////////////////////////\n// const EQUIPMENTS_GROUP_CONTEXT = \"EquipmentGroupContext\";\n// const EQUIPMENTS_GROUP = \"EquipmentGroup\";\n// const EQUIPMENTS_GROUP_RELATION = \"hasEquipmentsGroup\";\n// const EQUIPMENTS_TO_ELEMENT_RELATION = \"groupHasEquipments\";\n// const EQUIPMENTS_CATEGORY = \"Equipment_category\";\n// const EQUIPMENTS_CATEGORY_RELATION = \"hasEquipmentsCategory\";\n\n\n\n// const typeLst = [\n//   ROOMS_GROUP_CONTEXT,\n//   ROOMS_GROUP,\n//   ROOMS_CATEGORY,\n//   EQUIPMENTS_GROUP_CONTEXT,\n//   EQUIPMENTS_GROUP,\n//   EQUIPMENTS_CATEGORY\n// ]\n\n\n\n// const TYPE_AND_RELATION = new Map();\n// TYPE_AND_RELATION.set(ROOMS_GROUP_CONTEXT, ROOMS_CATEGORY_RELATION)\n// TYPE_AND_RELATION.set(ROOMS_GROUP, ROOMS_TO_ELEMENT_RELATION)\n// TYPE_AND_RELATION.set(ROOMS_CATEGORY, ROOMS_GROUP_RELATION)\n// TYPE_AND_RELATION.set(EQUIPMENTS_GROUP_CONTEXT, EQUIPMENTS_CATEGORY_RELATION)\n// TYPE_AND_RELATION.set(EQUIPMENTS_GROUP, EQUIPMENTS_TO_ELEMENT_RELATION)\n// TYPE_AND_RELATION.set(EQUIPMENTS_CATEGORY, EQUIPMENTS_GROUP_RELATION)\n\n// const CONTEXT_TYPE = \"groupingContext\";\n// const CATEGORY_TYPE = \"groupingCategory\";\n\n// ///////////////////////////////////////////\n// //            Groups Types               //\n// ///////////////////////////////////////////\n// const ROOMS_GROUP = \"roomsGroup\";\n// const EQUIPMENTS_GROUP = \"equipmentGroup\";\n// const ENDPOINT_GROUP = \"endpointGroup\"\n\n// ///////////////////////////////////////////\n// //            Relations                  //\n// ///////////////////////////////////////////\n\n// const CONTEXT_TO_CATEGORY_RELATION = \"hasCategory\";\n// const CATEGORY_TO_GROUP_RELATION = \"hasGroup\";\n// const GROUP_TO_ROOMS_RELATION = \"groupHasRooms\";\n// const GROUP_TO_EQUIPMENTS_RELATION = \"groupHasEquipments\";\n// const GROUP_TO_ENDPOINT_RELATION = \"groupHasEndpoints\";\n\n\n\nclass GroupServiceConstants {\n  constructor() {\n    ///////////////////////////////////////\n    // CONTEXT\n    ///////////////////////////////////////\n    this.ROOMS_GROUP_CONTEXT = \"RoomsGroupContext\";\n    this.EQUIPMENTS_GROUP_CONTEXT = \"EquipmentGroupContext\";\n    this.ENDPOINTS_GROUP_CONTEXT = \"EndpointGroupContext\";\n\n    this.CONTEXTS_TYPES = [\n      this.ROOMS_GROUP_CONTEXT,\n      this.EQUIPMENTS_GROUP_CONTEXT,\n      this.ENDPOINTS_GROUP_CONTEXT\n    ];\n\n    //Category\n\n    this.CATEGORY_TYPE = \"groupingCategory\";\n\n    ///////////////////////////////////////////\n    //            Groups Types               //\n    ///////////////////////////////////////////\n    this.ROOMS_GROUP = \"roomsGroup\";\n    this.EQUIPMENTS_GROUP = \"equipmentGroup\";\n    this.ENDPOINT_GROUP = \"endpointGroup\";\n\n    this.GROUPS_TYPES = [\n      this.ROOMS_GROUP,\n      this.EQUIPMENTS_GROUP,\n      this.ENDPOINT_GROUP\n    ];\n\n    ///////////////////////////////////////////\n    //            Relations                  //\n    ///////////////////////////////////////////\n\n    this.CONTEXT_TO_CATEGORY_RELATION = \"hasCategory\";\n    this.CATEGORY_TO_GROUP_RELATION = \"hasGroup\";\n    this.GROUP_TO_ROOMS_RELATION = \"groupHasRooms\";\n    this.GROUP_TO_EQUIPMENTS_RELATION = \"groupHasEquipments\";\n    this.GROUP_TO_ENDPOINT_RELATION = \"groupHasEndpoints\";\n\n    ////////////////////////////////////////////\n    // Maps\n    ////////////////////////////////////////////\n\n    this.CONTEXT_GROUP_ASSOCIATION = new Map([\n      [this.ROOMS_GROUP_CONTEXT, this.ROOMS_GROUP],\n      [this.EQUIPMENTS_GROUP_CONTEXT, this.EQUIPMENTS_GROUP],\n      [this.ENDPOINTS_GROUP_CONTEXT, this.ENDPOINT_GROUP]\n    ]);\n\n    this.GROUP_RELATION_ASSOCIATION = new Map([\n      [this.ROOMS_GROUP, this.GROUP_TO_ROOMS_RELATION],\n      [this.EQUIPMENTS_GROUP, this\n        .GROUP_TO_EQUIPMENTS_RELATION\n      ],\n      [this.ENDPOINT_GROUP, this.GROUP_TO_ENDPOINT_RELATION]\n\n    ])\n  }\n\n}\n\nmodule.exports = new GroupServiceConstants();","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n\t<md-dialog\n\t\tclass=\"mdDialogContainer\"\n\t\t:md-active.sync=\"showDialog\"\n\t\t@md-closed=\"closeDialog(false)\"\n\t>\n\t\t<md-dialog-title class=\"dialogTitle\">\n\t\t\tLink Controlpoint To\n\t\t</md-dialog-title>\n\n\t\t<md-dialog-content class=\"content\">\n\t\t\t<md-field>\n\t\t\t\t<label for=\"type\">Link controlpoint to all</label>\n\t\t\t\t<md-select v-model=\"type\" name=\"type\" id=\"type\">\n\t\t\t\t\t<md-option v-for=\"t in types\" :key=\"t\" :value=\"t\">\n\t\t\t\t\t\t{{ t }}\n\t\t\t\t\t</md-option>\n\t\t\t\t</md-select>\n\t\t\t</md-field>\n\t\t</md-dialog-content>\n\n\t\t<md-dialog-actions>\n\t\t\t<md-button class=\"md-primary\" @click=\"closeDialog(false)\">\n\t\t\t\tCancel\n\t\t\t</md-button>\n\n\t\t\t<md-button\n\t\t\t\tclass=\"md-primary\"\n\t\t\t\t:disabled=\"disabled()\"\n\t\t\t\t@click=\"closeDialog(true)\"\n\t\t\t>\n\t\t\t\tSave\n\t\t\t</md-button>\n\t\t</md-dialog-actions>\n\t</md-dialog>\n</template>\n\n<script>\n\timport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\timport { GEOGRAPHIC_TYPES_ORDER } from \"spinal-env-viewer-context-geographic-service/build/constants\";\n\n\texport default {\n\t\tname: \"dialogComponent\",\n\n\t\tprops: [\"onFinised\"],\n\t\tdata() {\n\t\t\tthis.contextId;\n\t\t\tthis.nodeId;\n\n\t\t\treturn {\n\t\t\t\tshowDialog: true,\n\t\t\t\ttypes: [],\n\t\t\t\ttype: \"\",\n\t\t\t\tcallback: undefined,\n\t\t\t};\n\t\t},\n\n\t\tmounted() {},\n\n\t\tmethods: {\n\t\t\tasync opened({ type, callback }) {\n\t\t\t\t// this.contextId = contextId;\n\n\t\t\t\t// this.nodeId = nodeId;\n\n\t\t\t\tthis.callback = callback;\n\t\t\t\tthis.type = type;\n\t\t\t\tthis.types = this.getTypes(type);\n\t\t\t},\n\n\t\t\tasync removed(option) {\n\t\t\t\tif (option && typeof this.callback !== \"undefined\") {\n\t\t\t\t\tthis.callback(this.type);\n\t\t\t\t}\n\t\t\t\tthis.showDialog = false;\n\t\t\t},\n\n\t\t\tcloseDialog(closeResult) {\n\t\t\t\tif (typeof this.onFinised === \"function\") {\n\t\t\t\t\tthis.onFinised(closeResult);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tgetTypes(type) {\n\t\t\t\t// const types = [];\n\t\t\t\t// await SpinalGraphService.findInContext(\n\t\t\t\t// \tcontextId,\n\t\t\t\t// \tnodeId,\n\t\t\t\t// \t(node) => {\n\t\t\t\t// \t\tconst type = node.getType.get();\n\t\t\t\t// \t\tif (types.indexOf(type) !== -1) types.push(type);\n\t\t\t\t// \t\treturn true;\n\t\t\t\t// \t}\n\t\t\t\t// );\n\n\t\t\t\t// return types;\n\n\t\t\t\tconst index = GEOGRAPHIC_TYPES_ORDER.indexOf(type);\n\n\t\t\t\tif (index === -1) return GEOGRAPHIC_TYPES_ORDER;\n\n\t\t\t\treturn GEOGRAPHIC_TYPES_ORDER.slice(index);\n\t\t\t},\n\n\t\t\tdisabled() {\n\t\t\t\treturn this.type.length === 0;\n\t\t\t},\n\t\t},\n\t};\n</script>\n\n<style scoped>\n\t.mdDialogContainer {\n\t\twidth: 300px;\n\t\theight: 250px;\n\t}\n\n\t.mdDialogContainer .dialogTitle {\n\t\ttext-align: center;\n\t}\n</style>\n","import Vue from \"vue\";\nimport { SpinalForgeExtention } from \"spinal-env-viewer-panel-manager-service_spinalforgeextention\";\n\nimport EditControlPointPanel from \"./controlPointEdit.vue\";\nimport UnLinkControlpointPanel from \"./unLinkControlPointPanel.vue\";\n// import HeatmapPanel from \"./heatmap-panel.vue\";\n\nconst panels = [\n  {\n    name: \"editControlPointPanel\",\n    vueMountComponent: Vue.extend(EditControlPointPanel),\n    panel: {\n      title: \"Control Points\",\n      closeBehaviour: \"hide\",\n    },\n    style: {\n      minWidth: \"660px\",\n      height: \"475px\",\n      left: \"400px\",\n    },\n  },\n  {\n    name: \"UnLinkControlpointPanel\",\n    vueMountComponent: Vue.extend(UnLinkControlpointPanel),\n    panel: {\n      title: \"Unlink Control Point to group\",\n      closeBehaviour: \"hide\",\n    },\n    style: {\n      minWidth: \"660px\",\n      height: \"475px\",\n      left: \"400px\",\n    },\n  },\n  // {\n  //   name: \"heatmapPanel\",\n  //   vueMountComponent: Vue.extend(HeatmapPanel),\n  //   panel: {\n  //     title: \"HeatMaps\",\n  //     closeBehaviour: \"hide\",\n  //   },\n  //   style: {\n  //     minWidth: \"350px\",\n  //     minHeight: \"450px\",\n  //     width: \"350px\",\n  //     height: \"450px\",\n  //     right: \"40px\",\n  //   },\n  // }\n];\n\nfor (const element of panels) {\n  const panelExtension = SpinalForgeExtention.createExtention(element);\n  SpinalForgeExtention.registerExtention(element.name, panelExtension);\n}\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst {\n  spinalPanelManagerService,\n  SpinalPanelApp\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst SpinalForgeExtention = require(\"./SpinalForgeExtention.js\")(\n  spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  SpinalForgeExtention\n};\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (typeof option.toolbar !== \"undefined\") {\n    cfg.toolbar = {\n      icon: option.toolbar.icon || \"done\",\n      label: option.toolbar.label || \"label\",\n      subToolbarName: option.toolbar.subToolbarName || \"spinalcom\",\n      styleBtn: {},\n      styleIcon: {}\n    };\n    Object.assign(cfg.toolbar.styleBtn, option.toolbar.styleBtn);\n    Object.assign(cfg.toolbar.styleIcon, option.toolbar.styleIcon);\n  }\n  if (typeof option.panel !== \"undefined\") {\n    cfg.panel = {\n      title: option.panel.title || \"Spinalcom Panel\",\n      classname: option.panel.classname || \"spinal-pannel\",\n      closeBehaviour: option.panel.closeBehaviour || \"hide\"\n    };\n    if (typeof option.style !== \"undefined\") {\n      cfg.style = {};\n      Object.assign(cfg.style, option.style);\n    }\n  }\n  cfg.name = option.name || \"spinalExtention\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.onLoad = option.onLoad;\n  cfg.onUnLoad = option.onUnLoad;\n  return cfg;\n}\n\nfunction onToolbarCreated() {\n  this.viewer.removeEventListener(\n    window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n    this.onToolbarCreatedBinded\n  );\n  this.onToolbarCreatedBinded = null;\n  createToolbar.call(this);\n}\n\nfunction createToolbar() {\n  this.toolbarButton = new window.Autodesk.Viewing.UI.Button(\n    this.cfg.toolbar.label\n  );\n  this.toolbarButton.onClick = () => {\n    this.tooglePanel(this.cfg);\n  };\n  var icon = this.toolbarButton.container.firstChild;\n  icon.className = \"adsk-button-icon md-icon md-icon-font md-theme-default\";\n  icon.innerHTML = this.cfg.toolbar.icon;\n\n  for (var key in this.cfg.toolbar.styleIcon) {\n    if (this.cfg.toolbar.styleIcon.hasOwnProperty(key)) {\n      icon.style[key] = this.cfg.toolbar.styleIcon[key];\n    }\n  }\n  for (var key in this.cfg.toolbar.styleBtn) {\n    if (this.cfg.toolbar.styleBtn.hasOwnProperty(key)) {\n      this.toolbarButton.container.style[key] = this.cfg.toolbar.styleBtn[key];\n    }\n  }\n\n  this.toolbarButton.setToolTip(this.cfg.toolbar.label);\n  this.subToolbar = this.viewer.toolbar.getControl(\n    this.cfg.toolbar.subToolbarName\n  );\n  if (!this.subToolbar) {\n    this.subToolbar = new window.Autodesk.Viewing.UI.ControlGroup(\n      this.cfg.toolbar.subToolbarName\n    );\n    this.viewer.toolbar.addControl(this.subToolbar);\n  }\n  this.subToolbar.addControl(this.toolbarButton);\n}\n\nfunction closeComponent() {\n  if (this.cfg.panel.closeBehaviour !== \"hide\") {\n    try {\n      this.component.removed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n    this.panel.container.remove();\n    this.panel = null;\n  } else {\n    try {\n      this.component.closed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction getPanel() {\n  if (this.panel === null) {\n    this.panel = new window.PanelClass(this.viewer, this.cfg.panel.title);\n    var _container = document.createElement(\"div\");\n    var _scrollContainer = this.panel.createScrollContainer();\n\n    _container.className +=\n      this.panel.container.id + \"-panelcontainer \" + this.cfg.panel.classname;\n    for (var key in this.cfg.style) {\n      if (this.cfg.style.hasOwnProperty(key)) {\n        this.panel.container.style[key] = this.cfg.style[key];\n      }\n    }\n\n    if (this.panel.container.style.left) {\n      this.panel.container.style.left = \"0\";\n    }\n\n    this.panel.container.appendChild(_scrollContainer);\n    _scrollContainer.style.height = \"calc(100% - 52px)\";\n    _scrollContainer.appendChild(_container);\n\n    var _footer = this.panel.createFooter();\n    this.panel.container.appendChild(_footer);\n\n    if (this.cfg.vueMountComponent) {\n      this.component = new this.cfg.vueMountComponent().$mount(_container);\n    }\n\n    const _this = this;\n    this.panel.addVisibilityListener(open => {\n      if (!open) {\n        closeComponent.call(_this);\n      }\n    });\n  }\n  return this.panel;\n}\n\n/**\n *\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { createExtention, registerExtention }\n */\nmodule.exports = function (spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n     * factory function to create a dynamic class that extends the `SpinalPanelApp` class\n     *```js\n{\n  name: \"extention_name\",\n  vueMountComponent: Vue.extend(aVueCompoment),\n  onLoad: () => {console.log(\"onLoad\");},\n  onUnLoad: () => {console.log(\"onUnLoad\");},\n  toolbar: {\n    icon: \"done\",\n    label: \"testLabel\",\n    subToolbarName: \"spinalcom\"\n  },\n  panel: {\n    title: \"Spinalcom Panel\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"hide\"\n  },\n  style: {}\n}\n```\n     * @param {object} option see description\n     * @returns SpinalForgeExtention\n     */\n    createExtention(option) {\n      const cfg = configInit(option);\n      /**\n       * class returned by createExtention\n       * this extention is also registered in autodesk viweer\n       * @extends SpinalPanelApp\n       * @property {AutodeskViewer} viewer the autodesk view\n       * @property {AutodeskPanel} panel the panel\n       * @property {Vue.component} component the component mounted\n       * @property {Object} cfg the option given on creation\n       */\n      const SpinalForgeExtention = class extends SpinalPanelApp {\n        constructor(viewer, options) {\n          super();\n          window.Autodesk.Viewing.Extension.call(this, viewer, options);\n          this.viewer = viewer;\n          this.panel = null;\n          this.cfg = cfg;\n          spinalPanelManagerService.registerPanel(cfg.name, this);\n        }\n        /**\n         * method called on load of the extention (managed by the autodesk viewer)\n         * the method create a button in the toolbar if put in the option of `createExtention`.\n         */\n        load() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            // add toolbar\n            if (this.viewer.toolbar) {\n              createToolbar.call(this);\n            } else {\n              this.onToolbarCreatedBinded = onToolbarCreated.bind(this);\n              this.viewer.addEventListener(\n                window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n                this.onToolbarCreatedBinded\n              );\n            }\n          }\n          if (typeof cfg.onLoad !== \"undefined\") cfg.onLoad.call(this);\n          return true;\n        }\n        /**\n         * method called when the viewer unload of the extention\n         * (managed by the autodesk viewer)\n         */\n        unload() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            this.viewer.subToolbar.removeControl(this.toolbarButton);\n          }\n          if (typeof cfg.onUnLoad !== \"undefined\") cfg.onUnLoad.call(this);\n          return true;\n        }\n\n        activate() {\n          return this.load();\n        }\n\n        deactivate() {\n          return this.unload();\n        }\n\n        /**\n         *\n         * @param {*} option\n         */\n        openPanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(true);\n          try {\n            this.component.opened.call(this.component, option, this.viewer);\n          } catch (e) {\n            console.error(e);\n          }\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        closePanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(false);\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        tooglePanel(option) {\n          if (this.panel === null || this.panel.isVisible() === false) {\n            this.openPanel.call(this, option);\n          } else { this.closePanel.call(this, option); }\n        }\n      };\n      return SpinalForgeExtention;\n    },\n\n    /**\n     * Method to register an extention to the viewer and the forge viewer\n     * @param {string} name name of the extention\n     * @param {*} classExtention an extention created by `createExtention`\n     */\n    registerExtention(name, classExtention) {\n      // register to forge\n      window.Autodesk.Viewing.theExtensionManager.registerExtension(\n        name,\n        classExtention\n      );\n      // register to viewer\n      window.spinal.ForgeExtentionManager.addExtention(name);\n    }\n  };\n};\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div class=\"control_points_container\">\n    <md-button v-if=\"!editMode\"\n               @click=\"activeEditMode\"\n               class=\"md-fab md-mini md-plain md-primary md-fab-bottom-right\">\n      <md-icon>edit</md-icon>\n    </md-button>\n\n    <control-point-vue :editMode=\"editMode\"\n                       :data=\"data\"\n                       @cancel=\"disabledEditMode\"\n                       @confirm=\"confirm\"></control-point-vue>\n  </div>\n</template>\n\n<script>\nimport ControlPointsVue from \"../components/controlPoints.vue\";\nimport { spinalControlPointService } from \"spinal-env-viewer-plugin-control-endpoint-service\";\nimport { EventBus } from \"../../utilities/event\";\n\nexport default {\n  name: \"editControlPointPanel\",\n  components: {\n    \"control-point-vue\": ControlPointsVue,\n  },\n  data() {\n    this.contextId;\n    this.nodeId;\n    return {\n      editMode: false,\n      data: [],\n    };\n  },\n  methods: {\n    async opened(option) {\n      this.contextId = option.context.id;\n      this.nodeId = option.selectedNode.id;\n      const res = await spinalControlPointService.getControlPointProfil(\n        this.contextId,\n        this.nodeId\n      );\n      this.editMode = false;\n      this.setData(res);\n    },\n\n    closed() {},\n\n    async confirm(validItems) {\n      return spinalControlPointService\n        .editControlPointProfil(this.contextId, this.nodeId, validItems)\n        .then((res) => {\n          this.setData(res);\n          this.disabledEditMode();\n          EventBus.$emit(\"update-controlPoint\", {\n            contextId: this.contextId,\n            controlPointId: this.nodeId,\n            items: res.endpoints.get(),\n          });\n        });\n    },\n\n    cancel() {},\n\n    setData(res) {\n      if (res.endpoints) {\n        this.data = res.endpoints.get();\n      }\n    },\n\n    activeEditMode() {\n      this.editMode = true;\n    },\n\n    disabledEditMode() {\n      this.editMode = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.control_points_container {\n  width: 100%;\n  height: calc(100% - 15px);\n  /* position: relative; */\n  /* background: red; */\n}\n</style>","<!--\nCopyright 2021 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <!-- <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title class=\"_dialogTitle\">Unlink Control Point to group\n    </md-dialog-title> -->\n\n  <!-- <md-dialog-content class=\"_unLinkDialogContent\"> -->\n  <div class=\"_unLinkDialogContent\">\n    <div class=\"content\"\n         v-if=\"state === PAGES.loaded\">\n      <div class=\"state\"\n           v-if=\"controlEndpoints.length === 0\">\n        No controlPoints linked\n      </div>\n\n      <md-list class=\"list_content md-scrollbar\"\n               v-else>\n        <md-list-item v-for=\"item in controlEndpoints\"\n                      :key=\"item.id\">\n          <span class=\"md-list-item-text\">{{item.name}}</span>\n\n          <md-button class=\"md-icon-button md-list-action\"\n                     @click=\"unLinkControlPoint(item.id)\">\n            <md-icon class=\"md-accent\">link_off</md-icon>\n          </md-button>\n        </md-list-item>\n      </md-list>\n\n    </div>\n\n    <div class=\"state\"\n         v-else>\n      <md-progress-spinner v-if=\"state === PAGES.loading\"\n                           md-mode=\"indeterminate\"></md-progress-spinner>\n\n      <md-icon class=\"md-size-5x\"\n               v-else>error</md-icon>\n    </div>\n  </div>\n  <!-- </md-dialog-content> -->\n\n  <!-- <md-dialog-actions>\n      <md-button class=\"md-accent\"\n                 @click=\"closeDialog(false)\">close</md-button>\n    </md-dialog-actions> \n  </md-dialog>-->\n</template>\n\n<script>\nimport { spinalControlPointService } from \"spinal-env-viewer-plugin-control-endpoint-service\";\nconst {\n  spinalPanelManagerService,\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\n\nexport default {\n  name: \"unLinkControlPointPanel\",\n  props: [\"onFinised\"],\n  data() {\n    this.PAGES = {\n      loaded: 0,\n      loading: 1,\n      error: 2,\n    };\n    this.groupId;\n    return {\n      showDialog: true,\n      state: this.PAGES.loading,\n      controlEndpoints: [],\n    };\n  },\n  mounted() {},\n\n  methods: {\n    opened({ id, name }) {\n      this.state = this.PAGES.loading;\n      this.groupId = id;\n\n      this.getControlPointLinked(id)\n        .then((result) => {\n          this.setTitle(name);\n          this.controlEndpoints = result.map((el) => el.get());\n          this.state = this.PAGES.loaded;\n        })\n        .catch((err) => {\n          console.error(err);\n          this.state = this.PAGES.error;\n        });\n    },\n\n    closed() {},\n\n    // closeDialog(closeResult) {\n    //   if (typeof this.onFinised === \"function\") {\n    //     this.onFinised(closeResult);\n    //   }\n    // },\n\n    getControlPointLinked(groupId) {\n      return spinalControlPointService.getElementLinked(groupId);\n    },\n\n    unLinkControlPoint(controlPointId) {\n      this.state = this.PAGES.loading;\n      return spinalControlPointService\n        .unLinkControlPointToGroup(this.groupId, controlPointId)\n        .then(() => {\n          this.controlEndpoints = this.controlEndpoints.filter(\n            (el) => el.id !== controlPointId\n          );\n          this.state = this.PAGES.loaded;\n        });\n    },\n\n    setTitle(title) {\n      spinalPanelManagerService.panels.UnLinkControlpointPanel.panel.setTitle(\n        `Unlink Control Point to group : ${title}`\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n._unLinkDialogContent {\n  width: 100%;\n  height: calc(100% - 30px);\n}\n\n._unLinkDialogContent .content {\n  width: 100%;\n  height: 100%;\n}\n\n._unLinkDialogContent .content .list_content {\n  max-height: calc(100% - 15px);\n  overflow: auto;\n}\n\n._unLinkDialogContent .state {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5em;\n}\n</style>\n\n<style>\n._unLinkDialogContent .md-list-item-content {\n  width: calc(100% - 50px);\n}\n</style>","import vue from \"vue\";\nimport legendsHeatmap from \"./heatmap-container.vue\";\n\nlet legendsHeatmapComponent = vue.extend(legendsHeatmap);\nlet app = new legendsHeatmapComponent();\n\napp.$mount();\ndocument.getElementsByTagName(\"body\")[0].appendChild(app.$el);","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div class=\"_container\">\n    <md-content class=\"md-scrollbar heatmap_legends_container\"\n                v-if=\"legendLength > 0\">\n\n      <div class=\"legend\"\n           v-for=\"(key) in Object.keys(data)\"\n           :key=\"key\">\n        <heatmap-legend :id=\"key\"\n                        :controlPoints=\"data[key]\"\n                        :ref=\"key\"\n                        @close=\"closeLegend\"></heatmap-legend>\n      </div>\n    </md-content>\n  </div>\n\n</template>\n\n<script>\nimport { spinalControlPointService } from \"spinal-env-viewer-plugin-control-endpoint-service\";\nimport HeatmapLegend from \"../components/heatmap.vue\";\nimport { EventBus } from \"../../utilities/event\";\nimport { itemColoredMap } from \"../../utilities/itemsColored\";\nexport default {\n  name: \"heatmapPanel\",\n  components: {\n    \"heatmap-legend\": HeatmapLegend,\n  },\n  data() {\n    this.button;\n    return {\n      legendLength: 0,\n      data: {},\n    };\n  },\n  mounted() {\n    this.openEvent();\n    this.getUpdateEvent();\n  },\n  methods: {\n    // async opened(option) {\n    //   const groupId = option.selectedNode.id;\n    //   if (this.data[groupId]) {\n    //     this.destroyLegend(groupId);\n    //     const res = Object.assign({}, this.data);\n    //     delete res[groupId];\n    //     this.data = Object.assign({}, res);\n    //     return;\n    //   }\n\n    //   const data = await this.getAllData(groupId);\n    //   this.data = Object.assign({}, this.data, { [groupId]: data });\n    // },\n\n    async getAllData(groupId) {\n      const data = await spinalControlPointService.getDataFormated(groupId);\n      return data;\n    },\n\n    closeLegend(groupId) {\n      if (this.data[groupId]) {\n        this.destroyLegend(groupId);\n        const res = Object.assign({}, this.data);\n        delete res[groupId];\n        this.data = Object.assign({}, res);\n        this.legendLength = Object.keys(this.data).length;\n        itemColoredMap.delete(groupId);\n        if (this.button) this.button.fontColor = \"#FFFFFF\";\n        return;\n      }\n    },\n\n    destroyLegend(id) {\n      if (typeof this.$refs[id] !== \"undefined\") {\n        this.$refs[id][0].$destroy();\n      }\n    },\n\n    closed() {},\n\n    openEvent() {\n      EventBus.$on(\"heatmapPanel\", async (option) => {\n        const groupId = option.selectedNode.id;\n        this.button = option.button;\n\n        if (this.data[groupId]) {\n          this.destroyLegend(groupId);\n          const res = Object.assign({}, this.data);\n          delete res[groupId];\n          this.data = Object.assign({}, res);\n          this.legendLength = Object.keys(this.data).length;\n\n          return;\n        }\n\n        const data = await this.getAllData(groupId);\n\n        if (data.length === 0) {\n          alert(\"No controlpoint Linked\");\n          if (this.button) this.button.fontColor = \"#FFFFFF\";\n          return;\n        }\n\n        this.data = Object.assign({}, this.data, { [groupId]: data });\n        this.legendLength = Object.keys(this.data).length;\n      });\n    },\n\n    getUpdateEvent() {\n      EventBus.$on(\"update-controlPoint\", (option) => {\n        Object.keys(this.data).map(async (groupId) => {\n          const data = await this.getAllData(groupId);\n          this.data[groupId] = data;\n        });\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n._container {\n  padding-top: 30px;\n  cursor: all-scroll;\n}\n\n._container .heatmap_legends_container {\n  /* width: 100%;\n  height: calc(100% - 15px);\n  display: flex;\n  flex-direction: column;\n  align-items: center; */\n  /* background: red; */\n  /* width: 200px; */\n  max-width: 200px;\n  height: calc(40%);\n  background: #393939 !important;\n  border: 1px solid black;\n  overflow-x: auto;\n  position: absolute;\n  left: 0px;\n  top: calc(20%);\n  padding: 10px;\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n._container .heatmap_legends_container .legend {\n  width: 60px;\n  height: calc(98% - 20px);\n  color: white;\n  padding: 5px;\n  display: inline-block;\n  /* margin-right: 20px; */\n  font-weight: bold;\n  margin: 10px 10px 10px 0;\n  border: 1px solid gray;\n}\n\n._container .heatmap_legends_container:last-child {\n  margin-right: 0px;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div class=\"_legends\">\n    <div class=\"closeBtn\"\n         v-tooltip=\"'close ' + title\"\n         @click=\"closeLegend\">X</div>\n\n    <div class=\"md-subheading legend_title\"\n         v-tooltip=\"title\">{{title}}</div>\n\n    <!--\n    <div class=\"selects md-layout\">\n      <div class=\"md-layout-item md-size-45\">\n        <md-field>\n          <md-select v-model=\"controlPointSelected\"\n                     @md-selected=\"selectControlPoint\"\n                     name=\"controlPoint\"\n                     id=\"controlPoint\"\n                     placeholder=\"Control Points\">\n            <md-option v-for=\"controlPoint in controlPoints\"\n                       :key=\"controlPoint.id\"\n                       :value=\"controlPoint.id\">{{controlPoint.name}}\n            </md-option>\n          </md-select>\n        </md-field>\n      </div>\n\n      <div class=\"md-layout-item md-size-45\">\n        <md-field>\n          <md-select :disabled=\"disabledEndpointsSelected()\"\n                     @md-selected=\"selectEndpointType\"\n                     v-model=\"endpointTypeSelected\"\n                     name=\"endpoint types\"\n                     id=\"endpoint types\"\n                     placeholder=\"Endpoint type\">\n            <md-option v-for=\"profil in endpointProfils\"\n                       :key=\"profil.id\"\n                       :value=\"JSON.stringify(profil)\">{{profil.name}}\n            </md-option>\n\n          </md-select>\n        </md-field>\n      </div>\n    </div>\n\n    -->\n\n    <md-menu class=\"selects\"\n             md-size=\"small\"\n             :mdCloseOnClick=\"true\">\n\n      <md-button class=\"btn-trigger\"\n                 md-menu-trigger>\n\n        <md-icon class=\"menu_icon legendIcon\">\n          menu\n        </md-icon>\n\n        <!-- <md-icon class=\"menu_icon legendIcon\">keyboard_arrow_down</md-icon> -->\n\n      </md-button>\n\n      <md-menu-content>\n        <md-menu-item v-for=\"profil in endpointProfils\"\n                      :key=\"profil.id\"\n                      @click=\"selectEndpointType(profil)\">\n\n          <!-- <md-icon class=\"legendIcon\"\n                   v-if=\"getIcon(heatmap.name.get())\">\n            {{getIcon(heatmap.name.get())}}</md-icon> -->\n\n          <!-- <md-icon v-if=\"!getIcon(heatmap.name.get())\"\n                   :md-src=\"getSvg(heatmap.name.get())\"></md-icon> -->\n          {{profil.title}}\n        </md-menu-item>\n\n      </md-menu-content>\n    </md-menu>\n\n    <div class=\"colors\">\n\n      <div class=\"boxContainer\"\n           v-for=\"(g,index) in this.gradient\"\n           :key=\"index\">\n        <div class=\"boxColor\"\n             :style=\"{'background-color': g.color}\"></div>\n        <div class=\"boxValue\"\n             v-tooltip=\"g.value + ''\">{{g.value}}</div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport { color } from \"../../utilities/color\";\nimport utilities from \"../../utilities/utitlities\";\n\nexport default {\n  name: \"heatmap-legend\",\n  props: {\n    controlPoints: {},\n    id: {},\n    // endpoints: {\n    //   default: [],\n    // },\n    // gradient: {\n    //   default: [],\n    // },\n  },\n  mounted() {\n    const info = SpinalGraphService.getInfo(this.id);\n    if (info) this.title = info.name.get();\n\n    this.updateData();\n\n    // if (this.controlPoints && this.controlPoints.length > 0) {\n    //   this.endpointProfils = this.formatProfil(this.controlPoints);\n\n    //   this.selectEndpointType(this.endpointProfils[0]);\n    //   // this.controlPointSelected = this.controlPoints[0].id;\n    //   // this.selectControlPoint(this.controlPointSelected, true);\n    // }\n  },\n\n  data() {\n    this.bindProcessMap = new Map();\n    this.bimObjectsColored = [];\n\n    return {\n      title: \"\",\n      controlPointSelected: undefined,\n      endpointTypeSelected: undefined,\n      endpointProfils: [],\n      gradient: [],\n    };\n  },\n\n  methods: {\n    // selectControlPoint(id, continues = false) {\n    //   const found = this.controlPoints.find((el) => el.id === id);\n    //   this.endpointProfils = found.endpointProfils;\n    //   this.endpointTypeSelected = JSON.stringify(this.endpointProfils[0]);\n\n    //   if (continues) {\n    //     this.selectEndpointType(this.endpointTypeSelected);\n    //   }\n    // },\n\n    selectEndpointType(profil) {\n      // const profil = JSON.parse(argProfil);\n      if (profil) {\n        // console.log(\"profil\", profil);\n        this.endpointTypeSelected = profil.id;\n        this.controlPointSelected = profil.contextId;\n\n        this.gradient = this.getColorsGradient(profil.config);\n        this.colorHeatmap(profil);\n      } else {\n        this.gradient = [];\n      }\n    },\n\n    getColorsGradient(config) {\n      if (config.enumeration) {\n        return color.getEnumGradientColor(config.enumeration);\n      }\n\n      let _colors = color.getGradientColor(\n        config.min,\n        config.average,\n        config.max\n      );\n\n      return _colors.map((el, index) => {\n        return {\n          color: `#${el.toHex()}`,\n          value: this.getValue(index, config.max.value, config.min.value),\n        };\n      });\n    },\n\n    getValue(index, max, min) {\n      if (isNaN(parseInt(min)) && isNaN(parseInt(max)))\n        return index ? \"True\" : \"False\";\n      return Number(min) + ((Number(max) - Number(min)) * Number(index)) / 10;\n    },\n\n    getColor(endpointValue, config) {\n      if (config.enumeration) {\n        return color.getEnumColor(endpointValue, config.enumeration);\n      }\n\n      let gradient = color.getGradientColor(\n        config.min,\n        config.average,\n        config.max\n      );\n\n      return color.getColor(\n        endpointValue,\n        config.min.value,\n        config.max.value,\n        gradient\n      );\n\n      // return color.getColor(\n      //   endpointValue,\n      //   config.min.value,\n      //   config.max.value,\n      //   this.gradient\n      // );\n\n      // let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(c);\n      // return result\n      //   ? {\n      //       r: parseInt(result[1], 16),\n      //       g: parseInt(result[2], 16),\n      //       b: parseInt(result[3], 16),\n      //     }\n      //   : null;\n    },\n\n    async colorHeatmap(profil) {\n      this.unBindAll();\n\n      const res = await this.getEndpointToBind(profil.id);\n      if (typeof res === \"undefined\") return;\n\n      this.bimObjectsColored.push(...res.map((el) => el.ids).flat());\n\n      res.forEach((element) => {\n        let bindProcess = element.endpoint.currentValue.bind(() => {\n          const value = element.endpoint.currentValue.get();\n          // const config = element.endpoint.config.get();\n\n          let color = this.getColor(value, profil.config);\n          let vector = utilities.convertColorToTHREE_Vector(color);\n\n          element.ids.forEach(({ model, ids }) => {\n            ids.forEach((id) => {\n              model.setThemingColor(id, vector, true);\n            });\n            // model.setThemingColor(ids, vector, true);\n          });\n\n          window.spinal.ForgeViewer.viewer.impl.invalidate(true);\n\n          // let model = window.spinal.BimObjectService.getModelByBimfile(\n          //   element.room.bimFileId\n          // );\n\n          // model.setThemingColor(element.room.dbid, vector, true);\n        });\n\n        this.bindProcessMap.set(element.endpoint, bindProcess);\n      });\n    },\n\n    restoreColor() {\n      const vector = new THREE.Vector4(0, 0, 0, 0);\n\n      this.bimObjectsColored.forEach(({ model, ids }) => {\n        ids.forEach((dbid) => model.setThemingColor(dbid, vector, true));\n      });\n\n      window.spinal.ForgeViewer.viewer.impl.invalidate(true);\n    },\n\n    getEndpointToBind(endpointId) {\n      const controlPoint = this.controlPoints.find(\n        (el) => el.id === this.controlPointSelected\n      );\n\n      if (controlPoint) {\n        const promises = controlPoint.rooms.map(async (el) => {\n          const endpoint = el.endpoints.find(\n            // (e) => e.type.get() === endpointType\n            (e) => e.id.get() == endpointId\n          );\n\n          return {\n            endpoint,\n            ids: await utilities.getReferenceObject(el.id),\n          };\n        });\n\n        return Promise.all(promises);\n      }\n    },\n\n    unBindAll() {\n      this.bindProcessMap.forEach((value, key) => {\n        key.currentValue.unbind(value);\n        this.bindProcessMap.delete(key);\n      });\n    },\n\n    disabledEndpointsSelected() {\n      return typeof this.controlPointSelected === \"undefined\";\n    },\n\n    formatProfil(liste) {\n      const profils = [];\n      for (const context of liste) {\n        const items = context.endpointProfils.map((element) => {\n          const el = JSON.parse(JSON.stringify(element));\n          el.title = `${context.name} / ${el.name}`;\n          el.contextId = context.id;\n          return el;\n        });\n        profils.push(...items);\n      }\n\n      return profils;\n    },\n\n    updateData(elementSelected) {\n      if (this.controlPoints && this.controlPoints.length > 0) {\n        this.endpointProfils = this.formatProfil(this.controlPoints);\n        if (typeof elementSelected === \"undefined\") {\n          elementSelected = this.endpointProfils[0];\n        }\n\n        this.selectEndpointType(elementSelected);\n      }\n    },\n\n    closeLegend() {\n      this.$emit(\"close\", this.id);\n    },\n  },\n\n  beforeDestroy() {\n    this.unBindAll();\n    this.restoreColor();\n  },\n\n  watch: {\n    controlPoints() {\n      const context = this.controlPoints.find(\n        (el) => el.id === this.controlPointSelected\n      );\n      let found;\n\n      if (context) {\n        found = context.endpointProfils.find(\n          (el) => el.id === this.endpointTypeSelected\n        );\n      }\n      this.updateData(found);\n    },\n  },\n};\n</script>\n\n<style scoped>\n._legends {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n\n._legends .closeBtn {\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  background: red;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100%;\n  z-index: 99999999;\n  top: -16px;\n  right: -14px;\n  cursor: pointer;\n}\n\n._legends .legend_title {\n  height: 20px;\n  width: 60px;\n  color: #448aff;\n  font-size: 15px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n._legends .selects {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n}\n\n._legends .selects .btn-trigger {\n  min-width: unset;\n}\n\n._legends .colors {\n  /* width: 100%; */\n  height: calc(100% - 70px);\n  margin: auto;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column-reverse;\n}\n\n._legends .colors .boxContainer {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n}\n\n._legends .colors .boxContainer .boxColor {\n  width: calc(20%);\n  /* width: calc(100%); */\n  background-color: red;\n}\n\n._legends .colors .boxContainer .boxValue {\n  width: calc(80%);\n  align-self: flex-end;\n  justify-self: flex-end;\n  max-height: 30px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-size: 12px;\n  padding-left: 4px;\n  position: absolute;\n  bottom: -10px;\n  left: 10px;\n}\n</style>\n\n<style>\n._legends .selects .md-field {\n  min-height: unset;\n}\n</style>"],"names":["RGBA_MAX","r","g","b","a","HSVA_MAX","h","s","v","stepize","start","end","steps","step","k","hasOwnProperty","interpolate","i","max","color","interpolateRgb","stop1","stop2","toRgb","gradient","push","tinycolor","interpolateHsv","mode","toHsv","trigonometric","trigShortest","diff","Math","pow","abs","computeSubsteps","stops","l","length","parseInt","isNaN","Error","substeps","pos","round","totalSubsteps","n","min","apply","indexOf","computeAt","method","TinyGradient","havingPositions","undefined","p","lastColorLess","map","stop","hasPosition","hasColor","colorLess","unshift","reverse","forEach","loop","stops1","stops2","slice","concat","rgb","splice","hsv","css","direction","toRgbString","rgbAt","hsvAt","arguments","Array","isArray","prototype","call"],"version":3,"file":"spinal-env-viewer-plugin-control-endpoint.388c4e7d.js.map"}