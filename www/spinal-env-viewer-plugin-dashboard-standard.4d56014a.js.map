{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AAhBA,MAAM,cAAc;AACpB,MAAM,gBAAgB;AAEtB,MAAM,EACJ,wBAAwB,EACzB,GAAG,QAAQ;AAiBZ,yBAAyB,YAAY,aAAa,IAAI,CAAA,GAAA,4BAAW,KAAI;IAAC;CAAE;AACxE,yBAAyB,YAAY,aAAa,IAAI,CAAA,GAAA,iCAAgB,KAAI;IAAC;CAAE;AAC7E,yBAAyB,YAAY,aAAa,IAAI,CAAA,GAAA,qCAAoB,KAAI;IAAC;CAAE;AACjF,yBAAyB,YAAY,aAAa,IAAI,CAAA,GAAA,4BAAW,KAAI;IAAC;CAAE;AACxE,yBAAyB,YAAY,aAAa,IAAI,CAAA,GAAA,+BAAiB,KAAI;IAAC;CAAE;AAC9E,yBAAyB,YAAY,eAAe,IAAI,CAAA,GAAA,sCAAqB,KAAI;IAAC;CAAE;;;ACnBpF;AARA,MAAM,EACJ,gBAAgB,EACjB,GAAG,QAAQ;AAEZ,MAAM,EACJ,yBAAyB,EAC1B,GAAG,QAAQ;AAMZ,MAAM,qBAAqB;IACzB,aAAc;QACZ,KAAK,CAAC,oBAAoB,oBAAoB;YAC5C,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,IAAI,OAAO,aAAa,KAAK,SAAS,CAAA,GAAA,2DAAiB,EAAE,wBAAwB;YAC/E,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,UAAU,OAAO;YACtB,OAAO,QAAQ,QAAQ;QACzB,OAAO,IAAI,OAAO,QAAQ,KAAK,SAAS,CAAA,GAAA,2DAAiB,EAAE,wBAAwB;YACjF,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,UAAU,OAAO;YACtB,OAAO,QAAQ,QAAQ;QACzB;QACA,OAAO,QAAQ,QAAQ;IACzB;IAEA,OAAO,MAAM,EAAE;QACb,IAAI,SAAS;YACX,OAAO,OAAO,QAAQ,GAAG,UAAU,OAAO,aAAa,GACpD,QACD,qBAAqB;YACvB,SAAS,OAAO;YAChB,cAAc,OAAO,QAAQ,GAAG,UAAU,OAAO,aAAa,GAAG,QAC/D,OAAO,eAAe;YACxB,UAAU,OAAO,QAAQ,GAAG,UAAU,OAAO,aAAa,GAAG,QAC3D,QAAQ;QACZ;QAEA,0BAA0B,UAAU,yBAAyB;IAC/D;AACF;AAEA,OAAO,UAAU;;;ACrDjB;;;;;;;;;;;;;;;;;;;;;;CAsBC;AAED,MAAM,SAAS,OAAO,UAAU,cAAc,SAAS;AACvD,MAAM,4BAA4B,QAAQ;AAC1C,MAAM,iBAAiB,QAAQ;AAE/B,IAAI,OAAO,OAAO,WAAW,aAAa,OAAO,SAAS,CAAC;AAC3D,IAAI,OAAO,OAAO,OAAO,8BAA8B,aACrD,OAAO,OAAO,4BAA4B,IAAI;AAChD,MAAM,uBAAuB,QAAQ,oBACnC,OAAO,OAAO,2BACd;AAGF,OAAO,UAAU;IACf,2BAA2B,OAAO,OAAO;IACzC;IACA;IACA,SAAQ,GAAG;QACT,IAAI,UAAU,6BACZ,OAAO,OAAO;IAClB;AACF;;;AC5CA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAED;;;;;CAKC,GACD,MAAM;IACJ;;;GAGC,GACD,aAAc;QACZ,IAAI,CAAC,SAAS,CAAC;IACjB;IAEA;;;;;;GAMC,GACD,cAAc,SAAS,EAAE,cAAc,EAAE;QACvC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG;IAC3B;IAEA;;;;;;;GAOC,GACD,UAAU,SAAS,EAAE,MAAM,EAAE;QAC3B,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,aACpC,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU;QAC1C,OAAO;IACT;IACA;;;;;;;GAOC,GACD,WAAW,SAAS,EAAE,MAAM,EAAE;QAC5B,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,aACpC,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW;QAC3C,OAAO;IACT;IACA;;;;;;;GAOC,GACD,YAAY,SAAS,EAAE,MAAM,EAAE;QAC7B,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,aACpC,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY;QAC5C,OAAO;IACT;AACF;AAEA,OAAO,UAAU;;;AC3FjB;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAED;;;;CAIC,GACD,MAAM;IACJ,aAAc,CAAC;IAEf,UAAU,MAAM,EAAE,CAAC;IACnB,WAAW,MAAM,EAAE,CAAC;IACpB,YAAY,MAAM,EAAE,CAAC;AACvB;AAEA,OAAO,UAAU;;;ACrCjB;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAED,SAAS,WAAW,MAAM;IACxB,MAAM,MAAM,CAAC;IACb,IAAI,CAAC,OAAO,mBACV,MAAM,IAAI,MAAM;IAGlB,IAAI,OAAO,OAAO,QAAQ;IAC1B,IAAI,oBAAoB,OAAO;IAC/B,IAAI,kBAAkB,OAAO,mBAAmB,SAAS;IACzD,OAAO;AACT;AAEA,SAAS;IACP,IAAI,CAAC,IAAI,CAAC,QAAQ;QAChB,IAAI,CAAC,SAAS,SAAS,cAAc;QACrC,MAAM,SAAS,SAAS,cAAc;QACtC,IAAI,CAAC,OAAO,YAAY;QACxB,IAAI,CAAC,IAAI,gBAAgB,YAAY,IAAI,CAAC;QAC1C,IAAI,CAAC,OAAO,YAAY;QACxB,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,kBAAkB;YAC9C,WAAW;gBACT,WAAW,IAAI,CAAC,UAAU,KAAK,IAAI;YACrC;QACF,GAAG,OAAO;IACZ;IACA,OAAO,IAAI,CAAC;AACd;AAEA;;;;;CAKC,GACD,OAAO,UAAU,SAAS,yBAAyB,EAAE,cAAc;IACjE,OAAO;QACL;;;;;;;;;KASC,GACD,OAAM,MAAM;YACV,IAAI,MAAM,WAAW;YACrB,MAAM,cAAc,cAAc;gBAChC,aAAc;oBACZ,KAAK;oBACL,IAAI,CAAC,MAAM;oBACX,IAAI,CAAC,SAAS;oBACd,IAAI,CAAC,YAAY;gBACnB;gBAEA,UAAU,GAAG,EAAE;oBACb,UAAU,KAAK,IAAI;oBACnB,IAAI,CAAC,UAAU,OAAO;gBACxB;gBACA,WAAW,GAAG,EAAE;oBACd,IAAI,IAAI,CAAC,WAAW,MAAM;wBACxB,IAAI,CAAC,UAAU,QAAQ;wBACvB,IAAI,CAAC,OAAO;wBACZ,IAAI,CAAC,SAAS;wBACd,IAAI,CAAC,YAAY;oBACnB;gBACF;gBAEA,YAAY,GAAG,EAAE;oBACf,IAAI,IAAI,CAAC,WAAW,MAClB,IAAI,CAAC,WAAW;yBAEhB,IAAI,CAAC,UAAU;gBAEnB;gBAEA;;SAEC,GACD,UAAU,WAAW,EAAE;oBACrB,IAAI,CAAC,WAAW;gBAClB;YACF;YACA,IAAI,sBAAsB,IAAI;YAC9B,0BAA0B,cAAc,IAAI,MAAM;QACpD;IACF;AACF;;;A;A,O,e,S,c;I,O;A;A,Q,qB,Q,mB;AEhHA,IAAA,mBAAA,QAAA;AAAYA,IAAAA,qBAAAA,wBAAAA;AACZ,IAAA,+BAAA,QAAA;AAKA,IAAA,yBAAA,QAAA;A,S,wB,G;I,I,O,I,Y,O;S;Q,I,S,C;Q,I,O,M;Y,I,I,O,I,I,O,U,e,K,K,M,M,C,I,G,G,C,I;Q;Q,O,U;Q,O;I;A;A,S,kB,E;I,O;Q,I,M,G,M,I,E;Q,O,I,Q,S,O,E,M;Y,S,K,G,E,G;gB,I;oB,I,O,G,C,I,C;oB,I,Q,K;gB,E,O,O;oB,O;oB;gB;gB,I,K,M,Q;qB,O,Q,Q,O,K,S,K;oB,K,Q;gB,G,S,G;oB,K,S;gB;Y;Y,O,K;Q;I;A;AAIA,MAAM,EACJC,eAAAA,EADI,GAEFC,QAAQ;AAIZ,IAAIC,mBAAmB;IACrBC,gCAA+BC,WAA/B;QACE,IAAIC,UAAUC,6BAAAA,mBAAmBC,WAAWH;QAE5C,IAAI,OAAOC,YAAY,aAAa,OAAO;QAE3C,OAAOC,6BAAAA,mBAAmBE,WACxBJ,aACAL,mBAAmBU,wBACnB,IAAIT,gBAAgBI;IAEvB;IACDM,yBAAwBC,SAAxB,EAAmCC,aAAnC,EAAkDC,aAAlD,EAAiEC,UAAjE;QACE,IAAIC,WAAW,IAAIf,gBAAgBY;QAEnCG,SAASC,SAAS;YAChBC,QAAQ,EADQ;YAEhBC,WAAW,EAAXA;QAFgB;QAKlBJ,WAAWK,QAAQC,CAAAA;YACjB,OAAOA,KAAKC;YACZN,SAASE,OAAOK,KAAKF;QACtB;QAED,IAAIG,eAAejB,6BAAAA,mBAAmBkB,WAAW;YAC7CC,MAAMb;YACNc,MAAMb;QAFuC,GAI/CE;QAGFT,6BAAAA,mBAAmBqB,kBACjBhB,WACAY,cACAZ,WACAZ,mBAAmB6B,eACnBC,6BAAAA;IAEH;IAEDC,oBAAmBnB,SAAnB,EAA8BE,aAA9B;QACE,OAAOP,6BAAAA,mBAAmByB,YACxBpB,WACAZ,mBAAmB6B,eACnBI,KAAKC,CAAAA;YACL,IAAIC,MAAM,EAAV;YAEA,IAAK,IAAIC,IAAI,GAAGA,IAAIF,SAASG,QAAQD,IAAK;gBACxC,MAAME,QAAQJ,QAAAA,CAASE,EAAvB;gBACA,IAAIE,MAAMX,KAAKY,UAAUzB,eACvBqB,IAAIZ,KAAKe;YAEZ;YAED,OAAOH;QACR;IACF;IACDK,cAAaC,MAAb;QACE,OAAOlC,6BAAAA,mBAAmByB,YACxBS,QACAzC,mBAAmB0C,wBACnBT,KAAKC,CAAAA;YACL,OAAOA,SAASG,SAAS;QAC1B;IACF;IACDM,iBAAgB/B,SAAhB,EAA2B6B,MAA3B,EAAmCG,WAAnC;QAAgD,IAAA,QAAA,IAAA;QAC9C,IAAA,CAAKJ,aAAaC,QAAQR,KAA1B,AAAA,CAAA;YAAA,IAAA,OAAA,kBAA+B,UAAMY,CAAN;gBAC7B,IAAIA,GAAG,MAAM,MAAKC,kBAAkBL;gBAEpC,IAAIM,gBAAgBxC,6BAAAA,mBAAmByC,QAAQJ;gBAE/CG,cAAcE,QAAQC,OAAOjB,KAAK,SAAA,OAAA;oBAChC1B,6BAAAA,mBAAmBqB,kBACjBgB,aACAH,QACA7B,WACAZ,mBAAmBmD,+BACnBrB,6BAAAA;oBAIF,IAAIZ,SAAS+B,QAAQ/B,OAAOqB;oBAE5BrB,OAAOE,QAAQ,SAAA,IAAA;wBAEb,IAAIgC,WAAW,IAAIC,uBAAAA,kBACjBhC,KAAKK,MACL,uBACAL,KAAKiC,OACLjC,KAAKkC,MACLlC,KAAKmC,UACLnC,KAAKM;wBAGP,IAAIW,QAAQ/B,6BAAAA,mBAAmBkB,WAAW;4BACtCC,MAAML,KAAKK;4BACXC,MAAMN,KAAKM;wBAF2B,GAIxCyB;wBAGF7C,6BAAAA,mBAAmBkD,SACjBhB,QACAH,OACAtC,mBAAmB0C,wBACnBZ,6BAAAA;oBAEH;gBACF;YAEF;YA5CD,OAAA,SAAA,EAAA;gBAAA,OAAA,KAAA,MAAA,IAAA,EAAA;YAAA;QAAA,CAAA;IA+CD;IACD4B;QACE,IAAIC,QAAQpD,6BAAAA,mBAAmBqD;QAE/B,OAAOD,MAAM3B,YAAY;YAAC;SAAnB,EAAkCC,KAAK4B,CAAAA;YAC5C,IAAI1B,MAAM,EAAV;YAEA0B,SAASzC,QAAQd,CAAAA;gBACf,IACEA,QAAQwD,KAAKnC,KAAKY,SAASvC,mBAAmBU,wBAE9CyB,IAAIZ,KAAKjB,QAAQwD;YAEpB;YAED,OAAO3B;QACR;IACF;IACDW,mBAAkBL,MAAlB,EAA0BsB,QAA1B;QAEE,IAAA,CAAKC,WAAWvB,QAAQzC,mBAAmBmD,+BACxClB,KAAKgC,CAAAA;YACJ9D,iBAAiB+D,mBAAmBzB,QAAQR,KAAK;gBAE/C1B,6BAAAA,mBAAmB4D,YAAYF,SAASxB,QACtCzC,mBAAmBmD,+BACnBrB,6BAAAA,8BAA8BG,KAC9BmC,CAAAA;oBACE,IAAIL,UAAUA,SAASK;gBACxB;YAEJ;QACF;IAEJ;IACDF,oBAAmBzB,MAAnB;QACE,OAAOlC,6BAAAA,mBAAmByB,YAAYS,QAAQ;YAC5CzC,mBAAmB0C;SADd,EAEJT,KAAKoC,CAAAA;YACN,IAAK,IAAIjC,IAAI,GAAGA,IAAIiC,UAAUhC,QAAQD,IACpC7B,6BAAAA,mBAAmB4D,YACjB1B,QACA4B,SAAAA,CAAUjC,EAAV,CAAakC,GAAG/B,OAChBvC,mBAAmB0C,wBACnBZ,6BAAAA;YAGJ;QACD;IACF;IACDyC,oBAAmB9B,MAAnB,EAA2B+B,YAA3B,EAAyCC,IAAzC,EAA+CC,YAAY,IAA3D;QACEnE,6BAAAA,mBAAmByB,YACjBS,QACAzC,mBAAmB0C,wBACnBT,KAAKoC,CAAAA;YACL,IAAIjB;YACJ,IAAK,IAAIuB,QAAQ,GAAGA,QAAQN,UAAUhC,QAAQsC,QAAS;gBACrD,MAAM1B,UAAUoB,SAAAA,CAAUM,MAA1B;gBACA,IAAI1B,QAAQqB,GAAG/B,UAAUiC,gBAAgBvB,QAAQtB,KAAKY,UACpDiC,cACApB,WAAW7C,6BAAAA,mBAAmBqE,YAAY3B,QAAQqB,GAAG/B;YAGxD;YAED,IAAIa,UAAU;gBACZ,IAAIA,SAASU,KAAKe,eAChBzB,SAASU,KAAKgB,SAAS;gBAEzB1B,SAASU,KAAK7C,SAAS,iBAAiB;oBACtCwD,MAAMA;oBACNM,KAAKL;gBAFiC;YAIzC;QACF;IACF;IACD,YAAA;IACAM,eAAcpC,WAAd,EAA2BqC,OAA3B,EAAoCC,SAApC;QACE,IAAIC,gBAAgB5E,6BAAAA,mBAAmBqE,YAAYhC;QACnDuC,cAAcrB,KAAKpC,KAAK0D,IAAIH;QAE5BE,cAAclC,QAAQC,OAAOjB,KAAKoD,CAAAA;YAChCA,iBAAiB3D,KAAK0D,IAAIH;YAC1B,IAAI/D,SAASmE,iBAAiBnE,OAAOqB;YAErC,IAAI+C,aAAa,IAAA,CAAKC,8BAA8BL,WAClDhE;YAEFsE,QAAQC,IAAI,cAAcH;YAG1BA,WAAWlE,QAAQgD,CAAAA;gBACjB,IAAI,CAAClD,OAAOwE,SAAStB,KACnBiB,iBAAiBnE,OAAOK,KAAK6C;qBACxB,IAAI,CAACc,UAAUQ,SAAStB,KAC7BiB,iBAAiBnE,OAAOyE,OAAOzE,OAAO0E,QAAQxB,KAAK;YAEtD;QAEF;IAEF;IACDyB,yBAAwBC,WAAxB,EAAqCC,WAArC,EAAkDvB,YAAlD;QACE,kCAAA;QACA,sDAAA;QACA,wCAAA;QACA,oEAAA;QACA,4BAAA;QACA,gCAAA;QACA,OAAA;QACA,KAAA;QAEA,IAAIwB,OAAOzF,6BAAAA,mBAAmBqE,YAAYkB;QAE1C,IAAI,CAACE,KAAKlC,KAAKY,WAAWsB,KAAKlC,KAAK7C,SAAS;YAC3CyD,WAAW,CAAXA;QAD2C;QAG7C,IAAI,CAACsB,KAAKlC,KAAKY,SAAV,CAAoBF,aAAzB,EAAwC;YACtCwB,KAAKlC,KAAKY,UAAUzD,SAASuD,cAAcuB;YAC3C;QACD;QAEDC,KAAKlC,KAAKY,SAAV,CAAoBF,aAApB,CAAkCY,IAAIW;QACtC;IAGA,sDAAA;IACD;IACD/B,YAAWvB,MAAX,EAAmBwD,YAAnB;QACE,IAAID,OAAOzF,6BAAAA,mBAAmBqE,YAAYnC;QAC1C,IAAIuD,KAAKE,OAAL,CAAaD,aAAjB,EACE,OAAOD,KAAKE,OAAL,CAAaD,aAAb,CAA2B,EAA3B,CAA8B/C,OAAOjB,KAA5C,AAAA,CAAA;YAAO,IAAA,QAAA,kBAA0C,UAAM8C,GAAN;gBAC/C,IAAIoB,SAAS,MAAMpB,IAAIoB,OAAOjD;gBAC9B,OAAOiD,OAAOrC,KAAKQ,GAAG/B;YACvB;YAHM,OAAA,SAAA,GAAA;gBAAA,OAAA,MAAA,MAAA,IAAA,EAAA;YAAA;QAAA,CAAA;IAMV;IACDgD,+BAA8Ba,MAA9B,EAAsCC,MAAtC;QACE,IAAIC,OAAOF,OAAOG,OAAOF;QAEzB,OAAOC,KAAKE,OAAQpC,CAAAA;YAClB,OAAOkC,KAAKV,QAAQxB,QAAQkC,KAAKG,YAAYrC;QAC9C;IAEF;AAnQoB;AAuQrBjE,QAAAA,mBAAAA;AACAH,QAAAA,qBAAAA,oBAgBF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A;;;A;A,O,e,S,c;I,O;A;A,Q,oB,Q,gC,Q,yB,Q,mB,Q,gB,Q,yB,Q,oB;AExSA,IAAA,2CAAA,QAAA;A,I,4C,uB;A,S,uB,G;I,O,O,I,a,M;Q,S;I;A;AAGA,MAAM0G,oBAAoB;AAC1B,MAAMhG,yBAAyB;AAC/B,MAAMmB,gBAAgB;AACtB,MAAMa,yBAAyB;AAC/B,MAAMS,gCAAgC;AAEtC,MAAMwD,oBAAoBC,OAAOC,OAAO;IACtCC,KAAK;IACLC,SAAS;IACTC,KAAK;IACLC,KAAK;IACLvC,WAAW;AAL2B;AAQxC,uEAAA;AACA,MAAMwC,mBAAmB;IAAC;QACtBxF,MAAM;QACNC,MAAMwF,0CAAAA,QAAyBC,UAAUC;IAFnB;IAIxB;QACE3F,MAAM;QACNC,MAAMwF,0CAAAA,QAAyBC,UAAUE;IAF3C;IAIA;QACE5F,MAAM;QACNC,MAAMwF,0CAAAA,QAAyBC,UAAUG;IAF3C;IAIA;QACE7F,MAAM;QACNC,MAAMwF,0CAAAA,QAAyBC,UAAUI;IAF3C;IAIA;QACE9F,MAAM;QACNC,MAAMwF,0CAAAA,QAAyBC,UAAUK;IAF3C;IAIA;QACE/F,MAAM;QACNC,MAAMwF,0CAAAA,QAAyBC,UAAUM;IAF3C;CApBF;AA+BEhB,QAAAA,oBAAAA;AACAhG,QAAAA,yBAAAA;AACAmB,QAAAA,gBAAAA;AACAqF,QAAAA,mBAAAA;AACAxE,QAAAA,yBAAAA;AACAS,QAAAA,gCAAAA;AACAwD,QAAAA,oBAAAA;;;;A;A,O,e,S,c;I,O;A;A,Q,a,Q,kB;AElDF,IAAA,mBAAA,QAAA;A,I,oB,uB;AACA,IAAA,cAAA,QAAA;A,I,e,uB;A,S,uB,G;I,O,O,I,a,M;Q,S;I;A;AANA,MAAMgB,aAAazH,QAAQ;AAC3B,MAAM0H,aAAa,OAAOC,WAAW,cAAcC,SAASD;AAQ1D5H,QAAAA,kBAAAA,kBAAAA;AACA8H,QAAAA,aAAAA,aAAAA;;;;A;A,O,e,S,c;I,O;A;AEPF,IAAA,aAAA,QAAA;AAHA,MAAMJ,aAAazH,QAAQ;AAC3B,MAAM0H,aAAa,OAAOC,WAAW,cAAcC,SAASD;AAO7C,MAAM5H,wBAAwB2H,WAAWI;IACtDC,YAAYC,KAAZ,EAAmBC,KAAnB,EAA0BzG,OAAO,iBAAjC,CAAoD;QAClD,KAAA;QACA,IAAI0G,WAAWC,aACb,IAAA,CAAKpH,SAAS;YACZS,MAAMwG;YACN5D,IAAIgE,WAAAA,UAAUC,KAAK7G;YACnBC,MAAMwG;QAHM;IAMjB;IAEDK,QAAQN,KAAR,EAAe;QACb,IAAA,CAAKxG,KAAK0D,IAAI8C;IACf;AAd2D;AAAzCjI,QAAAA,UAAAA;AAkBrB0H,WAAWc,gBAAgB;IAACxI;CAA5B;;;;A;A,O,e,S,c;I,O;A;A,S,kB,E;I,O;Q,I,M,G,M,I,E;Q,O,I,Q,S,O,E,M;Y,S,K,G,E,G;gB,I;oB,I,O,G,C,I,C;oB,I,Q,K;gB,E,O,O;oB,O;oB;gB;gB,I,K,M,Q;qB,O,Q,Q,O,K,S,K;oB,K,Q;gB,G,S,G;oB,K,S;gB;Y;Y,O,K;Q;I;A;AE1BA,IAAIqI,YAAY,CAAA;AAChB,MAAMV,aAAa,OAAOC,WAAW,cAAcC,SAASD;AAE5DS,UAAUI,YAAY;IACpB,OAAO,IAAIC,QAAQ,CAACC,SAASC;QAC3B,IAAIjB,WAAWkB,MAAM,aAAa;YAChC,IAAIC,WAAWC,YAAY;gBACzB,IAAIpB,WAAWkB,MAAM,aAAa;oBAChCF,QAAQhB,WAAWkB;oBACnBG,cAAcF;gBACf;YACF,GAAE;QACJ,OAAMH,QAAQhB,WAAWkB;IAC3B;AACF;AAEDR,UAAUY,uBAAuB,SAASC,KAAT;IAC/B,OAAO,IAAIR,QAAQC,CAAAA;QACjBN,UAAUI,YAAYzG,KAAKmH,CAAAA;YACzBA,OAAOC,cAAcF,OAAOP;QAC7B;IACF;AACF;AAEDN,UAAUgB,8BAA8B,SAASC,WAAT;IACtC,OAAO,IAAIZ,QAAQC,CAAAA;QACjBN,UAAUI,YAAYzG,KAAKmH,CAAAA;YACzBA,OAAOI,MAAMC,qBAAqBtH,CAAAA;gBAChCyG,QAAQzG,GAAAA,CAAIoH,YAAZ;YACD;QACF;IACF;AAEF;AAGD,2CAAA;AACA,oCAAA;AACA,0BAAA;AACA,QAAA;AACA,IAAA;AACAjB,UAAUoB,cAAc,SAASC,IAAT;IACtB,IACEA,gBAAgB/B,WAAWgC,OAC3BD,KAAKE,KAAKvG,SAAS,KACnB,OAAO8E,WAAW0B,QAAX,CAAoBH,KAAKE,KAAKvG,MAArC,IAA+C,aAE/C,OAAOqF,QAAQC,QAAQR,WAAW0B,QAAX,CAAoBH,KAAKE,KAAKvG,MAA9C;SAEP,OAAO,IAAIqF,QAAQC,CAAAA;QACjBe,KAAKzG,KAAK0F;IACX;AACJ;AAKDN,UAAUyB,gBAAVzB,AAAAA,CAAAA;IAAA,IAAA,OAAA,kBAA0B,UAAea,KAAf;QACxB,IAAIa,aAAa,MAAM1B,UAAUY,qBAAqBC;QACtD,OAAOa,WAAWC;IACnB;IAHD,OAAA,SAAA,EAAA;QAAA,OAAA,KAAA,MAAA,IAAA,EAAA;IAAA;AAAA,CAAA;AAKA3B,UAAU4B,sBAAV5B,AAAAA,CAAAA;IAAA,IAAA,QAAA,kBAAgC,UAAeiB,WAAf;QAC9B,IAAIY,OAAO,MAAM7B,UAAUgB,4BAA4BC;QACvD,OAAOY;IACR;IAHD,OAAA,SAAA,GAAA;QAAA,OAAA,MAAA,MAAA,IAAA,EAAA;IAAA;AAAA,CAAA;AAKA7B,UAAU8B,cAAc,SAASC,MAAT,EAAiBC,MAAjB;IACtB,IAAID,WAAWC,QAAQ,OAAO;IAC9B,IAAID,UAAU,QAAQC,UAAU,MAAM,OAAO;IAC7C,IAAID,OAAOhI,UAAUiI,OAAOjI,QAAQ,OAAO;IAC3CgI,OAAOE;IACPD,OAAOC;IACP,IAAK,IAAInI,IAAI,GAAGA,IAAIiI,OAAOhI,QAAQ,EAAED,EAAG;QACtC,IAAIiI,MAAAA,CAAOjI,EAAP,KAAckI,MAAAA,CAAOlI,EAAzB,EAA6B,OAAO;IACrC;IACD,OAAO;AACR;AAEDkG,UAAUkC,kBAAkB,SAASC,KAAT,EAAgBC,KAAhB;IAC1B,IAAK,IAAI/F,QAAQ,GAAGA,QAAQ8F,MAAMpI,QAAQsC,QAAS;QACjD,MAAM1B,UAAUwH,KAAAA,CAAM9F,MAAtB;QACA,IAAI1B,QAAQqB,GAAG/B,SAASmI,MAAMpG,GAAG/B,OAAO,OAAO;IAChD;IACD,OAAO;AACR;AAED+F,UAAUqC,mBAAmB,SAASF,KAAT,EAAgBG,MAAhB;IAC3B,IAAK,IAAIjG,QAAQ,GAAGA,QAAQ8F,MAAMpI,QAAQsC,QAAS;QACjD,MAAM1B,UAAUwH,KAAAA,CAAM9F,MAAtB;QACA,IAAI1B,QAAQV,SAASqI,OAAOrI,OAAO,OAAO;IAC3C;IACD,OAAO;AACR;AAED+F,UAAUuC,cAAc,SAASJ,KAAT,EAAgBK,QAAhB;IACtB,IAAK,IAAInG,QAAQ,GAAGA,QAAQ8F,MAAMpI,QAAQsC,QAAS;QACjD,MAAM1B,UAAUwH,KAAAA,CAAM9F,MAAtB;QACA,IAAI1B,QAAQV,SAASuI,UAAU,OAAO;IACvC;IACD,OAAO;AACR;AAEDxC,UAAUyC,UAAU,SAASC,GAAT,EAAcC,GAAd;IAClB,OAAOD,IAAIpF,QAAQqF,QAAQ;AAC5B;AAED3C,UAAU4C,WAAW,SAASF,GAAT,EAAcC,GAAd;IACnB,OAAOD,IAAIpF,QAAQqF;AACpB;AAED3C,UAAU6C,SAAS,SAASC,KAAT;IACjB,IAAIjJ,MAAM,EAAV;IACA,IAAK,IAAIwC,QAAQ,GAAGA,QAAQyG,MAAM/I,QAAQsC,QACxCxC,IAAIZ,KAAK6J,KAAAA,CAAMzG,MAAN,CAAaL,GAAG/B;IAE3B,OAAOJ;AACR;AACD,kDAAA;AACA,+BAAA;AACA,IAAA;AAEAmG,UAAU/B,SAAS,SAAS8E,KAAT,EAAgBC,KAAhB;IACjB,IAAInJ,MAAM,EAAV;IACA,IAAK,IAAIwC,QAAQ,GAAGA,QAAQ0G,MAAMhJ,QAAQsC,QACxCxC,IAAIZ,KAAK8J,KAAAA,CAAM1G,MAAf;IAEF,IAAK,IAAIA,QAAQ,GAAGA,QAAQ2G,MAAMjJ,QAAQsC,QACxCxC,IAAIZ,KAAK+J,KAAAA,CAAM3G,MAAf;IAEF,OAAOxC;AACR;AAEDmG,UAAUiD,eAAe,SAASd,KAAT,EAAgBC,KAAhB;IACvB,IAAIvI,MAAM,EAAV;IACA,IAAK,IAAIwC,QAAQ,GAAGA,QAAQ8F,MAAMpI,QAAQsC,QAAS;QACjD,MAAMqB,OAAOyE,KAAAA,CAAM9F,MAAnB;QACA,IAAIqB,KAAK1B,GAAG/B,SAASmI,MAAMpG,GAAG/B,OAC5BJ,IAAIZ,KAAKyE;QAEX,OAAO7D;IACR;AACF;AAEDmG,UAAUC,OAAO,SAASiD,YAAT;IACf,OACEA,eACA,MACA,IAAA,CAAKC,OACL,IAAA,CAAKA,OACL,MACA,IAAA,CAAKA,OACL,MACA,IAAA,CAAKA,OACL,MACA,IAAA,CAAKA,OACL,MACA,IAAA,CAAKA,OACL,IAAA,CAAKA,OACL,IAAA,CAAKA,OACL,MACAC,KAAKC,MAAMC,SAAS;AAEvB;AAEDtD,UAAUmD,KAAK;IACb,OAAOI,KAAKC,MAAM,AAAC,CAAA,IAAID,KAAKE,QAAL,IAAiB,SACrCH,SAAS,IACTI,UAAU;AACd;AAED1D,UAAU2D,cAAc,SAASC,GAAT,EAAcC,QAAd;IACtBD,IAAIE,WAAWD;IACfD,IAAIG,QAAQF;AACZ,qDAAA;AACA,gCAAA;AACA,kDAAA;AACA,yBAAA;AACA,MAAA;AAEA,IAAA;AACD;AAGC7D,QAAAA,YAAAA;;;;A;A,O,e,S,c;I,O;A;AErLF,IAAA,yBAAA,QAAA;A,I,0B,uB;AAEA,IAAA,aAAA,QAAA;A,S,uB,G;I,O,O,I,a,M;Q,S;I;A;A,S,kB,E;I,O;Q,I,M,G,M,I,E;Q,O,I,Q,S,O,E,M;Y,S,K,G,E,G;gB,I;oB,I,O,G,C,I,C;oB,I,Q,K;gB,E,O,O;oB,O;oB;gB;gB,I,K,M,Q;qB,O,Q,Q,O,K,S,K;oB,K,Q;gB,G,S,G;oB,K,S;gB;Y;Y,O,K;Q;I;A;AALA,MAAMX,aAAazH,QAAQ;AAC3B,MAAM0H,aAAa,OAAOC,WAAW,cAAcC,SAASD;AAQ7C,MAAME,mBAAmBuE,wBAAAA;IACtCrE,YAAYsE,GAAZ,EAAiBrE,KAAjB,EAAwBC,KAAxB,EAA+BzG,OAAO,YAAtC,CAAoD;QAClD,KAAA,CAAM6K,KAAKrE,OAAO;QAClB,IAAIE,WAAWC,aACb,IAAA,CAAKpH,SAAS;YACZU,MAAMwG,SAAS;YACf8B,YAAY;QAFA;IAMjB;IAEDuC,iBAAiB;QACflE,WAAAA,UAAUyB,cAAc,IAAA,CAAKzF,GAAG/B,OAAON,KAAKsH,CAAAA;YAC1C,IAAA,CAAKU,WAAW7E,IAAImE;QACrB;IACF;IAEKkD,sBAAsB;QAAA,IAAA,QAAA,IAAA;QAAA,OAAA,kBAAA;YAC1B,IAAIlD,cAAc,MAAMjB,WAAAA,UAAUyB,cAAc,MAAKzF,GAAG/B;YACxD,MAAK0H,WAAW7E,IAAImE;QAFM;IAG3B;IAIDf,QAAQN,KAAR,EAAe;QACb,IAAA,CAAKxG,KAAK0D,IAAI8C;IACf;IAEDwE,QAAQ;QACN,OAAQ,CAAA,EAAE,IAAA,CAAKzE,YAAYvG,KAAK,CAAA,EAAG,IAAA,CAAK4C,GAAG/B,MAAM,CAAA,EAAG,IAAA,CAAKb,KAAKa,MAAM,EAAA,CAApE;IACD;AA/BqD;AAAnCwF,QAAAA,UAAAA;AAmCrBJ,WAAWc,gBAAgB;IAACV;CAA5B;;;;A;A,O,e,S,c;I,O;A;AE5CA,MAAMJ,aAAazH,QAAQ;AAC3B,MAAM0H,aAAa,OAAOC,WAAW,cAAcC,SAASD;AAK5D,MAAMyE,wBAAwB1E,WAAWI;IACvCC,YAAYsE,GAAZ,EAAiBrE,KAAjB,CAAwB;QACtB,KAAA;QACA,IAAIE,WAAWC,aACb,IAAA,CAAKpH,SAAS;YACZqD,IAAIiI;YACJ7K,MAAMwG;QAFM;IAKjB;AAT4C;AAahCoE,QAAAA,UAAAA;AACf3E,WAAWc,gBAAgB;IAAC6D;CAA5B;;;;ACbA;;AACA;AARA,MAAM,EACJ,gBAAgB,EACjB,GAAG,QAAQ;AACZ,MAAM,EACJ,yBAAyB,EAC1B,GAAG,QAAQ;AAQZ,MAAM,eAAe,CAAA,GAAA,uDAAuB,EAAE,UAAU;AAExD,IAAI,UAAU;AAEd,MAAM,0BAA0B;IAC9B,aAAc;QACZ,KAAK,CAAC,uBAAuB,uBAAuB;YAClD,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IAEF;IAEA,QAAQ,MAAM,EAAE;QACd,IAAI,OAAO,QAAQ,KAAK,UAAU,gBAAgB,OAAO,aACtD,KACA,UAAU,cACX,OAAO,CAAA,GAAA,yDAAe,EAAE,aAAa,OAAO,aAAa,GAAG,OAAO,KACjE,CAAA;YACE,QAAQ,IAAI,SAAS;YACrB,UAAU;YACV,IAAI,IAAI;gBACN,IAAI,CAAC,QAAQ;gBACb,IAAI,CAAC,UAAU,OAAO;YACxB,OAAO;gBACL,IAAI,CAAC,QAAQ;gBACb,IAAI,CAAC,UAAU,OAAO;YACxB;YAEA,OAAO;QACT;aAEF,OAAO,QAAQ,QAAQ;IAI3B;IAEA,OAAO,MAAM,EAAE;QACb,IAAI,SACF,CAAA,GAAA,yDAAe,EAAE,kBAAkB,OAAO,aAAa,GAAG;aACrD;YACL,IAAI,eAAe;gBACjB,SAAS,OAAO;gBAChB,cAAc,OAAO;YACvB;YACA,0BAA0B,UAAU,yBAClC;QACJ;IAEF;AACF;AAEA,OAAO,UAAU;;;;AC7DjB;;AAPA,MAAM,EACJ,gBAAgB,EACjB,GAAG,QAAQ;AACZ,MAAM,EACJ,yBAAyB,EAC1B,GAAG,QAAQ;AAIZ,MAAM,eAAe,CAAA,GAAA,uDAAuB,EAAE,UAAU;AAGxD,MAAM,8BAA8B;IAClC,aAAc;QACZ,KAAK,CAAC,8BAA8B,8BAA8B;YAChE,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,IAAI,OAAO,QAAQ,KAAK,UAAU,cAChC,OAAO,QAAQ,QAAQ;QACzB,OAAO,QAAQ,QAAQ;IACzB;IAEA,OAAO,MAAM,EAAE;QACb,0BAA0B,UAAU,+BAA+B;IACrE;AACF;AAEA,OAAO,UAAU;;;ACjCjB,MAAM,EACJ,gBAAgB,EACjB,GAAG,QAAQ;AAEZ,MAAM,EACJ,yBAAyB,EAC1B,GAAG,QAAQ;AAGZ,MAAM,+BAA+B;IACnC,aAAc;QACZ,KAAK,CAAC,4BAA4B,4BAA4B;YAC5D,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,UAAU;QACR,OAAO,QAAQ,QAAQ;IACzB;IAEA,SAAS;QACP,0BAA0B,UAAU,4BAA4B,CAAC;IACnE;AACF;AAEA,OAAO,UAAU;;;;ACpBjB;AAIA;;AAZA,MAAM,EACJ,gBAAgB,EACjB,GAAG,QAAQ;AAEZ,MAAM,EACJ,yBAAyB,EAC1B,GAAG,QAAQ;AAQZ,MAAM,qBAAqB;IACzB,aAAc;QACZ,KAAK,CAAC,6BAA6B,oCAAoC;YACrE,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,IAAI,OAAO,aAAa,KAAK,UAAU,CAAA,GAAA,uDAAgB,EAAE,UAAU,gBACjE,OAAO,QAAQ,QAAQ;QAEzB,OAAO,CAAA,GAAA,yDAAe,EAAE,aAAa,OAAO,aAAa,GAAG,OAAO,KACjE,CAAA;YACE,IAAI,IAAI,OAAO;YACf,OAAO;QACT;IAEJ;IAEA,OAAO,MAAM,EAAE;QACb,IAAI,OAAO,aAAa,KAAK,UAAU,CAAA,GAAA,uDAAgB,EAAE,UAAU,gBACjE,0BAA0B,UAAU,sBAAsB,OAAO;aAGjE,0BAA0B,UAAU,mBAAmB,OAAO;IAElE;AACF;AAEA,OAAO,UAAU;;;;AC9CjB;;AAEA,MAAM,EACJ,gBAAgB,EACjB,GAAG,QAAQ;AAEZ,MAAM,EACJ,yBAAyB,EAC1B,GAAG,QAAQ;AAGZ,MAAM,2BAA2B;IAC/B,aAAc;QACZ,KAAK,CAAC,+BAA+B,+BAA+B;YAClE,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,IAAI,OAAO,aAAa,KAAK,UAAU,CAAA,GAAA,uDAAgB,EAAE,UAAU,cACjE,OAAO,QAAQ,QAAQ;QACzB,OAAO,QAAQ,QAAQ;IACzB;IAEA,OAAO,MAAM,EAAE;QACb,0BAA0B,UAAU,sBAAsB,OAAO;IACnE;AAEF;AAEA,OAAO,UAAU;;;;ACjCjB;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAM,EACJ,oBAAoB,EACrB,GAAG,QAAQ;AAGZ,wBAAwB,GACxB,IAAI,UAAU;IAAC;QACX,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAE,EAAE,OAAO,CAAA,GAAA,wCAAoB;QAClD,iBAAiB,SAAS;IAC5B;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAE,EAAE,OAAO,CAAA,GAAA,wCAAoB;QAClD,iBAAiB,SAAS;IAC5B;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAE,EAAE,OAAO,CAAA,GAAA,8CAA0B;QACxD,iBAAiB,SAAS;IAC5B;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAE,EAAE,OAAO,CAAA,GAAA,yCAA8B;QAC5D,iBAAiB,SAAS;IAC5B;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAE,EAAE,OAAO,CAAA,GAAA,+BAA4B;QAC1D,iBAAiB,SAAS;IAC5B;IAAG;QACD,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAE,EAAE,OAAO,CAAA,GAAA,+BAAiB;QAC/C,iBAAiB,SAAS;IAC5B;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAE,EAAE,OAAO,CAAA,GAAA,2CAAuB;QACrD,iBAAiB,SAAS;IAC5B;CACD;AAED,IAAK,IAAI,QAAQ,GAAG,QAAQ,QAAQ,QAAQ,QAC1C,qBAAqB,MAAM,OAAO,CAAC,MAAM;;;;;ACnD3C,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAwC;IACtD,OAAO,kBAAkB,QAAQ,oBAAwC;IACzE,OAAO,WAAW;IAG5B,QAAQ,oBAAsC,QAAQ;IACtD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;A,I,gB;I,M;I,O;Q;K;I;Q,I,C,Q,C,G,2D,E,iB,O,C,K,G,S;Q,O;Y,O;Y,Y;Y,S;Y,c;Y,S,C,G,2D,E,gB,C,E,C;Y,Q;Y,Y;Y,S,O,O,E,E,C,G,sB;Q;I;I,S;Q,Q,M;Y,I,C,Q,O;Y,I,C,e,O;Y,I,C,U,O;Y,I,C,a,O,e,O,a,K,Q;Y,I,C,S,O;Y,Q,I,e,I,C;Y,I,C,U,O,e,O,a,K,Q,I,C;Y,I,C,Y,O;Q;Q,S,M;Y,I,O,e,I,C,U,O,W,O,S,G,C,G,yD,E,wB,I,C,Q,G,O,O,W,QAoCf,OAAA,MACA,IAAA,CAAA,QAAA,OAAA,CAAA,KAAA,GAAA;iBAGA,OAAA,e,O,W,O,S,KAEA,IAAA,CAAA;YASA,IAAA,CAAA,aAAA;QACA;QACA,aAAA,WAAA;YACA,IAAA,OAAA,IAAA,CAAA,cAAA,YACA,IAAA,CAAA,UAAA;gBACA;gBACA,YAAA,IAAA,CAAA;gBACA,MAAA,IAAA,CAAA;YACA;QACA;QACA,aAAA,YAAA;YACA,IAAA,CAAA,QAAA,QAAA,CAAA;gBACA,QAAA,UAAA;YACA;YAEA,IAAA,cACA,aAAA,QAAA,OAAA,KAAA,CAAA;gBACA,IAAA,SAAA,gBAAA,OAAA;gBAEA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,CAAA,QAAA,QAAA,IAAA;oB,M,U,I,C,O,C,E;oBAGA,IAAA,WAAA,OAAA,KAAA,CAAA,KAAA,GAAA,QAAA,QAAA;oBAEA,IAAA,OAAA,aAAA,aACA,IAAA,CAAA,OAAA,CAAA,EAAA,CAAA,UAAA;gB;YAEA;QAEA;QACA;YACA,IAAA,iBAAA,IAAA,CAAA,QAAA,OAAA,CAAA,KAAA,GAAA,SAAA,SAAA;YACA,IAAA,YAAA,IAAA,CAAA,cAAA,IAAA,CAAA,WAAA,OAAA,SAAA;YAEA,OAAA,kBAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;AC3GA,OAAO,UAAU;IAEf;QACE,SAAS;QACT,UAAU;QACV,MAAM;QACN,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;IACR;IACA;QACE,SAAS;QACT,UAAU;QACV,MAAM;QACN,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;IACR;IACA;QACE,SAAS;QACT,UAAU;QACV,MAAM;QACN,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;IACR;IAAG;QACD,SAAS;QACT,UAAU;QACV,MAAM;QACN,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;IACR;IAAG;QACD,SAAS;QACT,UAAU;QACV,MAAM;QACN,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;IACR;IACA;QACE,SAAS;QACT,UAAU;QACV,MAAM;QACN,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;IACR;CAED;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,G,a;Y,O;gB,a,I;Y;Y,I;gB,mB,S,M;oB,I,a;gB;gB,oB,S,M;oB,I,a;gB;gB,a,S,M;oB,O,I,Y;gB;Y;Q,G;Y,G,mB;gB,I,G,I,G,I;a;Y,I,G;Y,G,qB;gB,G,Y;oB,G,S;wB,I,G;qB;oB,I,G;oB,G,Y;wB,O;4B,O,I;4B,U,S,G;gC,I,a;4B;4B,Y;wB;oB;iB,E;gB,I,G;gB,G;gB,I,G;gB,G,Q;oB,a;gB,G;oB,I,G;iB;gB,I,G;gB,G;gB,I,G;gB,G,O,I,G,I,O,S,G,E,K;oB,O,G,Y;wB,K;wB,a;wB,O;4B,S,I;4B,Y,C,I;wB;wB,O;4B,O,I;4B,U,S,G;gC,I,U;4B;4B,Y;wB;oB,G;wB,I,G,I,G,I;qB;gB,I;gB,I,G;gB,G;gB,I,G;gB,G,Q;oB,a;gB,G;oB,I,G;iB;gB,I,G;gB,G;gB,I,G;gB,G,O;oB,a;gB,G,I,G,I,S,S,M,E,K;oB,O,G,e;wB,K;wB,a;wB,O;4B,Y,O;wB;wB,O;4B,O,O;4B,U,S,G;gC,I,K,Q,W;4B;4B,Y;wB;oB,G;wB,I,G,I,G,O;qB;gB,I;a,E;Y,I,G;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,O,I,Y;wB;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,a;oB,a;oB,O;wB,Y,C,I;oB;oB,I;wB,S,S,M;4B,O,I,Y;wB;oB;gB,G;oB,I,G;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADtDD,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AEJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAwC;IACtD,OAAO,kBAAkB,QAAQ,oBAAwC;IACzE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAqC;IACnE,QAAQ,oBAAsC,QAAQ;IACtD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,c;Y,S;Y,Y;Y,S,E;Y,O;Y,S;Y,Y,E;Y,0B;Q;I;I,S;Q,M,Q,M;Y,I,C,e,O;Y,I,C,U,M,C,G,yD,E,a,O,a,G;Y,I,C,a,I,C,U,M,C,G,yD,E;Q;Q,S,M;Y,I,O,a,C,G,yD,E,gB,I,C,0B,I,C,a,G,O,I,C;Y,I,C,a;Q;Q,a,W;Y,I,O,I,C,c,Y,I,C,U;gB;Y;Q;Q,W,G;Y,I,O,E;Y,I,I,O,G,O,I,Q,O,K,K,G,C,K,C;Y,O;Q;I;I,O;Q,0B,e,Q,E,Q;Y,I,a,U,I,C,U,M,C,G,yD,E,mB,U,I,C,a,K;Q;I;A;A,I,U,O,kB,a,c,U;kBAiDf,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,G,a;Y,a;Y,O;gB,a,I;Y;Y,I;gB,mB,S,M;oB,I,a;gB;gB,oB,S,M;oB,I,a;gB;gB,a,S,M;oB,O,I,Y;gB;Y;Q,G;Y,G,mB;gB,I,G;a;Y,I,G;Y,G,qB;gB,I,U,G,O;oB,a;gB,G;oB,I,G;iB,I,I;gB,I,G;gB,G,O;oB,a;gB,G;oB,G,Y;wB,I,W,S,G,a;4B,O;gC,e;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,2B;gC;gC,Y;4B;wB,G,I,G,I,Y,S,C,E,K;4B,O,G,a;gC,K;gC,O;oC,S,E;gC;4B,G;gC,I,G,I,G,E;6B;wB,I,K,I;qB,E;iB,E;gB,I,G;gB,G,O;oB,a;gB,G;oB,G,Q;wB,a;oB,G;wB,I,G;qB;oB,I,G;oB,I,G,I,S,S,M,E,K;wB,O,G,Y;4B,K;4B,a;4B,O;gC,S,O,G;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,Q;gC;gC,Y;4B;wB,G;4B,I,G,I,G,O,K;yB;oB;oB,I,G;oB,I,Q,U,K,I,yB,W,I,G,O;wB,a;oB,G;wB,I,G;qB,I,I;iB,E;a;Y,I,G;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,O,I,Y;wB;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,a;oB,a;oB,O;wB,Y,C,C,I,M,S,C;oB;oB,I;wB,S,S,M;4B,O,I,Y;wB;oB;gB,G;oB,I,G;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAhEA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA8C;IAC5D,OAAO,kBAAkB,QAAQ,oBAA8C;IAC/E,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA2C;IACzE,QAAQ,oBAA4C,QAAQ;IAC5D,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;A;A,M,Y;I;C,C,O,C,G,uD,E,U;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,c;Y,S;Y,Y;Y,S,E;Y,Y,E;Q;I;I,S;Q,M,Q,M;Y,I,C,U,O;Y,I,C,e,O;Y,I,C,U,I,C,mB,I,C,a,K;Y,I,C,a,M,C,G,yD,E;Q;Q,S,M;Y,I,Q,I,C;Y,I,O,a,M,Q,C;gB,C,G,U,E,I,C,a,G,O,W,C;oB,O,K,K,K,U,G;gB,G,K,C;oB,I,I,I,G,I,M,Q,I,C,G,yD,E,gB,G,iB,K,C,E,C,K,G,O,G;gB;Y;Y,I,C,a;Q;Q,a,W;Y,I,O,I,C,c,Y,I,C,U;gB;Y;Q;Q,oB,I;Y,I,uB,C,G,uD,E,U;Y,I,W,C,G,2D,E,iB,M,qB,Q,O,O,C,K,G,S,C,G,uD,E,U;Y,S,Q,C;gB,E,C,mB,G;gB,E,C,kB,G;gB,E,C,a,G,E;Y;Y,O;Q;Q,M,qB,I;Y,I,K,oB,Q,K,a,M,C,G,yD,E,mB,K,iB,K;QAkEf;QACA;YACA,OAAA,IAAA,CAAA,QAAA,OACA,CAAA,KAAA,GAAA,oBAAA,UAAA,GAAA,qBAAA;QAEA;I;AAEA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kB,S,wC;;;;;AC5CA,0CACE;AAhDF;AAIA,IAAI,OAAO,eAAe,EAAE,EAAE,aAAa,EAAE,SAAS;IACpD,IAAI,OAAO,cAAc,YACvB,MAAM,IAAI,MAAM;IAGlB,IAAI,UAAU,CAAA,GAAA,+CAAiB,EAAE,YAAY;IAE7C,IAAI,OAAO,IAAI,IAAI;QAAC;KAAQ;IAC5B,IAAI,WAAW,EAAE;IACjB,IAAI,UAAU;QAAC;KAAQ;IACvB,IAAI,aAAa,EAAE;IACnB,IAAI,QAAQ,EAAE;IAEd,MAAO,QAAQ,OAAQ;QACrB,aAAa;QACb,WAAW,EAAE;QACb,UAAU,EAAE;QAEZ,KAAK,IAAI,QAAQ,WAAY;YAC3B,SAAS,KAAK,KAAK,YAAY;YAE/B,IAAI,aAAa,MAAM,UAAU;YAEjC,IAAI,YACF,MAAM,KAAK;QAEf;QAEA,IAAI,iBAAiB,MAAM,QAAQ,IAAI;QAEvC,KAAK,IAAI,YAAY,eAAgB;YACnC,KAAK,IAAI,SAAS,SAChB,IAAI,CAAC,KAAK,IAAI,QAAQ;gBACpB,QAAQ,KAAK;gBACb,KAAK,IAAI;YACX;QAEJ;IACF;IAEA,OAAO;AACT;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,G,a;Y,a;Y,O;gB,a,I;Y;Y,I;gB,mB,S,M;oB,I,a;gB;gB,oB,S,M;oB,I,a;gB;gB,a,S,M;oB,O,I,Y;gB;Y;Q,G;Y,G,mB;gB,I,G;a;Y,I,G;Y,G,qB,I,G,I,S,S,I,E,K;gB,O,G,O;oB,K;oB,a;gB,G;oB,G,O;wB,a;oB,G;wB,I,G,I,G,K;qB;oB,I,G;oB,G,O;wB,a;oB,G;wB,G,Y;4B,G,a;gC,O;oC,Q,K;oC,M;gC;gC,I;oC,a,S,M;wC,O,I,oB;oC;gC;gC,O;oC,O,K;oC,U,S,G;wC,I,K,M,mB;oC;oC,Y;gC;4B,G;gC,G,a;oC,O;wC,S;oC;gC,G;oC,I,G;iC;gC,I,G;gC,I,G,I,Y,S,O,E,K;oC,O,G,a;wC,K;wC,O;4C,S,Q,G;wC;oC,G;wC,I,G,I,G,Q,K;qC;gC;6B,E;yB,E;qB,E;oB,I,G;oB,G,O;wB,a;oB,G;wB,K,mB,U,K,W,S,I,G,Y;4B,G,a;gC,O;oC,Q,I;oC,M;gC;gC,O;oC,O,K;oC,U,S,G;wC,I,K,M,oB;oC;oC,Y;gC;4B,G;gC,G,a;oC,O;wC,S;oC;gC,G;oC,I,G;iC;gC,I,G;gC,I,G,K,Y,S,I,E,K;oC,O,G,a;wC,K;wC,O;4C,S,K,G;wC;oC,G;wC,I,G,I,G,K,K;qC;gC;6B,E;yB,E,K,I;wB,I,G;wB,K,mB,U,K,W,U,I,G,Y;4B,G,Q;gC,a;4B,G;gC,I,G;6B;yB,I,I;qB,E;iB;Y,I;Y,I,G;Y,G,qB;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,O,I,Y;wB;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,O,I,Y;wB;oB;gB,G;oB,I,G;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AD5CA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AEJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAyC;IACvD,OAAO,kBAAkB,QAAQ,oBAAyC;IAC1E,OAAO,WAAW;IAG5B,QAAQ,oBAAuC,QAAQ;IACvD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A,yC;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,Y;Y,Y;Q;I;I,S;Q;Y,I,C,a;Q;Q,S,M;Y,I,c,I,C,W;Y,I,O,e,Y,S,G;gBAMf,IAAA,UAAA,CAAA,GAAA,yDAAA,EAAA,+BACA;YAGA,iBAAA;YACA,sCAAA;YACA,WAAA;YACA,0BAAA;YACA,IAAA;YACA;YACA,IAAA,CAAA,aAAA;QACA;QACA,aAAA,WAAA;YACA,IAAA,OAAA,IAAA,CAAA,cAAA,YACA,IAAA,CAAA,UAAA;gBAAA;gBAAA,YAAA,IAAA,CAAA;YAAA;Q;IAGA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,O;Y,a,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Y,a,S,M;gB,O,I,Y;Y;Q;I,G;Q,G,mB;Y,I,G;S;Q,I,G;Q,G,qB;Y,G,Y;gB,G,S;oB,I,G;iB;gB,I,G;gB,G,Y;oB,O;wB,O,I;wB,U,S,G;4B,I,a;wB;wB,Y;oB;gB;a,E;S,E;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,C,C,I,W,O,S,C;gB;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AA1CA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA+B;IAC7C,OAAO,kBAAkB,QAAQ,oBAA+B;IAChE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA4B;IAC1D,QAAQ,oBAA6B,QAAQ;IAC7C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;A;;A,I,gB;I,M;I,O;Q;K;I;Q,I,C,K;Q,O;Y,U,E;Y,sB;Y,c,C,G,2D,E,kB;Y,W;Y,Y;Y,M;Y,e,E;Y,O,O,K,C,G,2D,E;Q;I;I,S;Q,Q,M;Y,I,C,O,O,K;Y,I,C,K,O,G;Y,C,G,+C,E,Y,O,G,O;gB,C,G,2D,E;a,E,K,C;gB,Q,Q,C;oB,I,C,c,K;wB,I,G,G;wB,M,G,K;oB;gB;Y;Q;Q,S,M;Y,I,Q;gB,I,I,C,iB,C,G,2D,E,kB,W,I,C,Y;gB,C,G,yD,E,mB,I,C,I,I,C,sB,I,C,c,I,C;Y;Y,I,C,a;Q;Q,a,W;Y,I,O,I,C,c,Y,I,C,U;Q;Q;Y,O,I,C,yB,QAwDf,IAAA,CAAA,iBAAA,CAAA,GAAA,2DAAA,EAAA,kBAAA,aACA,IAAA,CAAA,cAAA;QAEA;QACA;YACA,CAAA,GAAA,+CAAA,EAAA,Y,I,C,IAEA,CAAA,GAAA,uDAAA,EAAA,UAAA,4BACA,KAAA,CAAA;gBACA,IAAA,CAAA,WAAA;YACA;QACA;QACA;YACA,OACA,IAAA,CAAA,iBAAA,CAAA,GAAA,2DAAA,EAAA,kBAAA;QAEA;IACA;IACA,OAAA;QACA,cAAA;YACA,IAAA,IAAA,CAAA,iBAAA,CAAA,GAAA,2DAAA,EAAA,kBAAA,WACA,IAAA,CAAA;QACA;QACA,sBAAA,SAAA,QAAA;YACA,IAAA,WAAA,CAAA,GAAA,+CAAA,EAAA,QAAA;YACA,IAAA,SAAA,eAAA;gBACA,IAAA,CAAA,eAAA,SAAA,cAAA,KAAA;gB,I,S,c,K;oBAEA,IAAA,CAAA,YAAA,SAAA,cAAA,IAAA;oBACA,QAAA,IAAA,kBAAA,IAAA,CAAA;gBACA;YACA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,O;Y,a,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Y,a,S,M;gB,O,I,Y;Y;Q;I,G;Q,G,mB;Y,a;gB,c;Y;Q,G;Y,I,G,e,I,G,I,Q;S;Q,I,G;Q,G,qB;Y,G,O;gB,G,Y;oB,G,S;wB,O;4B,O;wB;oB,G;wB,I,G;qB;oB,I,G;oB,G,a;wB,O;4B,Q;4B,M;wB;wB,O;4B,O,I;4B,U,S,G;gC,I,uB;4B;4B,Y;wB;oB,G,I,G,I,e,S,I,E,K;wB,O,G,a;4B,K;4B,O;gC,S,K;4B;wB,G;4B,I,G,I,G,K;yB;oB,I;iB,E;a,E;Y,I,G;Y,I,uB,G,O;gB,G,Q;oB,a;gB,G;oB,I,G;iB;gB,I,G;gB,I,G,I,O,S,I,E,K;oB,O,G,Y;wB,K;wB,a;wB,O;4B,S;wB;wB,O;4B,O,I;4B,U,S,G;gC,I,e;4B;4B,Y;wB;oB,G;wB,I,G,I,G;qB;gB;a,E,K,I;Y,I,G;Y,I,oB,G,O;gB,G,Y;oB,G,S;wB,O;4B,O;wB;oB,G;wB,I,G;qB;oB,I,G;oB,G,a;wB,O;4B,Q;4B,M;wB;wB,O;4B,O,I;4B,U,S,G;gC,I,Y;4B;4B,Y;wB;oB,G,I,G,I,U,S,G,E,K;wB,O,G,a;4B,K;4B,O;gC,S,I,G;4B;wB,G;4B,I,G,I,G,I,K;yB;oB,I;iB,E;a,E,K,I;S;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,I;gB;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AA5GA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA+B;IAC7C,OAAO,kBAAkB,QAAQ,oBAA+B;IAChE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA4B;IAC1D,QAAQ,oBAA6B,QAAQ;IAC7C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;A;A;;A;A,I,gB;I,M;I,O;Q;K;I;Q,I,C,Q,O,K,C,G,2D,E,mB,O,C,K,O;Q,I,C,iB,O,O,E,E,C,G,sB;Q,O;Y,M;Y,uB,E;Y,Y;Y,sB;Y,c;Y,kB,E;Q;I;I,S;Q,Q,M;Y,I,C,O;Y,I,C,8B,K,C;gB,I,C,wB,E;gB,G,Q,C;oB,I,C,sB,K;wB,M;wB,S;oB;gB;Y;Q;Q,S,K;Y,I,O,I,C,iB,Q,C;gB,C,G,yD,E,mB,G,K,K,G,O,G,U,G;Y;Y,I,C,a;Q;Q,a,W;Y,I,C,U;Q;Q;Y,O,C,G,U,E,I,C,K,G,O,C,G,uD,E,U,sB,O;gB,I,I,M,C,G,+C,E,Y,K,K,G,O;oB,C,G,2D,E;iB;gB,O,E,S;Y;Q;Q;Y,I,C,sB,Q,C;gB,I,G,W,I,C,wB,Q,I,C,gB,Q,C,I,C,a,K;oB,I,C,iB,K;wB,M,G,K,K,K;wB,M,G;wB,U,I,C;wB,M,I,C;oB;oB,G,U;gB;Y;Q;Q,c,E;Y,I,M,I,C,iB,K,C;gB,O,K,K,K,G,S,G,K,K,G,S,K,Y,I,C;YA6Ef;YAEA,OAAA,QAAA;QACA;QACA,gBAAA,EAAA;YACA,IAAA,CAAA,mBAAA,IAAA,CAAA,iBAAA,OAAA,CAAA;gBACA,OAAA,GAAA,KAAA,GAAA,SAAA,QAAA,KAAA,KAAA,GAAA;YACA;Q;IAEA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,a;Q,O;Y,a,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Y,a,S,M;gB,O,I,Y;Y;Q;I,G;Q,G,mB;Y,I,G;S;Q,I,G;Q,G,qB;Y,a;Q,G;Y,G,c;gB,a;Y,G;gB,G,c;oB,a;gB,G;oB,G,gB;wB,I,G;qB;oB,I,G;oB,G,W;wB,a;oB,G,I,G,I,uB,S,O,E,K;wB,O,G,gB;4B,K;wB,G;4B,G,e;gC,a;gC,O;oC,O,Q;oC,U,S,G;wC,I,K,S,W;oC;oC,Y;gC;4B;4B,I,G;4B,G,Q;gC,a;4B,G;gC,I,G,I,G,Q,K,K,K;6B;yB,E;oB,I;iB,E;gB,I,G;gB,G,c;oB,a;gB,G;oB,G,gB;wB,I,G;qB;oB,I,G;oB,G,Y;wB,G,S;4B,O;gC,O;4B;wB,G;4B,I,G;yB;wB,I,G;wB,G,a;4B,O;gC,Q;gC,M;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,uB;gC;gC,Y;4B;wB,G,I,G,I,gB,S,Y,E,K;4B,O,G,a;gC,K;gC,O;oC,S,a;gC;4B,G;gC,I,G,I,G,a;6B;wB,I;qB,E;oB,I,G;oB,G,c;wB,a;oB,G;wB,G,W,I,G,I,O,S,I,E,K;4B,O,G,gB;gC,K;4B,G;gC,G,Y;oC,a;oC,O;wC,S;oC;oC,O;wC,O,I;wC,U,S,G;4C,I,e;wC;wC,Y;oC;gC,G;oC,I,G,I,G;iC;6B,E;wB,I;qB,E;oB,I,G;oB,G,a;wB,Y;4B;gC,M;gC,S;gC,O;gC,Y;4B;yB;wB,a;wB,a;4B,O;4B,S;wB;wB,I;4B,S,I;wB;oB,G;wB,G,W;4B,I,G;yB;qB,E;iB,E;a,E;Y,I,G;Y,G,c;gB,a;Y,G;gB,G,Y;oB,O;wB,mB;oB;oB,a,I,G;wB;4B,K;4B,I,S,G;gC,I,O,I;gC,O,G,gB,C,G;oC,G,iB;wC,O;4C,Y;wC;oC,G;wC,I,G,I,G,K;qC;oC,I,G;oC,G,iB;wC,O;4C,Y;wC;oC,G;wC,I,G,I,G,K;qC;oC,I,G;oC,G,iB;wC,O;4C,Y;wC;oC,G;wC,I,G,I,G,K;qC;oC,I,G;oC,G,iB;wC,O;4C,Y;wC;oC,G;wC,G,a;4C,a;4C,I;gD,S,S,M;oD,O,I,e,K;gD;4C;wC,G;4C,G,W;gD,I,G;6C;yC,E;qC,E;iC,E;4B;wB;qB;oB,O;wB,O,I;wB,U,S,G;4B,I,mB;wB;wB,Y;oB;gB,G;oB,G,oB;wB,G,M;4B,a;wB,G;4B,I,G;yB;qB;iB,E;a,E;S,E;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,I,iB,U;gB;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAzGA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA2C;IACzD,OAAO,kBAAkB,QAAQ,oBAA2C;IAC5E,OAAO,WAAW;IAG5B,QAAQ,oBAAyC,QAAQ;IACzD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;;A;A,I,gB;I,M;I,O;Q;K;I;Q,I,C,gB,O,O,E,E,C,G,sB;Q,O;Y,a;Y,Y;Y,sB;Y,a;Y,c,E;Q;I;I,S;Q,Q,M;Y,I,C,c,O,G;Y,C,G,yB,E,2B,O,G,O,K,C;gB,I,C,e;Y;Q;Q,S,M;Y,I,Q,C,G,yD,E,wB,I,C,a,I,C,a,I,C;Y,I,C,a;Q;Q,a,W;Y,I,O,I,C,c,Y,I,C,U;Q;Q;Y,O,I,C,gB,Q,I,C,yB,O,Q;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;AChBf;AAIA,MAAM,EACJ,eAAe,EACf,iBAAiB,EACjB,sBAAsB,EACvB,GAAG,QAAQ;AAGZ,OAAO,UAAU;IACf,4BAA2B,WAAW;QACpC,OAAO,CAAA,GAAA,UAAG,EACR,aACA;YACE;YACA,gBAAgB;YAChB,kBAAkB;YAClB,uBAAuB;SACxB,EACD,CAAA;YAEE,OAAO,KAAK,KAAK,KAAK,UAAU,kBAAkB;QACpD;IAEJ;AAWF;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,O;Y,a,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Y,a,S,M;gB,O,I,Y;Y;Q;I,G;Q,G,mB;Y,a;gB,c;Y;Q,G;Y,I,G;S;Q,I,G;Q,G,qB;Y,G,O;gB,G,Y;oB,G,S;wB,O;4B,O;wB;oB,G;wB,I,G;qB;oB,I,G;oB,G,a;wB,O;4B,Q;4B,M;wB;wB,O;4B,O,I;4B,U,S,G;gC,I,uB;4B;4B,Y;wB;oB,G,I,G,I,e,S,I,E,K;wB,O,G,a;4B,K;4B,O;gC,S,K;4B;wB,G;4B,I,G,I,G,K;yB;oB,I;iB,E;a,E;Y,I,G;Y,G,O;gB,G,Y;oB,G,S;wB,O;4B,O;wB;oB,G;wB,I,G;qB;oB,I,G;oB,G,a;wB,O;4B,Q;4B,M;wB;wB,O;4B,O,I;4B,U,S,G;gC,I,c;4B;4B,Y;wB;oB,G,I,G,I,c,S,Q,E,K;wB,O,G,a;4B,K;4B,O;gC,S,S,K,G;4B;wB,G;4B,I,G,I,G,S,K,K;yB;oB,I;iB,E;a,E;S;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,I;gB;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADpCA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf","sources":["node_modules/spinal-env-viewer-plugin-dashboard-standard/index.js","node_modules/spinal-env-viewer-plugin-dashboard-standard/buttons/addDashBoard.js","node_modules/spinal-env-viewer-panel-manager-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelManagerService.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelApp.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalMountExtention.js","node_modules/spinal-env-viewer-dashboard-standard-service/build/index.js","node_modules/spinal-env-viewer-dashboard-standard-service/src/index.js","node_modules/spinal-env-viewer-dashboard-standard-service/build/globalVariables.js","node_modules/spinal-env-viewer-dashboard-standard-service/src/globalVariables.js","node_modules/spinal-models-building-elements/build/index.js","node_modules/spinal-models-building-elements/src/index.js","node_modules/spinal-models-building-elements/build/AbstractElement.js","node_modules/spinal-models-building-elements/src/AbstractElement.js","node_modules/spinal-models-building-elements/build/Utilities.js","node_modules/spinal-models-building-elements/src/Utilities.js","node_modules/spinal-models-building-elements/build/BIMElement.js","node_modules/spinal-models-building-elements/src/BIMElement.js","node_modules/spinal-models-bimobject/build/BIMObject.js","node_modules/spinal-models-bimobject/BIMObject.js","node_modules/spinal-env-viewer-plugin-dashboard-standard/buttons/linkWithDashBoard.js","node_modules/spinal-env-viewer-plugin-dashboard-standard/buttons/linkAutoWithDashboard.js","node_modules/spinal-env-viewer-plugin-dashboard-standard/buttons/createDashboardContext.js","node_modules/spinal-env-viewer-plugin-dashboard-standard/buttons/calculateBtn.js","node_modules/spinal-env-viewer-plugin-dashboard-standard/buttons/globalCalculate.js","node_modules/spinal-env-viewer-plugin-dashboard-standard/js/registerDialog.js","node_modules/spinal-env-viewer-plugin-dashboard-standard/vue/dashBoardConfigDialog.vue","node_modules/spinal-env-viewer-plugin-dashboard-standard/js/choice.js","node_modules/spinal-env-viewer-plugin-dashboard-standard/vue/linkToDashBoardDialog.vue","node_modules/spinal-env-viewer-plugin-dashboard-standard/vue/linkAutoWithDashboardDialog.vue","node_modules/spinal-env-viewer-plugin-dashboard-standard/js/find.js","node_modules/spinal-env-viewer-plugin-dashboard-standard/vue/createDashboardContext.vue","node_modules/spinal-env-viewer-plugin-dashboard-standard/vue/CalculParams.vue","node_modules/spinal-env-viewer-plugin-dashboard-standard/vue/globalCalcul.vue","node_modules/spinal-env-viewer-plugin-dashboard-standard/vue/bimObjectCalculReference.vue","node_modules/spinal-env-viewer-plugin-dashboard-standard/js/utilities.js"],"sourcesContent":["const sidebarName = \"GraphManagerSideBar\";\nconst HeaderBarName = \"GraphManagerTopBar\";\n\nconst {\n  spinalContextMenuService\n} = require(\"spinal-env-viewer-context-menu-service\");\n\n\n\nimport AddDashboard from \"./buttons/addDashBoard\";\nimport LinkWithDashBoard from \"./buttons/linkWithDashBoard\";\nimport LinkAutoWithDashboard from \"./buttons/linkAutoWithDashboard\";\nimport CreateDashBoardContext from \"./buttons/createDashboardContext\";\nimport CalculateBtn from './buttons/calculateBtn';\nimport GlobalCalculateBtn from \"./buttons/globalCalculate\";\n\nimport \"./js/registerDialog\";\n\n\n\n\n\nspinalContextMenuService.registerApp(sidebarName, new AddDashboard(),[3]);\nspinalContextMenuService.registerApp(sidebarName, new LinkWithDashBoard(),[3]);\nspinalContextMenuService.registerApp(sidebarName, new LinkAutoWithDashboard(),[3]);\nspinalContextMenuService.registerApp(sidebarName, new CalculateBtn(),[3]);\nspinalContextMenuService.registerApp(sidebarName, new GlobalCalculateBtn(),[3]);\nspinalContextMenuService.registerApp(HeaderBarName, new CreateDashBoardContext(),[3]);","const {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\n\nconst {\n  spinalPanelManagerService\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nimport {\n  dashboardVariables\n} from \"spinal-env-viewer-dashboard-standard-service\";\n\nclass AddDashboard extends SpinalContextApp {\n  constructor() {\n    super(\"create dashboard\", \"create dashboard\", {\n      icon: \"table_chart\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\"\n    });\n  }\n\n  isShown(option) {\n    if (option.selectedNode.type.get() == dashboardVariables.DASHBOARD_CONTEXT_TYPE) {\n      this.label = \"create dashboard\";\n      this.description = \"create dashboard\";\n      this.buttonCfg.icon = \"table_chart\";\n      return Promise.resolve(true);\n    } else if (option.context.type.get() == dashboardVariables.DASHBOARD_CONTEXT_TYPE) {\n      this.label = \"setting dashboard\";\n      this.description = \"setting dashboard\";\n      this.buttonCfg.icon = \"settings\";\n      return Promise.resolve(true);\n    }\n    return Promise.resolve(-1);\n  }\n\n  action(option) {\n    let params = {\n      title: option.context.id.get() !== option.selectedNode.id\n        .get() ?\n        \"Config DashBoard\" : \"Create DashBoard\",\n      context: option.context,\n      selectedNode: option.context.id.get() !== option.selectedNode.id.get() ?\n        option.selectedNode : undefined,\n      toCreate: option.context.id.get() !== option.selectedNode.id.get() ?\n        false : true\n    }\n\n    spinalPanelManagerService.openPanel(\"dashBoardConfigDialog\", params);\n  }\n}\n\nmodule.exports = AddDashboard;","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalPanelManagerService = require(\"./SpinalPanelManagerService\");\nconst SpinalPanelApp = require(\"./SpinalPanelApp\");\n\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalPanelManagerService === \"undefined\")\n  G_root.spinal.spinalPanelManagerService = new SpinalPanelManagerService();\nconst SpinalMountExtention = require(\"./SpinalMountExtention.js\")(\n  G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  spinalPanelManagerService: G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp,\n  SpinalMountExtention,\n  install(Vue) {\n    Vue.prototype.$spinalPanelManagerService =\n      G_root.spinal.spinalPanelManagerService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} panels key = panelName, value = an instance of SpinalPanelApp\n * @class SpinalPanelManagerService\n */\nclass SpinalPanelManagerService {\n  /**\n   *Creates an instance of SpinalPanelManagerService.\n   * @memberof SpinalPanelManagerService\n   */\n  constructor() {\n    this.panels = {};\n  }\n\n  /**\n   * method to register an Panel Application\n   *\n   * @param {string} panelName the name of the panel\n   * @param {SpinalPanelApp} spinalPanelApp the application\n   * @memberof SpinalPanelManagerService\n   */\n  registerPanel(panelName, spinalPanelApp) {\n    this.panels[panelName] = spinalPanelApp;\n  }\n\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  openPanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].openPanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  closePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].closePanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  tooglePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].tooglePanel(option);\n    return false;\n  }\n}\n\nmodule.exports = SpinalPanelManagerService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n * Base interface like class of a panel\n *\n * @class SpinalPanelApp\n */\nclass SpinalPanelApp {\n  constructor() {}\n\n  openPanel(option) {}\n  closePanel(option) {}\n  tooglePanel(option) {}\n}\n\nmodule.exports = SpinalPanelApp;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (!option.vueMountComponent) {\n    throw new Error(\"mount : missing option vueMountComponent\");\n  }\n\n  cfg.name = option.name || \"SpinalMount\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.parentContainer = option.parentContainer || document.body;\n  return cfg;\n}\n\nfunction getDialog() {\n  if (!this.dialog) {\n    this.dialog = document.createElement(\"div\");\n    const _compo = document.createElement(\"div\");\n    this.dialog.className = \"spinal-modal-container\";\n    this.cfg.parentContainer.appendChild(this.dialog);\n    this.dialog.appendChild(_compo);\n    this.compoment = new this.cfg.vueMountComponent({\n      propsData: {\n        onFinised: this.onFinised.bind(this)\n      }\n    }).$mount(_compo);\n  }\n  return this.dialog;\n}\n\n/**\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { mount }\n */\nmodule.exports = function(spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n```js\n{\n  name: \"myCustomDialogName\",\n  vueMountComponent: Vue.extend(aVueCompomentDialog),\n  parentContainer: document.body\n}```\n     *\n     * @param {*} option\n     */\n    mount(option) {\n      let cfg = configInit(option);\n      const SpinalMount = class extends SpinalPanelApp {\n        constructor() {\n          super();\n          this.cfg = cfg;\n          this.dialog = null;\n          this.compoment = null;\n        }\n\n        openPanel(opt) {\n          getDialog.call(this);\n          this.compoment.opened(opt);\n        }\n        closePanel(opt) {\n          if (this.dialog !== null) {\n            this.compoment.removed(opt);\n            this.dialog.remove();\n            this.dialog = null;\n            this.compoment = null;\n          }\n        }\n\n        tooglePanel(opt) {\n          if (this.dialog !== null) {\n            this.closePanel(opt);\n          } else {\n            this.openPanel(opt);\n          }\n        }\n\n        /**\n         * called when dialog closed by the dialog itself\n         */\n        onFinised(closeResult) {\n          this.closePanel(closeResult);\n        }\n      };\n      let SpinalMountInstance = new SpinalMount();\n      spinalPanelManagerService.registerPanel(cfg.name, SpinalMountInstance);\n    }\n  };\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dashboardVariables = exports.dashboardService = undefined;\n\nvar _globalVariables = require(\"./globalVariables\");\n\nvar dashboardVariables = _interopRequireWildcard(_globalVariables);\n\nvar _spinalEnvViewerGraphService = require(\"spinal-env-viewer-graph-service\");\n\nvar _spinalModelBmsnetwork = require(\"spinal-model-bmsnetwork\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst {\n  AbstractElement\n} = require(\"spinal-models-building-elements\");\n\nlet dashboardService = {\n  createStandardDashBoardContext(contextName) {\n    let context = _spinalEnvViewerGraphService.SpinalGraphService.getContext(contextName);\n\n    if (typeof context !== \"undefined\") return false;\n\n    return _spinalEnvViewerGraphService.SpinalGraphService.addContext(contextName, dashboardVariables.DASHBOARD_CONTEXT_TYPE, new AbstractElement(contextName));\n  },\n  createStandardDashBoard(contextId, dashboardName, dashboardType, attributes) {\n    let abstract = new AbstractElement(dashboardName);\n\n    abstract.add_attr({\n      sensor: [],\n      connected: []\n    });\n\n    attributes.forEach(attr => {\n      delete attr.checked;\n      abstract.sensor.push(attr);\n    });\n\n    let abstractNode = _spinalEnvViewerGraphService.SpinalGraphService.createNode({\n      name: dashboardName,\n      type: dashboardType\n    }, abstract);\n\n    _spinalEnvViewerGraphService.SpinalGraphService.addChildInContext(contextId, abstractNode, contextId, dashboardVariables.RELATION_NAME, _spinalEnvViewerGraphService.SPINAL_RELATION_LST_PTR_TYPE);\n  },\n\n  getDashboardByType(contextId, dashboardType) {\n    return _spinalEnvViewerGraphService.SpinalGraphService.getChildren(contextId, dashboardVariables.RELATION_NAME).then(children => {\n      let res = [];\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.type.get() === dashboardType) {\n          res.push(child);\n        }\n      }\n\n      return res;\n    });\n  },\n  hasDashBoard(nodeId) {\n    return _spinalEnvViewerGraphService.SpinalGraphService.getChildren(nodeId, dashboardVariables.ENDPOINT_RELATION_NAME).then(children => {\n      return children.length > 0;\n    });\n  },\n  linkToDashboard(contextId, nodeId, dashboardId) {\n    var _this = this;\n\n    this.hasDashBoard(nodeId).then((() => {\n      var _ref = _asyncToGenerator(function* (d) {\n        if (d) yield _this.unLinkToDashBoard(nodeId);\n\n        let dashboardInfo = _spinalEnvViewerGraphService.SpinalGraphService.getInfo(dashboardId);\n\n        dashboardInfo.element.load().then(function (element) {\n          _spinalEnvViewerGraphService.SpinalGraphService.addChildInContext(dashboardId, nodeId, contextId, dashboardVariables.DASHBOARD_TO_ELEMENT_RELATION, _spinalEnvViewerGraphService.SPINAL_RELATION_LST_PTR_TYPE);\n\n          let sensor = element.sensor.get();\n\n          sensor.forEach(function (attr) {\n\n            let endpoint = new _spinalModelBmsnetwork.SpinalBmsEndpoint(attr.name, \"SpinalEndpoint_Path\", attr.value, attr.unit, attr.dataType, attr.type);\n\n            let child = _spinalEnvViewerGraphService.SpinalGraphService.createNode({\n              name: attr.name,\n              type: attr.type\n            }, endpoint);\n\n            _spinalEnvViewerGraphService.SpinalGraphService.addChild(nodeId, child, dashboardVariables.ENDPOINT_RELATION_NAME, _spinalEnvViewerGraphService.SPINAL_RELATION_LST_PTR_TYPE);\n          });\n        });\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    })());\n  },\n  getAllDashboardContext() {\n    let graph = _spinalEnvViewerGraphService.SpinalGraphService.getGraph();\n\n    return graph.getChildren([\"hasContext\"]).then(contexts => {\n      let res = [];\n\n      contexts.forEach(context => {\n        if (context.info.type.get() == dashboardVariables.DASHBOARD_CONTEXT_TYPE) {\n          res.push(context.info);\n        }\n      });\n\n      return res;\n    });\n  },\n  unLinkToDashBoard(nodeId, callback) {\n\n    this._getParent(nodeId, dashboardVariables.DASHBOARD_TO_ELEMENT_RELATION).then(oldDash => {\n      dashboardService.removeAllEndpoints(nodeId).then(() => {\n\n        _spinalEnvViewerGraphService.SpinalGraphService.removeChild(oldDash, nodeId, dashboardVariables.DASHBOARD_TO_ELEMENT_RELATION, _spinalEnvViewerGraphService.SPINAL_RELATION_LST_PTR_TYPE).then(el => {\n          if (callback) callback(el);\n        });\n      });\n    });\n  },\n  removeAllEndpoints(nodeId) {\n    return _spinalEnvViewerGraphService.SpinalGraphService.getChildren(nodeId, [dashboardVariables.ENDPOINT_RELATION_NAME]).then(endpoints => {\n      for (let i = 0; i < endpoints.length; i++) {\n        _spinalEnvViewerGraphService.SpinalGraphService.removeChild(nodeId, endpoints[i].id.get(), dashboardVariables.ENDPOINT_RELATION_NAME, _spinalEnvViewerGraphService.SPINAL_RELATION_LST_PTR_TYPE);\n      }\n      return;\n    });\n  },\n  addCalculationRule(nodeId, endpointType, rule, reference = null) {\n    _spinalEnvViewerGraphService.SpinalGraphService.getChildren(nodeId, dashboardVariables.ENDPOINT_RELATION_NAME).then(endpoints => {\n      let endpoint;\n      for (let index = 0; index < endpoints.length; index++) {\n        const element = endpoints[index];\n        if (element.id.get() === endpointType || element.type.get() === endpointType) {\n          endpoint = _spinalEnvViewerGraphService.SpinalGraphService.getRealNode(element.id.get());\n        }\n      }\n\n      if (endpoint) {\n        if (endpoint.info.dash_cal_rule) endpoint.info.rem_attr(\"dash_cal_rule\");\n\n        endpoint.info.add_attr(\"dash_cal_rule\", {\n          rule: rule,\n          ref: reference\n        });\n      }\n    });\n  },\n  //a modifier\n  editDashboard(dashboardId, newName, NewSensor) {\n    let dashboardNode = _spinalEnvViewerGraphService.SpinalGraphService.getRealNode(dashboardId);\n    dashboardNode.info.name.set(newName);\n\n    dashboardNode.element.load().then(dashBoardElement => {\n      dashBoardElement.name.set(newName);\n      let sensor = dashBoardElement.sensor.get();\n\n      let difference = this._getDifferenceBetweenTwoArray(NewSensor, sensor);\n\n      console.log(\"difference\", difference);\n\n      difference.forEach(el => {\n        if (!sensor.includes(el)) {\n          dashBoardElement.sensor.push(el);\n        } else if (!NewSensor.includes(el)) {\n          dashBoardElement.sensor.splice(sensor.indexOf(el), 1);\n        }\n      });\n    });\n  },\n  addReferenceToBimObject(bimObjectId, referenceId, endpointType) {\n    // SpinalGraphService.createNode()\n    // let node = SpinalGraphService.getInfo(referenceId);\n    // node.element.load().then(element => {\n    //   if (element.referenceOf) element.referenceOf.set(endpointType);\n    //   else element.add_attr({\n    //     referenceOf: endpointType\n    //   })\n    // })\n\n    let node = _spinalEnvViewerGraphService.SpinalGraphService.getRealNode(bimObjectId);\n\n    if (!node.info.reference) node.info.add_attr({\n      reference: {}\n    });\n    if (!node.info.reference[endpointType]) {\n      node.info.reference.add_attr(endpointType, referenceId);\n      return;\n    }\n\n    node.info.reference[endpointType].set(referenceId);\n    return;\n\n    // return SpinalGraphService.addChild(bimObjectId, , )\n  },\n  _getParent(nodeId, relationName) {\n    let node = _spinalEnvViewerGraphService.SpinalGraphService.getRealNode(nodeId);\n    if (node.parents[relationName]) {\n      return node.parents[relationName][0].load().then((() => {\n        var _ref2 = _asyncToGenerator(function* (ref) {\n          let parent = yield ref.parent.load();\n          return parent.info.id.get();\n        });\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      })());\n    }\n  },\n  _getDifferenceBetweenTwoArray(array1, array2) {\n    let full = array1.concat(array2);\n\n    return full.filter(el => {\n      return full.indexOf(el) === full.lastIndexOf(el);\n    });\n  }\n};\n\nexports.dashboardService = dashboardService;\nexports.dashboardVariables = dashboardVariables;\n\n/*\n\nunLinkToDashBoard(dashboardId, nodeId, callback) {\n    SpinalGraphService.getChildren(nodeId, [\n      dashboardVariables.ENDPOINT_RELATION_NAME\n    ]).then(el => {\n      if (el.length > 0) {\n        let oldDash = el[0].id.get();\n        dashboardService.removeAllEndpoints(nodeId).then(() => {\n          // SpinalGraphService.moveChild(\n          //   oldDash,\n          //   dashboardId,\n          //   nodeId,\n          //   dashboardVariables.DASHBOARD_TO_ELEMENT_RELATION,\n          //   SPINAL_RELATION_LST_PTR_TYPE\n          // ).then(el => {\n          //   if (el) {\n          //     callback(true);\n          //   }\n          // });\n\n          SpinalGraphService.removeChild(oldDash, nodeId,\n            dashboardVariables.DASHBOARD_TO_ELEMENT_RELATION).then(\n            el => {\n              callback(el);\n            });\n\n        });\n      } else {\n        callback(false);\n      }\n    });\n  }\n\n*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import * as dashboardVariables from \"./globalVariables\";\nimport {\n  SPINAL_RELATION_LST_PTR_TYPE,\n  SpinalGraphService\n} from \"spinal-env-viewer-graph-service\";\n\nimport {\n  SpinalBmsEndpoint\n} from \"spinal-model-bmsnetwork\";\n\nconst {\n  AbstractElement\n} = require(\"spinal-models-building-elements\");\n\n\n\nlet dashboardService = {\n  createStandardDashBoardContext(contextName) {\n    let context = SpinalGraphService.getContext(contextName);\n\n    if (typeof context !== \"undefined\") return false;\n\n    return SpinalGraphService.addContext(\n      contextName,\n      dashboardVariables.DASHBOARD_CONTEXT_TYPE,\n      new AbstractElement(contextName)\n    );\n  },\n  createStandardDashBoard(contextId, dashboardName, dashboardType, attributes) {\n    let abstract = new AbstractElement(dashboardName);\n\n    abstract.add_attr({\n      sensor: [],\n      connected: []\n    });\n\n    attributes.forEach(attr => {\n      delete attr.checked;\n      abstract.sensor.push(attr);\n    });\n\n    let abstractNode = SpinalGraphService.createNode({\n        name: dashboardName,\n        type: dashboardType\n      },\n      abstract\n    );\n\n    SpinalGraphService.addChildInContext(\n      contextId,\n      abstractNode,\n      contextId,\n      dashboardVariables.RELATION_NAME,\n      SPINAL_RELATION_LST_PTR_TYPE\n    );\n  },\n\n  getDashboardByType(contextId, dashboardType) {\n    return SpinalGraphService.getChildren(\n      contextId,\n      dashboardVariables.RELATION_NAME\n    ).then(children => {\n      let res = [];\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.type.get() === dashboardType) {\n          res.push(child);\n        }\n      }\n\n      return res;\n    });\n  },\n  hasDashBoard(nodeId) {\n    return SpinalGraphService.getChildren(\n      nodeId,\n      dashboardVariables.ENDPOINT_RELATION_NAME\n    ).then(children => {\n      return children.length > 0;\n    });\n  },\n  linkToDashboard(contextId, nodeId, dashboardId) {\n    this.hasDashBoard(nodeId).then(async d => {\n      if (d) await this.unLinkToDashBoard(nodeId);\n\n      let dashboardInfo = SpinalGraphService.getInfo(dashboardId);\n\n      dashboardInfo.element.load().then(element => {\n        SpinalGraphService.addChildInContext(\n          dashboardId,\n          nodeId,\n          contextId,\n          dashboardVariables.DASHBOARD_TO_ELEMENT_RELATION,\n          SPINAL_RELATION_LST_PTR_TYPE\n        );\n\n\n        let sensor = element.sensor.get();\n\n        sensor.forEach(attr => {\n\n          let endpoint = new SpinalBmsEndpoint(\n            attr.name,\n            \"SpinalEndpoint_Path\",\n            attr.value,\n            attr.unit,\n            attr.dataType,\n            attr.type\n          );\n\n          let child = SpinalGraphService.createNode({\n              name: attr.name,\n              type: attr.type\n            },\n            endpoint\n          );\n\n          SpinalGraphService.addChild(\n            nodeId,\n            child,\n            dashboardVariables.ENDPOINT_RELATION_NAME,\n            SPINAL_RELATION_LST_PTR_TYPE\n          );\n        });\n      });\n\n    })\n\n\n  },\n  getAllDashboardContext() {\n    let graph = SpinalGraphService.getGraph();\n\n    return graph.getChildren([\"hasContext\"]).then(contexts => {\n      let res = [];\n\n      contexts.forEach(context => {\n        if (\n          context.info.type.get() == dashboardVariables.DASHBOARD_CONTEXT_TYPE\n        ) {\n          res.push(context.info);\n        }\n      });\n\n      return res;\n    });\n  },\n  unLinkToDashBoard(nodeId, callback) {\n\n    this._getParent(nodeId, dashboardVariables.DASHBOARD_TO_ELEMENT_RELATION)\n      .then(oldDash => {\n        dashboardService.removeAllEndpoints(nodeId).then(() => {\n\n          SpinalGraphService.removeChild(oldDash, nodeId,\n            dashboardVariables.DASHBOARD_TO_ELEMENT_RELATION,\n            SPINAL_RELATION_LST_PTR_TYPE).then(\n            el => {\n              if (callback) callback(el);\n            });\n\n        });\n      })\n\n  },\n  removeAllEndpoints(nodeId) {\n    return SpinalGraphService.getChildren(nodeId, [\n      dashboardVariables.ENDPOINT_RELATION_NAME\n    ]).then(endpoints => {\n      for (let i = 0; i < endpoints.length; i++) {\n        SpinalGraphService.removeChild(\n          nodeId,\n          endpoints[i].id.get(),\n          dashboardVariables.ENDPOINT_RELATION_NAME,\n          SPINAL_RELATION_LST_PTR_TYPE\n        );\n      }\n      return;\n    });\n  },\n  addCalculationRule(nodeId, endpointType, rule, reference = null) {\n    SpinalGraphService.getChildren(\n      nodeId,\n      dashboardVariables.ENDPOINT_RELATION_NAME\n    ).then(endpoints => {\n      let endpoint;\n      for (let index = 0; index < endpoints.length; index++) {\n        const element = endpoints[index];\n        if (element.id.get() === endpointType || element.type.get() ===\n          endpointType) {\n          endpoint = SpinalGraphService.getRealNode(element.id.get());\n        }\n\n      }\n\n      if (endpoint) {\n        if (endpoint.info.dash_cal_rule)\n          endpoint.info.rem_attr(\"dash_cal_rule\");\n\n        endpoint.info.add_attr(\"dash_cal_rule\", {\n          rule: rule,\n          ref: reference\n        });\n      }\n    });\n  },\n  //a modifier\n  editDashboard(dashboardId, newName, NewSensor) {\n    let dashboardNode = SpinalGraphService.getRealNode(dashboardId);\n    dashboardNode.info.name.set(newName);\n\n    dashboardNode.element.load().then(dashBoardElement => {\n      dashBoardElement.name.set(newName);\n      let sensor = dashBoardElement.sensor.get();\n\n      let difference = this._getDifferenceBetweenTwoArray(NewSensor,\n        sensor);\n\n      console.log(\"difference\", difference);\n\n\n      difference.forEach(el => {\n        if (!sensor.includes(el)) {\n          dashBoardElement.sensor.push(el);\n        } else if (!NewSensor.includes(el)) {\n          dashBoardElement.sensor.splice(sensor.indexOf(el), 1);\n        }\n      })\n\n    })\n\n  },\n  addReferenceToBimObject(bimObjectId, referenceId, endpointType) {\n    // SpinalGraphService.createNode()\n    // let node = SpinalGraphService.getInfo(referenceId);\n    // node.element.load().then(element => {\n    //   if (element.referenceOf) element.referenceOf.set(endpointType);\n    //   else element.add_attr({\n    //     referenceOf: endpointType\n    //   })\n    // })\n\n    let node = SpinalGraphService.getRealNode(bimObjectId);\n\n    if (!node.info.reference) node.info.add_attr({\n      reference: {}\n    });\n    if (!node.info.reference[endpointType]) {\n      node.info.reference.add_attr(endpointType, referenceId);\n      return;\n    }\n\n    node.info.reference[endpointType].set(referenceId);\n    return;\n\n\n    // return SpinalGraphService.addChild(bimObjectId, , )\n  },\n  _getParent(nodeId, relationName) {\n    let node = SpinalGraphService.getRealNode(nodeId);\n    if (node.parents[relationName]) {\n      return node.parents[relationName][0].load().then(async ref => {\n        let parent = await ref.parent.load();\n        return parent.info.id.get();\n      })\n    }\n\n  },\n  _getDifferenceBetweenTwoArray(array1, array2) {\n    let full = array1.concat(array2);\n\n    return full.filter((el) => {\n      return full.indexOf(el) === full.lastIndexOf(el);\n    })\n\n  }\n};\n\nexport {\n  dashboardService,\n  dashboardVariables\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n\nunLinkToDashBoard(dashboardId, nodeId, callback) {\n    SpinalGraphService.getChildren(nodeId, [\n      dashboardVariables.ENDPOINT_RELATION_NAME\n    ]).then(el => {\n      if (el.length > 0) {\n        let oldDash = el[0].id.get();\n        dashboardService.removeAllEndpoints(nodeId).then(() => {\n          // SpinalGraphService.moveChild(\n          //   oldDash,\n          //   dashboardId,\n          //   nodeId,\n          //   dashboardVariables.DASHBOARD_TO_ELEMENT_RELATION,\n          //   SPINAL_RELATION_LST_PTR_TYPE\n          // ).then(el => {\n          //   if (el) {\n          //     callback(true);\n          //   }\n          // });\n\n          SpinalGraphService.removeChild(oldDash, nodeId,\n            dashboardVariables.DASHBOARD_TO_ELEMENT_RELATION).then(\n            el => {\n              callback(el);\n            });\n\n        });\n      } else {\n        callback(false);\n      }\n    });\n  }\n\n*/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CALCULATION_RULES = exports.DASHBOARD_TO_ELEMENT_RELATION = exports.ENDPOINT_RELATION_NAME = exports.GEOGRAPHIC_TYPES = exports.RELATION_NAME = exports.DASHBOARD_CONTEXT_TYPE = exports.DASHBOARD_CONTEXT = undefined;\n\nvar _spinalEnvViewerContextGeographicService = require(\"spinal-env-viewer-context-geographic-service\");\n\nvar _spinalEnvViewerContextGeographicService2 = _interopRequireDefault(_spinalEnvViewerContextGeographicService);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst DASHBOARD_CONTEXT = \"Dashboard Standard\";\nconst DASHBOARD_CONTEXT_TYPE = \"dashboardContext\";\nconst RELATION_NAME = \"hasDashBoard\";\nconst ENDPOINT_RELATION_NAME = \"hasDashEndpoint\";\nconst DASHBOARD_TO_ELEMENT_RELATION = \"hasConnected\";\n\nconst CALCULATION_RULES = Object.freeze({\n  sum: 0,\n  average: 1,\n  max: 2,\n  min: 3,\n  reference: 4\n});\n\n// Affiché par ordre (à ne pas Modifier, ou ajouter l'element à la fin)\nconst GEOGRAPHIC_TYPES = [{\n  name: \"Site\",\n  type: _spinalEnvViewerContextGeographicService2.default.constants.SITE_TYPE\n}, {\n  name: \"Building\",\n  type: _spinalEnvViewerContextGeographicService2.default.constants.BUILDING_TYPE\n}, {\n  name: \"Floor\",\n  type: _spinalEnvViewerContextGeographicService2.default.constants.FLOOR_TYPE\n}, {\n  name: \"Zone\",\n  type: _spinalEnvViewerContextGeographicService2.default.constants.ZONE_TYPE\n}, {\n  name: \"Room\",\n  type: _spinalEnvViewerContextGeographicService2.default.constants.ROOM_TYPE\n}, {\n  name: \"Equipment\",\n  type: _spinalEnvViewerContextGeographicService2.default.constants.EQUIPMENT_TYPE\n}];\n\nexports.DASHBOARD_CONTEXT = DASHBOARD_CONTEXT;\nexports.DASHBOARD_CONTEXT_TYPE = DASHBOARD_CONTEXT_TYPE;\nexports.RELATION_NAME = RELATION_NAME;\nexports.GEOGRAPHIC_TYPES = GEOGRAPHIC_TYPES;\nexports.ENDPOINT_RELATION_NAME = ENDPOINT_RELATION_NAME;\nexports.DASHBOARD_TO_ELEMENT_RELATION = DASHBOARD_TO_ELEMENT_RELATION;\nexports.CALCULATION_RULES = CALCULATION_RULES;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9nbG9iYWxWYXJpYWJsZXMuanMiXSwibmFtZXMiOlsiREFTSEJPQVJEX0NPTlRFWFQiLCJEQVNIQk9BUkRfQ09OVEVYVF9UWVBFIiwiUkVMQVRJT05fTkFNRSIsIkVORFBPSU5UX1JFTEFUSU9OX05BTUUiLCJEQVNIQk9BUkRfVE9fRUxFTUVOVF9SRUxBVElPTiIsIkNBTENVTEFUSU9OX1JVTEVTIiwiT2JqZWN0IiwiZnJlZXplIiwic3VtIiwiYXZlcmFnZSIsIm1heCIsIm1pbiIsInJlZmVyZW5jZSIsIkdFT0dSQVBISUNfVFlQRVMiLCJuYW1lIiwidHlwZSIsIkNvbnRleHRHZW9ncmFwaGljU2VydmljZSIsImNvbnN0YW50cyIsIlNJVEVfVFlQRSIsIkJVSUxESU5HX1RZUEUiLCJGTE9PUl9UWVBFIiwiWk9ORV9UWVBFIiwiUk9PTV9UWVBFIiwiRVFVSVBNRU5UX1RZUEUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBR0EsTUFBTUEsb0JBQW9CLG9CQUExQjtBQUNBLE1BQU1DLHlCQUF5QixrQkFBL0I7QUFDQSxNQUFNQyxnQkFBZ0IsY0FBdEI7QUFDQSxNQUFNQyx5QkFBeUIsaUJBQS9CO0FBQ0EsTUFBTUMsZ0NBQWdDLGNBQXRDOztBQUVBLE1BQU1DLG9CQUFvQkMsT0FBT0MsTUFBUCxDQUFjO0FBQ3RDQyxPQUFLLENBRGlDO0FBRXRDQyxXQUFTLENBRjZCO0FBR3RDQyxPQUFLLENBSGlDO0FBSXRDQyxPQUFLLENBSmlDO0FBS3RDQyxhQUFXO0FBTDJCLENBQWQsQ0FBMUI7O0FBUUE7QUFDQSxNQUFNQyxtQkFBbUIsQ0FBQztBQUN0QkMsUUFBTSxNQURnQjtBQUV0QkMsUUFBTUMsa0RBQXlCQyxTQUF6QixDQUFtQ0M7QUFGbkIsQ0FBRCxFQUl2QjtBQUNFSixRQUFNLFVBRFI7QUFFRUMsUUFBTUMsa0RBQXlCQyxTQUF6QixDQUFtQ0U7QUFGM0MsQ0FKdUIsRUFRdkI7QUFDRUwsUUFBTSxPQURSO0FBRUVDLFFBQU1DLGtEQUF5QkMsU0FBekIsQ0FBbUNHO0FBRjNDLENBUnVCLEVBWXZCO0FBQ0VOLFFBQU0sTUFEUjtBQUVFQyxRQUFNQyxrREFBeUJDLFNBQXpCLENBQW1DSTtBQUYzQyxDQVp1QixFQWdCdkI7QUFDRVAsUUFBTSxNQURSO0FBRUVDLFFBQU1DLGtEQUF5QkMsU0FBekIsQ0FBbUNLO0FBRjNDLENBaEJ1QixFQW9CdkI7QUFDRVIsUUFBTSxXQURSO0FBRUVDLFFBQU1DLGtEQUF5QkMsU0FBekIsQ0FBbUNNO0FBRjNDLENBcEJ1QixDQUF6Qjs7UUErQkV2QixpQixHQUFBQSxpQjtRQUNBQyxzQixHQUFBQSxzQjtRQUNBQyxhLEdBQUFBLGE7UUFDQVcsZ0IsR0FBQUEsZ0I7UUFDQVYsc0IsR0FBQUEsc0I7UUFDQUMsNkIsR0FBQUEsNkI7UUFDQUMsaUIsR0FBQUEsaUIiLCJmaWxlIjoiZ2xvYmFsVmFyaWFibGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnRleHRHZW9ncmFwaGljU2VydmljZSBmcm9tIFwic3BpbmFsLWVudi12aWV3ZXItY29udGV4dC1nZW9ncmFwaGljLXNlcnZpY2VcIjtcblxuXG5jb25zdCBEQVNIQk9BUkRfQ09OVEVYVCA9IFwiRGFzaGJvYXJkIFN0YW5kYXJkXCI7XG5jb25zdCBEQVNIQk9BUkRfQ09OVEVYVF9UWVBFID0gXCJkYXNoYm9hcmRDb250ZXh0XCI7XG5jb25zdCBSRUxBVElPTl9OQU1FID0gXCJoYXNEYXNoQm9hcmRcIjtcbmNvbnN0IEVORFBPSU5UX1JFTEFUSU9OX05BTUUgPSBcImhhc0Rhc2hFbmRwb2ludFwiO1xuY29uc3QgREFTSEJPQVJEX1RPX0VMRU1FTlRfUkVMQVRJT04gPSBcImhhc0Nvbm5lY3RlZFwiO1xuXG5jb25zdCBDQUxDVUxBVElPTl9SVUxFUyA9IE9iamVjdC5mcmVlemUoe1xuICBzdW06IDAsXG4gIGF2ZXJhZ2U6IDEsXG4gIG1heDogMixcbiAgbWluOiAzLFxuICByZWZlcmVuY2U6IDRcbn0pXG5cbi8vIEFmZmljaMOpIHBhciBvcmRyZSAow6AgbmUgcGFzIE1vZGlmaWVyLCBvdSBham91dGVyIGwnZWxlbWVudCDDoCBsYSBmaW4pXG5jb25zdCBHRU9HUkFQSElDX1RZUEVTID0gW3tcbiAgICBuYW1lOiBcIlNpdGVcIixcbiAgICB0eXBlOiBDb250ZXh0R2VvZ3JhcGhpY1NlcnZpY2UuY29uc3RhbnRzLlNJVEVfVFlQRVxuICB9LFxuICB7XG4gICAgbmFtZTogXCJCdWlsZGluZ1wiLFxuICAgIHR5cGU6IENvbnRleHRHZW9ncmFwaGljU2VydmljZS5jb25zdGFudHMuQlVJTERJTkdfVFlQRVxuICB9LFxuICB7XG4gICAgbmFtZTogXCJGbG9vclwiLFxuICAgIHR5cGU6IENvbnRleHRHZW9ncmFwaGljU2VydmljZS5jb25zdGFudHMuRkxPT1JfVFlQRVxuICB9LFxuICB7XG4gICAgbmFtZTogXCJab25lXCIsXG4gICAgdHlwZTogQ29udGV4dEdlb2dyYXBoaWNTZXJ2aWNlLmNvbnN0YW50cy5aT05FX1RZUEVcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiUm9vbVwiLFxuICAgIHR5cGU6IENvbnRleHRHZW9ncmFwaGljU2VydmljZS5jb25zdGFudHMuUk9PTV9UWVBFXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkVxdWlwbWVudFwiLFxuICAgIHR5cGU6IENvbnRleHRHZW9ncmFwaGljU2VydmljZS5jb25zdGFudHMuRVFVSVBNRU5UX1RZUEVcbiAgfVxuXG5dXG5cblxuXG5cbmV4cG9ydCB7XG4gIERBU0hCT0FSRF9DT05URVhULFxuICBEQVNIQk9BUkRfQ09OVEVYVF9UWVBFLFxuICBSRUxBVElPTl9OQU1FLFxuICBHRU9HUkFQSElDX1RZUEVTLFxuICBFTkRQT0lOVF9SRUxBVElPTl9OQU1FLFxuICBEQVNIQk9BUkRfVE9fRUxFTUVOVF9SRUxBVElPTixcbiAgQ0FMQ1VMQVRJT05fUlVMRVNcbn0iXX0=","import ContextGeographicService from \"spinal-env-viewer-context-geographic-service\";\n\n\nconst DASHBOARD_CONTEXT = \"Dashboard Standard\";\nconst DASHBOARD_CONTEXT_TYPE = \"dashboardContext\";\nconst RELATION_NAME = \"hasDashBoard\";\nconst ENDPOINT_RELATION_NAME = \"hasDashEndpoint\";\nconst DASHBOARD_TO_ELEMENT_RELATION = \"hasConnected\";\n\nconst CALCULATION_RULES = Object.freeze({\n  sum: 0,\n  average: 1,\n  max: 2,\n  min: 3,\n  reference: 4\n})\n\n// Affiché par ordre (à ne pas Modifier, ou ajouter l'element à la fin)\nconst GEOGRAPHIC_TYPES = [{\n    name: \"Site\",\n    type: ContextGeographicService.constants.SITE_TYPE\n  },\n  {\n    name: \"Building\",\n    type: ContextGeographicService.constants.BUILDING_TYPE\n  },\n  {\n    name: \"Floor\",\n    type: ContextGeographicService.constants.FLOOR_TYPE\n  },\n  {\n    name: \"Zone\",\n    type: ContextGeographicService.constants.ZONE_TYPE\n  },\n  {\n    name: \"Room\",\n    type: ContextGeographicService.constants.ROOM_TYPE\n  },\n  {\n    name: \"Equipment\",\n    type: ContextGeographicService.constants.EQUIPMENT_TYPE\n  }\n\n]\n\n\n\n\nexport {\n  DASHBOARD_CONTEXT,\n  DASHBOARD_CONTEXT_TYPE,\n  RELATION_NAME,\n  GEOGRAPHIC_TYPES,\n  ENDPOINT_RELATION_NAME,\n  DASHBOARD_TO_ELEMENT_RELATION,\n  CALCULATION_RULES\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BIMElement = exports.AbstractElement = undefined;\n\nvar _AbstractElement = require(\"./AbstractElement\");\n\nvar _AbstractElement2 = _interopRequireDefault(_AbstractElement);\n\nvar _BIMElement = require(\"./BIMElement\");\n\nvar _BIMElement2 = _interopRequireDefault(_BIMElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nexports.AbstractElement = _AbstractElement2.default;\nexports.BIMElement = _BIMElement2.default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJzcGluYWxDb3JlIiwicmVxdWlyZSIsImdsb2JhbFR5cGUiLCJ3aW5kb3ciLCJnbG9iYWwiLCJBYnN0cmFjdEVsZW1lbnQiLCJCSU1FbGVtZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBS0E7Ozs7QUFDQTs7Ozs7O0FBTkEsTUFBTUEsYUFBYUMsUUFBUSx5QkFBUixDQUFuQjtBQUNBLE1BQU1DLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixXQUFsQixHQUFnQ0MsTUFBaEMsR0FBeUNELE1BQTVEOztRQVFFRSxlLEdBQUFBLHlCO1FBQ0FDLFUsR0FBQUEsb0IiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cblxuXG5pbXBvcnQgQWJzdHJhY3RFbGVtZW50IGZyb20gJy4vQWJzdHJhY3RFbGVtZW50JztcbmltcG9ydCBCSU1FbGVtZW50IGZyb20gJy4vQklNRWxlbWVudCc7XG5cbmV4cG9ydCB7XG4gIEFic3RyYWN0RWxlbWVudCxcbiAgQklNRWxlbWVudFxufSJdfQ==","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\n\n\nimport AbstractElement from './AbstractElement';\nimport BIMElement from './BIMElement';\n\nexport {\n  AbstractElement,\n  BIMElement\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Utilities = require(\"./Utilities\");\n\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass AbstractElement extends globalType.Model {\n  constructor(_name, _type, name = \"AbstractElement\") {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        name: _name,\n        id: _Utilities.Utilities.guid(name),\n        type: _type\n      });\n    }\n  }\n\n  setName(_name) {\n    this.name.set(_name);\n  }\n\n}\n\nexports.default = AbstractElement;\nspinalCore.register_models([AbstractElement]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9BYnN0cmFjdEVsZW1lbnQuanMiXSwibmFtZXMiOlsic3BpbmFsQ29yZSIsInJlcXVpcmUiLCJnbG9iYWxUeXBlIiwid2luZG93IiwiZ2xvYmFsIiwiQWJzdHJhY3RFbGVtZW50IiwiTW9kZWwiLCJjb25zdHJ1Y3RvciIsIl9uYW1lIiwiX3R5cGUiLCJuYW1lIiwiRmlsZVN5c3RlbSIsIl9zaWdfc2VydmVyIiwiYWRkX2F0dHIiLCJpZCIsIlV0aWxpdGllcyIsImd1aWQiLCJ0eXBlIiwic2V0TmFtZSIsInNldCIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0E7O0FBSEEsTUFBTUEsYUFBYUMsUUFBUSx5QkFBUixDQUFuQjtBQUNBLE1BQU1DLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixXQUFsQixHQUFnQ0MsTUFBaEMsR0FBeUNELE1BQTVEOztBQU9lLE1BQU1FLGVBQU4sU0FBOEJILFdBQVdJLEtBQXpDLENBQStDO0FBQzVEQyxjQUFZQyxLQUFaLEVBQW1CQyxLQUFuQixFQUEwQkMsT0FBTyxpQkFBakMsRUFBb0Q7QUFDbEQ7QUFDQSxRQUFJQyxXQUFXQyxXQUFmLEVBQTRCO0FBQzFCLFdBQUtDLFFBQUwsQ0FBYztBQUNaSCxjQUFNRixLQURNO0FBRVpNLFlBQUlDLHFCQUFVQyxJQUFWLENBQWVOLElBQWYsQ0FGUTtBQUdaTyxjQUFNUjtBQUhNLE9BQWQ7QUFLRDtBQUNGOztBQUVEUyxVQUFRVixLQUFSLEVBQWU7QUFDYixTQUFLRSxJQUFMLENBQVVTLEdBQVYsQ0FBY1gsS0FBZDtBQUNEOztBQWQyRDs7a0JBQXpDSCxlO0FBa0JyQkwsV0FBV29CLGVBQVgsQ0FBMkIsQ0FBQ2YsZUFBRCxDQUEzQiIsImZpbGUiOiJBYnN0cmFjdEVsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cbmltcG9ydCB7XG4gIFV0aWxpdGllc1xufSBmcm9tIFwiLi9VdGlsaXRpZXNcIjtcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBYnN0cmFjdEVsZW1lbnQgZXh0ZW5kcyBnbG9iYWxUeXBlLk1vZGVsIHtcbiAgY29uc3RydWN0b3IoX25hbWUsIF90eXBlLCBuYW1lID0gXCJBYnN0cmFjdEVsZW1lbnRcIikge1xuICAgIHN1cGVyKCk7XG4gICAgaWYgKEZpbGVTeXN0ZW0uX3NpZ19zZXJ2ZXIpIHtcbiAgICAgIHRoaXMuYWRkX2F0dHIoe1xuICAgICAgICBuYW1lOiBfbmFtZSxcbiAgICAgICAgaWQ6IFV0aWxpdGllcy5ndWlkKG5hbWUpLFxuICAgICAgICB0eXBlOiBfdHlwZVxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBzZXROYW1lKF9uYW1lKSB7XG4gICAgdGhpcy5uYW1lLnNldChfbmFtZSlcbiAgfVxuXG59XG5cbnNwaW5hbENvcmUucmVnaXN0ZXJfbW9kZWxzKFtBYnN0cmFjdEVsZW1lbnRdKSJdfQ==","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nimport {\n  Utilities\n} from \"./Utilities\";\n\n\nexport default class AbstractElement extends globalType.Model {\n  constructor(_name, _type, name = \"AbstractElement\") {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        name: _name,\n        id: Utilities.guid(name),\n        type: _type\n      })\n    }\n  }\n\n  setName(_name) {\n    this.name.set(_name)\n  }\n\n}\n\nspinalCore.register_models([AbstractElement])","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nlet Utilities = {};\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nUtilities.getViewer = function () {\n  return new Promise((resolve, reject) => {\n    if (globalType.v === \"undefined\") {\n      let interval = setInterval(() => {\n        if (globalType.v !== \"undefined\") {\n          resolve(globalType.v);\n          clearInterval(interval);\n        }\n      }, 500);\n    } else resolve(globalType.v);\n  });\n};\n\nUtilities.promiseGetProperties = function (_dbId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.getProperties(_dbId, resolve);\n    });\n  });\n};\n\nUtilities.promiseGetExternalIdMapping = function (_externalId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.model.getExternalIdMapping(res => {\n        resolve(res[_externalId]);\n      });\n    });\n  });\n};\n\n// Utilities.promiseLoad = function(_ptr) {\n//   return new Promise(resolve => {\n//     _ptr.load(resolve);\n//   });\n// }\nUtilities.promiseLoad = function (_ptr) {\n  if (_ptr instanceof globalType.Ptr && _ptr.data.value != 0 && typeof FileSystem._objects[_ptr.data.value] != \"undefined\") return Promise.resolve(FileSystem._objects[_ptr.data.value]);else return new Promise(resolve => {\n    _ptr.load(resolve);\n  });\n};\n\nUtilities.getExternalId = (() => {\n  var _ref = _asyncToGenerator(function* (_dbId) {\n    let properties = yield Utilities.promiseGetProperties(_dbId);\n    return properties.externalId;\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();\n\nUtilities.getDbIdByExternalId = (() => {\n  var _ref2 = _asyncToGenerator(function* (_externalId) {\n    let dbid = yield Utilities.promiseGetExternalIdMapping(_externalId);\n    return dbid;\n  });\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n})();\n\nUtilities.arraysEqual = function (arrayA, arrayB) {\n  if (arrayA === arrayB) return true;\n  if (arrayA == null || arrayB == null) return false;\n  if (arrayA.length != arrayB.length) return false;\n  arrayA.sort();\n  arrayB.sort();\n  for (var i = 0; i < arrayA.length; ++i) {\n    if (arrayA[i] !== arrayB[i]) return false;\n  }\n  return true;\n};\n\nUtilities.containsLstById = function (_list, _node) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.id.get() == _node.id.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLstModel = function (_list, _model) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _model.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLst = function (_list, _element) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _element) return true;\n  }\n  return false;\n};\n\nUtilities.include = function (arr, obj) {\n  return arr.indexOf(obj) != -1;\n};\n\nUtilities.getIndex = function (arr, obj) {\n  return arr.indexOf(obj);\n};\n\nUtilities.getIds = function (array) {\n  let res = [];\n  for (let index = 0; index < array.length; index++) {\n    res.push(array[index].id.get());\n  }\n  return res;\n};\n// Utilities.addNotExisting = function(arr, obj) {\n//   return (arr.indexOf(obj));\n// }\n\nUtilities.concat = function (listA, listB) {\n  let res = [];\n  for (let index = 0; index < listA.length; index++) {\n    res.push(listA[index]);\n  }\n  for (let index = 0; index < listB.length; index++) {\n    res.push(listB[index]);\n  }\n  return res;\n};\n\nUtilities.allButMeById = function (_list, _node) {\n  let res = [];\n  for (let index = 0; index < _list.length; index++) {\n    const node = _list[index];\n    if (node.id.get() != _node.id.get()) {\n      res.push(node);\n    }\n    return res;\n  }\n};\n\nUtilities.guid = function (_constructor) {\n  return _constructor + \"-\" + this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4() + this.s4() + \"-\" + Date.now().toString(16);\n};\n\nUtilities.s4 = function () {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\nUtilities.putOnTopLst = function (lst, elementB) {\n  lst.remove_ref(elementB);\n  lst.unshift(elementB);\n  // for (let index = 0; index < lst.length; index++) {\n  //   const element = lst[index];\n  //   if (element.id.get() === elementB.id.get()) {\n  //     lst.remove(index);\n  //   }\n\n  // }\n};\n\nexports.Utilities = Utilities;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","let Utilities = {};\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nUtilities.getViewer = function() {\n  return new Promise((resolve, reject) => {\n    if (globalType.v === \"undefined\") {\n      let interval = setInterval(() => {\n        if (globalType.v !== \"undefined\") {\n          resolve(globalType.v);\n          clearInterval(interval);\n        }\n      }, 500);\n    } else resolve(globalType.v);\n  });\n};\n\nUtilities.promiseGetProperties = function(_dbId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.getProperties(_dbId, resolve);\n    });\n  });\n};\n\nUtilities.promiseGetExternalIdMapping = function(_externalId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.model.getExternalIdMapping(res => {\n        resolve(res[_externalId]);\n      });\n    });\n  });\n\n}\n\n\n// Utilities.promiseLoad = function(_ptr) {\n//   return new Promise(resolve => {\n//     _ptr.load(resolve);\n//   });\n// }\nUtilities.promiseLoad = function(_ptr) {\n  if (\n    _ptr instanceof globalType.Ptr &&\n    _ptr.data.value != 0 &&\n    typeof FileSystem._objects[_ptr.data.value] != \"undefined\"\n  )\n    return Promise.resolve(FileSystem._objects[_ptr.data.value]);\n  else\n    return new Promise(resolve => {\n      _ptr.load(resolve);\n    });\n};\n\n\n\n\nUtilities.getExternalId = async function(_dbId) {\n  let properties = await Utilities.promiseGetProperties(_dbId);\n  return properties.externalId;\n};\n\nUtilities.getDbIdByExternalId = async function(_externalId) {\n  let dbid = await Utilities.promiseGetExternalIdMapping(_externalId);\n  return dbid;\n};\n\nUtilities.arraysEqual = function(arrayA, arrayB) {\n  if (arrayA === arrayB) return true;\n  if (arrayA == null || arrayB == null) return false;\n  if (arrayA.length != arrayB.length) return false;\n  arrayA.sort();\n  arrayB.sort();\n  for (var i = 0; i < arrayA.length; ++i) {\n    if (arrayA[i] !== arrayB[i]) return false;\n  }\n  return true;\n};\n\nUtilities.containsLstById = function(_list, _node) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.id.get() == _node.id.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLstModel = function(_list, _model) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _model.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLst = function(_list, _element) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _element) return true;\n  }\n  return false;\n};\n\nUtilities.include = function(arr, obj) {\n  return arr.indexOf(obj) != -1;\n};\n\nUtilities.getIndex = function(arr, obj) {\n  return arr.indexOf(obj);\n};\n\nUtilities.getIds = function(array) {\n  let res = [];\n  for (let index = 0; index < array.length; index++) {\n    res.push(array[index].id.get());\n  }\n  return res;\n};\n// Utilities.addNotExisting = function(arr, obj) {\n//   return (arr.indexOf(obj));\n// }\n\nUtilities.concat = function(listA, listB) {\n  let res = [];\n  for (let index = 0; index < listA.length; index++) {\n    res.push(listA[index]);\n  }\n  for (let index = 0; index < listB.length; index++) {\n    res.push(listB[index]);\n  }\n  return res;\n};\n\nUtilities.allButMeById = function(_list, _node) {\n  let res = [];\n  for (let index = 0; index < _list.length; index++) {\n    const node = _list[index];\n    if (node.id.get() != _node.id.get()) {\n      res.push(node);\n    }\n    return res;\n  }\n};\n\nUtilities.guid = function(_constructor) {\n  return (\n    _constructor +\n    \"-\" +\n    this.s4() +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    this.s4() +\n    this.s4() +\n    \"-\" +\n    Date.now().toString(16)\n  );\n};\n\nUtilities.s4 = function() {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n};\n\nUtilities.putOnTopLst = function(lst, elementB) {\n  lst.remove_ref(elementB);\n  lst.unshift(elementB);\n  // for (let index = 0; index < lst.length; index++) {\n  //   const element = lst[index];\n  //   if (element.id.get() === elementB.id.get()) {\n  //     lst.remove(index);\n  //   }\n\n  // }\n};\n\nexport {\n  Utilities\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _spinalModelsBimobject = require(\"spinal-models-bimobject\");\n\nvar _spinalModelsBimobject2 = _interopRequireDefault(_spinalModelsBimobject);\n\nvar _Utilities = require(\"./Utilities\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass BIMElement extends _spinalModelsBimobject2.default {\n  constructor(_id, _name, _type, name = \"BIMElement\") {\n    super(_id, _name, 0);\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        type: _type || \"BimObject\",\n        externalId: \"\"\n      });\n    }\n  }\n\n  initExternalId() {\n    _Utilities.Utilities.getExternalId(this.id.get()).then(_externalId => {\n      this.externalId.set(_externalId);\n    });\n  }\n\n  initExternalIdAsync() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let _externalId = yield _Utilities.Utilities.getExternalId(_this.id.get());\n      _this.externalId.set(_externalId);\n    })();\n  }\n\n  setName(_name) {\n    this.name.set(_name);\n  }\n\n  toIfc() {\n    return `${this.constructor.name}(${this.id.get()},${this.name.get()});`;\n  }\n\n}\n\nexports.default = BIMElement;\nspinalCore.register_models([BIMElement]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9CSU1FbGVtZW50LmpzIl0sIm5hbWVzIjpbInNwaW5hbENvcmUiLCJyZXF1aXJlIiwiZ2xvYmFsVHlwZSIsIndpbmRvdyIsImdsb2JhbCIsIkJJTUVsZW1lbnQiLCJTcGluYWxCSU1PYmplY3QiLCJjb25zdHJ1Y3RvciIsIl9pZCIsIl9uYW1lIiwiX3R5cGUiLCJuYW1lIiwiRmlsZVN5c3RlbSIsIl9zaWdfc2VydmVyIiwiYWRkX2F0dHIiLCJ0eXBlIiwiZXh0ZXJuYWxJZCIsImluaXRFeHRlcm5hbElkIiwiVXRpbGl0aWVzIiwiZ2V0RXh0ZXJuYWxJZCIsImlkIiwiZ2V0IiwidGhlbiIsIl9leHRlcm5hbElkIiwic2V0IiwiaW5pdEV4dGVybmFsSWRBc3luYyIsInNldE5hbWUiLCJ0b0lmYyIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0E7Ozs7QUFFQTs7Ozs7O0FBTEEsTUFBTUEsYUFBYUMsUUFBUSx5QkFBUixDQUFuQjtBQUNBLE1BQU1DLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixXQUFsQixHQUFnQ0MsTUFBaEMsR0FBeUNELE1BQTVEOztBQVFlLE1BQU1FLFVBQU4sU0FBeUJDLCtCQUF6QixDQUF5QztBQUN0REMsY0FBWUMsR0FBWixFQUFpQkMsS0FBakIsRUFBd0JDLEtBQXhCLEVBQStCQyxPQUFPLFlBQXRDLEVBQW9EO0FBQ2xELFVBQU1ILEdBQU4sRUFBV0MsS0FBWCxFQUFrQixDQUFsQjtBQUNBLFFBQUlHLFdBQVdDLFdBQWYsRUFBNEI7QUFDMUIsV0FBS0MsUUFBTCxDQUFjO0FBQ1pDLGNBQU1MLFNBQVMsV0FESDtBQUVaTSxvQkFBWTtBQUZBLE9BQWQ7QUFJRDtBQUVGOztBQUVEQyxtQkFBaUI7QUFDZkMseUJBQVVDLGFBQVYsQ0FBd0IsS0FBS0MsRUFBTCxDQUFRQyxHQUFSLEVBQXhCLEVBQXVDQyxJQUF2QyxDQUE0Q0MsZUFBZTtBQUN6RCxXQUFLUCxVQUFMLENBQWdCUSxHQUFoQixDQUFvQkQsV0FBcEI7QUFDRCxLQUZEO0FBR0Q7O0FBRUtFLHFCQUFOLEdBQTRCO0FBQUE7O0FBQUE7QUFDMUIsVUFBSUYsY0FBYyxNQUFNTCxxQkFBVUMsYUFBVixDQUF3QixNQUFLQyxFQUFMLENBQVFDLEdBQVIsRUFBeEIsQ0FBeEI7QUFDQSxZQUFLTCxVQUFMLENBQWdCUSxHQUFoQixDQUFvQkQsV0FBcEI7QUFGMEI7QUFHM0I7O0FBSURHLFVBQVFqQixLQUFSLEVBQWU7QUFDYixTQUFLRSxJQUFMLENBQVVhLEdBQVYsQ0FBY2YsS0FBZDtBQUNEOztBQUVEa0IsVUFBUTtBQUNOLFdBQVEsR0FBRSxLQUFLcEIsV0FBTCxDQUFpQkksSUFBSyxJQUFHLEtBQUtTLEVBQUwsQ0FBUUMsR0FBUixFQUFjLElBQUcsS0FBS1YsSUFBTCxDQUFVVSxHQUFWLEVBQWdCLElBQXBFO0FBQ0Q7O0FBL0JxRDs7a0JBQW5DaEIsVTtBQW1DckJMLFdBQVc0QixlQUFYLENBQTJCLENBQUN2QixVQUFELENBQTNCIiwiZmlsZSI6IkJJTUVsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cbmltcG9ydCBTcGluYWxCSU1PYmplY3QgZnJvbSBcInNwaW5hbC1tb2RlbHMtYmltb2JqZWN0XCI7XG5cbmltcG9ydCB7XG4gIFV0aWxpdGllc1xufSBmcm9tIFwiLi9VdGlsaXRpZXNcIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCSU1FbGVtZW50IGV4dGVuZHMgU3BpbmFsQklNT2JqZWN0IHtcbiAgY29uc3RydWN0b3IoX2lkLCBfbmFtZSwgX3R5cGUsIG5hbWUgPSBcIkJJTUVsZW1lbnRcIikge1xuICAgIHN1cGVyKF9pZCwgX25hbWUsIDApO1xuICAgIGlmIChGaWxlU3lzdGVtLl9zaWdfc2VydmVyKSB7XG4gICAgICB0aGlzLmFkZF9hdHRyKHtcbiAgICAgICAgdHlwZTogX3R5cGUgfHwgXCJCaW1PYmplY3RcIixcbiAgICAgICAgZXh0ZXJuYWxJZDogXCJcIlxuICAgICAgfSk7XG4gICAgfVxuXG4gIH1cblxuICBpbml0RXh0ZXJuYWxJZCgpIHtcbiAgICBVdGlsaXRpZXMuZ2V0RXh0ZXJuYWxJZCh0aGlzLmlkLmdldCgpKS50aGVuKF9leHRlcm5hbElkID0+IHtcbiAgICAgIHRoaXMuZXh0ZXJuYWxJZC5zZXQoX2V4dGVybmFsSWQpXG4gICAgfSlcbiAgfVxuXG4gIGFzeW5jIGluaXRFeHRlcm5hbElkQXN5bmMoKSB7XG4gICAgbGV0IF9leHRlcm5hbElkID0gYXdhaXQgVXRpbGl0aWVzLmdldEV4dGVybmFsSWQodGhpcy5pZC5nZXQoKSlcbiAgICB0aGlzLmV4dGVybmFsSWQuc2V0KF9leHRlcm5hbElkKVxuICB9XG5cblxuXG4gIHNldE5hbWUoX25hbWUpIHtcbiAgICB0aGlzLm5hbWUuc2V0KF9uYW1lKVxuICB9XG5cbiAgdG9JZmMoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0oJHt0aGlzLmlkLmdldCgpfSwke3RoaXMubmFtZS5nZXQoKX0pO2BcbiAgfVxuXG59XG5cbnNwaW5hbENvcmUucmVnaXN0ZXJfbW9kZWxzKFtCSU1FbGVtZW50XSlcbiJdfQ==","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nimport SpinalBIMObject from \"spinal-models-bimobject\";\n\nimport {\n  Utilities\n} from \"./Utilities\"\n\nexport default class BIMElement extends SpinalBIMObject {\n  constructor(_id, _name, _type, name = \"BIMElement\") {\n    super(_id, _name, 0);\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        type: _type || \"BimObject\",\n        externalId: \"\"\n      });\n    }\n\n  }\n\n  initExternalId() {\n    Utilities.getExternalId(this.id.get()).then(_externalId => {\n      this.externalId.set(_externalId)\n    })\n  }\n\n  async initExternalIdAsync() {\n    let _externalId = await Utilities.getExternalId(this.id.get())\n    this.externalId.set(_externalId)\n  }\n\n\n\n  setName(_name) {\n    this.name.set(_name)\n  }\n\n  toIfc() {\n    return `${this.constructor.name}(${this.id.get()},${this.name.get()});`\n  }\n\n}\n\nspinalCore.register_models([BIMElement])\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\nexports.default = SpinalBIMObject;\n\nspinalCore.register_models([SpinalBIMObject]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL0JJTU9iamVjdC5qcyJdLCJuYW1lcyI6WyJzcGluYWxDb3JlIiwicmVxdWlyZSIsImdsb2JhbFR5cGUiLCJ3aW5kb3ciLCJnbG9iYWwiLCJTcGluYWxCSU1PYmplY3QiLCJNb2RlbCIsImNvbnN0cnVjdG9yIiwiX2lkIiwiX25hbWUiLCJGaWxlU3lzdGVtIiwiX3NpZ19zZXJ2ZXIiLCJhZGRfYXR0ciIsImlkIiwibmFtZSIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxhQUFhQyxRQUFRLHlCQUFSLENBQW5CO0FBQ0EsTUFBTUMsYUFBYSxPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLEdBQWdDQyxNQUFoQyxHQUF5Q0QsTUFBNUQ7O0FBS0EsTUFBTUUsZUFBTixTQUE4QkgsV0FBV0ksS0FBekMsQ0FBK0M7QUFDN0NDLGNBQVlDLEdBQVosRUFBaUJDLEtBQWpCLEVBQXdCO0FBQ3RCO0FBQ0EsUUFBSUMsV0FBV0MsV0FBZixFQUE0QjtBQUMxQixXQUFLQyxRQUFMLENBQWM7QUFDWkMsWUFBSUwsR0FEUTtBQUVaTSxjQUFNTDtBQUZNLE9BQWQ7QUFJRDtBQUNGO0FBVDRDOztrQkFhaENKLGU7O0FBQ2ZMLFdBQVdlLGVBQVgsQ0FBMkIsQ0FBQ1YsZUFBRCxDQUEzQiIsImZpbGUiOiJCSU1PYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cblxuXG5cbmNsYXNzIFNwaW5hbEJJTU9iamVjdCBleHRlbmRzIGdsb2JhbFR5cGUuTW9kZWwge1xuICBjb25zdHJ1Y3RvcihfaWQsIF9uYW1lKSB7XG4gICAgc3VwZXIoKTtcbiAgICBpZiAoRmlsZVN5c3RlbS5fc2lnX3NlcnZlcikge1xuICAgICAgdGhpcy5hZGRfYXR0cih7XG4gICAgICAgIGlkOiBfaWQsXG4gICAgICAgIG5hbWU6IF9uYW1lXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBTcGluYWxCSU1PYmplY3Q7XG5zcGluYWxDb3JlLnJlZ2lzdGVyX21vZGVscyhbU3BpbmFsQklNT2JqZWN0XSk7Il19","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\n\n\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\n\nexport default SpinalBIMObject;\nspinalCore.register_models([SpinalBIMObject]);","const {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\nconst {\n  spinalPanelManagerService\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nimport ContextGeographicService from \"spinal-env-viewer-context-geographic-service\";\nimport {\n  dashboardService\n} from \"spinal-env-viewer-dashboard-standard-service\";\n\n\nconst CONTEXT_TYPE = ContextGeographicService.constants.CONTEXT_TYPE;\n\nlet hasDash = false;\n\nclass LinkWithDashBoard extends SpinalContextApp {\n  constructor() {\n    super(\"Link to a Dashboard\", \"Link to a Dashboard\", {\n      icon: \"link\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\"\n    });\n\n  }\n\n  isShown(option) {\n    if (option.context.type.get() === CONTEXT_TYPE && option.selectedNode\n      .type\n      .get() !== CONTEXT_TYPE) {\n      return dashboardService.hasDashBoard(option.selectedNode.id.get()).then(\n        el => {\n          console.log(hasDash, el);\n          hasDash = el;\n          if (el) {\n            this.label = \"unlink to dashboard\";\n            this.buttonCfg.icon = \"link_off\";\n          } else {\n            this.label = \"Link to a Dashboard\";\n            this.buttonCfg.icon = \"link\";\n          }\n\n          return el;\n        })\n    } else {\n      return Promise.resolve(-1);\n    }\n\n\n  }\n\n  action(option) {\n    if (hasDash) {\n      dashboardService.unLinkToDashBoard(option.selectedNode.id.get());\n    } else {\n      let dialogParams = {\n        context: option.context,\n        selectedNode: option.selectedNode\n      }\n      spinalPanelManagerService.openPanel('linkToDashBoardDialog',\n        dialogParams);\n    }\n\n  }\n}\n\nmodule.exports = LinkWithDashBoard;","const {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\nconst {\n  spinalPanelManagerService\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nimport ContextGeographicService from \"spinal-env-viewer-context-geographic-service\";\n\nconst CONTEXT_TYPE = ContextGeographicService.constants.CONTEXT_TYPE;\n\n\nclass LinkAutoWithDashboard extends SpinalContextApp {\n  constructor() {\n    super(\"Automate dashboard linking\", \"automate dashboard binding\", {\n      icon: \"transform\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\"\n    });\n  }\n\n  isShown(option) {\n    if (option.context.type.get() === CONTEXT_TYPE)\n      return Promise.resolve(true);\n    return Promise.resolve(-1);\n  }\n\n  action(option) {\n    spinalPanelManagerService.openPanel('linkAutoWithDashboardDialog', option)\n  }\n}\n\nmodule.exports = LinkAutoWithDashboard;","const {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\n\nconst {\n  spinalPanelManagerService\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\n\nclass CreateDashboardContext extends SpinalContextApp {\n  constructor() {\n    super(\"create dashboard Context\", \"create dashboard Context\", {\n      icon: \"pie_chart\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\"\n    });\n  }\n\n  isShown() {\n    return Promise.resolve(true);\n  }\n\n  action() {\n    spinalPanelManagerService.openPanel(\"dashboardContextCreation\", {});\n  }\n}\n\nmodule.exports = CreateDashboardContext;","const {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\n\nconst {\n  spinalPanelManagerService\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nimport {\n  dashboardService\n} from \"spinal-env-viewer-dashboard-standard-service\";\n\nimport geographicService from 'spinal-env-viewer-context-geographic-service';\n\nclass CalculateBtn extends SpinalContextApp {\n  constructor() {\n    super(\"Config calculation method\", \"configure the calculation method\", {\n      icon: \"functions\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\"\n    });\n  }\n\n  isShown(option) {\n    if (option.selectedNode.type.get() === geographicService.constants.EQUIPMENT_TYPE)\n      return Promise.resolve(true);\n\n    return dashboardService.hasDashBoard(option.selectedNode.id.get()).then(\n      el => {\n        if (el) return true;\n        return -1;\n      })\n\n  }\n\n  action(option) {\n    if (option.selectedNode.type.get() === geographicService.constants.EQUIPMENT_TYPE) {\n      spinalPanelManagerService.openPanel(\"bimObjectReference\", option.selectedNode);\n\n    } else {\n      spinalPanelManagerService.openPanel(\"dashBoardCalcul\", option.selectedNode);\n    }\n  }\n}\n\nmodule.exports = CalculateBtn;","import geographicService from \"spinal-env-viewer-context-geographic-service\";\n\nconst {\n  SpinalContextApp\n} = require(\"spinal-env-viewer-context-menu-service\");\n\nconst {\n  spinalPanelManagerService\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\n\nclass GlobalCalculateBtn extends SpinalContextApp {\n  constructor() {\n    super(\"configure calculation rules\", \"configure calculation rules\", {\n      icon: \"functions\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FF0000\"\n    })\n  }\n\n  isShown(option) {\n    if (option.selectedNode.type.get() === geographicService.constants.CONTEXT_TYPE)\n      return Promise.resolve(true);\n    return Promise.resolve(-1);\n  }\n\n  action(option) {\n    spinalPanelManagerService.openPanel(\"globalCalculDialog\", option.selectedNode);\n  }\n\n}\n\nmodule.exports = GlobalCalculateBtn;","import vue from \"vue\";\nimport dashBoardConfigDialog from \"../vue/dashBoardConfigDialog.vue\";\nimport linkToDashBoardDialog from '../vue/linkToDashBoardDialog.vue';\nimport linkAutoWithDashboardDialog from \"../vue/linkAutoWithDashboardDialog.vue\";\nimport createDashboardContextComponent from '../vue/createDashboardContext.vue';\nimport parameterDashboardCalculation from '../vue/CalculParams.vue';\nimport globalCalculDialog from \"../vue/globalCalcul.vue\";\nimport bimObjectReferenceDialog from \"../vue/bimObjectCalculReference.vue\";\n\nconst {\n  SpinalMountExtention\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\n\n/***** Resgister Dialog */\nvar dialogs = [{\n    name: \"dashBoardConfigDialog\",\n    vueMountComponent: vue.extend(dashBoardConfigDialog),\n    parentContainer: document.body\n  },\n  {\n    name: \"linkToDashBoardDialog\",\n    vueMountComponent: vue.extend(linkToDashBoardDialog),\n    parentContainer: document.body\n  },\n  {\n    name: \"linkAutoWithDashboardDialog\",\n    vueMountComponent: vue.extend(linkAutoWithDashboardDialog),\n    parentContainer: document.body\n  },\n  {\n    name: \"dashboardContextCreation\",\n    vueMountComponent: vue.extend(createDashboardContextComponent),\n    parentContainer: document.body\n  },\n  {\n    name: \"dashBoardCalcul\",\n    vueMountComponent: vue.extend(parameterDashboardCalculation),\n    parentContainer: document.body\n  }, {\n    name: \"globalCalculDialog\",\n    vueMountComponent: vue.extend(globalCalculDialog),\n    parentContainer: document.body\n  },\n  {\n    name: \"bimObjectReference\",\n    vueMountComponent: vue.extend(bimObjectReferenceDialog),\n    parentContainer: document.body\n  }\n];\n\nfor (let index = 0; index < dialogs.length; index++) {\n  SpinalMountExtention.mount(dialogs[index]);\n}","\n<template>\n  <div>\n    <md-dialog :md-active.sync=\"showDialog\"\n               @md-closed=\"closeDialog(false)\">\n      <md-dialog-title>{{title}}</md-dialog-title>\n      <md-dialog-content>\n        <md-field>\n          <label>DashBoard Name</label>\n          <md-input v-model=\"inputValue\"></md-input>\n        </md-field>\n\n        <br>\n        <span class=\"md-subheading\">Choose the type </span>\n        <br>\n\n        <div>\n\n          <md-radio class=\"md-primary\"\n                    v-model=\"absType\"\n                    v-for=\"(geo,index) in types\"\n                    :key=\"index\"\n                    :value=\"geo.type\"\n                    :disabled=\"!create\">{{geo.name}}</md-radio>\n        </div>\n\n        <br>\n        <span class=\"md-subheading\">check the types of endpoints to add </span>\n        <br>\n\n        <div class=\"md-layout\">\n\n          <md-checkbox class=\"md-layout-item md-size-45 md-primary\"\n                       v-for=\"(choice,index) in choices\"\n                       :key=\"index\"\n                       :disabled=\"choice.disabled\"\n                       v-model=\"choice.checked\">{{choice.name}}</md-checkbox>\n        </div>\n\n      </md-dialog-content>\n      <md-dialog-actions>\n        <md-button class=\"md-primary\"\n                   @click=\"closeDialog(false)\">Close</md-button>\n        <md-button class=\"md-primary\"\n                   @click=\"closeDialog(true)\"\n                   :disabled=\"!formIsValid()\">Save</md-button>\n      </md-dialog-actions>\n    </md-dialog>\n  </div>\n</template>\n\n<script>\nimport listChoices from \"../js/choice\";\nimport {\n  dashboardVariables,\n  dashboardService\n} from \"spinal-env-viewer-dashboard-standard-service\";\n\nexport default {\n  name: \"dialogComponent\",\n  props: [\"onFinised\"],\n  data() {\n    this.types = dashboardVariables.GEOGRAPHIC_TYPES.filter(\n      el => el.name !== \"Equipment\"\n    );\n\n    return {\n      title: \"\",\n      inputValue: \"\",\n      context: null,\n      selectedNode: null,\n      absType: dashboardVariables.GEOGRAPHIC_TYPES[0].type, // par default le premier element de la liste\n      create: true,\n      showDialog: true,\n      choices: Object.assign([], listChoices)\n    };\n  },\n  methods: {\n    opened(option) {\n      this.title = option.title;\n      this.selectedNode = option.selectedNode;\n      this.context = option.context;\n      this.inputValue = option.selectedNode\n        ? option.selectedNode.name.get()\n        : \"\";\n      this.create = option.toCreate;\n      console.log(\"this.create\", this.create);\n\n      this.absType = option.selectedNode\n        ? option.selectedNode.type.get()\n        : this.absType;\n      this.SelectCases(option.selectedNode);\n    },\n\n    removed(option) {\n      if (\n        option.closeResult &&\n        this.create &&\n        option.inputValue.trim().length > 0\n      ) {\n        dashboardService.createStandardDashBoard(\n          this.context.id.get(),\n          option.inputValue.trim(),\n          option.type,\n          this.choices.filter(el => el.checked)\n        );\n      } else if (\n        option.closeResult &&\n        option.inputValue.trim().length > 0 &&\n        !this.create\n      ) {\n        // dashboardService.editDashboard(\n        //   this.selectedNode.id.get(),\n        //   option.inputValue.trim(),\n        //   this.choices.filter(el => el.checked)\n        // );\n      }\n\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\")\n        this.onFinised({\n          closeResult,\n          inputValue: this.inputValue,\n          type: this.absType\n        });\n    },\n    SelectCases(selectedNode) {\n      this.choices.forEach(element => {\n        element.checked = true;\n      });\n\n      if (selectedNode) {\n        selectedNode.element.load().then(endpointElement => {\n          let sensor = endpointElement.sensor.get();\n\n          for (let i = 0; i < this.choices.length; i++) {\n            const element = this.choices[i];\n\n            let checkbox = sensor.find(el => el.name == element.name);\n\n            if (typeof checkbox === \"undefined\")\n              this.choices[i].checked = false;\n          }\n        });\n      }\n    },\n    formIsValid() {\n      let elementChecked = this.choices.filter(el => el.checked).length > 0;\n      let nameValid = this.inputValue && this.inputValue.trim().length > 0;\n\n      return elementChecked && nameValid;\n    }\n  }\n};\n</script>\n","module.exports = [\n\n  {\n    checked: true,\n    disabled: false,\n    name: \"Temperature\",\n    unit: \"°C\",\n    value: 0,\n    dataType: \"Double\",\n    type: \"Temperature\"\n  },\n  {\n    checked: true,\n    disabled: false,\n    name: \"Hygrometry\",\n    unit: \"%\",\n    value: 0,\n    dataType: \"Double\",\n    type: \"Hygrometry\"\n  },\n  {\n    checked: true,\n    disabled: false,\n    name: \"Power\",\n    unit: \"W\",\n    value: 0,\n    dataType: \"Double\",\n    type: \"Power\"\n  }, {\n    checked: true,\n    disabled: false,\n    name: \"Occupation\",\n    unit: \"-\",\n    value: false,\n    dataType: \"Boolean\",\n    type: \"Occupation\"\n  }, {\n    checked: true,\n    disabled: false,\n    name: \"Light\",\n    unit: \"%\",\n    value: 0,\n    dataType: \"Double\",\n    type: \"Light\"\n  },\n  {\n    checked: true,\n    disabled: false,\n    name: \"Alarm\",\n    unit: \"-\",\n    value: false,\n    dataType: \"Boolean\",\n    type: \"Alarm\"\n  }\n\n]","<template>\n  <div>\n    <md-dialog class=\"DashboardDialog\"\n               :md-active.sync=\"showDialog\"\n               @md-closed=\"closeDialog(false)\">\n      <md-dialog-title>Select a dashboard To link</md-dialog-title>\n      <md-dialog-content>\n\n        <div v-if=\"hasDash\"\n             class=\"choicesEmpty\">\n\n          This element already has a dashboard, the old one will be removed !\n        </div>\n\n        <div class=\"md-layout-item\">\n          <md-field>\n            <md-select v-if=\"dashboards.length\"\n                       v-model=\"dashboardContextSelected\"\n                       placeholder=\"Select context\">\n              <md-option v-for=\"(d,index) in dashboards\"\n                         :key=\"index\"\n                         :value=\"d.id\">{{d.name}}</md-option>\n            </md-select>\n          </md-field>\n        </div>\n\n        <!-- <div class=\"contextDiv\">\n          <span class=\"md-caption\">Select a Context</span>\n          <md-radio class=\"md-layout-item md-size-30 md-primary\"\n                    v-for=\"(dashboard,index) in dashboards\"\n                    :key=\"index\"\n                    v-model=\"dashboardContextSelected\"\n                    :value=\"dashboard.id\">{{dashboard.name}}</md-radio>\n        </div> -->\n\n        <div class=\"dashboardDiv\">\n          <span class=\"md-caption\">Select a dashboard</span>\n\n          <md-radio class=\"md-layout-item md-size-30 md-primary\"\n                    v-for=\"(choice,index) in choices\"\n                    :key=\"index\"\n                    v-model=\"radio\"\n                    :value=\"choice.id.get()\">{{choice.name.get()}}</md-radio>\n\n          <div class=\"choicesEmpty\"\n               v-if=\"choices.length == 0 && dashboardContextSelected.length !== 0\">\n            There is no Dahboard created for this type\n          </div>\n        </div>\n\n      </md-dialog-content>\n      <md-dialog-actions>\n        <md-button class=\"md-primary\"\n                   @click=\"closeDialog(false)\">Close</md-button>\n        <md-button class=\"md-primary\"\n                   @click=\"closeDialog(true)\"\n                   :disabled=\"!(radio.length > 0)\">Save</md-button>\n      </md-dialog-actions>\n    </md-dialog>\n  </div>\n</template>\n\n<script>\nimport { dashboardService } from \"spinal-env-viewer-dashboard-standard-service\";\n\nexport default {\n  name: \"linkToDashBoardDialog\",\n  props: [\"onFinised\"],\n  data() {\n    return {\n      selectedNode: null,\n      context: null,\n      showDialog: true,\n      choices: [],\n      radio: \"\",\n      hasDash: false,\n      dashboards: [],\n      dashboardContextSelected: \"\"\n    };\n  },\n  methods: {\n    async opened(option) {\n      this.selectedNode = option.selectedNode;\n      this.hasDash = await dashboardService.hasDashBoard(\n        option.selectedNode.id.get()\n      );\n\n      this.dashboards = this.lstToJson(\n        await dashboardService.getAllDashboardContext()\n      );\n    },\n    removed(option) {\n      if (option.closeResult) {\n        dashboardService.linkToDashboard(\n          this.dashboardContextSelected,\n          this.selectedNode.id.get(),\n          this.radio\n        );\n      }\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") this.onFinised({ closeResult });\n    },\n    lstToJson(lst) {\n      let json = [];\n\n      for (let loop = 0; loop < lst.length; loop++) {\n        json.push(lst[loop].get());\n      }\n\n      return json;\n    }\n  },\n  watch: {\n    dashboardContextSelected: async function(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.choices = await dashboardService.getDashboardByType(\n          newValue,\n          this.selectedNode.type.get()\n        );\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.DashboardDialog {\n  width: calc(45%);\n}\n.choicesEmpty {\n  color: red;\n  width: 100%;\n  margin-bottom: 10px;\n  display: block;\n}\n\n.contextDiv {\n  width: 100%;\n  min-height: 10px;\n  border-bottom: 1px solid gray;\n  display: block;\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n}\n\n.dashboardDiv {\n  width: 100%;\n  display: block;\n  min-height: 10px;\n}\n\n.dashboardDiv span.md-caption,\n.contextDiv span.md-caption {\n  display: block;\n  font-size: 13px;\n}\n\n.md-menu-content {\n  z-index: 110 !important;\n}\n</style>\n","<template>\n  <div>\n    <md-dialog class=\"dialogContainer\"\n               :md-active.sync=\"showDialog\"\n               @md-closed=\"closeDialog(false)\">\n      <md-dialog-title>Link Elements To Dashboard</md-dialog-title>\n      <md-dialog-content>\n\n        <!-- <div class=\"md-layout md-gutter\">\n          <div class=\"md-layout-item md-size-50\">\n            <div class=\"md-layout-item\">\n              <md-field>\n                <label for=\"font\">Font</label>\n                <md-select v-model=\"elementSelected\"\n                           name=\"font\"\n                           id=\"font\">\n                  <md-option v-for=\"(element,index) in children\"\n                             :key=\"index\"\n                             :value=\"element.type\">{{element.name}}</md-option>\n                </md-select>\n              </md-field>\n            </div>\n          </div>\n\n          <div class=\"md-layout-item md-size-50\">\n\n          </div>\n        </div> -->\n\n        <div class=\"md-layout md-gutter\"\n             v-for=\"(data,index) in allData\"\n             :key=\"index\">\n\n          <div class=\"md-layout-item md-size-30 title\">{{data.name}}</div>\n\n          <div class=\"md-layout-item md-size-30\">\n            <md-field>\n              <md-select v-model=\"data.contextSelected\"\n                         :name=\"data.type\"\n                         id=\"context\"\n                         @md-closed=\"getContextDashboard(data)\">\n                <md-option value=\"none\">None</md-option>\n                <md-option v-for=\"(element,index) in dashboards\"\n                           :key=\"index\"\n                           :value=\"element.id.get()\">{{element.name.get()}}</md-option>\n              </md-select>\n            </md-field>\n          </div>\n\n          <div class=\"md-layout-item md-size-30\">\n            <md-field v-if=\"data.contextSelected != 'none' && data.dashboards.length > 0\">\n              <md-select v-model=\"data.dasboardSelected\"\n                         :name=\"dash\"\n                         id=\"dash\">\n                <md-option value=\"none\">None</md-option>\n                <md-option v-for=\"(dash,index) in data.dashboards\"\n                           :key=\"index\"\n                           :value=\"dash.id.get()\">{{dash.name.get()}}</md-option>\n              </md-select>\n            </md-field>\n\n            <md-field v-if=\"data.contextSelected != 'none' && data.dashboards.length == 0\">\n              <span class=\"md-caption noDashboard\">No dashboard for this type</span>\n            </md-field>\n\n          </div>\n\n        </div>\n\n      </md-dialog-content>\n      <md-dialog-actions>\n        <md-button class=\"md-primary\"\n                   @click=\"closeDialog(false)\">Close</md-button>\n        <md-button class=\"md-primary\"\n                   @click=\"closeDialog(true)\">Save</md-button>\n      </md-dialog-actions>\n    </md-dialog>\n  </div>\n</template>\n\n<script>\nimport ContextGeographicService from \"spinal-env-viewer-context-geographic-service\";\nimport {\n  dashboardVariables,\n  dashboardService\n} from \"spinal-env-viewer-dashboard-standard-service\";\n\nimport { find } from \"../js/find\";\n\nconst relations = [\"hasContext\"].concat(\n  ContextGeographicService.constants.GEOGRAPHIC_RELATIONS\n);\n\nexport default {\n  name: \"linkAutoWithDashboardDialog\",\n  props: [\"onFinised\"],\n  data() {\n    return {\n      selectedNode: null,\n      context: null,\n      showDialog: true,\n      allData: [],\n      dashboards: []\n    };\n  },\n  methods: {\n    async opened(option) {\n      this.context = option.context;\n      this.selectedNode = option.selectedNode;\n      this.allData = this.getChildrenElement(this.selectedNode.type.get());\n      this.dashboards = await dashboardService.getAllDashboardContext();\n    },\n    removed(option) {\n      let items = this.getItemToLink();\n\n      if (option.closeResult) {\n        items.forEach(el => {\n          find(this.selectedNode.id.get(), relations, node => {\n            return node.info.type.get() === el.type;\n          }).then(nodes => {\n            for (let i = 0; i < nodes.length; i++) {\n              dashboardService.linkToDashboard(\n                el.contextSelected,\n                nodes[i].info.id.get(),\n                el.dasboardSelected\n              );\n            }\n          });\n        });\n      }\n\n      this.showDialog = false;\n    },\n\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") this.onFinised({ closeResult });\n    },\n    getChildrenElement(type) {\n      let geographicTypesOrder =\n        ContextGeographicService.constants.GEOGRAPHIC_TYPES_ORDER;\n\n      let children = dashboardVariables.GEOGRAPHIC_TYPES.slice(\n        geographicTypesOrder.indexOf(type)\n      ).filter(\n        el => el.type !== ContextGeographicService.constants.EQUIPMENT_TYPE\n      );\n\n      children.forEach(el => {\n        el[\"dasboardSelected\"] = \"none\";\n        el[\"contextSelected\"] = \"none\";\n        el[\"dashboards\"] = [];\n      });\n\n      return children;\n    },\n    async getContextDashboard(data) {\n      if (data.contextSelected !== \"none\") {\n        data.dashboards = await dashboardService.getDashboardByType(\n          data.contextSelected,\n          data.type\n        );\n      }\n    },\n    getItemToLink() {\n      return this.allData.filter(\n        el => el.contextSelected !== \"none\" && el.dasboardSelected !== \"none\"\n      );\n    }\n  }\n};\n</script>\n\n<style scoped>\n.dialogContainer {\n  width: calc(50%) !important;\n}\n\n.md-menu-content {\n  z-index: 110;\n}\n\n.md-caption.noDashboard {\n  color: red;\n}\n</style>\n","import {\n  SpinalGraphService\n} from \"spinal-env-viewer-graph-service\";\n\nlet find = async function(id, relationNames, predicate) {\n  if (typeof predicate !== \"function\") {\n    throw new Error(\"predicate must be a function\");\n  }\n\n  let argNode = SpinalGraphService.getRealNode(id);\n\n  let seen = new Set([argNode]);\n  let promises = [];\n  let nextGen = [argNode];\n  let currentGen = [];\n  let found = [];\n\n  while (nextGen.length) {\n    currentGen = nextGen;\n    promises = [];\n    nextGen = [];\n\n    for (let node of currentGen) {\n      promises.push(node.getChildren(relationNames));\n\n      let predicated = await predicate(node);\n\n      if (predicated) {\n        found.push(node);\n      }\n    }\n\n    let childrenArrays = await Promise.all(promises);\n\n    for (let children of childrenArrays) {\n      for (let child of children) {\n        if (!seen.has(child)) {\n          nextGen.push(child);\n          seen.add(child);\n        }\n      }\n    }\n  }\n\n  return found;\n}\n\nexport {\n  find\n}","<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title>Create Dashboard Standard context</md-dialog-title>\n    <md-dialog-content>\n      <md-field>\n        <label>Enter context Name</label>\n        <md-input v-model=\"inputValue\"></md-input>\n      </md-field>\n\n    </md-dialog-content>\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(true)\"\n                 :disabled=\"!(inputValue.trim().length > 0)\">Save</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n<script>\nimport { dashboardService } from \"spinal-env-viewer-dashboard-standard-service\";\n// import { toasted } from \"../js/toats\";\n\nexport default {\n  name: \"createDashboardContextComponent\",\n  props: [\"onFinised\"],\n  data() {\n    return {\n      showDialog: true,\n      inputValue: \"\"\n    };\n  },\n  methods: {\n    opened() {\n      this.inputValue = \"\";\n    },\n\n    removed(option) {\n      let contextName = this.inputValue.trim();\n\n      if (option.closeResult && contextName.length > 0) {\n        let success = dashboardService.createStandardDashBoardContext(\n          contextName\n        );\n\n        // if (success) {\n        // toasted.success(\"Context created\");\n        // } else {\n        // toasted.error(\"error\");\n        // }\n      }\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised({ closeResult, inputValue: this.inputValue });\n      }\n    }\n  }\n};\n</script>\n","<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title style=\"text-align : center\">Parameter {{name}} calculation</md-dialog-title>\n    <md-dialog-content>\n\n      <!-- <div class=\"endpointTypeDiv md-layout-item md-layout md-gutter\"\n           v-for=\"(dash,index) in dashEndpoints\"\n           :key=\"index\">\n\n        <div class=\"md-layout-item md-size-100\">\n          <span class=\"dashName md-title\">{{dash.name}}</span>\n\n          <md-radio class=\"md-primary\"\n                    v-for=\"(rule, index) in rules\"\n                    :key=\"index\"\n                    v-model=\"dash.dash_cal_rule\"\n                    :value=\"index\">{{ rule }}</md-radio>\n        </div>\n\n      </div> -->\n\n      <div>\n        <md-field>\n          <label for=\"item\">Select an item</label>\n          <md-select v-model=\"endpointTypeSelected\"\n                     name=\"item\"\n                     id=\"item\">\n            <md-option v-for=\"(dash,index) in dashEndpoints\"\n                       :key=\"index\"\n                       :value=\"dash.id\">{{dash.name}}</md-option>\n          </md-select>\n\n        </md-field>\n      </div>\n\n      <div v-if=\"endpointTypeSelected\">\n        <span class=\"dashName md-title\">Choose :</span>\n\n        <md-radio class=\"md-primary\"\n                  v-for=\"(rule, index) in rules\"\n                  :key=\"index\"\n                  v-model=\"ruleSelected\"\n                  :value=\"index\">{{ rule }}</md-radio>\n      </div>\n\n      <div v-if=\"referenceSelect()\">\n        <md-field>\n          <label for=\"reference\">Select a reference</label>\n          <md-select v-model=\"reference\"\n                     name=\"reference\"\n                     id=\"reference\">\n            <md-option v-for=\"(ref,index) in children\"\n                       :key=\"index\"\n                       :value=\"ref.id.get()\">{{ref.name.get()}}</md-option>\n          </md-select>\n\n        </md-field>\n      </div>\n\n    </md-dialog-content>\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(true)\"\n                 :disabled=\"formNotValid()\">Save</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n<script>\nimport {\n  dashboardVariables,\n  dashboardService\n} from \"spinal-env-viewer-dashboard-standard-service\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport ContextGeographicService from \"spinal-env-viewer-context-geographic-service\";\n\nexport default {\n  name: \"parameterDashboardCalculation\",\n  props: [\"onFinised\"],\n  data() {\n    this.id = null;\n    return {\n      children: [],\n      endpointTypeSelected: null,\n      ruleSelected: dashboardVariables.CALCULATION_RULES.average,\n      reference: \"\",\n      showDialog: true,\n      name: \"\",\n      dashEndpoints: [],\n      rules: Object.keys(dashboardVariables.CALCULATION_RULES)\n    };\n  },\n  methods: {\n    opened(option) {\n      this.name = option.name.get();\n      this.id = option.id.get();\n\n      SpinalGraphService.getChildren(option.id.get(), [\n        dashboardVariables.ENDPOINT_RELATION_NAME\n      ]).then(element => {\n        element.forEach(el => {\n          this.dashEndpoints.push({\n            id: el.id.get(),\n            name: el.type.get()\n            // ruleSelected: el.dash_cal_rule\n            //   ? el.dash_cal_rule.rule.get()\n            //   : dashboardVariables.CALCULATION_RULES.average,\n            // reference:\n            //   el.dash_cal_rule && el.dash_cal_rule.ref\n            //     ? el.dash_cal_rule.ref.get()\n            //     : null\n          });\n        });\n      });\n    },\n    removed(option) {\n      if (option) {\n        if (\n          this.ruleSelected !== dashboardVariables.CALCULATION_RULES.reference\n        ) {\n          this.reference = null;\n        }\n\n        dashboardService.addCalculationRule(\n          this.id,\n          this.endpointTypeSelected,\n          this.ruleSelected,\n          this.reference\n        );\n      }\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised(closeResult);\n      }\n    },\n    formNotValid() {\n      return (\n        this.endpointTypeSelected === null ||\n        (this.ruleSelected === dashboardVariables.CALCULATION_RULES.reference &&\n          this.reference === null)\n      );\n    },\n    getAllChildren() {\n      SpinalGraphService.getChildren(\n        this.id,\n        ContextGeographicService.constants.GEOGRAPHIC_RELATIONS_ORDER\n      ).then(children => {\n        this.children = children;\n      });\n    },\n    referenceSelect() {\n      return (\n        this.ruleSelected === dashboardVariables.CALCULATION_RULES.reference\n      );\n    }\n  },\n  watch: {\n    ruleSelected: function() {\n      if (this.ruleSelected === dashboardVariables.CALCULATION_RULES.reference)\n        this.getAllChildren();\n    },\n    endpointTypeSelected: function(newValue) {\n      let dashInfo = SpinalGraphService.getInfo(newValue);\n      if (dashInfo.dash_cal_rule) {\n        this.ruleSelected = dashInfo.dash_cal_rule.rule.get();\n        if (dashInfo.dash_cal_rule.ref) {\n          this.reference = dashInfo.dash_cal_rule.ref.get();\n          console.log(\"this.reference\", this.reference);\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.dashName {\n  display: block;\n  margin-bottom: 5px;\n  text-align: center;\n}\n\n.endpointTypeDiv {\n  padding-left: 30px !important;\n  margin-right: 15px;\n  /* border-right: 1px dashed gray;\n  border-bottom: 1px dashed gray; */\n}\n</style>\n","<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\"\n             class=\"globalCalculDialog\">\n    <md-dialog-title>Config Calulation rules</md-dialog-title>\n\n    <md-dialog-content class=\"dialogContainer\">\n\n      <md-content class=\"paramContainer md-layout\">\n        <md-content class=\"md-layout-item md-size-50 paramDiv\">\n          <md-subheader>Nodes</md-subheader>\n          <md-list class=\"nodeDiv md-scrollbar\">\n            <md-list-item v-for=\"(element,index) in elementsWithDashboard\"\n                          :key=\"index\">\n              <md-checkbox v-model=\"element.checked\"\n                           class=\"md-primary\" />\n              <span class=\"md-list-item-text\">{{element.node.info.name.get()}}</span>\n            </md-list-item>\n          </md-list>\n        </md-content>\n\n        <md-content class=\"md-layout-item md-size-50 paramDiv\">\n          <md-subheader>Rules</md-subheader>\n\n          <md-field>\n            <label for=\"item\">Select a type</label>\n            <md-select v-model=\"endpointTypeSelected\"\n                       name=\"item\"\n                       id=\"item\">\n              <md-option v-for=\"(endpointType,index) in endpointsTypes\"\n                         :key=\"index\"\n                         :value=\"endpointType.type\">{{endpointType.name}}</md-option>\n            </md-select>\n\n          </md-field>\n\n          <md-content class=\"ruleDiv md-scrollbar\">\n            <md-list>\n              <md-list-item v-for=\"(rule, index) in rules\"\n                            :key=\"index\">\n                <md-radio class=\"md-primary\"\n                          v-model=\"ruleSelected\"\n                          :value=\"index\">{{ rule }}</md-radio>\n              </md-list-item>\n            </md-list>\n\n          </md-content>\n          <md-button v-tooltip=\"'add to list'\"\n                     class=\"md-fab md-fixed md-mini md-primary\"\n                     style=\"top: calc(45%); right: 20px;\"\n                     @click=\"addElementSelected\">\n            <md-icon>add</md-icon>\n          </md-button>\n        </md-content>\n      </md-content>\n\n      <md-content class=\"tableContainer\">\n        <md-table v-model=\"elementsSelected\"\n                  md-fixed-header>\n          <md-table-toolbar>\n            <h1 class=\"md-title\">Elements</h1>\n          </md-table-toolbar>\n\n          <md-table-row slot=\"md-table-row\"\n                        slot-scope=\"{ item }\">\n            <md-table-cell md-label=\"Name\">{{ item.name }}</md-table-cell>\n            <md-table-cell md-label=\"Endpoint Name\">{{ item.endpoint }}</md-table-cell>\n            <md-table-cell md-label=\"Calculation\">{{ item.rule }}</md-table-cell>\n            <md-table-cell md-label=\"\">\n              <md-button class=\"md-icon-button md-dense md-primary\"\n                         @click=\"removeFromList(item.node)\">\n                <md-icon>delete</md-icon>\n              </md-button>\n\n            </md-table-cell>\n          </md-table-row>\n        </md-table>\n      </md-content>\n\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(true)\"\n                 :disabled=\"elementsSelected.length == 0\">Save</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n\n</template>\n\n<script>\nimport listChoices from \"../js/choice\";\nimport {\n  dashboardVariables,\n  dashboardService\n} from \"spinal-env-viewer-dashboard-standard-service\";\nimport { find } from \"../js/find\";\nimport geographicService from \"spinal-env-viewer-context-geographic-service\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\nexport default {\n  name: \"globalCalculDialog\",\n  props: [\"onFinised\"],\n  data() {\n    this.rules = Object.keys(dashboardVariables.CALCULATION_RULES).filter(\n      el => el !== \"reference\"\n    );\n    this.endpointsTypes = Object.assign([], listChoices);\n    return {\n      node: null,\n      elementsWithDashboard: [],\n      showDialog: true,\n      endpointTypeSelected: null,\n      ruleSelected: null,\n      elementsSelected: []\n    };\n  },\n  methods: {\n    opened(option) {\n      this.node = option;\n      this.getAllElementsWithDashboard().then(el => {\n        this.elementsWithDashboard = [];\n        el.forEach(element => {\n          this.elementsWithDashboard.push({\n            node: element,\n            checked: false\n          });\n        });\n      });\n    },\n\n    removed(valid) {\n      if (valid) {\n        this.elementsSelected.forEach(el => {\n          dashboardService.addCalculationRule(\n            el.node.info.id.get(),\n            el.endpoint,\n            el.rule\n          );\n        });\n      }\n\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      this.onFinised(closeResult);\n    },\n    getAllElementsWithDashboard() {\n      return find(\n        this.node.id.get(),\n        geographicService.constants.GEOGRAPHIC_RELATIONS,\n        async node => {\n          let c = await SpinalGraphService.getChildren(node.info.id.get(), [\n            dashboardVariables.ENDPOINT_RELATION_NAME\n          ]);\n          return c.length > 0;\n        }\n      );\n    },\n    addElementSelected() {\n      this.elementsWithDashboard.forEach(el => {\n        if (\n          el.checked &&\n          this.endpointTypeSelected != null &&\n          this.ruleSelected != null &&\n          !this.elementExist(el)\n        ) {\n          this.elementsSelected.push({\n            name: el.node.info.name.get(),\n            node: el.node,\n            endpoint: this.endpointTypeSelected,\n            rule: this.ruleSelected\n          });\n          el.checked = false;\n        }\n      });\n    },\n    elementExist(el) {\n      let res = this.elementsSelected.find(item => {\n        return (\n          item.node.info.id.get() == el.node.info.id.get() &&\n          item.endpoint == this.endpointTypeSelected\n        );\n      });\n\n      return res !== undefined;\n    },\n    removeFromList(el) {\n      this.elementsSelected = this.elementsSelected.filter(element => {\n        return el.info.id.get() != element.node.info.id.get();\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.dialogContainer {\n  width: calc(100%) !important;\n  height: calc(100%) !important;\n  overflow: hidden;\n}\n\n.globalCalculDialog {\n  width: calc(60%);\n  height: calc(100%);\n}\n.paramContainer {\n  height: calc(50%);\n}\n\n.nodeDiv {\n  overflow: auto;\n  height: 80%;\n}\n\n.paramDiv {\n  height: 100%;\n  padding: 5px;\n}\n\n.ruleDiv {\n  overflow: auto;\n  height: 50%;\n}\n\n.tableContainer {\n  height: calc(50%);\n}\n\n.globalCalculDialog .md-content.md-table-content.md-scrollbar.md-theme-default {\n  height: 200px !important;\n}\n</style>\n","<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title style=\"text-align : center\">Select Reference</md-dialog-title>\n\n    <md-dialog-content>\n      <div>\n        <md-field>\n          <label for=\"item\">Select an item</label>\n          <md-select v-model=\"endpointTypeSelected\"\n                     name=\"item\"\n                     id=\"item\">\n            <md-option v-for=\"(dash,index) in dashEndpoints\"\n                       :key=\"index\"\n                       :value=\"dash.type\">{{dash.name}}</md-option>\n          </md-select>\n\n        </md-field>\n      </div>\n\n      <div>\n        <md-field>\n          <label for=\"item\">Select an item</label>\n          <md-select v-model=\"referenceId\"\n                     name=\"item\"\n                     id=\"item\">\n            <md-option v-for=\"(endpoint,index) in allEndpoints\"\n                       :key=\"index\"\n                       :value=\"endpoint.info.id.get()\">{{endpoint.info.name.get()}}</md-option>\n          </md-select>\n\n        </md-field>\n      </div>\n\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(true)\"\n                 :disabled=\"formNotValid()\">Save</md-button>\n    </md-dialog-actions>\n\n  </md-dialog>\n\n</template>\n\n\n<script>\nimport choice from \"../js/choice\";\nimport utilities from \"../js/utilities\";\nimport { dashboardService } from \"spinal-env-viewer-dashboard-standard-service\";\n\nexport default {\n  name: \"bimObjectReferenceDialog\",\n  props: [\"onFinised\"],\n  data() {\n    this.dashEndpoints = Object.assign([], choice);\n    return {\n      bimObjectId: null,\n      showDialog: true,\n      endpointTypeSelected: null,\n      referenceId: null,\n      allEndpoints: []\n    };\n  },\n  methods: {\n    opened(option) {\n      this.bimObjectId = option.id.get();\n      utilities._getAllEndpointOfBimObject(option.id.get()).then(el => {\n        this.allEndpoints = el;\n      });\n    },\n    removed(option) {\n      if (option) {\n        dashboardService.addReferenceToBimObject(\n          this.bimObjectId,\n          this.referenceId,\n          this.endpointTypeSelected\n        );\n      }\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised(closeResult);\n      }\n    },\n    formNotValid() {\n      return this.referenceId !== null && this.endpointTypeSelected !== null\n        ? false\n        : true;\n    }\n  }\n};\n</script>","import {\n  find\n} from \"./find\";\n\nconst {\n  SpinalBmsDevice,\n  SpinalBmsEndpoint,\n  SpinalBmsEndpointGroup\n} = require(\"spinal-model-bmsnetwork\");\n\n\nmodule.exports = {\n  _getAllEndpointOfBimObject(bimObjectId) {\n    return find(\n      bimObjectId,\n      [\n        \"hasEndPoint\",\n        SpinalBmsDevice.relationName,\n        SpinalBmsEndpoint.relationName,\n        SpinalBmsEndpointGroup.relationName\n      ],\n      node => {\n\n        return node.info.type.get() === SpinalBmsEndpoint.nodeTypeName;\n      }\n    );\n  },\n  //   _getEndpointByGroup(bimObjectId) {\n  //     return this._getAllEndpointOfBimObject(bimObjectId).then(endpoints => {\n  //       let groups = [];\n\n  //       endpoints.forEach(el => {\n  //           groups[el.info.name]\n  //       })\n\n  //     })\n  //   }\n}"],"names":["dashboardVariables","AbstractElement","require","dashboardService","createStandardDashBoardContext","contextName","context","SpinalGraphService","getContext","addContext","DASHBOARD_CONTEXT_TYPE","createStandardDashBoard","contextId","dashboardName","dashboardType","attributes","abstract","add_attr","sensor","connected","forEach","attr","checked","push","abstractNode","createNode","name","type","addChildInContext","RELATION_NAME","SPINAL_RELATION_LST_PTR_TYPE","getDashboardByType","getChildren","then","children","res","i","length","child","get","hasDashBoard","nodeId","ENDPOINT_RELATION_NAME","linkToDashboard","dashboardId","d","unLinkToDashBoard","dashboardInfo","getInfo","element","load","DASHBOARD_TO_ELEMENT_RELATION","endpoint","SpinalBmsEndpoint","value","unit","dataType","addChild","getAllDashboardContext","graph","getGraph","contexts","info","callback","_getParent","oldDash","removeAllEndpoints","removeChild","el","endpoints","id","addCalculationRule","endpointType","rule","reference","index","getRealNode","dash_cal_rule","rem_attr","ref","editDashboard","newName","NewSensor","dashboardNode","set","dashBoardElement","difference","_getDifferenceBetweenTwoArray","console","log","includes","splice","indexOf","addReferenceToBimObject","bimObjectId","referenceId","node","relationName","parents","parent","array1","array2","full","concat","filter","lastIndexOf","DASHBOARD_CONTEXT","CALCULATION_RULES","Object","freeze","sum","average","max","min","GEOGRAPHIC_TYPES","ContextGeographicService","constants","SITE_TYPE","BUILDING_TYPE","FLOOR_TYPE","ZONE_TYPE","ROOM_TYPE","EQUIPMENT_TYPE","spinalCore","globalType","window","global","BIMElement","Model","constructor","_name","_type","FileSystem","_sig_server","Utilities","guid","setName","register_models","getViewer","Promise","resolve","reject","v","interval","setInterval","clearInterval","promiseGetProperties","_dbId","viewer","getProperties","promiseGetExternalIdMapping","_externalId","model","getExternalIdMapping","promiseLoad","_ptr","Ptr","data","_objects","getExternalId","properties","externalId","getDbIdByExternalId","dbid","arraysEqual","arrayA","arrayB","sort","containsLstById","_list","_node","containsLstModel","_model","containsLst","_element","include","arr","obj","getIndex","getIds","array","listA","listB","allButMeById","_constructor","s4","Date","now","toString","Math","floor","random","substring","putOnTopLst","lst","elementB","remove_ref","unshift","SpinalBIMObject","_id","initExternalId","initExternalIdAsync","toIfc"],"version":3,"file":"spinal-env-viewer-plugin-dashboard-standard.4d56014a.js.map"}