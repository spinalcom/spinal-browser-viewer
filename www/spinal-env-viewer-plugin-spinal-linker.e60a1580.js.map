{"mappings":"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ACA,OAAO;QACT;QAEA;;;;KAIC,GACD,mBAAkB,IAAI,EAAE,cAAc;YACpC,oBAAoB;YACpB,OAAO,SAAS,QAAQ,oBAAoB,kBAC1C,MACA;YAEF,qBAAqB;YACrB,OAAO,OAAO,sBAAsB,aAAa;QACnD;IACF;AACF;;;;;AC3SA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA+B;IAC7C,OAAO,kBAAkB,QAAQ,oBAA+B;IAChE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA4B;IAC1D,QAAQ,oBAA6B,QAAQ;IAC7C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;;A,I,gB;I,M;I,Y;kB,C,G,2B;I;I,M;Q,O;Y,c,E;Y,iB;Y,gB;Y,gB;Q;I;I,U;Q,M;Y,I,I,C,iB,I,C,c,e,S,O,I,C,c,K;Y,O;Q;I;I,S;Q,Q,S,M;Y,I,C,e,O;Y,I,C,e,O;Y,I,C,gB,O;Y,I,C,a,E;Y,M,U,C,G,+C,E,W,K,G;Y,C,G,+C,E,Y,S,E,E,K,C;gB,I,I,I,G,I,S,Q,I,I,Q,C,E,C,e,O,I,C,W,K,Q,C,E,C,G;Y;Q;QAsBf,QAAA,Y;Q,S,YAIA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;;;AC9CA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA4B;IAC1C,OAAO,kBAAkB,QAAQ,oBAA4B;IAC7D,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAyB;IACvD,QAAQ,oBAA0B,QAAQ;IAC1C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;A,I,gB;I,M;I,Y;0B,C,G,iD;0B,C,G,iD;I;I,M;Q,O;Y,M,C;Y,M;Y,Q;Q;I;I,O;Q,Q;Y,M;Y,U;Q;Q,Y;Y,M;Y,S;Q;Q,Q;Y,M;Y,U;Q;Q,kB;Y,M;Y,S;Q;Q,kB;Y,M;Y,S,C,G,+C,E;QAsBf;IACA;IACA,UAAA;QACA,MAAA;YACA,IAAA,IAAA,CAAA,QAAA,IAAA,CAAA,KAAA,eAAA,SACA,OAAA,IAAA,CAAA,KAAA,KAAA;YAEA,OAAA;QACA;QACA,aAAA;YACA,IAAA,IAAA,CAAA,QAAA,IAAA,CAAA,KAAA,eAAA,gBACA,OAAA;YACA,OAAA;QACA;IACA;IACA,eAAA;QACA,SAAA;YACA,KAAA;gBACA,IAAA,CAAA,IAAA,CAAA,UAAA,IAAA,CAAA,QAAA,IAAA,CAAA,KAAA,eAAA,OACA;oBACA,IAAA,MAAA,MAAA,CAAA,GAAA,+CAAA,EACA,QAAA,IAAA,CAAA,QAAA,IAAA,CAAA,KAAA,GAAA,OAAA;wBAAA,IAAA,CAAA;qBAAA;oBACA,IAAA,IAAA,CAAA,YACA,MAAA,MAAA,CAAA,GAAA,+CAAA,EACA,QAAA,IAAA,CAAA,KAAA,GAAA,OAAA,IAAA,CAAA,QAAA;wBAAA,IAAA,CAAA;qBAAA;oBACA,OAAA,QAAA;gBACA;gBACA,OAAA;YACA;YACA,SAAA;YACA,OAAA;gBAAA;aAAA;QACA;IAEA;IACA,SAAA;QACA,MAAA;YAEA,IAAA,IAAA,CAAA,YACA,CAAA,GAAA,+CAAA,EAAA,SAAA,IAAA,CAAA,KAAA,GAAA,OAAA,IAAA,CAAA,QACA,IAAA,CAAA,kBAAA,IAAA,CAAA;iBAEA,CAAA,GAAA,+CAAA,EAAA,SAAA,IAAA,CAAA,QAAA,IAAA,CAAA,KAAA,GAAA,OACA,IAAA,CAAA,kBAAA,IAAA,CAAA;YAEA,IAAA,CAAA,SAAA;QACA;QACA,QAAA;YACA,IAAA,IAAA,CAAA,YACA,CAAA,GAAA,+CAAA,EAAA,YAAA,IAAA,CAAA,KAAA,GAAA,OAAA,IAAA,CAAA,QACA,IAAA,CAAA,kBAAA,IAAA,CAAA,kBAAA,KAAA;gBACA,QAAA,IAAA;YACA,GACA,MAAA,CAAA,IACA,QAAA,MAAA;iBAEA,CAAA,GAAA,+CAAA,EAAA,YAAA,IAAA,CAAA,QAAA,IAAA,CAAA,KAAA,GAAA,OACA,IAAA,CAAA,kBAAA,IAAA,CAAA,kBACA,KAAA;gBACA,QAAA,IAAA;YACA,GACA,MAAA,CAAA,IACA,QAAA,MAAA;YAGA,IAAA,CAAA,SAAA;QACA;QACA,QAAA;YACA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA;QACA;I;IAEA;QACA,IAAA,CAAA,OAAA,CAAA,GAAA,+CAAA,EAAA,QAAA,IAAA,CAAA;IACA;A;AAGA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,M;Q,G,O;Y,a;Q,G;Y,G,uB;gB,O;oB,U,I;gB;gB,I;oB,S,I;gB;Y;Y,I,G,e,I,G,I,Q;Y,I,U,G,sB;gB,a;gB,O;oB,Q;oB,Y;gB;gB,I;oB,S,I;gB;Y,K,G,sB;gB,a;gB,O;oB,Q;oB,Y;gB;gB,I;oB,S,I;gB;Y;S,E;Q,I,G;Q,I,O,G,M,I,G,I,K,a,S,M,E,K;Y,O,G,a;gB,K;gB,O;oB,U;oB,e,I;oB,W,I;oB,sB,I;oB,sB,I;gB;Y;Q,I,K,I;K;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAjHA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,a;I,G;Q,G,M;Y,I,G,I,G,I;S;Q,I,G;Q,I,G,I,Y,S,S;Y,O,G,a;gB,O;oB,W;oB,e;oB,W,I,c,G;oB,sB,I;oB,sB,I;gB;Y;Q;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AELA;AAIA;AAGA;AAKA;AAGe,MAAM,2BAA2B,CAAA,GAAA,mDAAe;IAC7D,aAAc;QACZ,KAAK,CAAC,gBAAgB,qBAAqB;YACzC,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,IAAI,OAAO,SAAS,OAAO,cAAc;YACvC,IAAI,OAAO,wBAAwB,CAAA,GAAA,uCAAS,GAC1C,OAAO,QAAQ,QAAQ;iBAClB;gBACL,IACE,OAAO,eAAe,mBACtB,CAAA,GAAA,uBAAW,EAAE,SAAS,OAAO,aAAa,KAAK,QAE/C,OAAO,QAAQ,QAAQ;YAE3B;QACF;QACA,OAAO,QAAQ,QAAQ;IACzB;IAEA,OAAO,MAAM,EAAE;QACb,IAAI,eAAe,OAAO;QAE1B,IAAI,OAAO,wBAAwB,CAAA,GAAA,uCAAS,GAAG;YAC7C,CAAA,GAAA,+CAAiB,EAAE,SAAS,OAAO;YACnC,eAAe,CAAA,GAAA,+CAAiB,EAAE,QAAQ,OAAO,aAAa;QAChE;QACA,MAAM,QAAQ;YACZ,cAAc;YACd,cAAc,CAAA,GAAA,yDAA2B;YACzC,cAAc;QAChB;QACA,CAAA,GAAA,6DAAwB,EAAE,UAAU,wBAAwB;IAC9D;AACF;kBAxCqB;AA0CrB,MAAM,aAAa;AACnB,MAAM,mBAAmB;AAEzB,CAAA,GAAA,2DAAuB,EAAE,YAAY,YAAY,IAAI,sBAAsB;IAAC;CAAE;AAC9E,CAAA,GAAA,2DAAuB,EAAE,YACvB,kBACA,IAAI,sBAAsB;IAAC;CAAE;;;AC/D/B;AAGA;AAQA,IAAI,eAAe;IACjB,CAAA,GAAA,oBAAQ;IACR,CAAA,GAAA,wBAAY;IACZ,CAAA,GAAA,qBAAS;IACT,CAAA,GAAA,oBAAQ;IACR,CAAA,GAAA,oBAAQ;IACR,CAAA,GAAA,yBAAa;CACd;AAGD,OAAO,UAAU;IACf;AACF;;;A;AEvBA;;;;;;;;;;;;;;;;;;;;;;CAsBG,G,O,e,S,c;I,O;A;A,Q,0B,Q,yB,Q,yB,Q,0B,Q,6B,Q,yB,Q,qB,Q,iB,Q,oB,Q,oB,Q,6B,Q,qB,Q,uB,Q,gB,Q,gB,Q,iB,Q,oB,Q,gB,Q,yB,Q,iB,Q,mB,Q,Y,Q,Y,Q,a,Q,gB,Q,Y,Q,e,K;AAEH,MAAM,eAAe;AAmFnB,QAAA,eAAA;AAlFF,MAAM,YAAY;AAmFhB,QAAA,YAAA;AAlFF,MAAM,gBAAgB;AAmFpB,QAAA,gBAAA;AAlFF,MAAM,aAAa;AAmFjB,QAAA,aAAA;AAlFF,MAAM,YAAY;AAmFhB,QAAA,YAAA;AAlFF,MAAM,YAAY;AAmFhB,QAAA,YAAA;AAlFF,MAAM,iBAAiB;AAoFrB,QAAA,iBAAA;AAnFF,MAAM,iBAAiB;AA+FrB,QAAA,iBAAA;AA7FF,MAAM,gBAAgB;AAmFpB,QAAA,gBAAA;AAlFF,MAAM,oBAAoB;AAmFxB,QAAA,oBAAA;AAlFF,MAAM,iBAAiB;AAmFrB,QAAA,iBAAA;AAlFF,MAAM,gBAAgB;AAmFpB,QAAA,gBAAA;AAlFF,MAAM,gBAAgB;AAmFpB,QAAA,gBAAA;AAlFF,MAAM,qBAAqB;AAoFzB,QAAA,qBAAA;AAnFF,MAAM,qBAAqB;AAwFzB,QAAA,qBAAA;AAvFF,MAAM,0BAA0B;AA6F9B,QAAA,0BAAA;AA3FF,MAAM,yBAAyB;AAsF7B,QAAA,yBAAA;AArFF,MAAM,6BAA6B;AAsFjC,QAAA,6BAAA;AArFF,MAAM,0BAA0B;AAsF9B,QAAA,0BAAA;AArFF,MAAM,yBAAyB;AAsF7B,QAAA,yBAAA;AArFF,MAAM,yBAAyB;AAsF7B,QAAA,yBAAA;AApFF,MAAM,mBAAmB,OAAO,OAAO;IACrC;IACA;IACA;IACA;IACA;CACD;AA2DC,QAAA,mBAAA;AAzDF,MAAM,yBAAyB,OAAO,OAAO;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAmDC,QAAA,yBAAA;AAjDF,MAAM,uBAAuB,OAAO,OAAO;IACzC;IACA;IACA;IACA;IACA;IACA;CACD;AAgDC,QAAA,uBAAA;AA9CF,MAAM,6BAA6B,OAAO,OAAO;IAC/C;IACA;IACA;IACA;IACA;IACA;CACD;AAyCC,QAAA,6BAAA;AAvCF,MAAM,oBAAoB,OAAO,OAC/B,IAAI,IAAI;IACN;QAAC;QAAW;KAAc;IAC1B;QAAC;QAAe;KAAkB;IAClC;QAAC;QAAY;KAAe;IAC5B;QAAC;QAAW;KAAc;IAC1B;QAAC;QAAW;KAAc;IAC1B;QAAC;QAAgB;KAAmB;CACrC;AAgCD,QAAA,oBAAA;AA7BF,MAAM,oBAAoB,OAAO,OAC/B,IAAI,IAAI;IACN;QAAC;QAAe;KAAU;IAC1B;QAAC;QAAmB;KAAc;IAClC;QAAC;QAAgB;KAAW;IAC5B;QAAC;QAAe;KAAU;IAC1B;QAAC;QAAe;KAAU;IAC1B;QAAC;QAAoB;KAAe;CACrC;AAsBD,QAAA,oBAAA;;;;;AC7HF,SAAS,cAAc,EAAE,EAAE,WAAW,EAAE,KAAK;IAC3C,GAAG,KAAK,GAAG,MAAM,cAAc,CAAC,YAAY,EAAE,SAAS;IACvD,GAAG,KAAK,GAAG,MAAM,cAAc,CAAC,YAAY,EAAE,YAAY,UAAU;IACpE,GAAG,KAAK,GAAG,MAAM,cAAc,CAAC,YAAY,EAAE,SAAS,UAAU;IACjE,GAAG,KAAK,GAAG,MAAM,cAAc,CAAC,YAAY,EAAE,WAAW,UAAU;AACrE;AAEA,SAAS,WAAW,EAAE;IACpB,IAAI,OAAO,OAAO,YAAY,OAAO;IAErC,OAAO,GAAG;AACZ;AAEA,SAAS,eAAe,MAAM,EAAE,QAAQ;IACtC,OAAO,OAAO,UAAU,eAAe,KAAK,QAAQ;AACtD;AAEA,SAAS,eAAe,IAAI;IAC1B,OAAO,eAAe,MAAM,WAAW,KAAK;AAC9C;AAEA,SAAS,aAAa,EAAE,EAAE,GAAG;IAC3B,OAAO,EAAE,CAAC,mBAAmB,IAAI;AACnC;AAEA,IAAI,mBAAmB,+BACnB,iBAAiB;AAErB,SAAS,SAAS,IAAI,EAAE,GAAG,EAAE,KAAK;IAChC,IAAI,CAAC,mBAAmB,IAAI,GAAG;IAC/B,IAAI,CAAC,iBAAiB,IAAI,GAAG;AAC/B;AAEA,SAAS,iBAAiB,GAAG;IAC3B,OAAO;QACL,KAAK,SAAS;YACZ,IAAI,CAAC,mBAAmB,IAAI,GAAG;YAC/B,OAAO,IAAI,CAAC,iBAAiB,IAAI;QACnC;QACA,KAAK,SAAS,IAAI,KAAK;YACrB,IAAI,CAAC,iBAAiB,IAAI,GAAG;QAC/B;IACF;AACF;AAEA,SAAS,cAAc,EAAE,EAAE,GAAG,EAAE,KAAK;IACnC,EAAE,CAAC,iBAAiB,IAAI,GAAG;AAC7B;AACA,SAAS,cAAc,EAAE,EAAE,GAAG;IAC5B,OAAO,EAAE,CAAC,iBAAiB,IAAI;AACjC;AAEA,IAAI,0BAA0B,SAAS,wBAAwB,qBAAqB;IAClF,OAAO,SAAS;QACd,IAAI,QAAQ,IAAI;QAEhB,sBAAsB,MAAM,QAAQ,SAAU,GAAG;YAC/C,kCAAkC;YAClC,IAAI,gBAAgB,IAAI,MAAM;YAC9B,IAAI,cAAc,WAAW,GAC3B,0BAA0B;YAC1B,iDAAiD;YACjD,KAAK,CAAC,IAAI;iBAEV,6BAA6B;YAC7B,IAAI;gBACF,IAAI,QAAQ;gBACZ,cAAc,QAAQ,SAAU,IAAI;oBAClC,QAAQ,KAAK,CAAC,KAAK;gBACrB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,MAAM,6BAA6B;gBAC3C,MAAM;YACR;QAEJ;QACA,OAAO,sBAAsB,IAAI,KAAK,IAAI;IAC5C;AACF;AAEA,IAAI,6BAA6B,SAAS,2BAA2B,qBAAqB;IACxF,OAAO,SAAS;QACd,sBAAsB,MAAM,KAAK,IAAI;QACrC,OAAO,sBAAsB,IAAI,KAAK,IAAI;IAC5C;AACF;AAEA,SAAS,iBAAiB,qBAAqB;IAC7C,IAAI,OAAO,sBAAsB,UAAU,YACzC,OAAO,2BAA2B;SAC7B,IAAI,MAAM,QAAQ,sBAAsB,QAAQ;QACrD,sBAAsB,MAAM,QAAQ,SAAU,GAAG;YAC/C,IAAI,OAAO,QAAQ,UACjB,MAAM,IAAI,MAAM;QAEpB;QACA,OAAO,wBAAwB;IACjC,OACE,MAAM,MAAM;AAEhB;AAEA,IAAI,eAAe,OAAO,WAAW,aAAa,OAAO,oBAAoB,CAAC;AAE9E,IAAI,4BAA4B,SAAS,0BAA0B,aAAa,EAAE,aAAa;IAC7F,OAAO,SAAS;QACd,OAAO,cAAc,aAAa,KAAK,IAAI,IAAI,cAAc,KAAK,IAAI,IAAI;IAC5E;AACF;AAEA,IAAI,kBAAkB,SAAS,gBAAgB,KAAK;IAClD,OAAO,iBAAiB;AAC1B;AAEA,IAAI,SAAS;AAEb,IAAI,gBAAgB;IAClB,SAAS,SAAS,QAAQ,GAAG,EAAE,aAAa;QAC1C,gBAAgB,iBAAiB,CAAC;QAElC,IAAI,OAAO,sBAAsB,gBAAgB,IAAI,OAAO,sBAAsB;QAElF,IAAI,MAAM;YACR,MAAM,SAAS;gBACb,OAAO;oBACL,gBAAgB,CAAC;gBACnB;YACF;YAEA,UAAU;gBACR,gBAAgB,SAAS;oBACvB,OAAO,IAAI,CAAC,MAAM;gBACpB;YACF;YACA,cAAc,SAAS;gBACrB,IAAI,gBAAgB,IAAI,CAAC,SAAS,iBAAiB,CAAC;gBAEpD,IAAI,CAAC,OAAO,KAAK,eAAe,QAAQ;gBAExC,IAAK,IAAI,OAAO,cAAe;oBAC7B,IAAI,SAAS,SAAS,KAAK,aAAa,CAAC,IAAI;oBAC7C,IAAI,CAAC,SAAS,QAAQ,CAAC,SAAS,IAAI,GAAG;gBACzC;gBAEA,IAAI,CAAC,SAAS,OAAO,0BAA0B,IAAI,CAAC,UAAU;YAChE;YACA,SAAS,SAAS;gBAChB,IAAK,IAAI,OAAO,IAAI,CAAC,SAAS,iBAAiB,CAAC,EAAG;oBACjD,IAAI,OAAO,IAAI,CAAC,SAAS,aAAa,CAAC,IAAI,EACvC,QAAQ,gBAAgB,KAAK,IAAI,EAAE,MAAM;oBAC7C,IAAI,eAAe,OACjB,cAAc,IAAI,EAAE,KAAK;yBAEzB,IAAI,CAAC,IAAI,GAAG;gBAEhB;gBAEA,IAAK,IAAI,QAAQ,IAAI,CAAC,SAAS,iBAAiB,CAAC,EAC/C,kCAAkC,IAAI,EAAE,MAAM,eAAe;YAEjE;QACF;IACF;AACF;AAEA,SAAS,kCAAkC,EAAE,EAAE,GAAG,EAAE,aAAa,EAAE,GAAG;IACpE,IAAI,YAAY;IAChB,IAAI,UAAU,SAAS,QAAQ,UAAU;QACvC,IAAI,cAAc,EAAE;QAEpB,IAAI,gBAAgB,aAAa;QAEjC,IAAI,CAAC,cAAc,CAAC,WAAW,MAC7B,aAAa,QAAQ,QAAQ;QAE/B,cAAc,IAAI,KAAK;QAEvB,WAAW,KAAK,SAAU,KAAK;YAC7B,IAAI,gBAAgB,WAAW;YAC/B,cAAc,IAAI,KAAK;YACvB,EAAE,CAAC,IAAI,GAAG;QACZ,GAAG,MAAM,SAAU,GAAG;YACpB,IAAI,gBAAgB,WAAW;YAE/B,cAAc,IAAI,KAAK;YACvB,IAAI,IAAI,GAAG,MAAM,cAAc,CAAC,IAAI,EAAE,aAAa;YACnD,IAAI,cAAc,iBAAiB,OAAO;YAE1C,IAAI,UAAU,cAAc,iBAAiB,YAAY,QAAQ,MAAM,KAAK,SAAS,+CAA+C,cAAc;YAElJ,IAAI,cAAc,aAChB,QAAQ,KAAK,IAAI,IAAI;iBAErB,QAAQ,IAAI;QAEhB;IACF;IACA,IAAI,IAAI,GAAG,MAAM,gBAAgB,KAAK;QACpC,WAAW;QACX,QAAQ,SAAS;YACf,IAAI,CAAC,GAAG,cACN,QAAQ,WAAW,GAAG,SAAS,aAAa,CAAC,IAAI,EAAE,MAAM;QAE7D;IACF;IACA,cAAc,IAAI,KAAK;IACvB,GAAG,OAAO,SAAS,KAAK,SAAS;QAAE,WAAW;IAAK;AACrD;AAEA,SAAS,0BAA0B,OAAO,EAAE,aAAa;IACvD,IAAI,aAAa,QAAQ;IACzB,IAAI,gBAAgB,QAAQ,iBAAiB,CAAC;IAE9C,OAAO,SAAS,+BAA+B,EAAE;QAC/C,IAAI,OAAO,AAAC,CAAA,OAAO,eAAe,aAAa,WAAW,KAAK,IAAI,EAAE,MAAM,UAAS,KAAM,CAAC;QAC3F,IAAK,IAAI,OAAO,cAAe;YAC7B,IAAI,OAAO,IAAI,CAAC,SAAS,aAAa,CAAC,IAAI;YAE3C,IAAI,QAAQ,gBAAgB,KAAK,IAAI,EAAE,MAAM;YAC7C,IAAI,eAAe,OAAO;gBACxB,SAAS,MAAM,KAAK;gBACpB,IAAI,CAAC,SAAS,QAAQ,CAAC,IAAI,GAAG,iBAAiB;YACjD,OACE,IAAI,CAAC,IAAI,GAAG;QAEhB;QACA,OAAO;IACT;AACF;AAEA,SAAS,SAAS,GAAG,EAAE,EAAE;IACvB,IAAI,OAAO,OAAO,YAAY,OAAO;IAErC,IAAI,SAAS,GAAG;IAEhB,IAAI,eAAe,IAAI,UACrB,SAAS,iBAAiB;IAG5B,IAAI,eAAe,IAAI,iBACrB,SAAS,0BAA0B,IAAI;IAGzC,IAAI,eAAe,KAAK;QACtB,IAAI,UAAU;QACd,SAAS,SAAS;YAChB,IAAI,aAAa,IAAI,EAAE,MACrB,OAAO,QAAQ,KAAK,IAAI;iBAExB,OAAO,cAAc,IAAI,EAAE;QAE/B;IACF;IACA,OAAO;AACT;AAEA,SAAS,gBAAgB,EAAE,EAAE,aAAa;IACxC,IAAI,eAAe;IAEnB,IAAI,aAAa,IACf,eAAe,GAAG;SACb,IAAI,aAAa,eACtB,eAAe,cAAc;IAG/B,IAAI,OAAO,iBAAiB,YAC1B,OAAO,aAAa,KAAK,IAAI;SAE7B,OAAO;AAEX;AAEA,sBAAsB,GACtB,IAAI,OAAO,WAAW,eAAe,OAAO,KAC1C,4BAA4B;AAC5B,OAAO,IAAI,IAAI;kBAGF","sources":["node_modules/spinal-env-viewer-plugin-spinal-linker/index.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/index.js","node_modules/spinal-env-viewer-panel-manager-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelManagerService.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelApp.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalMountExtention.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/SpinalForgeExtention.js","node_modules/spinal-env-viewer-plugin-spinal-linker/src/SpinalLinker.vue","node_modules/spinal-env-viewer-plugin-spinal-linker/src/node-item.vue","node_modules/spinal-env-viewer-plugin-spinal-linker/src/GraphManagerButton/SpinalLinkerButton.js","node_modules/spinal-env-viewer-plugin-spinal-linker/src/utilities.js","node_modules/spinal-env-viewer-context-geographic-service/build/constants.js","node_modules/spinal-env-viewer-context-geographic-service/src/constants.ts","node_modules/vue-async-computed/dist/vue-async-computed.esm.js"],"sourcesContent":["/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalForgeExtention } from \"spinal-env-viewer-panel-manager-service_spinalforgeextention\";\nimport SpinalLinker from \"./src/SpinalLinker.vue\";\nimport \"./src/GraphManagerButton/SpinalLinkerButton\";\n\nimport Vue from 'vue';\n\nimport AsyncComputed from 'vue-async-computed'\nVue.use(AsyncComputed);\n\n\nconst extentions = SpinalForgeExtention.createExtention( {\n  name: \"plugin-spinal-linker\",\n  vueMountComponent: Vue.extend(  SpinalLinker ),\n\n  panel: {\n    title: \"Spinal Linker\",\n    className: \"plugin-spinal-linker\",\n    closeBehaviour: \"delete\"\n  },\n  style: {\n    height: '80vh',\n    width: '360px',\n    top: '0px',\n    left: '427px'\n  }\n} );\n\nSpinalForgeExtention.registerExtention( \"plugin-spinal-linker\", extentions );\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst {\n  spinalPanelManagerService,\n  SpinalPanelApp\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst SpinalForgeExtention = require(\"./SpinalForgeExtention.js\")(\n  spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  SpinalForgeExtention\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalPanelManagerService = require(\"./SpinalPanelManagerService\");\nconst SpinalPanelApp = require(\"./SpinalPanelApp\");\n\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalPanelManagerService === \"undefined\")\n  G_root.spinal.spinalPanelManagerService = new SpinalPanelManagerService();\nconst SpinalMountExtention = require(\"./SpinalMountExtention.js\")(\n  G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  spinalPanelManagerService: G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp,\n  SpinalMountExtention,\n  install(Vue) {\n    Vue.prototype.$spinalPanelManagerService =\n      G_root.spinal.spinalPanelManagerService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} panels key = panelName, value = an instance of SpinalPanelApp\n * @class SpinalPanelManagerService\n */\nclass SpinalPanelManagerService {\n  /**\n   *Creates an instance of SpinalPanelManagerService.\n   * @memberof SpinalPanelManagerService\n   */\n  constructor() {\n    this.panels = {};\n  }\n\n  /**\n   * method to register an Panel Application\n   *\n   * @param {string} panelName the name of the panel\n   * @param {SpinalPanelApp} spinalPanelApp the application\n   * @memberof SpinalPanelManagerService\n   */\n  registerPanel(panelName, spinalPanelApp) {\n    this.panels[panelName] = spinalPanelApp;\n  }\n\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  openPanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].openPanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  closePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].closePanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  tooglePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].tooglePanel(option);\n    return false;\n  }\n}\n\nmodule.exports = SpinalPanelManagerService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n * Base interface like class of a panel\n *\n * @class SpinalPanelApp\n */\nclass SpinalPanelApp {\n  constructor() {}\n\n  openPanel(option) {}\n  closePanel(option) {}\n  tooglePanel(option) {}\n}\n\nmodule.exports = SpinalPanelApp;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (!option.vueMountComponent) {\n    throw new Error(\"mount : missing option vueMountComponent\");\n  }\n\n  cfg.name = option.name || \"SpinalMount\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.parentContainer = option.parentContainer || document.body;\n  return cfg;\n}\n\nfunction getDialog() {\n  if (!this.dialog) {\n    this.dialog = document.createElement(\"div\");\n    const _compo = document.createElement(\"div\");\n    this.dialog.className = \"spinal-modal-container\";\n    this.cfg.parentContainer.appendChild(this.dialog);\n    this.dialog.appendChild(_compo);\n    this.compoment = new this.cfg.vueMountComponent({\n      propsData: {\n        onFinised: this.onFinised.bind(this)\n      }\n    }).$mount(_compo);\n  }\n  return this.dialog;\n}\n\n/**\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { mount }\n */\nmodule.exports = function(spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n```js\n{\n  name: \"myCustomDialogName\",\n  vueMountComponent: Vue.extend(aVueCompomentDialog),\n  parentContainer: document.body\n}```\n     *\n     * @param {*} option\n     */\n    mount(option) {\n      let cfg = configInit(option);\n      const SpinalMount = class extends SpinalPanelApp {\n        constructor() {\n          super();\n          this.cfg = cfg;\n          this.dialog = null;\n          this.compoment = null;\n        }\n\n        openPanel(opt) {\n          getDialog.call(this);\n          this.compoment.opened(opt);\n        }\n        closePanel(opt) {\n          if (this.dialog !== null) {\n            this.compoment.removed(opt);\n            this.dialog.remove();\n            this.dialog = null;\n            this.compoment = null;\n          }\n        }\n\n        tooglePanel(opt) {\n          if (this.dialog !== null) {\n            this.closePanel(opt);\n          } else {\n            this.openPanel(opt);\n          }\n        }\n\n        /**\n         * called when dialog closed by the dialog itself\n         */\n        onFinised(closeResult) {\n          this.closePanel(closeResult);\n        }\n      };\n      let SpinalMountInstance = new SpinalMount();\n      spinalPanelManagerService.registerPanel(cfg.name, SpinalMountInstance);\n    }\n  };\n};\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (typeof option.toolbar !== \"undefined\") {\n    cfg.toolbar = {\n      icon: option.toolbar.icon || \"done\",\n      label: option.toolbar.label || \"label\",\n      subToolbarName: option.toolbar.subToolbarName || \"spinalcom\",\n      styleBtn: {},\n      styleIcon: {}\n    };\n    Object.assign(cfg.toolbar.styleBtn, option.toolbar.styleBtn);\n    Object.assign(cfg.toolbar.styleIcon, option.toolbar.styleIcon);\n  }\n  if (typeof option.panel !== \"undefined\") {\n    cfg.panel = {\n      title: option.panel.title || \"Spinalcom Panel\",\n      classname: option.panel.classname || \"spinal-pannel\",\n      closeBehaviour: option.panel.closeBehaviour || \"hide\"\n    };\n    if (typeof option.style !== \"undefined\") {\n      cfg.style = {};\n      Object.assign(cfg.style, option.style);\n    }\n  }\n  cfg.name = option.name || \"spinalExtention\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.onLoad = option.onLoad;\n  cfg.onUnLoad = option.onUnLoad;\n  return cfg;\n}\n\nfunction onToolbarCreated() {\n  this.viewer.removeEventListener(\n    window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n    this.onToolbarCreatedBinded\n  );\n  this.onToolbarCreatedBinded = null;\n  createToolbar.call(this);\n}\n\nfunction createToolbar() {\n  this.toolbarButton = new window.Autodesk.Viewing.UI.Button(\n    this.cfg.toolbar.label\n  );\n  this.toolbarButton.onClick = () => {\n    this.tooglePanel(this.cfg);\n  };\n  var icon = this.toolbarButton.container.firstChild;\n  icon.className = \"adsk-button-icon md-icon md-icon-font md-theme-default\";\n  icon.innerHTML = this.cfg.toolbar.icon;\n\n  for (var key in this.cfg.toolbar.styleIcon) {\n    if (this.cfg.toolbar.styleIcon.hasOwnProperty(key)) {\n      icon.style[key] = this.cfg.toolbar.styleIcon[key];\n    }\n  }\n  for (var key in this.cfg.toolbar.styleBtn) {\n    if (this.cfg.toolbar.styleBtn.hasOwnProperty(key)) {\n      this.toolbarButton.container.style[key] = this.cfg.toolbar.styleBtn[key];\n    }\n  }\n\n  this.toolbarButton.setToolTip(this.cfg.toolbar.label);\n  this.subToolbar = this.viewer.toolbar.getControl(\n    this.cfg.toolbar.subToolbarName\n  );\n  if (!this.subToolbar) {\n    this.subToolbar = new window.Autodesk.Viewing.UI.ControlGroup(\n      this.cfg.toolbar.subToolbarName\n    );\n    this.viewer.toolbar.addControl(this.subToolbar);\n  }\n  this.subToolbar.addControl(this.toolbarButton);\n}\n\nfunction closeComponent() {\n  if (this.cfg.panel.closeBehaviour !== \"hide\") {\n    try {\n      this.component.removed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n    this.panel.container.remove();\n    this.panel = null;\n  } else {\n    try {\n      this.component.closed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction getPanel() {\n  if (this.panel === null) {\n    this.panel = new window.PanelClass(this.viewer, this.cfg.panel.title);\n    var _container = document.createElement(\"div\");\n    var _scrollContainer = this.panel.createScrollContainer();\n\n    _container.className +=\n      this.panel.container.id + \"-panelcontainer \" + this.cfg.panel.classname;\n    for (var key in this.cfg.style) {\n      if (this.cfg.style.hasOwnProperty(key)) {\n        this.panel.container.style[key] = this.cfg.style[key];\n      }\n    }\n\n    if (this.panel.container.style.left) {\n      this.panel.container.style.left = \"0\";\n    }\n\n    this.panel.container.appendChild(_scrollContainer);\n    _scrollContainer.style.height = \"calc(100% - 52px)\";\n    _scrollContainer.appendChild(_container);\n\n    var _footer = this.panel.createFooter();\n    this.panel.container.appendChild(_footer);\n\n    if (this.cfg.vueMountComponent) {\n      this.component = new this.cfg.vueMountComponent().$mount(_container);\n    }\n\n    const _this = this;\n    this.panel.addVisibilityListener(open => {\n      if (!open) {\n        closeComponent.call(_this);\n      }\n    });\n  }\n  return this.panel;\n}\n\n/**\n *\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { createExtention, registerExtention }\n */\nmodule.exports = function (spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n     * factory function to create a dynamic class that extends the `SpinalPanelApp` class\n     *```js\n{\n  name: \"extention_name\",\n  vueMountComponent: Vue.extend(aVueCompoment),\n  onLoad: () => {console.log(\"onLoad\");},\n  onUnLoad: () => {console.log(\"onUnLoad\");},\n  toolbar: {\n    icon: \"done\",\n    label: \"testLabel\",\n    subToolbarName: \"spinalcom\"\n  },\n  panel: {\n    title: \"Spinalcom Panel\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"hide\"\n  },\n  style: {}\n}\n```\n     * @param {object} option see description\n     * @returns SpinalForgeExtention\n     */\n    createExtention(option) {\n      const cfg = configInit(option);\n      /**\n       * class returned by createExtention\n       * this extention is also registered in autodesk viweer\n       * @extends SpinalPanelApp\n       * @property {AutodeskViewer} viewer the autodesk view\n       * @property {AutodeskPanel} panel the panel\n       * @property {Vue.component} component the component mounted\n       * @property {Object} cfg the option given on creation\n       */\n      const SpinalForgeExtention = class extends SpinalPanelApp {\n        constructor(viewer, options) {\n          super();\n          window.Autodesk.Viewing.Extension.call(this, viewer, options);\n          this.viewer = viewer;\n          this.panel = null;\n          this.cfg = cfg;\n          spinalPanelManagerService.registerPanel(cfg.name, this);\n        }\n        /**\n         * method called on load of the extention (managed by the autodesk viewer)\n         * the method create a button in the toolbar if put in the option of `createExtention`.\n         */\n        load() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            // add toolbar\n            if (this.viewer.toolbar) {\n              createToolbar.call(this);\n            } else {\n              this.onToolbarCreatedBinded = onToolbarCreated.bind(this);\n              this.viewer.addEventListener(\n                window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n                this.onToolbarCreatedBinded\n              );\n            }\n          }\n          if (typeof cfg.onLoad !== \"undefined\") cfg.onLoad.call(this);\n          return true;\n        }\n        /**\n         * method called when the viewer unload of the extention\n         * (managed by the autodesk viewer)\n         */\n        unload() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            this.viewer.subToolbar.removeControl(this.toolbarButton);\n          }\n          if (typeof cfg.onUnLoad !== \"undefined\") cfg.onUnLoad.call(this);\n          return true;\n        }\n\n        activate() {\n          return this.load();\n        }\n\n        deactivate() {\n          return this.unload();\n        }\n\n        /**\n         *\n         * @param {*} option\n         */\n        openPanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(true);\n          try {\n            this.component.opened.call(this.component, option, this.viewer);\n          } catch (e) {\n            console.error(e);\n          }\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        closePanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(false);\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        tooglePanel(option) {\n          if (this.panel === null || this.panel.isVisible() === false) {\n            this.openPanel.call(this, option);\n          } else { this.closePanel.call(this, option); }\n        }\n      };\n      return SpinalForgeExtention;\n    },\n\n    /**\n     * Method to register an extention to the viewer and the forge viewer\n     * @param {string} name name of the extention\n     * @param {*} classExtention an extention created by `createExtention`\n     */\n    registerExtention(name, classExtention) {\n      // register to forge\n      window.Autodesk.Viewing.theExtensionManager.registerExtension(\n        name,\n        classExtention\n      );\n      // register to viewer\n      window.spinal.ForgeExtentionManager.addExtention(name);\n    }\n  };\n};\n","<!--\n  - Copyright 2019 SpinalCom - www.spinalcom.com\n  -\n  -  This file is part of SpinalCore.\n  -\n  -  Please read all of the following terms and conditions\n  -  of the Free Software license Agreement (\"Agreement\")\n  -  carefully.\n  -\n  -  This Agreement is a legally binding contract between\n  -  the Licensee (as defined below) and SpinalCom that\n  -  sets forth the terms and conditions that govern your\n  -  use of the Program. By installing and/or using the\n  -  Program, you agree to abide by all the terms and\n  -  conditions stated or referenced herein.\n  -\n  -  If you do not agree to abide by these terms and\n  -  conditions, do not demonstrate your acceptance and do\n  -  not install or use the Program.\n  -  You should have received a copy of the license along\n  -  with this file. If not, see\n  -  <http://resources.spinalcom.com/licenses.pdf>.\n  -->\n\n<template>\n    <div class=\"plugin-spinal-linker\">\n        <h1>{{name}}</h1>\n        <node-item v-for=\"(contextId) in contextsId\"\n                   :node-id=\"contextId\"\n                   :invert-link=\"false\"\n                   :link-id=\"inspectedNode.id.get()\"\n                   :link-relation-name=\"relationName\"\n                   :link-relation-type=\"relationType\"\n        />\n    </div>\n</template>\n\n<script>\n  import { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n  import NodeItem from \"./node-item.vue\";\n\n\n  export default {\n    name: \"SpinalLinker\",\n    components: { NodeItem, },\n    data: function () {\n      return {\n        'contextsId': [],\n        'inspectedNode': '',\n        'relationName': '',\n        'relationType': '',\n      };\n    },\n    computed: {\n      name: function () {\n        if (this.inspectedNode && this.inspectedNode.hasOwnProperty( 'name' ))\n          return this.inspectedNode.name.get();\n        return ''\n      }\n    },\n    methods: {\n      opened: function ( option ) {\n\n        this.relationName = option.relationName;\n        this.relationType = option.relationType;\n        this.inspectedNode = option.selectedNode;\n        this.contextsId = [];\n        const graphId = SpinalGraphService.getGraph().info.id.get();\n        SpinalGraphService.getChildren( graphId, [] ).then( children => {\n          for (let i = 0; i < children.length; i++) {\n            if (children[i].hasOwnProperty( 'id' ))\n              this.contextsId.push( children[i].id.get() )\n          }\n        } );\n      },\n      closed: function () {\n\n      },\n      removed: function () {\n      }\n    }\n  }\n</script>\n\n<style>\n\n    .plugin-spinal-linker * {\n        box-sizing: border-box;\n    }\n\n</style>","<template>\n    <li>\n        <div class=\"plugin-linker-header\">\n            <drop-up-down-button\n                    :opened=\"open\"\n                    @click=\"toggle\"\n            />\n            {{name}}\n            <spinal-icon-button\n                    v-if=\"canLink\"\n                    class=\"plugin-linker-link-button\"\n                    icon=\"link\"\n                    tool-tip=\"link node\"\n                    @click=\"link\"\n            />\n            <spinal-icon-button\n                    v-else\n                    class=\"plugin-linker-link-button\"\n                    icon=\"link_off\"\n                    tool-tip=\"unlink node\"\n                    @click=\"unlink\"\n            />\n        </div>\n        <ul v-if=\"open\">\n            <node-item\n                    v-for=\"(nodeId, index) in node.childrenIds\"\n                    :nodeId=\"nodeId\"\n                    :key=\"index\"\n                    :invert-link=\"invertLink\"\n                    :link-id=\"linkId\"\n                    :link-relation-name=\"linkRelationName\"\n                    :link-relation-type=\"linkRelationType\"\n            />\n        </ul>\n    </li>\n</template>\n\n<script>\n  import {\n    SpinalIconButton,\n    DropUpDownButton\n  }\n    from \"spinal-env-viewer-vue-components-lib\";\n  import { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\n  export default {\n    name: \"nodeItem\",\n    components: { DropUpDownButton, SpinalIconButton },\n    data: function () {\n      return {\n        node: {},\n        open: false,\n        linked: false\n      }\n    },\n    props: {\n      nodeId: {\n        type: String,\n        required: true\n      },\n      invertLink: {\n        type: Boolean,\n        default: false\n      },\n      linkId: {\n        type: String,\n        required: true\n      },\n      linkRelationName: {\n        type: String,\n        default: 'HasBeenLink'\n      },\n      linkRelationType: {\n        type: String,\n        default: SpinalGraphService.SPINAL_RELATION_PTR_LST_TYPE\n      }\n    },\n    computed: {\n      name: function () {\n        if (this.node && this.node.hasOwnProperty( 'name' )) {\n          return this.node.name.get();\n        }\n        return 'Unknown name';\n      },\n      hasChildren: function () {\n        if (this.node && this.node.hasOwnProperty( 'childrenIds' ))\n          return false;\n        return false;\n      }\n    },\n    asyncComputed: {\n      canLink: {\n        get: async function () {\n          if (!this.linked && this.node && this.node.hasOwnProperty( 'id'\n          )) {\n            let res = await SpinalGraphService\n              .isChild( this.linkId, this.node.id.get(), [this.linkRelationName] );\n            if (this.invertLink)\n              res = await SpinalGraphService\n                .isChild( this.node.id.get(), this.linkId, [this.linkRelationName] );\n            return res === false;\n          }\n          return false;\n        },\n        default: false,\n        watch: ['linked']\n      },\n\n    },\n    methods: {\n      link: function () {\n\n        if (this.invertLink) {\n          SpinalGraphService.addChild( this.node.id.get(), this.linkId,\n            this.linkRelationName, this.linkRelationType );\n        } else {\n          SpinalGraphService.addChild( this.linkId, this.node.id.get(),\n            this.linkRelationName, this.linkRelationType );\n        }\n        this.linked = true;\n      },\n      unlink: function () {\n        if (this.invertLink) {\n          SpinalGraphService.removeChild( this.node.id.get(), this.linkId,\n            this.linkRelationName, this.linkRelationType ).then( () => {\n              console.log( 'unlink inverted' );\n            } )\n            .catch( e =>\n              console.error( e ) );\n        } else {\n          SpinalGraphService.removeChild( this.linkId, this.node.id.get(),\n            this.linkRelationName, this.linkRelationType )\n            .then( () => {\n              console.log( 'unlink' );\n            } )\n            .catch( e =>\n              console.error( e )\n            );\n        }\n        this.linked = false;\n      },\n      toggle: function () {\n        this.open = !this.open\n      }\n    },\n    mounted() {\n      this.node = SpinalGraphService.getNode( this.nodeId );\n    }\n  }\n</script>\n\n<style scoped>\n    li{\n        list-style-type: none;\n    }\n    .plugin-linker-header{\n        display: flex;\n    }\n</style>","import {\n  SpinalContextApp,\n  spinalContextMenuService,\n} from 'spinal-env-viewer-context-menu-service';\nimport {\n  spinalPanelManagerService,\n} from 'spinal-env-viewer-panel-manager-service';\nimport {\n  SpinalGraphService,\n  SpinalNode,\n  SPINAL_RELATION_PTR_LST_TYPE,\n} from 'spinal-env-viewer-graph-service';\nimport {\n  isShownParam\n} from '../utilities'\nexport default class SpinalLinkerButton extends SpinalContextApp {\n  constructor() {\n    super('SpinalLinker', 'Open SpinalLinker', {\n      icon: 'link',\n      icon_type: 'in',\n      backgroundColor: '#000000',\n      fontColor: '#ffffff',\n    });\n  }\n\n  isShown(option) {\n    if (option.exist || option.selectedNode) {\n      if (option.selectedNode instanceof SpinalNode) {\n        return Promise.resolve(true);\n      } else {\n        if (\n          option.hasOwnProperty('selectedNode') &&\n          isShownParam.includes(option.selectedNode.type.get())\n        ) {\n          return Promise.resolve(true);\n        }\n      }\n    }\n    return Promise.resolve(-1);\n  }\n\n  action(option) {\n    let selectedNode = option.selectedNode;\n\n    if (option.selectedNode instanceof SpinalNode) {\n      SpinalGraphService._addNode(option.selectedNode);\n      selectedNode = SpinalGraphService.getInfo(option.selectedNode.getId());\n    }\n    const param = {\n      relationName: 'hasEndPoint',\n      relationType: SPINAL_RELATION_PTR_LST_TYPE,\n      selectedNode: selectedNode,\n    };\n    spinalPanelManagerService.openPanel('plugin-spinal-linker', param);\n  }\n}\n\nconst TopBarName = 'GraphManagerSideBar';\nconst circularMenuName = 'circularMenu';\n\nspinalContextMenuService.registerApp(TopBarName, new SpinalLinkerButton(), [3]);\nspinalContextMenuService.registerApp(\n  circularMenuName,\n  new SpinalLinkerButton(), [3]\n);\n","import {\n  SpinalGraphService\n} from 'spinal-env-viewer-graph-service';\nimport {\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  EQUIPMENT_TYPE\n} from 'spinal-env-viewer-context-geographic-service/build/constants'\nlet isShownParam = [\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  EQUIPMENT_TYPE\n]\n\n\nmodule.exports = {\n  isShownParam\n};","\"use strict\";\n/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REFERENCE_ROOM_RELATION = exports.ROOM_REFERENCE_CONTEXT = exports.ZONE_REFERENCE_CONTEXT = exports.FLOOR_REFERENCE_CONTEXT = exports.BUILDING_REFERENCE_CONTEXT = exports.SITE_REFERENCE_CONTEXT = exports.REFERENCE_RELATION = exports.REFERENCE_TYPE = exports.MAP_RELATION_TYPE = exports.MAP_TYPE_RELATION = exports.GEOGRAPHIC_RELATIONS_ORDER = exports.EQUIPMENT_RELATION = exports.GEOGRAPHIC_RELATIONS = exports.ROOM_RELATION = exports.ZONE_RELATION = exports.FLOOR_RELATION = exports.BUILDING_RELATION = exports.SITE_RELATION = exports.GEOGRAPHIC_TYPES_ORDER = exports.EQUIPMENT_TYPE = exports.GEOGRAPHIC_TYPES = exports.ROOM_TYPE = exports.ZONE_TYPE = exports.FLOOR_TYPE = exports.BUILDING_TYPE = exports.SITE_TYPE = exports.CONTEXT_TYPE = void 0;\nconst CONTEXT_TYPE = 'geographicContext';\nexports.CONTEXT_TYPE = CONTEXT_TYPE;\nconst SITE_TYPE = 'geographicSite';\nexports.SITE_TYPE = SITE_TYPE;\nconst BUILDING_TYPE = 'geographicBuilding';\nexports.BUILDING_TYPE = BUILDING_TYPE;\nconst FLOOR_TYPE = 'geographicFloor';\nexports.FLOOR_TYPE = FLOOR_TYPE;\nconst ZONE_TYPE = 'geographicZone';\nexports.ZONE_TYPE = ZONE_TYPE;\nconst ROOM_TYPE = 'geographicRoom';\nexports.ROOM_TYPE = ROOM_TYPE;\nconst EQUIPMENT_TYPE = 'BIMObject';\nexports.EQUIPMENT_TYPE = EQUIPMENT_TYPE;\nconst REFERENCE_TYPE = 'geographicReference';\nexports.REFERENCE_TYPE = REFERENCE_TYPE;\nconst SITE_RELATION = 'hasGeographicSite';\nexports.SITE_RELATION = SITE_RELATION;\nconst BUILDING_RELATION = 'hasGeographicBuilding';\nexports.BUILDING_RELATION = BUILDING_RELATION;\nconst FLOOR_RELATION = 'hasGeographicFloor';\nexports.FLOOR_RELATION = FLOOR_RELATION;\nconst ZONE_RELATION = 'hasGeographicZone';\nexports.ZONE_RELATION = ZONE_RELATION;\nconst ROOM_RELATION = 'hasGeographicRoom';\nexports.ROOM_RELATION = ROOM_RELATION;\nconst EQUIPMENT_RELATION = 'hasBimObject';\nexports.EQUIPMENT_RELATION = EQUIPMENT_RELATION;\nconst REFERENCE_RELATION = 'hasReferenceObject';\nexports.REFERENCE_RELATION = REFERENCE_RELATION;\nconst REFERENCE_ROOM_RELATION = 'hasReferenceObject.ROOM';\nexports.REFERENCE_ROOM_RELATION = REFERENCE_ROOM_RELATION;\nconst SITE_REFERENCE_CONTEXT = '.SiteContext';\nexports.SITE_REFERENCE_CONTEXT = SITE_REFERENCE_CONTEXT;\nconst BUILDING_REFERENCE_CONTEXT = '.BuildingContext';\nexports.BUILDING_REFERENCE_CONTEXT = BUILDING_REFERENCE_CONTEXT;\nconst FLOOR_REFERENCE_CONTEXT = '.FloorContext';\nexports.FLOOR_REFERENCE_CONTEXT = FLOOR_REFERENCE_CONTEXT;\nconst ZONE_REFERENCE_CONTEXT = '.ZoneContext';\nexports.ZONE_REFERENCE_CONTEXT = ZONE_REFERENCE_CONTEXT;\nconst ROOM_REFERENCE_CONTEXT = '.RoomContext';\nexports.ROOM_REFERENCE_CONTEXT = ROOM_REFERENCE_CONTEXT;\nconst GEOGRAPHIC_TYPES = Object.freeze([\n    SITE_TYPE,\n    BUILDING_TYPE,\n    FLOOR_TYPE,\n    ZONE_TYPE,\n    ROOM_TYPE,\n]);\nexports.GEOGRAPHIC_TYPES = GEOGRAPHIC_TYPES;\nconst GEOGRAPHIC_TYPES_ORDER = Object.freeze([\n    CONTEXT_TYPE,\n    SITE_TYPE,\n    BUILDING_TYPE,\n    FLOOR_TYPE,\n    ZONE_TYPE,\n    ROOM_TYPE,\n    EQUIPMENT_TYPE,\n]);\nexports.GEOGRAPHIC_TYPES_ORDER = GEOGRAPHIC_TYPES_ORDER;\nconst GEOGRAPHIC_RELATIONS = Object.freeze([\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n]);\nexports.GEOGRAPHIC_RELATIONS = GEOGRAPHIC_RELATIONS;\nconst GEOGRAPHIC_RELATIONS_ORDER = Object.freeze([\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n]);\nexports.GEOGRAPHIC_RELATIONS_ORDER = GEOGRAPHIC_RELATIONS_ORDER;\nconst MAP_TYPE_RELATION = Object.freeze(new Map([\n    [SITE_TYPE, SITE_RELATION],\n    [BUILDING_TYPE, BUILDING_RELATION],\n    [FLOOR_TYPE, FLOOR_RELATION],\n    [ZONE_TYPE, ZONE_RELATION],\n    [ROOM_TYPE, ROOM_RELATION],\n    [EQUIPMENT_TYPE, EQUIPMENT_RELATION],\n]));\nexports.MAP_TYPE_RELATION = MAP_TYPE_RELATION;\nconst MAP_RELATION_TYPE = Object.freeze(new Map([\n    [SITE_RELATION, SITE_TYPE],\n    [BUILDING_RELATION, BUILDING_TYPE],\n    [FLOOR_RELATION, FLOOR_TYPE],\n    [ZONE_RELATION, ZONE_TYPE],\n    [ROOM_RELATION, ROOM_TYPE],\n    [EQUIPMENT_RELATION, EQUIPMENT_TYPE],\n]));\nexports.MAP_RELATION_TYPE = MAP_RELATION_TYPE;\n//# sourceMappingURL=constants.js.map","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst CONTEXT_TYPE = 'geographicContext';\nconst SITE_TYPE = 'geographicSite';\nconst BUILDING_TYPE = 'geographicBuilding';\nconst FLOOR_TYPE = 'geographicFloor';\nconst ZONE_TYPE = 'geographicZone';\nconst ROOM_TYPE = 'geographicRoom';\nconst EQUIPMENT_TYPE = 'BIMObject';\nconst REFERENCE_TYPE = 'geographicReference';\n\nconst SITE_RELATION = 'hasGeographicSite';\nconst BUILDING_RELATION = 'hasGeographicBuilding';\nconst FLOOR_RELATION = 'hasGeographicFloor';\nconst ZONE_RELATION = 'hasGeographicZone';\nconst ROOM_RELATION = 'hasGeographicRoom';\nconst EQUIPMENT_RELATION = 'hasBimObject';\nconst REFERENCE_RELATION = 'hasReferenceObject';\nconst REFERENCE_ROOM_RELATION = 'hasReferenceObject.ROOM';\n\nconst SITE_REFERENCE_CONTEXT = '.SiteContext';\nconst BUILDING_REFERENCE_CONTEXT = '.BuildingContext';\nconst FLOOR_REFERENCE_CONTEXT = '.FloorContext';\nconst ZONE_REFERENCE_CONTEXT = '.ZoneContext';\nconst ROOM_REFERENCE_CONTEXT = '.RoomContext';\n\nconst GEOGRAPHIC_TYPES = Object.freeze([\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n]) as string[];\n\nconst GEOGRAPHIC_TYPES_ORDER = Object.freeze([\n  CONTEXT_TYPE,\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  EQUIPMENT_TYPE,\n]) as string[];\n\nconst GEOGRAPHIC_RELATIONS = Object.freeze([\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n]) as string[];\n\nconst GEOGRAPHIC_RELATIONS_ORDER = Object.freeze([\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n]) as string[];\n\nconst MAP_TYPE_RELATION = Object.freeze(\n  new Map([\n    [SITE_TYPE, SITE_RELATION],\n    [BUILDING_TYPE, BUILDING_RELATION],\n    [FLOOR_TYPE, FLOOR_RELATION],\n    [ZONE_TYPE, ZONE_RELATION],\n    [ROOM_TYPE, ROOM_RELATION],\n    [EQUIPMENT_TYPE, EQUIPMENT_RELATION],\n  ])\n) as Map<string, string>;\n\nconst MAP_RELATION_TYPE = Object.freeze(\n  new Map([\n    [SITE_RELATION, SITE_TYPE],\n    [BUILDING_RELATION, BUILDING_TYPE],\n    [FLOOR_RELATION, FLOOR_TYPE],\n    [ZONE_RELATION, ZONE_TYPE],\n    [ROOM_RELATION, ROOM_TYPE],\n    [EQUIPMENT_RELATION, EQUIPMENT_TYPE],\n  ])\n) as Map<string, string>;\n\nexport {\n  CONTEXT_TYPE,\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  GEOGRAPHIC_TYPES,\n  EQUIPMENT_TYPE,\n  GEOGRAPHIC_TYPES_ORDER,\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  GEOGRAPHIC_RELATIONS,\n  EQUIPMENT_RELATION,\n  GEOGRAPHIC_RELATIONS_ORDER,\n  MAP_TYPE_RELATION,\n  MAP_RELATION_TYPE,\n  REFERENCE_TYPE,\n  REFERENCE_RELATION,\n  SITE_REFERENCE_CONTEXT,\n  BUILDING_REFERENCE_CONTEXT,\n  FLOOR_REFERENCE_CONTEXT,\n  ZONE_REFERENCE_CONTEXT,\n  ROOM_REFERENCE_CONTEXT,\n  REFERENCE_ROOM_RELATION\n};\n","function setAsyncState(vm, stateObject, state) {\n  vm.$set(vm.$data._asyncComputed[stateObject], 'state', state);\n  vm.$set(vm.$data._asyncComputed[stateObject], 'updating', state === 'updating');\n  vm.$set(vm.$data._asyncComputed[stateObject], 'error', state === 'error');\n  vm.$set(vm.$data._asyncComputed[stateObject], 'success', state === 'success');\n}\n\nfunction getterOnly(fn) {\n  if (typeof fn === 'function') return fn;\n\n  return fn.get;\n}\n\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\nfunction isComputedLazy(item) {\n  return hasOwnProperty(item, 'lazy') && item.lazy;\n}\n\nfunction isLazyActive(vm, key) {\n  return vm[lazyActivePrefix + key];\n}\n\nvar lazyActivePrefix = 'async_computed$lazy_active$',\n    lazyDataPrefix = 'async_computed$lazy_data$';\n\nfunction initLazy(data, key, value) {\n  data[lazyActivePrefix + key] = false;\n  data[lazyDataPrefix + key] = value;\n}\n\nfunction makeLazyComputed(key) {\n  return {\n    get: function get() {\n      this[lazyActivePrefix + key] = true;\n      return this[lazyDataPrefix + key];\n    },\n    set: function set(value) {\n      this[lazyDataPrefix + key] = value;\n    }\n  };\n}\n\nfunction silentSetLazy(vm, key, value) {\n  vm[lazyDataPrefix + key] = value;\n}\nfunction silentGetLazy(vm, key) {\n  return vm[lazyDataPrefix + key];\n}\n\nvar getGetterWatchedByArray = function getGetterWatchedByArray(computedAsyncProperty) {\n  return function getter() {\n    var _this = this;\n\n    computedAsyncProperty.watch.forEach(function (key) {\n      // Check if nested key is watched.\n      var splittedByDot = key.split('.');\n      if (splittedByDot.length === 1) {\n        // If not, just access it.\n        // eslint-disable-next-line no-unused-expressions\n        _this[key];\n      } else {\n        // Access the nested propety.\n        try {\n          var start = _this;\n          splittedByDot.forEach(function (part) {\n            start = start[part];\n          });\n        } catch (error) {\n          console.error('AsyncComputed: bad path: ', key);\n          throw error;\n        }\n      }\n    });\n    return computedAsyncProperty.get.call(this);\n  };\n};\n\nvar getGetterWatchedByFunction = function getGetterWatchedByFunction(computedAsyncProperty) {\n  return function getter() {\n    computedAsyncProperty.watch.call(this);\n    return computedAsyncProperty.get.call(this);\n  };\n};\n\nfunction getWatchedGetter(computedAsyncProperty) {\n  if (typeof computedAsyncProperty.watch === 'function') {\n    return getGetterWatchedByFunction(computedAsyncProperty);\n  } else if (Array.isArray(computedAsyncProperty.watch)) {\n    computedAsyncProperty.watch.forEach(function (key) {\n      if (typeof key !== 'string') {\n        throw new Error('AsyncComputed: watch elemnts must be strings');\n      }\n    });\n    return getGetterWatchedByArray(computedAsyncProperty);\n  } else {\n    throw Error('AsyncComputed: watch should be function or an array');\n  }\n}\n\nvar DidNotUpdate = typeof Symbol === 'function' ? Symbol('did-not-update') : {};\n\nvar getGetterWithShouldUpdate = function getGetterWithShouldUpdate(asyncProprety, currentGetter) {\n  return function getter() {\n    return asyncProprety.shouldUpdate.call(this) ? currentGetter.call(this) : DidNotUpdate;\n  };\n};\n\nvar shouldNotUpdate = function shouldNotUpdate(value) {\n  return DidNotUpdate === value;\n};\n\nvar prefix = '_async_computed$';\n\nvar AsyncComputed = {\n  install: function install(Vue, pluginOptions) {\n    pluginOptions = pluginOptions || {};\n\n    Vue.config.optionMergeStrategies.asyncComputed = Vue.config.optionMergeStrategies.computed;\n\n    Vue.mixin({\n      data: function data() {\n        return {\n          _asyncComputed: {}\n        };\n      },\n\n      computed: {\n        $asyncComputed: function $asyncComputed() {\n          return this.$data._asyncComputed;\n        }\n      },\n      beforeCreate: function beforeCreate() {\n        var asyncComputed = this.$options.asyncComputed || {};\n\n        if (!Object.keys(asyncComputed).length) return;\n\n        for (var key in asyncComputed) {\n          var getter = getterFn(key, asyncComputed[key]);\n          this.$options.computed[prefix + key] = getter;\n        }\n\n        this.$options.data = initDataWithAsyncComputed(this.$options, pluginOptions);\n      },\n      created: function created() {\n        for (var key in this.$options.asyncComputed || {}) {\n          var item = this.$options.asyncComputed[key],\n              value = generateDefault.call(this, item, pluginOptions);\n          if (isComputedLazy(item)) {\n            silentSetLazy(this, key, value);\n          } else {\n            this[key] = value;\n          }\n        }\n\n        for (var _key in this.$options.asyncComputed || {}) {\n          handleAsyncComputedPropetyChanges(this, _key, pluginOptions, Vue);\n        }\n      }\n    });\n  }\n};\n\nfunction handleAsyncComputedPropetyChanges(vm, key, pluginOptions, Vue) {\n  var promiseId = 0;\n  var watcher = function watcher(newPromise) {\n    var thisPromise = ++promiseId;\n\n    if (shouldNotUpdate(newPromise)) return;\n\n    if (!newPromise || !newPromise.then) {\n      newPromise = Promise.resolve(newPromise);\n    }\n    setAsyncState(vm, key, 'updating');\n\n    newPromise.then(function (value) {\n      if (thisPromise !== promiseId) return;\n      setAsyncState(vm, key, 'success');\n      vm[key] = value;\n    }).catch(function (err) {\n      if (thisPromise !== promiseId) return;\n\n      setAsyncState(vm, key, 'error');\n      Vue.set(vm.$data._asyncComputed[key], 'exception', err);\n      if (pluginOptions.errorHandler === false) return;\n\n      var handler = pluginOptions.errorHandler === undefined ? console.error.bind(console, 'Error evaluating async computed property:') : pluginOptions.errorHandler;\n\n      if (pluginOptions.useRawError) {\n        handler(err, vm, err.stack);\n      } else {\n        handler(err.stack);\n      }\n    });\n  };\n  Vue.set(vm.$data._asyncComputed, key, {\n    exception: null,\n    update: function update() {\n      if (!vm._isDestroyed) {\n        watcher(getterOnly(vm.$options.asyncComputed[key]).apply(vm));\n      }\n    }\n  });\n  setAsyncState(vm, key, 'updating');\n  vm.$watch(prefix + key, watcher, { immediate: true });\n}\n\nfunction initDataWithAsyncComputed(options, pluginOptions) {\n  var optionData = options.data;\n  var asyncComputed = options.asyncComputed || {};\n\n  return function vueAsyncComputedInjectedDataFn(vm) {\n    var data = (typeof optionData === 'function' ? optionData.call(this, vm) : optionData) || {};\n    for (var key in asyncComputed) {\n      var item = this.$options.asyncComputed[key];\n\n      var value = generateDefault.call(this, item, pluginOptions);\n      if (isComputedLazy(item)) {\n        initLazy(data, key, value);\n        this.$options.computed[key] = makeLazyComputed(key);\n      } else {\n        data[key] = value;\n      }\n    }\n    return data;\n  };\n}\n\nfunction getterFn(key, fn) {\n  if (typeof fn === 'function') return fn;\n\n  var getter = fn.get;\n\n  if (hasOwnProperty(fn, 'watch')) {\n    getter = getWatchedGetter(fn);\n  }\n\n  if (hasOwnProperty(fn, 'shouldUpdate')) {\n    getter = getGetterWithShouldUpdate(fn, getter);\n  }\n\n  if (isComputedLazy(fn)) {\n    var nonLazy = getter;\n    getter = function lazyGetter() {\n      if (isLazyActive(this, key)) {\n        return nonLazy.call(this);\n      } else {\n        return silentGetLazy(this, key);\n      }\n    };\n  }\n  return getter;\n}\n\nfunction generateDefault(fn, pluginOptions) {\n  var defaultValue = null;\n\n  if ('default' in fn) {\n    defaultValue = fn.default;\n  } else if ('default' in pluginOptions) {\n    defaultValue = pluginOptions.default;\n  }\n\n  if (typeof defaultValue === 'function') {\n    return defaultValue.call(this);\n  } else {\n    return defaultValue;\n  }\n}\n\n/* istanbul ignore if */\nif (typeof window !== 'undefined' && window.Vue) {\n  // Auto install in dist mode\n  window.Vue.use(AsyncComputed);\n}\n\nexport default AsyncComputed;\n"],"names":[],"version":3,"file":"spinal-env-viewer-plugin-spinal-linker.e60a1580.js.map"}