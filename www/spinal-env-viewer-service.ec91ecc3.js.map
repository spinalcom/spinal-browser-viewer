{"mappings":"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","sources":["node_modules/spinal-env-viewer-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelManagerService.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelApp.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalMountExtention.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/index.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/SpinalForgeExtention.js","node_modules/spinal-env-viewer-service/src/js/spriteManager.js","node_modules/spinal-env-viewer-service/src/constants.js","node_modules/@parcel/runtime-js/lib/runtime-30c0c85b08b99d14.js","node_modules/@parcel/runtime-js/lib/runtime-eb9adc5a5376758e.js","node_modules/@parcel/runtime-js/lib/runtime-589c4566ad549a74.js","node_modules/@parcel/runtime-js/lib/runtime-4787eaed25316290.js","node_modules/@parcel/runtime-js/lib/runtime-f0fded4d84b625bc.js","node_modules/@parcel/runtime-js/lib/runtime-8a3cae1e9bad0af1.js","node_modules/@parcel/runtime-js/lib/runtime-9773e8b4595a28fd.js","node_modules/spinal-env-viewer-service/src/buttons/ButtonVisualizeHardwareContext.js","node_modules/spinal-env-viewer-service/src/js/visualisationManager.js","node_modules/spinal-env-viewer-service/src/js/viewerManager.js","node_modules/spinal-env-viewer-service/src/js/threeJsManager.js","node_modules/path-browserify/index.js","node_modules/spinal-env-viewer-service/src/buttons/ButtonSavePositionOfBimObject.js","node_modules/spinal-env-viewer-service/src/buttons/ButtonSavePositionOfHardwareContextObjects.js","node_modules/spinal-models-building-elements/build/index.js","node_modules/spinal-models-building-elements/src/index.js","node_modules/spinal-models-building-elements/build/AbstractElement.js","node_modules/spinal-models-building-elements/src/AbstractElement.js","node_modules/spinal-models-building-elements/build/Utilities.js","node_modules/spinal-models-building-elements/src/Utilities.js","node_modules/spinal-models-building-elements/build/BIMElement.js","node_modules/spinal-models-building-elements/src/BIMElement.js","node_modules/spinal-models-bimobject/build/BIMObject.js","node_modules/spinal-models-bimobject/BIMObject.js"],"sourcesContent":["/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n\n\nimport Vue from \"vue\";\nimport Vuetify from 'vuetify';\nimport 'spinal-env-viewer-plugin-forge';\nimport { SpinalMountExtention } from \"spinal-env-viewer-panel-manager-service\";\nimport { SpinalForgeExtention } from \"spinal-env-viewer-panel-manager-service_spinalforgeextention\";\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\nimport * as spriteManager from \"./src/js/spriteManager\";\n\n// vue files\n// import RepartitionningPanel from \"./src/vue/panels/RepartitionningPanel.vue\"\n\n// button files\n// import {ButtonAddRepartitionningContext} from \"./src/buttons/ButtonAddRepartitionningContext\";\n// import {ButtonRepartitionning} from \"./src/buttons/ButtonRepartitionning\";\nimport { ButtonVisualizeHardwareContext } from \"./src/buttons/ButtonVisualizeHardwareContext\"\nimport { ButtonSavePositionOfBimObject } from \"./src/buttons/ButtonSavePositionOfBimObject\"\nimport { ButtonSavePositionOfHardwareContextObjects } from \"./src/buttons/ButtonSavePositionOfHardwareContextObjects\"\n\n\n\nVue.use( Vuetify );\n\n                            /* ******* */\n                            /* BUTTONS */\n                            /* ******* */\n\n\n// spinalContextMenuService.registerApp(\"GraphManagerTopBar\", new ButtonAddDeviceProfileContext(), [7]);\n// spinalContextMenuService.registerApp(\"GraphManagerSideBar\", new ButtonAddDeviceProfiles(), [7]);\n// spinalContextMenuService.registerApp(\"GraphManagerTopBar\", new ButtonAddRepartitionningContext(), [7]);\n\nspinalContextMenuService.registerApp(\"GraphManagerSideBar\", new ButtonSavePositionOfBimObject(), [7]);\nspinalContextMenuService.registerApp(\"GraphManagerSideBar\", new ButtonVisualizeHardwareContext(), [7]);\nspinalContextMenuService.registerApp(\"GraphManagerSideBar\", new ButtonSavePositionOfHardwareContextObjects(), [7]);\n\n\n\n\n\n\n\n\n\n                          /* ********** */\n                          /* EXTENSIONS */\n                          /* ********** */\n\n// SpinalMountExtention.mount( {\n//   // name registered.\n//   name: \"DialogRepartitionning\",\n//   // Vue.extend to create a Compoment constructor\n//   vueMountComponent: Vue.extend( DialogRepartitionning ),\n//   // where to  append the Compoment\n//   parentContainer: document.body\n// }\n// );\n\n// create \"addDeviceComponentExtension\" extension whiwh refers to \"./vue/addDeviceComponent.vue\"\n\n\n// const RepartitionningPanelExtension = SpinalForgeExtention.createExtention({\n//   name: \"RepartitionningPanelExtension\",\n//   vueMountComponent: Vue.extend(RepartitionningPanel),\n//   panel: {\n//     title: \"Generate/Update a Repartitionning Context\",\n//     // // classname: \"spinal-pannel\",\n//     closeBehaviour: \"hide\" // if something else panel is deleted\n//   },\n//   style: {\n//     left: \"405px\",\n//     width: \"700px\",\n//     height: '250px'\n//   },\n// //   onLoad: function(){},\n// //   onUnLoad: function(){}\n// });\n// SpinalForgeExtention.registerExtention(\"RepartitionningPanelExtension\", RepartitionningPanelExtension);\n\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalPanelManagerService = require(\"./SpinalPanelManagerService\");\nconst SpinalPanelApp = require(\"./SpinalPanelApp\");\n\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalPanelManagerService === \"undefined\")\n  G_root.spinal.spinalPanelManagerService = new SpinalPanelManagerService();\nconst SpinalMountExtention = require(\"./SpinalMountExtention.js\")(\n  G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  spinalPanelManagerService: G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp,\n  SpinalMountExtention,\n  install(Vue) {\n    Vue.prototype.$spinalPanelManagerService =\n      G_root.spinal.spinalPanelManagerService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} panels key = panelName, value = an instance of SpinalPanelApp\n * @class SpinalPanelManagerService\n */\nclass SpinalPanelManagerService {\n  /**\n   *Creates an instance of SpinalPanelManagerService.\n   * @memberof SpinalPanelManagerService\n   */\n  constructor() {\n    this.panels = {};\n  }\n\n  /**\n   * method to register an Panel Application\n   *\n   * @param {string} panelName the name of the panel\n   * @param {SpinalPanelApp} spinalPanelApp the application\n   * @memberof SpinalPanelManagerService\n   */\n  registerPanel(panelName, spinalPanelApp) {\n    this.panels[panelName] = spinalPanelApp;\n  }\n\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  openPanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].openPanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  closePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].closePanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  tooglePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].tooglePanel(option);\n    return false;\n  }\n}\n\nmodule.exports = SpinalPanelManagerService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n * Base interface like class of a panel\n *\n * @class SpinalPanelApp\n */\nclass SpinalPanelApp {\n  constructor() {}\n\n  openPanel(option) {}\n  closePanel(option) {}\n  tooglePanel(option) {}\n}\n\nmodule.exports = SpinalPanelApp;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (!option.vueMountComponent) {\n    throw new Error(\"mount : missing option vueMountComponent\");\n  }\n\n  cfg.name = option.name || \"SpinalMount\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.parentContainer = option.parentContainer || document.body;\n  return cfg;\n}\n\nfunction getDialog() {\n  if (!this.dialog) {\n    this.dialog = document.createElement(\"div\");\n    const _compo = document.createElement(\"div\");\n    this.dialog.className = \"spinal-modal-container\";\n    this.cfg.parentContainer.appendChild(this.dialog);\n    this.dialog.appendChild(_compo);\n    this.compoment = new this.cfg.vueMountComponent({\n      propsData: {\n        onFinised: this.onFinised.bind(this)\n      }\n    }).$mount(_compo);\n  }\n  return this.dialog;\n}\n\n/**\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { mount }\n */\nmodule.exports = function(spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n```js\n{\n  name: \"myCustomDialogName\",\n  vueMountComponent: Vue.extend(aVueCompomentDialog),\n  parentContainer: document.body\n}```\n     *\n     * @param {*} option\n     */\n    mount(option) {\n      let cfg = configInit(option);\n      const SpinalMount = class extends SpinalPanelApp {\n        constructor() {\n          super();\n          this.cfg = cfg;\n          this.dialog = null;\n          this.compoment = null;\n        }\n\n        openPanel(opt) {\n          getDialog.call(this);\n          this.compoment.opened(opt);\n        }\n        closePanel(opt) {\n          if (this.dialog !== null) {\n            this.compoment.removed(opt);\n            this.dialog.remove();\n            this.dialog = null;\n            this.compoment = null;\n          }\n        }\n\n        tooglePanel(opt) {\n          if (this.dialog !== null) {\n            this.closePanel(opt);\n          } else {\n            this.openPanel(opt);\n          }\n        }\n\n        /**\n         * called when dialog closed by the dialog itself\n         */\n        onFinised(closeResult) {\n          this.closePanel(closeResult);\n        }\n      };\n      let SpinalMountInstance = new SpinalMount();\n      spinalPanelManagerService.registerPanel(cfg.name, SpinalMountInstance);\n    }\n  };\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst {\n  spinalPanelManagerService,\n  SpinalPanelApp\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst SpinalForgeExtention = require(\"./SpinalForgeExtention.js\")(\n  spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  SpinalForgeExtention\n};\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (typeof option.toolbar !== \"undefined\") {\n    cfg.toolbar = {\n      icon: option.toolbar.icon || \"done\",\n      label: option.toolbar.label || \"label\",\n      subToolbarName: option.toolbar.subToolbarName || \"spinalcom\",\n      styleBtn: {},\n      styleIcon: {}\n    };\n    Object.assign(cfg.toolbar.styleBtn, option.toolbar.styleBtn);\n    Object.assign(cfg.toolbar.styleIcon, option.toolbar.styleIcon);\n  }\n  if (typeof option.panel !== \"undefined\") {\n    cfg.panel = {\n      title: option.panel.title || \"Spinalcom Panel\",\n      classname: option.panel.classname || \"spinal-pannel\",\n      closeBehaviour: option.panel.closeBehaviour || \"hide\"\n    };\n    if (typeof option.style !== \"undefined\") {\n      cfg.style = {};\n      Object.assign(cfg.style, option.style);\n    }\n  }\n  cfg.name = option.name || \"spinalExtention\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.onLoad = option.onLoad;\n  cfg.onUnLoad = option.onUnLoad;\n  return cfg;\n}\n\nfunction onToolbarCreated() {\n  this.viewer.removeEventListener(\n    window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n    this.onToolbarCreatedBinded\n  );\n  this.onToolbarCreatedBinded = null;\n  createToolbar.call(this);\n}\n\nfunction createToolbar() {\n  this.toolbarButton = new window.Autodesk.Viewing.UI.Button(\n    this.cfg.toolbar.label\n  );\n  this.toolbarButton.onClick = () => {\n    this.tooglePanel(this.cfg);\n  };\n  var icon = this.toolbarButton.container.firstChild;\n  icon.className = \"adsk-button-icon md-icon md-icon-font md-theme-default\";\n  icon.innerHTML = this.cfg.toolbar.icon;\n\n  for (var key in this.cfg.toolbar.styleIcon) {\n    if (this.cfg.toolbar.styleIcon.hasOwnProperty(key)) {\n      icon.style[key] = this.cfg.toolbar.styleIcon[key];\n    }\n  }\n  for (var key in this.cfg.toolbar.styleBtn) {\n    if (this.cfg.toolbar.styleBtn.hasOwnProperty(key)) {\n      this.toolbarButton.container.style[key] = this.cfg.toolbar.styleBtn[key];\n    }\n  }\n\n  this.toolbarButton.setToolTip(this.cfg.toolbar.label);\n  this.subToolbar = this.viewer.toolbar.getControl(\n    this.cfg.toolbar.subToolbarName\n  );\n  if (!this.subToolbar) {\n    this.subToolbar = new window.Autodesk.Viewing.UI.ControlGroup(\n      this.cfg.toolbar.subToolbarName\n    );\n    this.viewer.toolbar.addControl(this.subToolbar);\n  }\n  this.subToolbar.addControl(this.toolbarButton);\n}\n\nfunction closeComponent() {\n  if (this.cfg.panel.closeBehaviour !== \"hide\") {\n    try {\n      this.component.removed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n    this.panel.container.remove();\n    this.panel = null;\n  } else {\n    try {\n      this.component.closed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction getPanel() {\n  if (this.panel === null) {\n    this.panel = new window.PanelClass(this.viewer, this.cfg.panel.title);\n    var _container = document.createElement(\"div\");\n    var _scrollContainer = this.panel.createScrollContainer();\n\n    _container.className +=\n      this.panel.container.id + \"-panelcontainer \" + this.cfg.panel.classname;\n    for (var key in this.cfg.style) {\n      if (this.cfg.style.hasOwnProperty(key)) {\n        this.panel.container.style[key] = this.cfg.style[key];\n      }\n    }\n\n    if (this.panel.container.style.left) {\n      this.panel.container.style.left = \"0\";\n    }\n\n    this.panel.container.appendChild(_scrollContainer);\n    _scrollContainer.style.height = \"calc(100% - 52px)\";\n    _scrollContainer.appendChild(_container);\n\n    var _footer = this.panel.createFooter();\n    this.panel.container.appendChild(_footer);\n\n    if (this.cfg.vueMountComponent) {\n      this.component = new this.cfg.vueMountComponent().$mount(_container);\n    }\n\n    const _this = this;\n    this.panel.addVisibilityListener(open => {\n      if (!open) {\n        closeComponent.call(_this);\n      }\n    });\n  }\n  return this.panel;\n}\n\n/**\n *\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { createExtention, registerExtention }\n */\nmodule.exports = function (spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n     * factory function to create a dynamic class that extends the `SpinalPanelApp` class\n     *```js\n{\n  name: \"extention_name\",\n  vueMountComponent: Vue.extend(aVueCompoment),\n  onLoad: () => {console.log(\"onLoad\");},\n  onUnLoad: () => {console.log(\"onUnLoad\");},\n  toolbar: {\n    icon: \"done\",\n    label: \"testLabel\",\n    subToolbarName: \"spinalcom\"\n  },\n  panel: {\n    title: \"Spinalcom Panel\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"hide\"\n  },\n  style: {}\n}\n```\n     * @param {object} option see description\n     * @returns SpinalForgeExtention\n     */\n    createExtention(option) {\n      const cfg = configInit(option);\n      /**\n       * class returned by createExtention\n       * this extention is also registered in autodesk viweer\n       * @extends SpinalPanelApp\n       * @property {AutodeskViewer} viewer the autodesk view\n       * @property {AutodeskPanel} panel the panel\n       * @property {Vue.component} component the component mounted\n       * @property {Object} cfg the option given on creation\n       */\n      const SpinalForgeExtention = class extends SpinalPanelApp {\n        constructor(viewer, options) {\n          super();\n          window.Autodesk.Viewing.Extension.call(this, viewer, options);\n          this.viewer = viewer;\n          this.panel = null;\n          this.cfg = cfg;\n          spinalPanelManagerService.registerPanel(cfg.name, this);\n        }\n        /**\n         * method called on load of the extention (managed by the autodesk viewer)\n         * the method create a button in the toolbar if put in the option of `createExtention`.\n         */\n        load() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            // add toolbar\n            if (this.viewer.toolbar) {\n              createToolbar.call(this);\n            } else {\n              this.onToolbarCreatedBinded = onToolbarCreated.bind(this);\n              this.viewer.addEventListener(\n                window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n                this.onToolbarCreatedBinded\n              );\n            }\n          }\n          if (typeof cfg.onLoad !== \"undefined\") cfg.onLoad.call(this);\n          return true;\n        }\n        /**\n         * method called when the viewer unload of the extention\n         * (managed by the autodesk viewer)\n         */\n        unload() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            this.viewer.subToolbar.removeControl(this.toolbarButton);\n          }\n          if (typeof cfg.onUnLoad !== \"undefined\") cfg.onUnLoad.call(this);\n          return true;\n        }\n\n        activate() {\n          return this.load();\n        }\n\n        deactivate() {\n          return this.unload();\n        }\n\n        /**\n         *\n         * @param {*} option\n         */\n        openPanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(true);\n          try {\n            this.component.opened.call(this.component, option, this.viewer);\n          } catch (e) {\n            console.error(e);\n          }\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        closePanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(false);\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        tooglePanel(option) {\n          if (this.panel === null || this.panel.isVisible() === false) {\n            this.openPanel.call(this, option);\n          } else { this.closePanel.call(this, option); }\n        }\n      };\n      return SpinalForgeExtention;\n    },\n\n    /**\n     * Method to register an extention to the viewer and the forge viewer\n     * @param {string} name name of the extention\n     * @param {*} classExtention an extention created by `createExtention`\n     */\n    registerExtention(name, classExtention) {\n      // register to forge\n      window.Autodesk.Viewing.theExtensionManager.registerExtension(\n        name,\n        classExtention\n      );\n      // register to viewer\n      window.spinal.ForgeExtentionManager.addExtention(name);\n    }\n  };\n};\n","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SPRITE_ICONS } from \"../constants\";\n\n\n// const spriteIconUrl = require(\"../assets/device.svg\");\n// let viewableData = null;\nlet viewableData = undefined;\nvar dbId = 1;\n\nexport async function createSprites(datas = [{ position: { x: null, y: null, z: null }, dbid: null, spinalModel: { nodeId: \"\", spriteType: \"\" } }], /*dataOfPositionAndDbid, spinalModel={ nodeId: \"\", spriteType: \"\" },*/ onHoveringFunction = undefined, onClickFunction = undefined) {\n\n    // console.log(datas);\n    this.viewer = window.spinal.ForgeViewer.viewer;\n    const dataVizExtn = await this.viewer.loadExtension(\"Autodesk.DataVisualization\");\n\n    const DataVizCore = Autodesk.DataVisualization.Core;\n    const viewableType = DataVizCore.ViewableType.SPRITE;\n    // let viewableData = new DataVizCore.ViewableData();\n    if (viewableData == undefined) {\n        viewableData = new DataVizCore.ViewableData();\n    }\n    // viewableData = new DataVizCore.ViewableData();\n    viewableData.spriteSize = 30;\n\n    for (let elt of datas) {\n\n        let spriteColor = null;\n        let spriteIconUrl = null;\n        if (elt.spinalModel != undefined) {\n            let exists = spriteExists(elt.spinalModel.nodeId);\n            if (exists == false) {\n                if (elt.spinalModel.spriteType == \"Lamp\") {\n                    spriteIconUrl = SPRITE_ICONS.light;\n                    spriteColor = new THREE.Color(0xFFFF00);\n                }\n                else if (elt.spinalModel.spriteType == \"Remote Controller\") {\n                    spriteIconUrl = SPRITE_ICONS.remote_controller;\n                    spriteColor = new THREE.Color(0x0000FF);\n                }\n                else if (elt.spinalModel.spriteType == \"Device\") {\n                    spriteIconUrl = SPRITE_ICONS.device;\n                    spriteColor = new THREE.Color(0x0000FF);\n                }\n                else if (elt.spinalModel.spriteType == \"Blind\") {\n                    spriteIconUrl = SPRITE_ICONS.blind;\n                    spriteColor = new THREE.Color(0x00FF00);\n                }\n                else if (elt.spinalModel.spriteType == \"Windows Contact\") {\n                    spriteIconUrl = SPRITE_ICONS.windows_contact;\n                    spriteColor = new THREE.Color(0xFF0000);\n                }\n                else if (elt.spinalModel.spriteType == \"Fan Coil\") {\n                    spriteIconUrl = SPRITE_ICONS.fan_coil;\n                    spriteColor = new THREE.Color(0xCC8899);\n                }\n                else {\n                    spriteIconUrl = SPRITE_ICONS.default;\n                    spriteColor = new THREE.Color(0x00FF00);\n                }\n                const style = new DataVizCore.ViewableStyle(\n                    viewableType,\n                    spriteColor,\n                    spriteIconUrl\n                );\n                const viewable = new DataVizCore.SpriteViewable(elt.position, style, elt.dbid);\n                viewable.info = elt.spinalModel;\n                viewableData.addViewable(viewable);\n            }\n        }\n\n        // else {\n        //     spriteIconUrl = SPRITE_ICONS.default;\n        //     spriteColor = new THREE.Color(0x00FF00);\n        // }\n        // const style = new DataVizCore.ViewableStyle(\n        //     viewableType,\n        //     spriteColor,\n        //     spriteIconUrl\n        // );\n        // const viewable = new DataVizCore.SpriteViewable(elt.position, style, elt.dbid);\n        // viewable.info = elt.spinalModel;\n        // viewableData.addViewable(viewable);\n    }\n\n    // dataOfPositionAndDbid.forEach(data => {\n    //     const viewable = new DataVizCore.SpriteViewable(data.position, style, data.dbid);\n    //     viewable.info = spinalModel;\n    //     console.log(data.dbid);\n    //     viewableData.addViewable(viewable);\n    // })\n\n    await viewableData.finish();\n    dataVizExtn.addViewables(viewableData);\n\n    const showViewables = true;\n    const enableOcclusion = true;\n\n    // events\n    // this.viewer.addEventListener(DataVizCore.MOUSE_HOVERING, onSpriteHovered);\n    // this.viewer.addEventListener(DataVizCore.MOUSE_CLICK, onSpriteClicked);\n    if (onClickFunction != undefined) {\n        this.viewer.addEventListener(DataVizCore.MOUSE_CLICK, onClickFunction);\n    }\n\n    if (onHoveringFunction != undefined) {\n        this.viewer.addEventListener(DataVizCore.MOUSE_HOVERING, onHoveringFunction);\n    }\n\n\n    // show & hide\n    dataVizExtn.showHideViewables(showViewables, enableOcclusion);\n}\n\n// passage de la souris sur un sprite\n// async function onSpriteHovered(event) {\n//     console.log(\"event\");\n//     console.log(event);\n//     console.log(\"props\");\n//     const dataVizExtn = await window.spinal.ForgeViewer.viewer.loadExtension(\"Autodesk.DataVisualization\");\n//     let property = await dataVizExtn.getPropertiesFromDbId(event.dbId);\n//     console.log(property);\n// }\n\n// event click sur sprite\n// async function onSpriteClicked(event){\n//     if(event.dbId !=0){\n//         console.log(event);\n//         let spriteViewable = getSpriteFromDbid(event.dbId);\n//         if(spriteViewable != undefined){\n//             console.log(spriteViewable);\n//         }\n//     }\n// }\nexport function getSpriteFromDbid(dbId){\n    let sprite = undefined;\n    let index = viewableData.viewables.findIndex(elt => elt.dbId == dbId);\n    if (index > -1) {\n        sprite = viewableData.viewables[index];\n    }\n    return sprite;\n}\n\nexport function getSpriteFromNodeId(nodeId) {\n    let sprite = undefined;\n    let index = viewableData.viewables.findIndex(elt => {\n        if (elt.info != undefined) {\n            return elt.info.nodeId == nodeId;\n        }\n        return false;\n    });\n    if (index > -1) {\n        sprite = viewableData.viewables[index];\n    }\n    return sprite;\n}\n\n// function spriteExists(nodeId) {\n//     let index = viewableData.viewables.findIndex(elt => {\n//         // console.log(elt);\n//         if (elt.info != undefined) {\n//             return elt.info.nodeId == nodeId;\n//         }\n//         return false;\n//     });\n//     console.log(index);\n//     if (index > -1) {\n//         return true;\n//     }\n//     else return false;\n// }\n\n\nfunction spriteExists(nodeId) { return false;}","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalContext, SpinalGraphService, SpinalNode, SPINAL_RELATION_PTR_LST_TYPE } from \"spinal-env-viewer-graph-service\";\n\n\n// export const SPATIAL = {\n//     FLOOR_TO_ROOM_RELATION: \"hasGeographicRoom\"\n// };\n\n// export const SPATIAL_FLOOR_TO_ROOM_RELATION = \"hasGeographicRoom\";\nimport {\n    SITE_TYPE,\n    BUILDING_TYPE,\n    FLOOR_TYPE,\n    ZONE_TYPE,\n    ROOM_TYPE,\n    EQUIPMENT_TYPE,\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n    REFERENCE_RELATION,\n  } from \"spinal-env-viewer-context-geographic-service/build/constants\";\n\n  // const deviceIcon = require(\"./assets/device.svg\");\n\nexport const SPATIAL = Object.freeze({\n    // floors\n    FLOOR_TYPE: \"geographicFloor\",\n    FLOOR_TO_ROOM_RELATION: \"hasGeographicRoom\",\n    ROOM_TO_EQUIPMENT_RELATION: \"hasBimObject\"\n});\n\nexport const REPARTITIONNING = Object.freeze({\n    CTX_TO_FLOOR_RELATION: \"hasRepartitionningFloor\",\n    FLOOR_TO_ROOM_RELATION: \"hasRepartitionningRoom\"\n})\n\nexport const SELECTrelationList = [\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n    REFERENCE_RELATION,\n    `${REFERENCE_RELATION}.ROOM`,\n    \"hasBIMObject\", // for old system\n  ];\n\n  export const utilities = {\n    async sortBIMObjectByModel(arrayOfBIMObject) {\n      let arrayModel = [];\n      for (const key in spinal.BimObjectService.mappingBimFileIdModelId) {\n        if (spinal.BimObjectService.mappingBimFileIdModelId.hasOwnProperty(key)) {\n          const element = spinal.BimObjectService.mappingBimFileIdModelId[key];\n          let obj = {\n            dbid: [],\n            model: element,\n          };\n          arrayModel.push(obj);\n        }\n      }\n      for (let i = 0; i < arrayOfBIMObject.length; i++) {\n        SpinalGraphService._addNode(arrayOfBIMObject[i]);\n        let bim = SpinalGraphService.getNode(arrayOfBIMObject[i].info.id.get());\n        try {\n          let spinalModel =\n            window.spinal.BimObjectService.mappingBimFileIdModelId[\n              bim.bimFileId.get()\n            ];\n          if (spinalModel) {\n            for (let j = 0; j < arrayModel.length; j++) {\n              const element = arrayModel[j];\n              if (element.model.modelId === spinalModel.modelId) {\n                element.dbid.push(bim.dbid.get());\n              }\n            }\n          }\n        } catch (error) {\n          console.error(\"skip node because bimFileId is not defined\", error);\n        }\n      }\n      return arrayModel;\n    },\n  };\n\n  export const SPRITE_ICONS = {\n    // device: __dirname + \"/assets/device.svg\"\n    device: require(\"./assets/device.svg\"),\n    light: require(\"./assets/light.svg\"),\n    default: require(\"./assets/circle.svg\"),\n    remote_controller: require('./assets/remote_controller.svg'),\n    windows_contact: require(\"./assets/windows_contact.svg\"),\n    fan_coil: require(\"./assets/fan_coil.svg\"),\n    blind: require(\"./assets/blind.svg\")\n  };\n\n\n\n","module.exports = require('./helpers/bundle-url').getBundleURL('fFA7l') + require('./helpers/bundle-manifest').resolve(\"dqMpD\");","module.exports = require('./helpers/bundle-url').getBundleURL('fFA7l') + require('./helpers/bundle-manifest').resolve(\"6Kt0u\");","module.exports = require('./helpers/bundle-url').getBundleURL('fFA7l') + require('./helpers/bundle-manifest').resolve(\"3CrKh\");","module.exports = require('./helpers/bundle-url').getBundleURL('fFA7l') + require('./helpers/bundle-manifest').resolve(\"jkRjr\");","module.exports = require('./helpers/bundle-url').getBundleURL('fFA7l') + require('./helpers/bundle-manifest').resolve(\"fR1yt\");","module.exports = require('./helpers/bundle-url').getBundleURL('fFA7l') + require('./helpers/bundle-manifest').resolve(\"8dkej\");","module.exports = require('./helpers/bundle-url').getBundleURL('fFA7l') + require('./helpers/bundle-manifest').resolve(\"kklY8\");","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { __esModule } from \"spinal-env-viewer-context-geographic-service/build/constants\";\nimport { SpinalContextApp}  from \"spinal-env-viewer-context-menu-service\";\nimport { visualizeHardwareContext } from \"../js/visualisationManager\"\n\nconst {\n  spinalPanelManagerService\n  // ,SpinalMountExtention\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst path = require(\"path\");\n\n\nexport class ButtonVisualizeHardwareContext extends SpinalContextApp {\n    constructor() {\n      super(\"Visualize Hardware Context\", \"test description\", {\n        icon: \"donut_large\",\n        icon_type: \"in\",\n        backgroundColor: \"#0000FF\",\n        fontColor: \"#FFFFFF\"\n      });\n      // this.action = this.openPanel.bind( this );\n    }\n  \n    isShown(option) {\n       if (option.selectedNode.type.get() === 'network' && option.context.type.get() == \"networkTreeContext\") return Promise.resolve(true);\n       else return Promise.resolve(-1);\n    }\n    async action(option) {\n      console.log(option);\n        await visualizeHardwareContext(option.selectedNode.id.get());\n        console.log(\"DONE\");\n                \n    }\n  }","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport * as viewerManager from \"./viewerManager\";\nimport AttributeService from 'spinal-env-viewer-plugin-documentation-service';\nimport * as spriteManager from \"./spriteManager\";\nimport * as threeManager from \"./threeJsManager\";\nconst {\n    spinalPanelManagerService\n    // ,SpinalMountExtention\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nexport async function savePositionOfBimObject(parentId) {\n    const categoryName = \"Spatial\";\n    const attributeName = \"XYZ center\";\n    // const attributeName = \"xyz center\";\n    let spatial = SpinalGraphService.getContextWithType('geographicContext');\n    let spatialId = spatial[0].info.id.get();\n    let rooms = await SpinalGraphService.findInContext(parentId, spatialId, node => {\n        if (node.info.type.get() == \"geographicRoom\") {\n            SpinalGraphService._addNode(node);\n            return true;\n        }\n        else return false;\n    });\n    for (const rom of rooms) {\n        // console.log(rom);\n        let bimObjects = await SpinalGraphService.getChildren(rom.id.get(), [\"hasBimObject\", \"hasReferenceObject.ROOM\"]);\n        // console.log(bimObjects);\n        // console.log(\"next\");\n        for (const bimObj of bimObjects) {\n            // console.log(bimObj);\n            let bimObjNode = SpinalGraphService.getRealNode(bimObj.id.get());\n            let position = await viewerManager.getPositionFromBimFileIdAndDbid(bimObj.bimFileId.get(), bimObj.dbid.get());\n            if (position != undefined) {\n                let attributeValue = position.x + \";\" + position.y + \";\" + position.z;\n                // console.log(position);\n                let attr = await AttributeService.addAttributeByCategoryName(bimObjNode, categoryName, attributeName, attributeValue);\n                // console.log(attr);\n            }\n\n        }\n    }\n}\n\nexport async function savePositionOfHardwareContextBimObjects(parentId, contextId) {\n    const categoryName = \"Spatial\";\n    const attributeName = \"XYZ center\";\n    // const attributeName = \"xyz center\";\n    \n    let bimObjects = await SpinalGraphService.findInContext(parentId, contextId, node => {\n        if (node.info.type.get() == \"BIMObject\") {\n            SpinalGraphService._addNode(node);\n            return true;\n        }\n        else return false;\n    });\n    bimObjects.forEach(async bimObj => {\n        let bimObjNode = SpinalGraphService.getRealNode(bimObj.id.get());\n        SpinalGraphService._addNode(bimObjNode);\n\n        let position = await viewerManager.getPositionFromBimFileIdAndDbid(bimObj.bimFileId.get(), bimObj.dbid.get());\n        if (position != undefined) {\n            let attributeValue = position.x + \";\" + position.y + \";\" + position.z;\n            let attr = await AttributeService.addAttributeByCategoryName(bimObjNode, categoryName, attributeName, attributeValue);\n        }\n    });\n}\n\nexport async function getPositionAttribute(parentId) {\n}\n\nexport async function visualizeHardwareContext(parentId) {\n    let networkTreeStarts = await SpinalGraphService.getChildren(parentId, \"hasNetworkTreeBimObject\");\n    let spritesData = [];\n    for (let nodeModel of networkTreeStarts) {\n        let node = SpinalGraphService.getRealNode(nodeModel.id.get());\n        SpinalGraphService._addNode(node);\n        let positionAttribute = await AttributeService.findOneAttributeInCategory(node, \"Spatial\", \"XYZ center\");\n        // let positionAttribute = await AttributeService.findOneAttributeInCategory(node, \"spatial\", \"xyz center\");\n        if (positionAttribute != -1) {\n            let positionOfNode = positionAttribute.value.get().split(\";\");\n            let origin = {\n                x: positionOfNode[0],\n                y: positionOfNode[1],\n                z: positionOfNode[2]\n            };\n            spritesData.push({\n                position: origin,\n                dbid: nodeModel.dbid.get(),\n                spinalModel: { nodeId: nodeModel.id.get(), spriteType: \"Device\" }\n            });\n\n            let children = await SpinalGraphService.getChildren(nodeModel.id.get(), \"hasNetworkTreeBimObject\");\n            for (let child of children) {\n                let childNode = SpinalGraphService.getRealNode(child.id.get());\n                // ajout prise en compte namingConvention pour filtrage\n                let namingConvention = await AttributeService.findOneAttributeInCategory(childNode, \"default\", \"namingConvention\");\n                if (namingConvention != -1) {\n                    let value = namingConvention.value.get();\n                    if (value.includes(\"CS2_\") == false && value.includes(\"CS1_\") == false && value.includes(\"MR_\") == false && value.includes(\"BDV_\") == false && value.includes(\"PAS_\") == false && value.includes(\"CLU_\") == false && value.includes(\"BLG_\") == false) {\n                        // jusque ici\n                        let posAttr = await AttributeService.findOneAttributeInCategory(childNode, \"Spatial\", \"XYZ center\");\n                        // let posAttr = await AttributeService.findOneAttributeInCategory(childNode, \"spatial\", \"xyz center\");\n                        if (posAttr != -1) {\n                            let positionOfChild = posAttr.value.get().split(\";\");\n                            let destination = {\n                                x: positionOfChild[0],\n                                y: positionOfChild[1],\n                                z: positionOfChild[2]\n                            };\n\n                            let bacnetItem = await SpinalGraphService.getChildren(child.id.get(), \"hasBacnetItem\");\n                            if (bacnetItem.length == 0) {\n                                spritesData.push({\n                                    position: destination,\n                                    dbid: child.dbid.get(),\n                                    spinalModel: { nodeId: child.id.get(), spriteType: \"\" }\n                                });\n                            }\n                            else {\n                                spritesData.push({\n                                    position: destination,\n                                    dbid: child.dbid.get(),\n                                    spinalModel: { nodeId: child.id.get(), spriteType: bacnetItem[0].itemType.get() }\n                                });\n                            }\n\n\n                            await threeManager.drawLineBetweenPositions(origin, destination, 0xfd6c9e);\n                        }\n                    }\n                }\n\n            }\n        }\n\n\n\n    }\n    await spriteManager.createSprites(spritesData, undefined, onSpriteClickedOpenDashboardPanel);\n\n}\n\nfunction onSpriteClickedOpenDashboardPanel(event){\n    if (event.dbId != 0) {\n        let sprite = spriteManager.getSpriteFromDbid(event.dbId);\n        // console.log(sprite);\n        let realNode = SpinalGraphService.getRealNode(sprite.info.nodeId);\n        SpinalGraphService._addNode(realNode);\n        let selectedNode = SpinalGraphService.getInfo(realNode.getId());\n        // console.log(event);\n        spinalPanelManagerService.openPanel(\"spinal_dashboard_panel\", selectedNode);\n        spinalPanelManagerService.openPanel('panel-documentation', {selectedNode: selectedNode});\n    }\n}\n\nexport async function visualizeRepartitionningContext(table, eventOnSpriteClicked = undefined, threejsNameOfScene = \"TO-BE-DEFINED\") {\n    // console.log(table);\n    // console.log(\"coucou\");\n    let tabSprites = [];\n    let tabPositions = []; // [{origin:null, destination:null}]\n\n    for (let room of table) {\n        let masters = [room.MASTER_SLAVE.MASTER_FC, room.MASTER_SLAVE.MASTER_RC];\n        for (let master of masters) {\n            if (master.id != null) {\n                let masterNode = SpinalGraphService.getRealNode(master.id);\n                // console.log(masterNode);\n                let masterPosition = await AttributeService.findOneAttributeInCategory(masterNode, \"Spatial\", \"XYZ center\");\n                // let masterPosition = await AttributeService.findOneAttributeInCategory(masterNode, \"spatial\", \"xyz center\");\n                // console.log(masterPosition);\n                if (masterPosition != -1) {\n                    let masterPositionSplitted = masterPosition.value.get().split(\";\");\n                    let masterItem = await SpinalGraphService.getChildren(master.id, \"hasBacnetItem\");\n                    if (masterItem.length != 0) {\n                        let masterItemType = masterItem[0].itemType.get();\n                        tabSprites.push({\n                            position: { x: masterPositionSplitted[0], y: masterPositionSplitted[1], z: masterPositionSplitted[2] },\n                            dbid: master.dbid,\n                            spinalModel: { nodeId: master.id, spriteType: masterItemType }\n                        });\n\n                        for (let slave of master.Slaves) {\n                            let slaveNode = SpinalGraphService.getRealNode(slave.id);\n                            let slavePosition = await AttributeService.findOneAttributeInCategory(slaveNode, \"Spatial\", \"XYZ center\");\n                            // let slavePosition = await AttributeService.findOneAttributeInCategory(slaveNode, \"spatial\", \"xyz center\");\n                            if (slavePosition != -1) {\n                                let slavePositionSplitted = slavePosition.value.get().split(\";\");\n                                let slaveItem = await SpinalGraphService.getChildren(slave.id, \"hasBacnetItem\");\n                                if (slaveItem.length != 0) {\n                                    let slaveItemType = slaveItem[0].itemType.get();\n                                    tabSprites.push({\n                                        position: { x: slavePositionSplitted[0], y: slavePositionSplitted[1], z: slavePositionSplitted[2] },\n                                        dbid: slave.dbid,\n                                        spinalModel: { nodeId: slave.id, spriteType: slaveItemType }\n                                    });\n\n                                    tabPositions.push({\n                                        origin: { x: masterPositionSplitted[0], y: masterPositionSplitted[1], z: masterPositionSplitted[2] },\n                                        destination: { x: slavePositionSplitted[0], y: slavePositionSplitted[1], z: slavePositionSplitted[2] }\n                                    });\n                                }\n                            }\n                        }\n                    }\n\n                }\n            }\n\n        }\n    }\n\n    for (let element of tabPositions) {\n        await threeManager.drawLineBetweenPositions(element.origin, element.destination, 0x00FF00, threejsNameOfScene);\n    }\n    await spriteManager.createSprites(tabSprites, undefined, eventOnSpriteClicked);\n\n}\n\nexport async function redrawMasterSlaveLines(masterSlaveTab, threejsNameOfScene = \"TO-BE-DEFINED\") {\n    // console.log(masterSlaveTab);\n    let masters = [masterSlaveTab.MASTER_FC, masterSlaveTab.MASTER_RC];\n    let tabPositions = [];\n    for (let master of masters) {\n        if (master.id != null) {\n            let masterNode = SpinalGraphService.getRealNode(master.id);\n            let masterPosition = await AttributeService.findOneAttributeInCategory(masterNode, \"Spatial\", \"XYZ center\");\n            // let masterPosition = await AttributeService.findOneAttributeInCategory(masterNode, \"spatial\", \"xyz center\");\n            if (masterPosition != -1) {\n                let masterPositionSplitted = masterPosition.value.get().split(\";\");\n                let masterItem = await SpinalGraphService.getChildren(master.id, \"hasBacnetItem\");\n                if (masterItem.length != 0) {\n                    for (let slave of master.Slaves) {\n                        let slaveNode = SpinalGraphService.getRealNode(slave.id);\n                        let slavePosition = await AttributeService.findOneAttributeInCategory(slaveNode, \"Spatial\", \"XYZ center\");\n                        // let slavePosition = await AttributeService.findOneAttributeInCategory(slaveNode, \"spatial\", \"xyz center\");\n                        if (slavePosition != -1) {\n                            let slavePositionSplitted = slavePosition.value.get().split(\";\");\n                            let slaveItem = await SpinalGraphService.getChildren(slave.id, \"hasBacnetItem\");\n                            if (slaveItem.length != 0) {\n                                tabPositions.push({\n                                    origin: { x: masterPositionSplitted[0], y: masterPositionSplitted[1], z: masterPositionSplitted[2] },\n                                    destination: { x: slavePositionSplitted[0], y: slavePositionSplitted[1], z: slavePositionSplitted[2] }\n                                });\n                            }\n                        }\n                    }\n                }\n\n            }\n        }\n\n    }\n\n    for (let element of tabPositions) {\n        await threeManager.drawLineBetweenPositions(element.origin, element.destination, 0x0080FF /* 0x00FF00*/, threejsNameOfScene);\n    }\n\n}\n","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\nimport { getBBoxAndMatrix } from \"spinal-spatial-referential\";\nimport { SELECTrelationList, utilities } from \"../constants\";\nimport { SpinalContext, SpinalGraphService, SpinalNode, SPINAL_RELATION_PTR_LST_TYPE } from \"spinal-env-viewer-graph-service\";\n\nexport async function isolateAndTopView(parentId) {\n\n    //window.spinal.ForgeViewer.viewer.fitToView()\n\n    this.viewer = window.spinal.ForgeViewer.viewer;\n    let viewCube = await this.viewer.loadExtension('Autodesk.ViewCubeUi');\n    viewCube.setViewCube(\"top\"); // passage en vue de dessus : window.spinal.ForgeViewer.viewer.setViewCube(\"top\");\n    let self = this;\n    let boolSameNode = false\n    let modelResetIsolate = []\n    let aggregateIsolation = []\n    let realNode = SpinalGraphService.getRealNode(parentId);\n    if (this.lastNode == undefined) {\n        this.lastNode = realNode\n    } else {\n        aggregateIsolation = this.viewer.getAggregateIsolation()\n        if (this.lastNode.info.id.get() == realNode.info.id.get() &&\n            aggregateIsolation.length) {\n            boolSameNode = true\n        } else {\n            this.lastNode = realNode\n        }\n    }\n    if (boolSameNode) {\n        for (let i = 0; i < aggregateIsolation.length; i++) {\n            const element = aggregateIsolation[i];\n            self.viewer.isolate(0, element.model)\n        }\n    } else {\n        this.viewer = window.spinal.ForgeViewer.viewer\n        realNode.find(SELECTrelationList,\n            function (node) {\n                if (node.info.type.get() === \"BIMObject\") return true;\n            }).then(lst => {\n                utilities.sortBIMObjectByModel(lst).then(lstByModel => {\n                    for (let i = 0; i < lstByModel.length; i++) {\n                        const element = lstByModel[i];\n                        for (let j = 0; j < element.model.modelScene\n                            .length; j++) {\n                            const scene = element.model.modelScene[j];\n                            if (element.dbid.length != 0) {\n                                self.viewer.isolate(element.dbid, scene.model)\n                            } else {\n                                let rootId = scene.model.getRootId()\n                                scene.model.getObjectTree((tree) => {\n                                    let dbidRoot = tree.nodeAccess.dbIdToIndex[\n                                        rootId]\n                                    self.viewer.isolate([dbidRoot], scene.model)\n                                })\n                            }\n                        }\n                    }\n                })\n            });\n    }\n\n    // return this.viewer;\n\n    // return 0;\n\n    // this.viewer.fitToView();\n\n}\n\nexport async function getPositionFromBimFileIdAndDbid(bimFileId, dbid) {\n    let model = spinal.BimObjectService.getModelByBimfile(bimFileId);\n    if (model != undefined) {\n        let geom = await getBBoxAndMatrix(dbid, model, window.spinal.ForgeViewer.viewer);\n        if (geom != undefined) {\n            // console.log(geom);\n            let position = geom.bbox.getCenter();\n            return position;\n        }\n    }\n    return undefined;\n\n}\n\nexport function fitOn(parentId){\n    this.viewer = window.spinal.ForgeViewer.viewer\n    let self = this;\n    let realNode = SpinalGraphService.getRealNode(parentId);\n    this.viewer = window.spinal.ForgeViewer.viewer\n\n    realNode.find(SELECTrelationList,\n      function(node) {\n        if (node.info.type.get() === \"BIMObject\") return true;\n      }).then(lst => {\n      utilities.sortBIMObjectByModel(lst).then(lstByModel => {\n        let arrayToFit = []\n        for (let i = 0; i < lstByModel.length; i++) {\n          const element = lstByModel[i];\n          let obj = {\n            model: element.model.modelScene[0].model,\n            selection: element.dbid\n          }\n          arrayToFit.push(obj);\n          obj.model.selector.setSelection(element.dbid, obj\n            .model,\n            \"selectOnly\")\n        }\n        self.viewer.fitToView(arrayToFit);\n      })\n    });\n}\n","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nexport async function drawLinesBetweenMasterAndSlave(origin, destinations, nameOfScene=\"default-threejs-scene\"){\n    let geometryLine = new THREE.Geometry();\n    geometryLine.vertices.push(\n        new THREE.Vector3(origin.x, origin.y, origin.z),\n    );\n    destinations.forEach(elt => {\n        geometryLine.vertices.push(\n            new THREE.Vector3(elt.x, elt.y, elt.z),\n        );\n    });\n    // var material = new THREE.LineBasicMaterial({\n    //     color: 0x00FF00\n    // });\n    var material = new THREE.LineBasicMaterial ({\n        color: new THREE.Color (0x00FF00),\n        transparent: true,\n        depthWrite: false, // false pour passer au premier plan\n        depthTest: false,\n        linewidth: 1,\n        // opacity: 1.0,\n        blending: THREE.NoBlending\n      })\n\n    let line = new THREE.Line(geometryLine, material);\n\n    if (!window.spinal.ForgeViewer.viewer.overlays.hasScene(nameOfScene)) {\n        window.spinal.ForgeViewer.viewer.overlays.addScene(nameOfScene);\n    }\n\n    window.spinal.ForgeViewer.viewer.overlays.addMesh(line, nameOfScene);\n    console.log(line);\n    \n    \n    return line;\n}\n\nexport async function drawLineBetweenPositions(origin, destination, lineColor, nameOfScene=\"default-threejs-scene\"){\n    let geometryLine = new THREE.Geometry();\n    geometryLine.vertices.push(\n        new THREE.Vector3(origin.x, origin.y, origin.z),\n        new THREE.Vector3(destination.x, destination.y, destination.z)\n    );\n    // var material = new THREE.LineBasicMaterial({\n    //     color: 0x00FF00\n    // });\n    var material = new THREE.LineBasicMaterial ({\n        color: new THREE.Color (lineColor),\n        transparent: true,\n        depthWrite: false, // false pour passer au premier plan\n        depthTest: false,\n        linewidth: 2,\n        // opacity: 1.0,\n        blending: THREE.NoBlending\n      })\n\n    let line = new THREE.Line(geometryLine, material);\n\n    if (!window.spinal.ForgeViewer.viewer.overlays.hasScene(nameOfScene)) {\n        window.spinal.ForgeViewer.viewer.overlays.addScene(nameOfScene);\n    }\n\n    window.spinal.ForgeViewer.viewer.overlays.addMesh(line, nameOfScene);\n    // console.log(line);\n    \n    return line;\n}\n\nexport async function getLinesFromPositionAndSceneName(position, nameOfScene=\"default-threejs-scene\"){\n    let vectorToCheck = new THREE.Vector3(position.x, position.y, position.z);\n    let lines = [];\n    // console.log(window.spinal.ForgeViewer.viewer.overlays);\n    if(window.spinal.ForgeViewer.viewer.overlays.impl.overlayScenes[nameOfScene] != undefined){\n        let scene = window.spinal.ForgeViewer.viewer.overlays.impl.overlayScenes[nameOfScene].scene;\n        let children = scene.children;\n        for(let child of children){\n            let vertices = child.geometry.vertices;\n            vertices.forEach(vert => {\n                if(vert.x == position.x && vert.y == position.y && vert.z == position.z) lines.push(child);\n            });\n        }\n    }\n    return lines;\n}\n\nexport async function removeLinesFromScene(lines=[], nameOfScene=\"default-threejs-scene\"){\n    if(window.spinal.ForgeViewer.viewer.overlays.impl.overlayScenes[nameOfScene] != undefined){\n        let children = window.spinal.ForgeViewer.viewer.overlays.impl.overlayScenes[nameOfScene].scene.children;\n        for(let line of lines){\n            let index = children.indexOf(line);\n            if(index > -1){\n                children.splice(index, 1);\n                \n            }\n        }\n    }\n}\n\n// export async function getLinesOfRoom(roomId, nameOfScene=\"default-threejs-scene\"){\n//     console.log(\"\\\\\\\\\\ TO BE DONE ////// : peut etre a voir avec jeremie\");\n// }","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalContextApp}  from \"spinal-env-viewer-context-menu-service\";\nimport { visualizeHardwareContext } from \"../js/visualisationManager\"\n\nconst {\n  spinalPanelManagerService\n  // ,SpinalMountExtention\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nimport { savePositionOfBimObject } from \"../js/visualisationManager\";\n\n\nexport class ButtonSavePositionOfBimObject extends SpinalContextApp {\n    constructor() {\n      super(\"Save BimObjects Positions\", \"test description\", {\n        icon: \"Save\",\n        icon_type: \"in\",\n        backgroundColor: \"#0000FF\",\n        fontColor: \"#FFFFFF\"\n      });\n      // this.action = this.openPanel.bind( this );\n    }\n  \n    isShown(option) {\n       if (option.selectedNode.type.get() === 'geographicContext' || option.selectedNode.type.get() == \"geographicFloor\") return Promise.resolve(true);\n       else return Promise.resolve(-1);\n    }\n    async action(option) {\n      console.log(option);\n      await savePositionOfBimObject(option.selectedNode.id.get());\n        console.log(\"coucou\");\n    }\n  }","/*\n * Copyright 2021 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalContextApp}  from \"spinal-env-viewer-context-menu-service\";\nimport { visualizeHardwareContext } from \"../js/visualisationManager\"\n\nconst {\n  spinalPanelManagerService\n  // ,SpinalMountExtention\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nimport { savePositionOfHardwareContextBimObjects } from \"../js/visualisationManager\";\n\n\nexport class ButtonSavePositionOfHardwareContextObjects extends SpinalContextApp {\n    constructor() {\n      super(\"Save HardwareContext BimObjects Positions\", \"test description\", {\n        icon: \"Save\",\n        icon_type: \"in\",\n        backgroundColor: \"#0000FF\",\n        fontColor: \"#FFFFFF\"\n      });\n      // this.action = this.openPanel.bind( this );\n    }\n  \n    isShown(option) {\n       if (option.selectedNode.type.get() === 'networkTreeContext') return Promise.resolve(true);\n       else return Promise.resolve(-1);\n    }\n    async action(option) {\n      // console.log(option);\n      savePositionOfHardwareContextBimObjects(option.selectedNode.id.get(), option.context.id.get()).then(result => console.log(\"DONE\")).catch(err => console.log(err));\n    }\n  }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BIMElement = exports.AbstractElement = undefined;\n\nvar _AbstractElement = require(\"./AbstractElement\");\n\nvar _AbstractElement2 = _interopRequireDefault(_AbstractElement);\n\nvar _BIMElement = require(\"./BIMElement\");\n\nvar _BIMElement2 = _interopRequireDefault(_BIMElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nexports.AbstractElement = _AbstractElement2.default;\nexports.BIMElement = _BIMElement2.default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJzcGluYWxDb3JlIiwicmVxdWlyZSIsImdsb2JhbFR5cGUiLCJ3aW5kb3ciLCJnbG9iYWwiLCJBYnN0cmFjdEVsZW1lbnQiLCJCSU1FbGVtZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBS0E7Ozs7QUFDQTs7Ozs7O0FBTkEsTUFBTUEsYUFBYUMsUUFBUSx5QkFBUixDQUFuQjtBQUNBLE1BQU1DLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixXQUFsQixHQUFnQ0MsTUFBaEMsR0FBeUNELE1BQTVEOztRQVFFRSxlLEdBQUFBLHlCO1FBQ0FDLFUsR0FBQUEsb0IiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cblxuXG5pbXBvcnQgQWJzdHJhY3RFbGVtZW50IGZyb20gJy4vQWJzdHJhY3RFbGVtZW50JztcbmltcG9ydCBCSU1FbGVtZW50IGZyb20gJy4vQklNRWxlbWVudCc7XG5cbmV4cG9ydCB7XG4gIEFic3RyYWN0RWxlbWVudCxcbiAgQklNRWxlbWVudFxufSJdfQ==","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\n\n\nimport AbstractElement from './AbstractElement';\nimport BIMElement from './BIMElement';\n\nexport {\n  AbstractElement,\n  BIMElement\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Utilities = require(\"./Utilities\");\n\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass AbstractElement extends globalType.Model {\n  constructor(_name, _type, name = \"AbstractElement\") {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        name: _name,\n        id: _Utilities.Utilities.guid(name),\n        type: _type\n      });\n    }\n  }\n\n  setName(_name) {\n    this.name.set(_name);\n  }\n\n}\n\nexports.default = AbstractElement;\nspinalCore.register_models([AbstractElement]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9BYnN0cmFjdEVsZW1lbnQuanMiXSwibmFtZXMiOlsic3BpbmFsQ29yZSIsInJlcXVpcmUiLCJnbG9iYWxUeXBlIiwid2luZG93IiwiZ2xvYmFsIiwiQWJzdHJhY3RFbGVtZW50IiwiTW9kZWwiLCJjb25zdHJ1Y3RvciIsIl9uYW1lIiwiX3R5cGUiLCJuYW1lIiwiRmlsZVN5c3RlbSIsIl9zaWdfc2VydmVyIiwiYWRkX2F0dHIiLCJpZCIsIlV0aWxpdGllcyIsImd1aWQiLCJ0eXBlIiwic2V0TmFtZSIsInNldCIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0E7O0FBSEEsTUFBTUEsYUFBYUMsUUFBUSx5QkFBUixDQUFuQjtBQUNBLE1BQU1DLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixXQUFsQixHQUFnQ0MsTUFBaEMsR0FBeUNELE1BQTVEOztBQU9lLE1BQU1FLGVBQU4sU0FBOEJILFdBQVdJLEtBQXpDLENBQStDO0FBQzVEQyxjQUFZQyxLQUFaLEVBQW1CQyxLQUFuQixFQUEwQkMsT0FBTyxpQkFBakMsRUFBb0Q7QUFDbEQ7QUFDQSxRQUFJQyxXQUFXQyxXQUFmLEVBQTRCO0FBQzFCLFdBQUtDLFFBQUwsQ0FBYztBQUNaSCxjQUFNRixLQURNO0FBRVpNLFlBQUlDLHFCQUFVQyxJQUFWLENBQWVOLElBQWYsQ0FGUTtBQUdaTyxjQUFNUjtBQUhNLE9BQWQ7QUFLRDtBQUNGOztBQUVEUyxVQUFRVixLQUFSLEVBQWU7QUFDYixTQUFLRSxJQUFMLENBQVVTLEdBQVYsQ0FBY1gsS0FBZDtBQUNEOztBQWQyRDs7a0JBQXpDSCxlO0FBa0JyQkwsV0FBV29CLGVBQVgsQ0FBMkIsQ0FBQ2YsZUFBRCxDQUEzQiIsImZpbGUiOiJBYnN0cmFjdEVsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cbmltcG9ydCB7XG4gIFV0aWxpdGllc1xufSBmcm9tIFwiLi9VdGlsaXRpZXNcIjtcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBYnN0cmFjdEVsZW1lbnQgZXh0ZW5kcyBnbG9iYWxUeXBlLk1vZGVsIHtcbiAgY29uc3RydWN0b3IoX25hbWUsIF90eXBlLCBuYW1lID0gXCJBYnN0cmFjdEVsZW1lbnRcIikge1xuICAgIHN1cGVyKCk7XG4gICAgaWYgKEZpbGVTeXN0ZW0uX3NpZ19zZXJ2ZXIpIHtcbiAgICAgIHRoaXMuYWRkX2F0dHIoe1xuICAgICAgICBuYW1lOiBfbmFtZSxcbiAgICAgICAgaWQ6IFV0aWxpdGllcy5ndWlkKG5hbWUpLFxuICAgICAgICB0eXBlOiBfdHlwZVxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBzZXROYW1lKF9uYW1lKSB7XG4gICAgdGhpcy5uYW1lLnNldChfbmFtZSlcbiAgfVxuXG59XG5cbnNwaW5hbENvcmUucmVnaXN0ZXJfbW9kZWxzKFtBYnN0cmFjdEVsZW1lbnRdKSJdfQ==","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nimport {\n  Utilities\n} from \"./Utilities\";\n\n\nexport default class AbstractElement extends globalType.Model {\n  constructor(_name, _type, name = \"AbstractElement\") {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        name: _name,\n        id: Utilities.guid(name),\n        type: _type\n      })\n    }\n  }\n\n  setName(_name) {\n    this.name.set(_name)\n  }\n\n}\n\nspinalCore.register_models([AbstractElement])","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nlet Utilities = {};\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nUtilities.getViewer = function () {\n  return new Promise((resolve, reject) => {\n    if (globalType.v === \"undefined\") {\n      let interval = setInterval(() => {\n        if (globalType.v !== \"undefined\") {\n          resolve(globalType.v);\n          clearInterval(interval);\n        }\n      }, 500);\n    } else resolve(globalType.v);\n  });\n};\n\nUtilities.promiseGetProperties = function (_dbId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.getProperties(_dbId, resolve);\n    });\n  });\n};\n\nUtilities.promiseGetExternalIdMapping = function (_externalId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.model.getExternalIdMapping(res => {\n        resolve(res[_externalId]);\n      });\n    });\n  });\n};\n\n// Utilities.promiseLoad = function(_ptr) {\n//   return new Promise(resolve => {\n//     _ptr.load(resolve);\n//   });\n// }\nUtilities.promiseLoad = function (_ptr) {\n  if (_ptr instanceof globalType.Ptr && _ptr.data.value != 0 && typeof FileSystem._objects[_ptr.data.value] != \"undefined\") return Promise.resolve(FileSystem._objects[_ptr.data.value]);else return new Promise(resolve => {\n    _ptr.load(resolve);\n  });\n};\n\nUtilities.getExternalId = (() => {\n  var _ref = _asyncToGenerator(function* (_dbId) {\n    let properties = yield Utilities.promiseGetProperties(_dbId);\n    return properties.externalId;\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();\n\nUtilities.getDbIdByExternalId = (() => {\n  var _ref2 = _asyncToGenerator(function* (_externalId) {\n    let dbid = yield Utilities.promiseGetExternalIdMapping(_externalId);\n    return dbid;\n  });\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n})();\n\nUtilities.arraysEqual = function (arrayA, arrayB) {\n  if (arrayA === arrayB) return true;\n  if (arrayA == null || arrayB == null) return false;\n  if (arrayA.length != arrayB.length) return false;\n  arrayA.sort();\n  arrayB.sort();\n  for (var i = 0; i < arrayA.length; ++i) {\n    if (arrayA[i] !== arrayB[i]) return false;\n  }\n  return true;\n};\n\nUtilities.containsLstById = function (_list, _node) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.id.get() == _node.id.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLstModel = function (_list, _model) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _model.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLst = function (_list, _element) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _element) return true;\n  }\n  return false;\n};\n\nUtilities.include = function (arr, obj) {\n  return arr.indexOf(obj) != -1;\n};\n\nUtilities.getIndex = function (arr, obj) {\n  return arr.indexOf(obj);\n};\n\nUtilities.getIds = function (array) {\n  let res = [];\n  for (let index = 0; index < array.length; index++) {\n    res.push(array[index].id.get());\n  }\n  return res;\n};\n// Utilities.addNotExisting = function(arr, obj) {\n//   return (arr.indexOf(obj));\n// }\n\nUtilities.concat = function (listA, listB) {\n  let res = [];\n  for (let index = 0; index < listA.length; index++) {\n    res.push(listA[index]);\n  }\n  for (let index = 0; index < listB.length; index++) {\n    res.push(listB[index]);\n  }\n  return res;\n};\n\nUtilities.allButMeById = function (_list, _node) {\n  let res = [];\n  for (let index = 0; index < _list.length; index++) {\n    const node = _list[index];\n    if (node.id.get() != _node.id.get()) {\n      res.push(node);\n    }\n    return res;\n  }\n};\n\nUtilities.guid = function (_constructor) {\n  return _constructor + \"-\" + this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4() + this.s4() + \"-\" + Date.now().toString(16);\n};\n\nUtilities.s4 = function () {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\nUtilities.putOnTopLst = function (lst, elementB) {\n  lst.remove_ref(elementB);\n  lst.unshift(elementB);\n  // for (let index = 0; index < lst.length; index++) {\n  //   const element = lst[index];\n  //   if (element.id.get() === elementB.id.get()) {\n  //     lst.remove(index);\n  //   }\n\n  // }\n};\n\nexports.Utilities = Utilities;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","let Utilities = {};\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nUtilities.getViewer = function() {\n  return new Promise((resolve, reject) => {\n    if (globalType.v === \"undefined\") {\n      let interval = setInterval(() => {\n        if (globalType.v !== \"undefined\") {\n          resolve(globalType.v);\n          clearInterval(interval);\n        }\n      }, 500);\n    } else resolve(globalType.v);\n  });\n};\n\nUtilities.promiseGetProperties = function(_dbId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.getProperties(_dbId, resolve);\n    });\n  });\n};\n\nUtilities.promiseGetExternalIdMapping = function(_externalId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.model.getExternalIdMapping(res => {\n        resolve(res[_externalId]);\n      });\n    });\n  });\n\n}\n\n\n// Utilities.promiseLoad = function(_ptr) {\n//   return new Promise(resolve => {\n//     _ptr.load(resolve);\n//   });\n// }\nUtilities.promiseLoad = function(_ptr) {\n  if (\n    _ptr instanceof globalType.Ptr &&\n    _ptr.data.value != 0 &&\n    typeof FileSystem._objects[_ptr.data.value] != \"undefined\"\n  )\n    return Promise.resolve(FileSystem._objects[_ptr.data.value]);\n  else\n    return new Promise(resolve => {\n      _ptr.load(resolve);\n    });\n};\n\n\n\n\nUtilities.getExternalId = async function(_dbId) {\n  let properties = await Utilities.promiseGetProperties(_dbId);\n  return properties.externalId;\n};\n\nUtilities.getDbIdByExternalId = async function(_externalId) {\n  let dbid = await Utilities.promiseGetExternalIdMapping(_externalId);\n  return dbid;\n};\n\nUtilities.arraysEqual = function(arrayA, arrayB) {\n  if (arrayA === arrayB) return true;\n  if (arrayA == null || arrayB == null) return false;\n  if (arrayA.length != arrayB.length) return false;\n  arrayA.sort();\n  arrayB.sort();\n  for (var i = 0; i < arrayA.length; ++i) {\n    if (arrayA[i] !== arrayB[i]) return false;\n  }\n  return true;\n};\n\nUtilities.containsLstById = function(_list, _node) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.id.get() == _node.id.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLstModel = function(_list, _model) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _model.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLst = function(_list, _element) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _element) return true;\n  }\n  return false;\n};\n\nUtilities.include = function(arr, obj) {\n  return arr.indexOf(obj) != -1;\n};\n\nUtilities.getIndex = function(arr, obj) {\n  return arr.indexOf(obj);\n};\n\nUtilities.getIds = function(array) {\n  let res = [];\n  for (let index = 0; index < array.length; index++) {\n    res.push(array[index].id.get());\n  }\n  return res;\n};\n// Utilities.addNotExisting = function(arr, obj) {\n//   return (arr.indexOf(obj));\n// }\n\nUtilities.concat = function(listA, listB) {\n  let res = [];\n  for (let index = 0; index < listA.length; index++) {\n    res.push(listA[index]);\n  }\n  for (let index = 0; index < listB.length; index++) {\n    res.push(listB[index]);\n  }\n  return res;\n};\n\nUtilities.allButMeById = function(_list, _node) {\n  let res = [];\n  for (let index = 0; index < _list.length; index++) {\n    const node = _list[index];\n    if (node.id.get() != _node.id.get()) {\n      res.push(node);\n    }\n    return res;\n  }\n};\n\nUtilities.guid = function(_constructor) {\n  return (\n    _constructor +\n    \"-\" +\n    this.s4() +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    this.s4() +\n    this.s4() +\n    \"-\" +\n    Date.now().toString(16)\n  );\n};\n\nUtilities.s4 = function() {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n};\n\nUtilities.putOnTopLst = function(lst, elementB) {\n  lst.remove_ref(elementB);\n  lst.unshift(elementB);\n  // for (let index = 0; index < lst.length; index++) {\n  //   const element = lst[index];\n  //   if (element.id.get() === elementB.id.get()) {\n  //     lst.remove(index);\n  //   }\n\n  // }\n};\n\nexport {\n  Utilities\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _spinalModelsBimobject = require(\"spinal-models-bimobject\");\n\nvar _spinalModelsBimobject2 = _interopRequireDefault(_spinalModelsBimobject);\n\nvar _Utilities = require(\"./Utilities\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass BIMElement extends _spinalModelsBimobject2.default {\n  constructor(_id, _name, _type, name = \"BIMElement\") {\n    super(_id, _name, 0);\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        type: _type || \"BimObject\",\n        externalId: \"\"\n      });\n    }\n  }\n\n  initExternalId() {\n    _Utilities.Utilities.getExternalId(this.id.get()).then(_externalId => {\n      this.externalId.set(_externalId);\n    });\n  }\n\n  initExternalIdAsync() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let _externalId = yield _Utilities.Utilities.getExternalId(_this.id.get());\n      _this.externalId.set(_externalId);\n    })();\n  }\n\n  setName(_name) {\n    this.name.set(_name);\n  }\n\n  toIfc() {\n    return `${this.constructor.name}(${this.id.get()},${this.name.get()});`;\n  }\n\n}\n\nexports.default = BIMElement;\nspinalCore.register_models([BIMElement]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9CSU1FbGVtZW50LmpzIl0sIm5hbWVzIjpbInNwaW5hbENvcmUiLCJyZXF1aXJlIiwiZ2xvYmFsVHlwZSIsIndpbmRvdyIsImdsb2JhbCIsIkJJTUVsZW1lbnQiLCJTcGluYWxCSU1PYmplY3QiLCJjb25zdHJ1Y3RvciIsIl9pZCIsIl9uYW1lIiwiX3R5cGUiLCJuYW1lIiwiRmlsZVN5c3RlbSIsIl9zaWdfc2VydmVyIiwiYWRkX2F0dHIiLCJ0eXBlIiwiZXh0ZXJuYWxJZCIsImluaXRFeHRlcm5hbElkIiwiVXRpbGl0aWVzIiwiZ2V0RXh0ZXJuYWxJZCIsImlkIiwiZ2V0IiwidGhlbiIsIl9leHRlcm5hbElkIiwic2V0IiwiaW5pdEV4dGVybmFsSWRBc3luYyIsInNldE5hbWUiLCJ0b0lmYyIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0E7Ozs7QUFFQTs7Ozs7O0FBTEEsTUFBTUEsYUFBYUMsUUFBUSx5QkFBUixDQUFuQjtBQUNBLE1BQU1DLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixXQUFsQixHQUFnQ0MsTUFBaEMsR0FBeUNELE1BQTVEOztBQVFlLE1BQU1FLFVBQU4sU0FBeUJDLCtCQUF6QixDQUF5QztBQUN0REMsY0FBWUMsR0FBWixFQUFpQkMsS0FBakIsRUFBd0JDLEtBQXhCLEVBQStCQyxPQUFPLFlBQXRDLEVBQW9EO0FBQ2xELFVBQU1ILEdBQU4sRUFBV0MsS0FBWCxFQUFrQixDQUFsQjtBQUNBLFFBQUlHLFdBQVdDLFdBQWYsRUFBNEI7QUFDMUIsV0FBS0MsUUFBTCxDQUFjO0FBQ1pDLGNBQU1MLFNBQVMsV0FESDtBQUVaTSxvQkFBWTtBQUZBLE9BQWQ7QUFJRDtBQUVGOztBQUVEQyxtQkFBaUI7QUFDZkMseUJBQVVDLGFBQVYsQ0FBd0IsS0FBS0MsRUFBTCxDQUFRQyxHQUFSLEVBQXhCLEVBQXVDQyxJQUF2QyxDQUE0Q0MsZUFBZTtBQUN6RCxXQUFLUCxVQUFMLENBQWdCUSxHQUFoQixDQUFvQkQsV0FBcEI7QUFDRCxLQUZEO0FBR0Q7O0FBRUtFLHFCQUFOLEdBQTRCO0FBQUE7O0FBQUE7QUFDMUIsVUFBSUYsY0FBYyxNQUFNTCxxQkFBVUMsYUFBVixDQUF3QixNQUFLQyxFQUFMLENBQVFDLEdBQVIsRUFBeEIsQ0FBeEI7QUFDQSxZQUFLTCxVQUFMLENBQWdCUSxHQUFoQixDQUFvQkQsV0FBcEI7QUFGMEI7QUFHM0I7O0FBSURHLFVBQVFqQixLQUFSLEVBQWU7QUFDYixTQUFLRSxJQUFMLENBQVVhLEdBQVYsQ0FBY2YsS0FBZDtBQUNEOztBQUVEa0IsVUFBUTtBQUNOLFdBQVEsR0FBRSxLQUFLcEIsV0FBTCxDQUFpQkksSUFBSyxJQUFHLEtBQUtTLEVBQUwsQ0FBUUMsR0FBUixFQUFjLElBQUcsS0FBS1YsSUFBTCxDQUFVVSxHQUFWLEVBQWdCLElBQXBFO0FBQ0Q7O0FBL0JxRDs7a0JBQW5DaEIsVTtBQW1DckJMLFdBQVc0QixlQUFYLENBQTJCLENBQUN2QixVQUFELENBQTNCIiwiZmlsZSI6IkJJTUVsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cbmltcG9ydCBTcGluYWxCSU1PYmplY3QgZnJvbSBcInNwaW5hbC1tb2RlbHMtYmltb2JqZWN0XCI7XG5cbmltcG9ydCB7XG4gIFV0aWxpdGllc1xufSBmcm9tIFwiLi9VdGlsaXRpZXNcIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCSU1FbGVtZW50IGV4dGVuZHMgU3BpbmFsQklNT2JqZWN0IHtcbiAgY29uc3RydWN0b3IoX2lkLCBfbmFtZSwgX3R5cGUsIG5hbWUgPSBcIkJJTUVsZW1lbnRcIikge1xuICAgIHN1cGVyKF9pZCwgX25hbWUsIDApO1xuICAgIGlmIChGaWxlU3lzdGVtLl9zaWdfc2VydmVyKSB7XG4gICAgICB0aGlzLmFkZF9hdHRyKHtcbiAgICAgICAgdHlwZTogX3R5cGUgfHwgXCJCaW1PYmplY3RcIixcbiAgICAgICAgZXh0ZXJuYWxJZDogXCJcIlxuICAgICAgfSk7XG4gICAgfVxuXG4gIH1cblxuICBpbml0RXh0ZXJuYWxJZCgpIHtcbiAgICBVdGlsaXRpZXMuZ2V0RXh0ZXJuYWxJZCh0aGlzLmlkLmdldCgpKS50aGVuKF9leHRlcm5hbElkID0+IHtcbiAgICAgIHRoaXMuZXh0ZXJuYWxJZC5zZXQoX2V4dGVybmFsSWQpXG4gICAgfSlcbiAgfVxuXG4gIGFzeW5jIGluaXRFeHRlcm5hbElkQXN5bmMoKSB7XG4gICAgbGV0IF9leHRlcm5hbElkID0gYXdhaXQgVXRpbGl0aWVzLmdldEV4dGVybmFsSWQodGhpcy5pZC5nZXQoKSlcbiAgICB0aGlzLmV4dGVybmFsSWQuc2V0KF9leHRlcm5hbElkKVxuICB9XG5cblxuXG4gIHNldE5hbWUoX25hbWUpIHtcbiAgICB0aGlzLm5hbWUuc2V0KF9uYW1lKVxuICB9XG5cbiAgdG9JZmMoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0oJHt0aGlzLmlkLmdldCgpfSwke3RoaXMubmFtZS5nZXQoKX0pO2BcbiAgfVxuXG59XG5cbnNwaW5hbENvcmUucmVnaXN0ZXJfbW9kZWxzKFtCSU1FbGVtZW50XSlcbiJdfQ==","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nimport SpinalBIMObject from \"spinal-models-bimobject\";\n\nimport {\n  Utilities\n} from \"./Utilities\"\n\nexport default class BIMElement extends SpinalBIMObject {\n  constructor(_id, _name, _type, name = \"BIMElement\") {\n    super(_id, _name, 0);\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        type: _type || \"BimObject\",\n        externalId: \"\"\n      });\n    }\n\n  }\n\n  initExternalId() {\n    Utilities.getExternalId(this.id.get()).then(_externalId => {\n      this.externalId.set(_externalId)\n    })\n  }\n\n  async initExternalIdAsync() {\n    let _externalId = await Utilities.getExternalId(this.id.get())\n    this.externalId.set(_externalId)\n  }\n\n\n\n  setName(_name) {\n    this.name.set(_name)\n  }\n\n  toIfc() {\n    return `${this.constructor.name}(${this.id.get()},${this.name.get()});`\n  }\n\n}\n\nspinalCore.register_models([BIMElement])\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\nexports.default = SpinalBIMObject;\n\nspinalCore.register_models([SpinalBIMObject]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL0JJTU9iamVjdC5qcyJdLCJuYW1lcyI6WyJzcGluYWxDb3JlIiwicmVxdWlyZSIsImdsb2JhbFR5cGUiLCJ3aW5kb3ciLCJnbG9iYWwiLCJTcGluYWxCSU1PYmplY3QiLCJNb2RlbCIsImNvbnN0cnVjdG9yIiwiX2lkIiwiX25hbWUiLCJGaWxlU3lzdGVtIiwiX3NpZ19zZXJ2ZXIiLCJhZGRfYXR0ciIsImlkIiwibmFtZSIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxhQUFhQyxRQUFRLHlCQUFSLENBQW5CO0FBQ0EsTUFBTUMsYUFBYSxPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLEdBQWdDQyxNQUFoQyxHQUF5Q0QsTUFBNUQ7O0FBS0EsTUFBTUUsZUFBTixTQUE4QkgsV0FBV0ksS0FBekMsQ0FBK0M7QUFDN0NDLGNBQVlDLEdBQVosRUFBaUJDLEtBQWpCLEVBQXdCO0FBQ3RCO0FBQ0EsUUFBSUMsV0FBV0MsV0FBZixFQUE0QjtBQUMxQixXQUFLQyxRQUFMLENBQWM7QUFDWkMsWUFBSUwsR0FEUTtBQUVaTSxjQUFNTDtBQUZNLE9BQWQ7QUFJRDtBQUNGO0FBVDRDOztrQkFhaENKLGU7O0FBQ2ZMLFdBQVdlLGVBQVgsQ0FBMkIsQ0FBQ1YsZUFBRCxDQUEzQiIsImZpbGUiOiJCSU1PYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cblxuXG5cbmNsYXNzIFNwaW5hbEJJTU9iamVjdCBleHRlbmRzIGdsb2JhbFR5cGUuTW9kZWwge1xuICBjb25zdHJ1Y3RvcihfaWQsIF9uYW1lKSB7XG4gICAgc3VwZXIoKTtcbiAgICBpZiAoRmlsZVN5c3RlbS5fc2lnX3NlcnZlcikge1xuICAgICAgdGhpcy5hZGRfYXR0cih7XG4gICAgICAgIGlkOiBfaWQsXG4gICAgICAgIG5hbWU6IF9uYW1lXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBTcGluYWxCSU1PYmplY3Q7XG5zcGluYWxDb3JlLnJlZ2lzdGVyX21vZGVscyhbU3BpbmFsQklNT2JqZWN0XSk7Il19","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\n\n\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\n\nexport default SpinalBIMObject;\nspinalCore.register_models([SpinalBIMObject]);"],"names":["spinalCore","require","globalType","window","global","AbstractElement","BIMElement","Model","constructor","_name","_type","name","FileSystem","_sig_server","add_attr","id","Utilities","guid","type","setName","set","register_models","getViewer","Promise","resolve","reject","v","interval","setInterval","clearInterval","promiseGetProperties","_dbId","then","viewer","getProperties","promiseGetExternalIdMapping","_externalId","model","getExternalIdMapping","res","promiseLoad","_ptr","Ptr","data","value","_objects","load","getExternalId","properties","externalId","getDbIdByExternalId","dbid","arraysEqual","arrayA","arrayB","length","sort","i","containsLstById","_list","_node","index","element","get","containsLstModel","_model","containsLst","_element","include","arr","obj","indexOf","getIndex","getIds","array","push","concat","listA","listB","allButMeById","node","_constructor","s4","Date","now","toString","Math","floor","random","substring","putOnTopLst","lst","elementB","remove_ref","unshift","SpinalBIMObject","_id","initExternalId","initExternalIdAsync","toIfc"],"version":3,"file":"spinal-env-viewer-service.ec91ecc3.js.map"}