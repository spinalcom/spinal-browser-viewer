{"mappings":"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","sources":["node_modules/spinal-env-viewer-plugin-circular-menu/index.js","node_modules/spinal-env-viewer-plugin-circular-menu-service/circularMenuClass.js","node_modules/spinal-env-viewer-plugin-circular-menu/circularMenu.vue","node_modules/spinal-env-viewer-context-menu-service/index.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextMenuService.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","node_modules/spinal-env-viewer-context-menu-service/constants.js"],"sourcesContent":["/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { circularMenu } from \"spinal-env-viewer-plugin-circular-menu-service\";\n\nconst ClassName = \"spinalcircularMenu\";\n\nconst classExtention = class {\n  constructor(viewer, options) {\n    Autodesk.Viewing.Extension.call(this, viewer, options);\n    this.viewer = viewer;\n    this.panel = null;\n  }\n\n  load() {\n    this.initialize();\n    return true;\n  }\n\n  unload() {\n    // this.viewer.toolbar.removeControl(this.subToolbar);\n    return true;\n  }\n  // This function is to create your button on viewer, it used autodesk forge api\n\n  initialize() {\n    let hideOrShow = new circularMenu(this.viewer);\n    hideOrShow.mount();\n  }\n};\n\nexport default new class {\n  constructor() {\n    Autodesk.Viewing.theExtensionManager.registerExtension(\n      ClassName,\n      classExtention\n    ); // this is the register of your class\n    window.spinal.ForgeExtentionManager.addExtention(ClassName);\n  }\n}();\n","/*\n * Copyright 2020 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport circularMenuVue from \"spinal-env-viewer-plugin-circular-menu/circularMenu.vue\";\nimport Vue from \"vue\";\nimport { SpinalNode } from \"spinal-env-viewer-graph-service\";\nconst circularComponentCtor = Vue.extend(circularMenuVue);\nconst {\n  spinalContextMenuService\n} = require(\"spinal-env-viewer-context-menu-service\");\n\nconst Autodesk = window.Autodesk;\n\nvar circularMenu = class circularMenu {\n  constructor(viewer) {\n    this.viewer = viewer;\n    this.evt = {\n      timeout: null,\n      data: null,\n      canvas: false,\n      selected: false,\n      xTouch: window.innerWidth / 2,\n      yTouch: window.innerHeight / 2,\n      x: 0,\n      y: 0\n    };\n\n\n    const eventListener = () => {\n      viewer.removeEventListener(window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT, eventListener);\n\n      viewer.clientContainer.addEventListener(\"click\", evt => {\n        this.close();\n        if (evt.target instanceof HTMLCanvasElement) {\n          this.onEvt(\n            \"canvas\");\n        }\n      });\n      const defaultSingleTapHandler = viewer.clickHandler\n        .handleSingleTap;\n      viewer.clickHandler.handleSingleTap = evt => {\n        this.close();\n        if (evt.target instanceof HTMLCanvasElement) {\n          this.evt.xTouch = evt.center.x;\n          this.evt.yTouch = evt.center.y;\n          this.onEvt(\"canvas\");\n        }\n        defaultSingleTapHandler(evt);\n      };\n      viewer.clientContainer.addEventListener(\"DynamicObjectClick\",\n        () => {\n          this.close();\n          try {\n            this.evt.x = event.x;\n            this.evt.y = event.y;\n          } catch (e) {\n            this.evt.x = this.evt.xTouch;\n            this.evt.y = this.evt.yTouch;\n          }\n          this.evt.data = event;\n          this.onEvt(\"dynamic\");\n        });\n      viewer.addEventListener(Autodesk.Viewing.ESCAPE_EVENT, () => {\n        this.close();\n      });\n      viewer.addEventListener(Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        e => {\n          try {\n            this.evt.x = event.x;\n            this.evt.y = event.y;\n          } catch (e) {\n            this.evt.x = this.evt.xTouch;\n            this.evt.y = this.evt.yTouch;\n\n          }\n          this.evt.data = e.selections;\n          this.close();\n          this.onEvt(\"selected\");\n        });\n    };\n    viewer.addEventListener(window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT, eventListener);\n\n  }\n  onEvt(evtFrom) {\n    if (evtFrom === \"canvas\" || evtFrom === \"selected\" || evtFrom ==\n      \"dynamic\") {\n      this.evt[evtFrom] = true;\n      if (this.evt.canvas === true && this.evt.selected === true) {\n        this.onSelectionChange(this.evt.data);\n        this.evt.canvas = false;\n        this.evt.selected = false;\n        if (this.evt.timeout !== null) clearInterval(this.evt.timeout);\n        this.evt.timeout = null;\n      } else if (this.evt.timeout == null) {\n        this.evt.timeout = setTimeout(() => {\n          this.evt.canvas = false;\n          this.evt.selected = false;\n          this.evt.timeout = null;\n        }, 200);\n      }\n    }\n  }\n  async onSelectionChange(data) {\n    if (data.length === 1 && data[0].dbIdArray.length === 1) {\n      var x = this.evt.x;\n      var y = this.evt.y;\n      let dbId = data[0].dbIdArray[0];\n      // il faut récupérer les BIMObject selected\n      let bimObj = await window.spinal.BimObjectService.getBIMObject(data[0].dbIdArray[0], data[0].model);\n      let myNode;\n      if (bimObj instanceof SpinalNode) {\n        window.spinal.spinalGraphService._addNode(bimObj);\n        myNode = window.spinal.spinalGraphService.getNode(bimObj.info.id.get());\n      } else {\n        myNode = bimObj;\n      }\n\n      if (bimObj !== undefined && myNode !== undefined) {\n        let objContextMenuService = {\n          exist: true,\n          selectedNode: myNode,\n          dbid: dbId,\n          model3d: data[0].model\n        };\n        return this.open(\n          await this.getButtonList(objContextMenuService),\n          x,\n          y,\n          objContextMenuService\n        );\n      }\n      let objContextMenuService = {\n        exist: false,\n        dbid: dbId,\n        model3d: data[0].model\n      };\n\n      let btnList = await this.getButtonList(objContextMenuService);\n      this.open(btnList, x, y, objContextMenuService);\n    } else if (data.is === \"dynamic\") {\n      let objContextMenuService = {\n        exist: true,\n        selectedNode: data.returnObj.node,\n        model3d: data.returnObj.model\n      };\n      let btnList = await this.getButtonList(objContextMenuService);\n      this.open(btnList, data.x, data.y, objContextMenuService);\n    } else {\n      this.close();\n    }\n  }\n  getButtonList(objContextMenuService) {\n    return spinalContextMenuService\n      .getApps(\"circularMenu\", objContextMenuService)\n      .then(buttonList => {\n        return buttonList;\n      });\n  }\n  mount() {\n  }\n  open(buttonList, x, y, objContextMenuService) {\n    if (this.close() == false) {\n      this.container = document.createElement(\"div\");\n      document.body.append(this.container);\n      let mySmallContainer = document.createElement(\"div\");\n      this.container.append(mySmallContainer);\n      this.circularCtor = new circularComponentCtor({\n        propsData: {\n          buttonList: buttonList,\n          x: x,\n          y: y,\n          options: objContextMenuService\n        }\n      }).$mount(mySmallContainer);\n    }\n  }\n  close() {\n    if (this.container != undefined) {\n      this.container.remove();\n      this.container = undefined;\n      return true;\n    }\n    return false;\n  }\n};\nmodule.exports.circularMenu = circularMenu;\n","<template>\n  <div>\n    <div :style=\"getStyle()\">\n      <transition v-for=\"(button, index) in buttonList\"\n                  :key=\"index\"\n                  name=\"myCircularOpen\"\n                  appear\n                  before-appear=\"circle-spinal-circular-menucenter\"\n                  appear-class=\"circle-spinal-circular-menu\"\n                  appear-to-class=\"opencircle-spinal-circular-menu\"\n                  leave-to-class=\"closecircle-spinal-circular-menu\"\n                  :duration=\"{ enter: 500, leave: 800 }\">\n        <md-button :style=\"getButtonStyle(index)\"\n                   @click=\"button.action(options)\"\n                   style=\"margin: unset;pointer-events: auto; height: 40px\"\n                   class=\"md-icon-button\"\n                   v-tooltip=\"button.label\">\n          <md-icon :style=\"getIconColor(index)\">{{button.buttonCfg.icon}}</md-icon>\n        </md-button>\n      </transition>\n    </div>\n    <!-- <md-button @click=\"activateMode\"\n               :style=\"color\"\n               class=\"myButton md-icon-button\">\n    </md-button> -->\n\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"circularmenu\",\n  data() {\n    return {\n      buttonTab: [],\n      data: {},\n      color: {\n        background: \"#2D3D93\"\n      }\n      // activateModeBool: true\n    };\n  },\n  components: {},\n  props: [\"buttonList\", \"x\", \"y\", \"options\"],\n  methods: {\n    // activateMode: function() {\n    //   if (this.activateModeBool) {\n    //     this.activateModeBool = false;\n    //     this.color.background = \"#F68204\";\n    //     this.data = {};\n    //   } else {\n    //     this.activateModeBool = true;\n    //     this.color.background = \"#2D3D93\";\n    //   }\n    // },\n    getStyle: function() {\n      if (this.buttonList.length > 0) {\n        return {\n          position: \"absolute\",\n          left: this.x - 75 + \"px\",\n          top: this.y - 75 + \"px\",\n          height: \"150px\",\n          width: \"150px\",\n          \"pointer-events\": \"none\",\n          opacity: 1,\n          \"-webkit-transform\": \"scale(1)\",\n          \"-moz-transform\": \"scale(1)\",\n          transform: \"scale(1)\",\n\n          \"-webkit-transition\": \"all 0.4s ease-out\",\n          \"-moz-transition\": \"all 0.4s ease-out\",\n          transition: \"all 0.4s ease-out\"\n        };\n      } else {\n        return {\n          position: \"absolute\",\n          opacity: 0,\n\n          \"-webkit-transform\": \"scale(0)\",\n          \"-moz-transform\": \"scale(0)\",\n          transform: \"scale(0)\"\n        };\n      }\n    },\n    getButtonStyle: function(index) {\n      let myStyle = {\n        left: \"\",\n        top: \"\",\n        \"background-color\": this.buttonList[index].buttonCfg.backgroundColor,\n        position: \"absolute\",\n        \"-webkit-transition\": \"all 0.4s ease-out\",\n        \"-moz-transition\": \"all 0.4s ease-out\",\n        transition: \"all 0.4s ease-out\"\n      };\n\n      let nbrElement = this.buttonList.length;\n      let radius = 60;\n      let nbr = (2 * Math.PI) / nbrElement;\n      if (nbrElement >= 7) {\n        let result = nbrElement * 2 * 25;\n        radius = result / (2 * Math.PI);\n      }\n      let axeX = (radius * Math.cos(nbr * index)).toFixed(1);\n      let axeY = (radius * Math.sin(nbr * index)).toFixed(1);\n      myStyle.left = \"calc(50% + \" + (axeX - 20) + \"px)\";\n      myStyle.top = \"calc(50% + \" + (axeY - 20) + \"px)\";\n      return myStyle;\n    },\n    getIconColor(index) {\n      let color;\n      try {\n        color = this.buttonList[index].buttonCfg.fontColor;\n      } catch (e) {\n        color = \"white\";\n      }\n      return { color };\n    }\n  }\n};\n</script>\n\n<style>\n.myButton {\n  margin: unset;\n  pointer-events: auto;\n  background: red;\n  height: 20px;\n  right: 38px;\n  min-width: 20px;\n  width: 20px;\n  position: absolute;\n  top: 68px;\n}\n\n.circle-spinal-circular-menu {\n  opacity: 0;\n\n  -webkit-transform: scale(0);\n  -moz-transform: scale(0);\n  transform: scale(0);\n\n  -webkit-transition: all 0.4s ease-out;\n  -moz-transition: all 0.4s ease-out;\n  transition: all 0.4s ease-out;\n}\n\n.opencircle-spinal-circular-menu {\n  opacity: 1;\n\n  -webkit-transform: scale(1);\n  -moz-transform: scale(1);\n  transform: scale(1);\n}\n\n.closecircle-spinal-circular-menu {\n  opacity: 0;\n\n  -webkit-transform: scale(0);\n  -moz-transform: scale(0);\n  transform: scale(0);\n}\n.circle-spinal-circular-menucenter {\n  left: \"0\";\n  top: \"0\";\n  position: \"absolute\";\n}\n</style>\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalContextMenuService = require(\"./SpinalContextMenuService\");\nconst SpinalContextApp = require(\"./SpinalContextApp\");\nconst Constant = require('./constants');\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalContextMenuService === \"undefined\")\n  G_root.spinal.spinalContextMenuService = new SpinalContextMenuService();\n\nmodule.exports = {\n  constants: Constant,\n  spinalContextMenuService: G_root.spinal.spinalContextMenuService,\n  SpinalContextApp,\n  install(Vue) {\n    Vue.prototype.$spinalContextMenuService =\n      G_root.spinal.spinalContextMenuService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport * as Q from 'q';\nvar debounce = require('lodash.debounce');\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} apps key = hookname, value array of apps\n * @class SpinalContextMenuService\n */\nclass SpinalContextMenuService {\n  /**\n   *Creates an instance of SpinalContextMenuService.\n   * @memberof SpinalContextMenuService\n   */\n  constructor() {\n    this.apps = {};\n    this.promiseByAppProfileId = {};\n    this.appRdy = Q.defer();\n    this.debouncedRdy = debounce(\n      () => {\n        this.appRdy.resolve();\n        this.debouncedRdy = () => {};\n      },\n      1000,\n      { leading: false, trailing: true }\n    );\n  }\n\n  // waitRdy() {\n  //   this.appRdy.promise;\n  // }\n\n  /**\n   * Return true if user has access to this appProfile\n   * @param appProfileId\n   * @return {PromiseLike<boolean > | Promise<boolean>}\n   */\n  async hasUserRight(appProfileId) {\n    this.debouncedRdy();\n    await window.spinal.spinalSystem.init();\n    const path =\n      '/etc/UserProfileDir/' + window.spinal.spinalSystem.getUser().username;\n    const userProfile = await window.spinal.spinalSystem.load(path);\n    let res = false;\n    if (userProfile) {\n      for (let i = 0; i < userProfile.appProfiles.length && !res; i++) {\n        res = ((1 << userProfile.appProfiles[i]) & appProfileId) !== 0;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * method to register the Application to a hook\n   *\n   * @param {string} hookname the place where is application button is located\n   * @param {SpinalContextApp} spinalContextApp the application\n   * @param {number} appProfileId id of the group that can use the application\n   * button\n   * @memberof SpinalContextMenuService\n   */\n  registerApp(hookname, spinalContextApp, appProfileId) {\n    this.debouncedRdy();\n    if (typeof appProfileId === 'undefined') {\n      console.warn(\n        'Deprecated: The usage of this function without the third' +\n          ' parameter appProfileId is deprecated your button is lock for admin' +\n          ' only until you set the third parameter'\n      );\n      appProfileId = 1;\n    }\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      appsInHooks = this.apps[hookname] = [];\n    }\n\n    if (!this.promiseByAppProfileId.hasOwnProperty(appProfileId)) {\n      this.promiseByAppProfileId[appProfileId] =\n        this.hasUserRight(appProfileId);\n    }\n\n    this.promiseByAppProfileId[appProfileId].then((hasAccess) => {\n      // push the app if not exist ans user has access to the button\n      if (hasAccess && appsInHooks.indexOf(spinalContextApp) === -1) {\n        appsInHooks.push(spinalContextApp);\n      }\n    });\n  }\n\n  /**\n   * method to get the applications registered to a hookname\n   *\n   * @param {String} hookname\n   * @param {object} option\n   * @memberof SpinalContextMenuService\n   * @returns {Promise} resolve : [spinalContextApp, ...]; reject: Error\n   */\n  async getApps(hookname, option) {\n    await this.appRdy.promise;\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      return Promise.resolve([]);\n    }\n    let promises = appsInHooks.map(async function (e, idx) {\n      try {\n        const res = await e.isShown(option);\n        return res === -1 ? -1 : e;\n      } catch (error) {\n        console.error(error);\n        return -1;\n      }\n    });\n    try {\n      const appRes = await Promise.all(promises);\n      return appRes.filter((itm) => itm !== -1);\n    } catch (error) {\n      console.error(error);\n      return [];\n    }\n  }\n}\n\nmodule.exports = SpinalContextMenuService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Interface like class to define a Contextual Application button\n * @see https://material.io/tools/icons/?style=baseline for material icons\n *\n * @class SpinalContextApp\n * @property {string} label=notset short name to be shown in the application\n * @property {string} description description of what the Application button do\n * @property {object} buttonCfg Object configuration of the Application button\n * @property {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n * @property {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n * @property {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n * @property {string} buttonCfg.fontColor=#FFFFFF font color of the button\n * @property {objet} [badgeCfg] Object configuration of the Application button badge\n * @property {string} badgeCfg.label string shown in a badge; if empty it's not shown\n * @property {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n * @property {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n */\nclass SpinalContextApp {\n  /**\n   * Creates an instance of SpinalContextApp.\n   * @param {string} label=notset short name to be shown in the application\n   * @param {string} description description of what the Application button do\n   * @param {object} buttonCfg Object configuration of the Application button\n   * @param {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n   * @param {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n   * @param {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n   * @param {string} buttonCfg.fontColor=#FFFFFF font color of the button\n   * @param {objet} [badgeCfg] Object configuration of the Application button badge\n   * @param {string} badgeCfg.label string shown in a badge; if empty it's not shown\n   * @param {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n   * @param {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n   * @memberof SpinalContextApp\n   */\n  constructor(label, description, buttonCfg, badgeCfg = {}) {\n    this.label = label || \"notset\";\n    this.description = description || \"\";\n    this.buttonCfg = {\n      icon: buttonCfg.icon || \"tab\",\n      icon_type: buttonCfg.icon_type || \"in\",\n      backgroundColor: colorHash(buttonCfg.backgroundColor || \"#0000FF\"),\n      fontColor: colorHash(buttonCfg.fontColor || \"#FFFFFF\")\n    };\n\n    this.badgeCfg = {\n      label: badgeCfg.label || \"\",\n      backgroundColor: colorHash(badgeCfg.backgroundColor || \"#FF0000\"),\n      fontColor: colorHash(badgeCfg.fontColor || \"#FFFFFF\")\n    };\n  }\n\n  /**\n   * Method called by `SpinalContextMenuService.getApps`\n   * to filter the Application button to show in the context hook\n   *\n   * @param {object} option\n   * @memberof SpinalContextApp\n   * @returns {Promise} Resolve: not shown if === -1;\n   */\n  isShown(option) {}\n\n  /**\n   * Method to call on click of the application button\n   *\n   * @param {object} option {}\n   * @memberof SpinalContextApp\n   */\n  action(option) {}\n}\n\nmodule.exports = SpinalContextApp;\n\nfunction colorHash(color) {\n  if (color[0] === \"#\") return color;\n  return \"#\" + color;\n}\n","\n\nmodule.exports = {\n  ADMINISTRATEUR: 'ADMINISTRATEUR',\n  MAINTENEUR: 'MAINTENEUR',\n  INTEGRATEUR: 'INTEGRATEUR',\n  ASSET_MANAGEUR: 'ASSET MANAGER',\n};"],"names":[],"version":3,"file":"spinal-env-viewer-plugin-circular-menu.4281328a.js.map"}