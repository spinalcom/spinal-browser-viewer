{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;CAsBC;AAED;AAIA;;AACA;;AAEA,IAAI,CAAA,GAAA,mBAAG,AAAD,EAAE;IACN,QAAQ,CAAA,IAAI,EAAG,CAAA,GAAA,oBAAe,AAAD;IAC7B,SAAS,IAAM,IAAI,CAAA,GAAA,8BAAY,AAAD,EAAE,CAAA,GAAA,UAAK,AAAD;AACtC,GAAG,MAAM,CAAC;;;;;ACfV,qDACE;AADF,2CAEE,CAAA,GAAA,qBAAK,AAAD;AArBN;;AACA;;AACA;;AAEA,IAAI,kBAAkB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAE;IAChC,QAAQ,CAAA,IAAK,EAAG,CAAA,GAAA,sBAAG,AAAD;IAClB,SAAS;QACP,QAAQ,YAER;QACA,QAAQ,YAER;QACA,SAAS,YACT;IACF;IACA,OAAO,CAAA,GAAA,qBAAK,AAAD;AACb;;;;;AChBA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAsB,MAAM;IAC1C,OAAO,eAAe,GAAG,QAAQ,oBAAsB,eAAe;IACtE,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAmB,OAAO;IACxD,QAAQ,oBAAoB,OAAO,CAAC;IACpC,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;A,S;I,M,M,C;I,K,M,O,U,O,M,C,K;I,O;A;A,I,gB;I,M;I,Y;0B,C,G,iD,A;Q,S,C,G,wC,A;Q,Q,C,G,uC,A;Q,W,C,G,yC,A;I;I,M;Q,O;Y,gB;Y,Y;Y,c,E;Q;I;I,U,K,C,G,c,A,E;Q;Q;Q;Q;Q;Q;Q;Q;K,G,C,G,gB,A,E;Q;Q;Q;K,G;Q,M;Y,O,mB,Q,C;Q;I;I,S;Q,gB,S,K;Y,I,C,M,C,Q,C,kB,O,I,G,K,C,C,I,Q,K,C;Q;Q,Q;Y,O;Q;Q,iB,S,K;Y,Q,G,C,sB;Q;Q,S;Y,I,C,M,C,M,C;Q;I;I,O;Q,c;Y,S,S,K;gB,I,C,M,C,M,C,e;gB,I,M,M,K,G;oB,I,C,Y,G,I,C,U;oB,I,C,c,G;gB,O,I,C,Y,G,I,C,Q;YAqEf;QACA;QACA,WAAA;IACA;IACA;QACA,IAAA,CAAA,YAAA,GAAA,IAAA,CAAA,UAAA;IACA;A;AAIA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,W;gB,a;gB,O;oB,W,I,Y;oB,U,I,K;gB;Y;Y,I,E,C;Y,I,c,G,G,S;gB,Y;oB;wB,M;wB,S;wB,O,I,U;wB,Y;oB;iB;gB,O;oB,e;gB;gB,U;oB,S,I,U;gB;gB,I;oB,S,S,M;wB,I,O,M,C,S,E;wB,I,U,G,O,M,C,K;oB;gB;Y,K,G,sB;gB,a;gB,O;oB,Q;oB,Y;gB;gB,I;oB,S,S,M;wB,I,c,G;oB;gB;Y;Y,I,E,C;Y,G,sB;gB,a;gB,O;oB,Q;oB,Y;gB;gB,I;oB,S,I,O;gB;Y;S,E;Q,I,E,C;Q,G,O;Y,a;Q,G;Y,G,c;gB,a;gB,O;oB,mB,I,a;oB,e,I,Y;oB,wB,I,iB;oB,S,I,K;oB,wB;gB;gB,I;oB,S,I,c;oB,e,S,M,G;oB,mB,I,e;gB;Y;Y,I,E,C;Y,G,Y;gB,a;gB,O;oB,W,I,a;oB,U,I,Y;gB;Y;S,E;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AA/FA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;ACLA;;;;;;;;;;;;;;;;;;;;;;CAsBC;;AAED;AAEe,MAAM;IACnB,YAAa,KAAK,CAAG;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG,CAAC;QAEjB,IAAI,CAAC,QAAQ,GAAG,AAAC,CAAA,SAAW,IAAI;YAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,YAAY;QACjC,CAAA,EAAG,IAAI,CAAE,IAAI;QACb,IAAI,CAAC,WAAW,GAAG,AAAC,CAAA,SAA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","sources":["node_modules/spinal-env-viewer-plugin-graph-manager/index.js","node_modules/spinal-env-viewer-plugin-graph-manager/src/vue/index.js","node_modules/spinal-env-viewer-plugin-graph-manager/src/vue/App.vue","node_modules/spinal-env-viewer-plugin-graph-manager/src/GraphManager.js","node_modules/spinal-env-viewer-context-menu-service/index.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextMenuService.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","node_modules/spinal-env-viewer-context-menu-service/constants.js"],"sourcesContent":["/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport {\n  GraphManagerVue,\n  Store\n} from \"./src/vue\";\nimport GraphManager from \"./src/GraphManager.js\";\nimport Vue from \"vue\";\n\nnew Vue({\n  render: h=> h (GraphManagerVue),\n  mounted: () => new GraphManager(Store)\n}).$mount(\"#graph-manager-side\");\n\n","import Store from './store';\nimport App from './App.vue';\nimport Vue from 'vue';\n\nlet GraphManagerVue = Vue.extend( {\n  render: h => h( App ),\n  methods: {\n    opened: function () {\n\n    },\n    closed: function () {\n\n    },\n    removed: function () {\n    }\n  },\n  store: Store\n} );\n\nexport {\n  GraphManagerVue,\n  Store\n};\n\n","<!--\n  - Copyright 2019 SpinalCom - www.spinalcom.com\n  -\n  -  This file is part of SpinalCore.\n  -\n  -  Please read all of the following terms and conditions\n  -  of the Free Software license Agreement (\"Agreement\")\n  -  carefully.\n  -\n  -  This Agreement is a legally binding contract between\n  -  the Licensee (as defined below) and SpinalCom that\n  -  sets forth the terms and conditions that govern your\n  -  use of the Program. By installing and/or using the\n  -  Program, you agree to abide by all the terms and\n  -  conditions stated or referenced herein.\n  -\n  -  If you do not agree to abide by these terms and\n  -  conditions, do not demonstrate your acceptance and do\n  -  not install or use the Program.\n  -  You should have received a copy of the license along\n  -  with this file. If not, see\n  -  <http://resources.spinalcom.com/licenses.pdf>.\n  -->\n\n<template>\n    <div class=\"plugin-graph-viewer\" >\n\n        <div class=\"graph-manager-top-bar\">\n\n            <top-bar :buttons=\"topBarButton\"\n                     :option=\"graph\"\n                     class=\"graph-manager-top-tools-bar\"\n            />\n\n\n            <input v-if=\"isSearchActive\"\n                   v-model=\"searchText\"\n                   placeholder=\"search name \"\n            />\n            <spinal-icon-button\n                    v-else\n                    class=\"plugin-graph-viewer-refresh\"\n                    icon=\"search\"\n                    tool-tip=\"search graph\"\n                    v-on:click=\"isSearchActive = true\"\n            />\n\n\n            <spinal-icon-button\n                    class=\"plugin-graph-viewer-refresh\"\n                    icon=\"refresh\"\n                    tool-tip=\"refresh graph\"\n                    v-on:click=\"refresh\"\n            />\n\n        </div>\n\n        <div class=\"graph-manager-body\" >\n\n\n\n            <nodes-list class=\"graph-viewer\"\n\n                        :active-nodes-id=\"activeNodesId\"\n                        :contexts-id=\"displayNodes\"\n\n                        :has-child-in-context=\"hasChildInContext\"\n                        :nodes=\"nodes\"\n                        :show-hide-bim-object=\"false\"\n\n                        @click=\"onNodeSelected\"\n                        @right-click=\"\"\n                        @hide-bim-object=\"onHideBimObject\"\n            />\n            <side-bar class=\"graph-manager-side-bar\"\n                      :buttons=\"sideBarButton\"\n                      :option=\"selectedNode\"\n            />\n\n        </div>\n    </div>\n</template>\n\n<script>\n\n  function test() {\n    const res = {};\n    for (const arg of arguments) {\n      Object.assign( res, arg );\n    }\n    return res;\n  }\n\n  import {\n    NodeList,\n    SideBar,\n    SpinalIconButton,\n    TopBar\n  } from \"spinal-env-viewer-vue-components-lib\";\n  import {\n    mapGetters,\n    mapState\n  } from 'vuex'\n\n  export default {\n    name: 'graph-manager',\n    components: {\n      SpinalIconButton,\n      sideBar: SideBar,\n      TopBar: TopBar,\n      NodesList: NodeList\n    },\n    data: function () {\n      return {\n        isSearchActive: false,\n        searchText: '',\n        displayNodes: []\n      }\n    },\n    computed: test(\n      mapState( [\n        'topBarButton',\n        'sideBarButton',\n        'contextsId',\n        'nodes',\n        'activeNodesId',\n        'selectedNode',\n        'searchId',\n        'nodes'\n      ] ),\n      mapGetters( ['arrayNode', 'getChildrenId', 'hasChildInContext'] ),\n      {\n        isV6: function(){\n          return LMV_VIEWER_VERSION.includes('6')\n        },\n\n      }\n    ),\n    methods: {\n      onNodeSelected: function ( event ) {\n        this.$store.dispatch( \"onNodeSelected\", event )\n          .then()\n          .catch( e => console.error( e ) );\n      },\n\n      height: function () {\n        return \"100%\";\n      },\n\n      onHideBimObject: function ( event ) {\n        console.log( \"hide bim obj event\", event )\n      },\n\n      refresh: function () {\n        this.$store.commit( 'REFRESH' )\n      },\n\n    },\n    watch: {\n      'searchText': {\n        handler: function ( value ) {\n          this.$store.commit( 'SEARCH_TEXT', value );\n          if (value.length === 0) {\n            this.displayNodes = this.contextsId;\n            this.isSearchActive = false;\n          } else {\n            this.displayNodes = this.searchId;\n          }\n        }\n      },\n      immediate: true\n    },\n    mounted() {\n      this.displayNodes = this.contextsId\n    }\n  }\n\n</script>\n\n<style>\n    .plugin-graph-viewer {\n        overflow: hidden;\n        width: 260px;\n    }\n\n    .plugin-graph-viewer * {\n        margin: 0;\n        box-sizing: border-box;\n    }\n\n    .graph-viewer {\n        border-right: 1px solid rgba(128, 128, 128, 0.64);\n        width: 100%;\n        overflow-y: auto;\n        overflow-x: hidden;\n    }\n\n    .graph-manager-top-bar {\n        display: flex;\n        background-color: rgba(52, 52, 52, 0.85);\n        border-bottom: 1px solid rgba(128, 128, 128, 0.64);\n    }\n\n    .graph-manager-side-bar {\n        overflow-y: auto;\n        overflow-x: hidden;\n        background-color: rgba(52, 52, 52, 0.85);\n        border-bottom: 1px solid rgba(128, 128, 128, 0.64);\n\n    }\n\n    .graph-manager-side-bar::-webkit-scrollbar {\n        width: 2px;\n        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n        background-color: #121212;\n    }\n\n    .graph-manager-side-bar::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n    }\n    .graph-manager-side-bar::-webkit-scrollbar-thumb {\n        outline: 1px solid slategrey;\n        background-color: #737374;\n    }\n\n\n\n    .graph-viewer::-webkit-scrollbar {\n        width: 4px;\n        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n        background-color: #121212;\n    }\n\n    .graph-viewer::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n    }\n\n    .graph-viewer::-webkit-scrollbar-thumb {\n        outline: 1px solid slategrey;\n        background-color: #737374;\n    }\n\n    .plugin-graph-viewer-refresh {\n        float: right;\n        font-size: 2%;\n    }\n\n    .graph-manager-top-tools-bar {\n        float: left;\n        width: 98%;\n        overflow: auto;\n        display: flex;\n    }\n\n    .graph-manager-top-tools-bar::-webkit-scrollbar {\n        height: 5px;\n        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n        background-color: #121212;\n    }\n\n    .graph-manager-top-tools-bar::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n    }\n\n    .graph-manager-top-tools-bar::-webkit-scrollbar-thumb {\n        outline: 1px solid slategrey;\n        background-color: #737374;\n    }\n\n    .graph-manager-body {\n        display: flex;\n        width: 100%;\n        height: calc(100% - 41px);\n    }\n\n\n</style>\n","/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\nexport default class GraphManager {\n  constructor( store ) {\n    this.nodes = {};\n    this.contexts = {};\n\n    this.bindNode = (function ( node ) {\n      this.store.commit( \"SET_NODE\", node );\n    }).bind( this );\n    this.onNodeAdded = (function ( nodeId ) {\n      const node = SpinalGraphService.getNode( nodeId );\n      SpinalGraphService.bindNode( nodeId, this, this.bindNode );\n      this.store.commit( 'ADD_NODE', node );\n    }).bind( this );\n    this.removeNode = (function ( nodeId ) {\n      this.store.commit( 'REMOVE_NODE', nodeId );\n    }).bind( this );\n    this.graphChange = (function () {\n      SpinalGraphService.getChildren( this.graphId, ['hasContext'] )\n        .then( contexts => {\n          for (let i = 0; i < contexts.length; i++) {\n            const contextId = contexts[i].id.get();\n            if (\n              (!this.contexts.hasOwnProperty( contextId ))\n              && (contexts[i].name.get().indexOf( '.' ) !== 0)\n              && !(contexts[i].name.get().includes( 'BIMObjectContext' ))\n            ) {\n              this.contexts[contextId] = contexts[i];\n              SpinalGraphService.bindNode( contextId, this, this.bindNode );\n            }\n          }\n\n          this.store.commit('UPDATE_CONTEXTS', contexts);\n        } );\n\n    }).bind( this );\n    this.store = store;\n  \n     SpinalGraphService.waitForInitialization().then(()=> {\n      this.graph = SpinalGraphService.getGraph();\n      this.graphId = this.graph.getId().get();\n      this.init();\n    });\n  \n    \n  }\n\n  reset() {\n\n    if (typeof this.unbind === \"function\") {\n      this.unbind();\n    }\n\n    if (typeof this.stopListeningOnNodeAdded === 'function') {\n      this.stopListeningOnNodeAdded();\n    }\n\n    if (typeof this.stopListeningOnNodeRemove === \"function\") {\n      this.stopListeningOnNodeRemove();\n    }\n  \n  \n    this.setNodes();\n    this.init().then( () => this.store.commit( 'REFRESHED' ) );\n\n  }\n\n  init() {\n  \n    this.store.subscribe( ( mutation ) => {\n        if (mutation.type === 'REFRESH') {\n          this.reset();\n        }\n        if (\n          mutation.type === 'GET_NODE'\n          && typeof mutation.payload !== \"undefined\"\n          && !this.nodes.hasOwnProperty( mutation.payload )\n        ) {\n        \n          const nodeId = mutation.payload;\n          const node = SpinalGraphService.getNode( nodeId );\n          if (typeof node !== \"undefined\") {\n            this.nodes[mutation.payload] = node;\n            this.store.commit( 'ADD_NODE', node );\n            SpinalGraphService.getChildren( nodeId, [] ).then(\n              children => {\n                this.store.commit( 'ADD_NODES', children );\n              }\n            );\n          } else {\n            SpinalGraphService.findNode( nodeId ).then( node => {\n            \n              this.store.commit( 'ADD_NODE', node );\n              SpinalGraphService.getChildren( nodeId, [] ).then(\n                children => {\n                  this.store.commit( 'ADD_NODES', children );\n                }\n              );\n            } );\n          }\n        }\n      } );\n    this.stopListeningOnNodeAdded = SpinalGraphService.listenOnNodeAdded( this, this.onNodeAdded );\n    this.stopListeningOnNodeRemove = SpinalGraphService.listenOnNodeRemove( this, this.removeNode );\n\n    this.unbind = SpinalGraphService.bindNode( this.graphId, this, this.graphChange );\n    this.nodes = {};\n  \n    this.store.dispatch( \"retrieveGlobalBar\", this.graph );\n    this.store.commit( \"SET_GRAPH\", this.graph );\n    this.setNodes();\n    \n    return SpinalGraphService.getChildren( this.graphId, ['hasContext'] )\n      .then( contexts => {\n        for (let i = 0; i < contexts.length; i++) {\n          const contextId = contexts[i].id.get();\n          if (\n            (!this.contexts.hasOwnProperty( contextId ))\n            && (contexts[i].name.get().indexOf( '.' ) !== 0)\n            && !(contexts[i].name.get().includes( 'BIMObjectContext' ))\n          ) {\n            this.contexts[contextId] = contexts[i];\n            SpinalGraphService.bindNode( contextId, this, this.bindNode );\n          }\n        }\n          this.store.commit('UPDATE_CONTEXTS', contexts);\n      } )\n      .catch( e => console.error( e, SpinalGraphService ) );\n  }\n  \n  setNodes() {\n    const nodes = SpinalGraphService.getNodes();\n    \n    for (let key in nodes) {\n      if (nodes.hasOwnProperty( key )) {\n        this.store.commit( 'ADD_NODE', SpinalGraphService.getInfo( nodes[key].getId().get() ) );\n      }\n    }\n  }\n}\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalContextMenuService = require(\"./SpinalContextMenuService\");\nconst SpinalContextApp = require(\"./SpinalContextApp\");\nconst Constant = require('./constants');\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalContextMenuService === \"undefined\")\n  G_root.spinal.spinalContextMenuService = new SpinalContextMenuService();\n\nmodule.exports = {\n  constants: Constant,\n  spinalContextMenuService: G_root.spinal.spinalContextMenuService,\n  SpinalContextApp,\n  install(Vue) {\n    Vue.prototype.$spinalContextMenuService =\n      G_root.spinal.spinalContextMenuService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport * as Q from 'q';\nvar debounce = require('lodash.debounce');\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} apps key = hookname, value array of apps\n * @class SpinalContextMenuService\n */\nclass SpinalContextMenuService {\n  /**\n   *Creates an instance of SpinalContextMenuService.\n   * @memberof SpinalContextMenuService\n   */\n  constructor() {\n    this.apps = {};\n    this.promiseByAppProfileId = {};\n    this.appRdy = Q.defer();\n    this.debouncedRdy = debounce(\n      () => {\n        this.appRdy.resolve();\n        this.debouncedRdy = () => {};\n      },\n      1000,\n      { leading: false, trailing: true }\n    );\n  }\n\n  // waitRdy() {\n  //   this.appRdy.promise;\n  // }\n\n  /**\n   * Return true if user has access to this appProfile\n   * @param appProfileId\n   * @return {PromiseLike<boolean > | Promise<boolean>}\n   */\n  async hasUserRight(appProfileId) {\n    this.debouncedRdy();\n    await window.spinal.spinalSystem.init();\n    const path =\n      '/etc/UserProfileDir/' + window.spinal.spinalSystem.getUser().username;\n    const userProfile = await window.spinal.spinalSystem.load(path);\n    let res = false;\n    if (userProfile) {\n      for (let i = 0; i < userProfile.appProfiles.length && !res; i++) {\n        res = ((1 << userProfile.appProfiles[i]) & appProfileId) !== 0;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * method to register the Application to a hook\n   *\n   * @param {string} hookname the place where is application button is located\n   * @param {SpinalContextApp} spinalContextApp the application\n   * @param {number} appProfileId id of the group that can use the application\n   * button\n   * @memberof SpinalContextMenuService\n   */\n  registerApp(hookname, spinalContextApp, appProfileId) {\n    this.debouncedRdy();\n    if (typeof appProfileId === 'undefined') {\n      console.warn(\n        'Deprecated: The usage of this function without the third' +\n          ' parameter appProfileId is deprecated your button is lock for admin' +\n          ' only until you set the third parameter'\n      );\n      appProfileId = 1;\n    }\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      appsInHooks = this.apps[hookname] = [];\n    }\n\n    if (!this.promiseByAppProfileId.hasOwnProperty(appProfileId)) {\n      this.promiseByAppProfileId[appProfileId] =\n        this.hasUserRight(appProfileId);\n    }\n\n    this.promiseByAppProfileId[appProfileId].then((hasAccess) => {\n      // push the app if not exist ans user has access to the button\n      if (hasAccess && appsInHooks.indexOf(spinalContextApp) === -1) {\n        appsInHooks.push(spinalContextApp);\n      }\n    });\n  }\n\n  /**\n   * method to get the applications registered to a hookname\n   *\n   * @param {String} hookname\n   * @param {object} option\n   * @memberof SpinalContextMenuService\n   * @returns {Promise} resolve : [spinalContextApp, ...]; reject: Error\n   */\n  async getApps(hookname, option) {\n    await this.appRdy.promise;\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      return Promise.resolve([]);\n    }\n    let promises = appsInHooks.map(async function (e, idx) {\n      try {\n        const res = await e.isShown(option);\n        return res === -1 ? -1 : e;\n      } catch (error) {\n        console.error(error);\n        return -1;\n      }\n    });\n    try {\n      const appRes = await Promise.all(promises);\n      return appRes.filter((itm) => itm !== -1);\n    } catch (error) {\n      console.error(error);\n      return [];\n    }\n  }\n}\n\nmodule.exports = SpinalContextMenuService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Interface like class to define a Contextual Application button\n * @see https://material.io/tools/icons/?style=baseline for material icons\n *\n * @class SpinalContextApp\n * @property {string} label=notset short name to be shown in the application\n * @property {string} description description of what the Application button do\n * @property {object} buttonCfg Object configuration of the Application button\n * @property {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n * @property {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n * @property {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n * @property {string} buttonCfg.fontColor=#FFFFFF font color of the button\n * @property {objet} [badgeCfg] Object configuration of the Application button badge\n * @property {string} badgeCfg.label string shown in a badge; if empty it's not shown\n * @property {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n * @property {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n */\nclass SpinalContextApp {\n  /**\n   * Creates an instance of SpinalContextApp.\n   * @param {string} label=notset short name to be shown in the application\n   * @param {string} description description of what the Application button do\n   * @param {object} buttonCfg Object configuration of the Application button\n   * @param {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n   * @param {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n   * @param {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n   * @param {string} buttonCfg.fontColor=#FFFFFF font color of the button\n   * @param {objet} [badgeCfg] Object configuration of the Application button badge\n   * @param {string} badgeCfg.label string shown in a badge; if empty it's not shown\n   * @param {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n   * @param {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n   * @memberof SpinalContextApp\n   */\n  constructor(label, description, buttonCfg, badgeCfg = {}) {\n    this.label = label || \"notset\";\n    this.description = description || \"\";\n    this.buttonCfg = {\n      icon: buttonCfg.icon || \"tab\",\n      icon_type: buttonCfg.icon_type || \"in\",\n      backgroundColor: colorHash(buttonCfg.backgroundColor || \"#0000FF\"),\n      fontColor: colorHash(buttonCfg.fontColor || \"#FFFFFF\")\n    };\n\n    this.badgeCfg = {\n      label: badgeCfg.label || \"\",\n      backgroundColor: colorHash(badgeCfg.backgroundColor || \"#FF0000\"),\n      fontColor: colorHash(badgeCfg.fontColor || \"#FFFFFF\")\n    };\n  }\n\n  /**\n   * Method called by `SpinalContextMenuService.getApps`\n   * to filter the Application button to show in the context hook\n   *\n   * @param {object} option\n   * @memberof SpinalContextApp\n   * @returns {Promise} Resolve: not shown if === -1;\n   */\n  isShown(option) {}\n\n  /**\n   * Method to call on click of the application button\n   *\n   * @param {object} option {}\n   * @memberof SpinalContextApp\n   */\n  action(option) {}\n}\n\nmodule.exports = SpinalContextApp;\n\nfunction colorHash(color) {\n  if (color[0] === \"#\") return color;\n  return \"#\" + color;\n}\n","\n\nmodule.exports = {\n  ADMINISTRATEUR: 'ADMINISTRATEUR',\n  MAINTENEUR: 'MAINTENEUR',\n  INTEGRATEUR: 'INTEGRATEUR',\n  ASSET_MANAGEUR: 'ASSET MANAGER',\n};"],"names":[],"version":3,"file":"spinal-env-viewer-plugin-graph-manager.eaf7147e.js.map"}