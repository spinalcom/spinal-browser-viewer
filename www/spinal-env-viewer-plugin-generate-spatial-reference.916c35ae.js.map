{"mappings":"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Q;Y,M,U,I,C;Y,I,S,O,Q,K,G;Y,O;Q;I;I,M;Q,kD;Q,M,Q,C,G,kC;Q,I,U,M,M,W;Q,I,C,S;Q,C,G,6C,E;Q,M,W,M,Q,qB;Q,K,M,S,S;Y,C,G,6C,E;Y,I,C,O,K;Q;I;I,S;Q;Y,I,C,a;Q;Q,M;Y,I,C,a;Y,I,C,O;Y,M,S,C,G,mC;Y,I;gB,I,I,I,G,I,I,C,O,Q,I;oB,M,c,I,C,M,C,E;oB,I,I,C,mB,S,Y,K,K,Q;wB,M,Q,M,C,G,qC,E,a;wB,M,C,G,qC,E,Y,K,G,O;oB;gB;Y,E,O,G;gB,Q,M;Y,S;gB,I,C,O;Y;Q;Q;Y,M,Q,C,G,kC;Y,O,C,G,wC,E;Q;Q;Y,M,Q,C,G,kC;Y,O,C,G,8C,E;Q;Q;Y,M,Q,C,G,kC;Y,O,C,G,6C,E;Q;Q;Y,M,Q,C,G,kC;Y,O,C,G,kD,E,O,I,C;Q;Q,gB,G;Y,I,C,O,Q,Q,I,C,mB;iB;gB,I,C,e;gBAiHf,IAAA,CAAA,mBAAA;YACA;YACA,IAAA,CAAA,cAAA;QACA;QACA,MAAA,WAAA,GAAA;YACA,IAAA,CAAA,OAAA;YACA,IAAA;gBACA,MAAA;gBACA,QAAA,IAAA;YACA,EAAA,OAAA,OAAA;gBACA,QAAA,MAAA;YACA,SAAA;gBACA,IAAA,CAAA,OAAA;YACA;QACA;QACA;YACA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,CAAA,OAAA,QAAA,IAAA;gBACA,IAAA,IAAA,CAAA,MAAA,CAAA,EAAA,CAAA,KAAA,KAAA,UAAA,IAAA,CAAA,eACA,OAAA,IAAA,CAAA,MAAA,CAAA,EAAA;YAEA;QACA;QACA,MAAA,UAAA,GAAA;YACA,IAAA,CAAA,OAAA;YACA,MAAA,QAAA,CAAA,GAAA,kCAAA;YACA,IAAA;gBACA,IAAA,CAAA,gBAAA,IAAA;gBACA,MAAA,UAAA,IAAA,CAAA;gBACA,MAAA,SAAA,CAAA,GAAA,mCAAA;gBACA,QAAA,IAAA;gBACA,MAAA,QAAA,MAAA,CAAA,GAAA,kCAAA,EAAA,OAAA,IAAA,CAAA,YAAA,SAAA;gBACA,CAAA,GAAA,wCAAA,EAAA;gBACA,QAAA,IAAA,kBAAA;gBACA,IAAA,CAAA,YAAA;gBACA,IAAA,CAAA,mBAAA;gBACA,IAAA,CAAA,iBAAA,IAAA;YACA,EAAA,OAAA,GAAA;gBACA,QAAA,MAAA;YACA,SAAA;gBACA,IAAA,CAAA,OAAA;YACA;QACA;QACA,MAAA,kBAAA,GAAA;YACA,MAAA,QAAA,CAAA,GAAA,kCAAA;YACA,MAAA,gBAAA,MAAA,CAAA,GAAA,oCAAA,EAAA;YACA,cAAA,WAAA;YACA,MAAA,IAAA,CAAA,SAAA,IAAA;QACA;QACA;YACA,IAAA,CAAA,SAAA;QACA;QACA,YAAA;QACA,UAAA;QACA,gBAAA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;;;AC1LA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAmC;IACjD,OAAO,kBAAkB,QAAQ,oBAAmC;IACpE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAgC;IAC9D,QAAQ,oBAAiC,QAAQ;IACjD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;;A,I,gB;I,M;I,O;Q,U;Y,S;Y,M;Y,S,I,E;Q;Q,U;Y,M;Y,S,I;Q;Q,a;Y,M;Y,S,I;Q;I;I;Q,O;Y,U;Y,e;Y,kB;Y,kB,I;Y,uB;Y,W,E;Y,uB;Q;I;I,U;Q;Y,O,I,C,e,I,C,kB,Q,C,I,C;Q;I;I;Q,O,I,C;I;I,S;Q,iB,K;Y,I,C,gB;Q;Q,M;Y,M,Q,C,G,kC;Y,M,a,M,C,G,2C,E;Y,M,Y,M,W,qB;Y,I,C,Y,U,I,C;gB,O;oB,O,I,K,K;oB,O,I;gB;Y;Y,I,I,C,U,W,G,I,C,wB,I,C,S,C,E,C;Q;Q,M,qB,Y;Y,M,Q,C,G,kC;Y,M,a,M,C,G,2C,E;Y,M,O,M,C,G,uD,E,Y,W,K,G,O,W,K,G,O;Y,M,C,G,yC,E;Y,O,I,C;Q;Q;Y,I,C,M,Y;gB,gB,I,C;gB,e,I,C;Y;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,U;Q,G,e;Y,G,Y;gB,G,S;oB,O;wB,O;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,a;oB,O;wB,M;wB,Q;wB,Y;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,gB;wB;wB,Y;oB;gB,G,I,G,I,U,S,O;oB,O,G,a;wB,O;4B,S;wB;oB,G;wB,I,G,iB,I,G,W;qB;gB,I;a,E;Y,I,G;Y,G,Y;gB,G,S;oB,O;wB,O;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,a;oB,a;oB,O;wB,M;wB,Q;wB,Y;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,wB;wB;wB,Y;oB;gB,G,I,G,I,W,S,Q;oB,O,G,a;wB,K,S;wB,O;4B,S,S;wB;oB,G;wB,I,G,iB,I,G,S,S;qB;gB,I;gB,I,G;gB,G,a;oB,a;oB,O;wB,Y;oB;oB,I;wB,S,S,M;4B,I,mB;4B,I,wB;wB;oB;gB,G;oB,G,W;wB,I,G;qB;iB,E;a,E;S,E;Q,I,G;Q,G,kB;Y,G;Y,I,G;Y,G,S;gB,O;oB,S;oB,Q;oB,Y,I;gB;gB,I;oB,S,I;gB;Y,G;gB,I,G,a,I,G,I,Y;a;S,E;Q,I,G;Q,G,oB;Y,O;gB,a,I;gB,Y,I;gB,sB;gB,wB;gB,mB;Y;Y,I;gB,mB,S,M;oB,I,wB;gB;gB,oB,S,M;oB,I,wB;gB;gB,c,S,M;oB,O,I,oB,I;gB;Y;Y,O;gB,O,I;gB,U,S,G;oB,I,mB;gB;gB,Y;Y;Q;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAsC;IACpD,OAAO,kBAAkB,QAAQ,oBAAsC;IACvE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAmC;IACjE,QAAQ,oBAAoC,QAAQ;IACpD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;;A;;A;;A;A,G;A,I,gB;I,M;I,Y;0B,C,G,mC;yB,C,G,kC;iC,C,G,0C;sB,C,G,+B;I;I,O;Q,U;Y,S;Y,M;Y,S,I,E;Q;Q,U;Y,M;Y,S,I;Q;Q,a;Y,M;Y,S,I;Q;Q,a;Y,S;Y,M;Y,S,I,E;Q;I;I;Q,O;Y,W;Y,Y;Y,U,E;Y,I;Y,a;Y,c;Y,O,C;Y,a,E;Y,Y,E;Y,a,E;Y,iB,E;Y,W,E;Y,c;Y,e;Y,gB;Q;I;I,U;Q;Y,O,I,C,c,I;Q;I;I,S;Q;Y,I,C,K,I,C,K;Q;Q,e,K;Y,I,C,K,I,C,K;Y,I,C,Q;Q;Q,e,K;Y,I,C,c;Y,I,C,K,I,C,K;Q;Q,c,K;Y,I,C,a;Y,I,C,K,I,C,K;Q;Q,e,K;Y,I,C,c;Y,I,C,K,I,C,K;Q;Q,mB,K;Y,I,C,kB;Y,I,C,K,I,C,K;Q;Q;Y,M,M;gB,Y,I,C;gB,O,I,C;gB,a,I,C,W,I,C;gB,Y,I,C,W,I,C;gB,iB,I,C,W,I,C;Y;Y,I,I,C,gB,O,O,O,K;gB,a,I,C,W,I,C;Y;Y,I,I,C,c,O,O,K;gB,c,I,C;Y;Y,I,I,C,e,O,O,K;gB,e,I,C;Y;Y,I,I,C,gB,O,O,K;gB,gB,I,C;Y;Y,I,C,M,c;Q;Q,Y,M;Y,M,M,E;Y,K,M,K,O;gB,M,M;oB,K,E,I;oB,O,E,M;gB;gB,I,E,U,M,O,O,K;oB,O;gB;gB,I,K;Y;Y,O;Q;Q,M,a,U;Y,M,Q,C,G,kC,E,I,C,M;Y,I,C,Y,M,C,G,sC,E,O;Y,I,C,e;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;;;ACff,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA+B;IAC7C,OAAO,kBAAkB,QAAQ,oBAA+B;IAChE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA4B;IAC1D,QAAQ,oBAA6B,QAAQ;IAC7C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;A;;A,M,Y;A,I,gB;I,M;I,Y;oB,C,G,6B;I;I,O;Q,O;Y,S;Y,M;Y,S,I,E;Q;Q,W;Y,S;Y,M;Y,S,I;Q;I;I;Q,O;Y,Y,E;Y,c;Y,Y;Y,a;Y,U;Y,Q;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;a;Y,a;gB;gB;gB;gB;gB;oB,M;oB,O;gB;a;Y,Y;gB,Y;gB,M;gB,a;gB,Q;gB,Y;Y;Q;I;I,U;Q;Y,M,M,I,C,a,W,I,C;gB,O;oB,a,O,E;oB,c,O,E;oB,iB,O,E;oB,e,O,E;oB,M,O,E;oB,O,O,E;oB,Q,O,E;oB,W,O,E;gB;Y;Y,O;Q;Q;Y,I,I,C,e,Q,I,C,gB,I;gB,I,Q;gB,I;oB,Q,C,G,gC,E,I,C;gB,E,O,G;oB,Q,I,C;gB;gB,M,M,I,O,O;gB,O,I,C,W,O,C;oB,O,I,K,K,S,I,K,K;gB;Y;Y,O,I,C;Q;Q;Y,M,M,A,C,I,C,O,C,I;Y,O,I,C,c,M,K,M;Q;Q;Y,O,K,K,I,C,c,S;Q;Q,M;Y;gB,I,I,C,U,I,C,U,O,I,C;gB,O,I,C;Y;Y,K,K;gB,I,C,W;Y;Q;IAiFf;IACA,MAAA;QACA,IAAA,IAAA,CAAA,MAAA,WAAA,GAAA;QACA,IAAA,CAAA,QAAA,CAAA,GAAA,kCAAA,EAAA,IAAA,CAAA;QACA,IAAA,CAAA,aAAA,MAAA,CAAA,GAAA,4BAAA,EAAA,IAAA,CAAA,OAAA,IAAA,CAAA;IACA;IACA,SAAA;Q;YAEA,IAAA,IAAA,CAAA,cAAA,OAAA,IAAA,CAAA,eAAA;YACA,IAAA,CAAA,MAAA;QACA;QACA,SAAA,KAAA;YACA,CAAA,GAAA,0BAAA,EAAA;gBAAA,MAAA;aAAA,EAAA,IAAA,CAAA;QACA;QACA,cAAA,KAAA;YACA,CAAA,GAAA,qBAAA,EAAA;gBAAA,MAAA;aAAA,EAAA,IAAA,CAAA;QACA;QACA,gBAAA,KAAA;YACA,IAAA,CAAA,eAAA;QACA;QACA;YACA,IAAA,IAAA,CAAA,aAAA,WAAA,WAAA,GAAA,OAAA,EAAA;YACA,MAAA,MAAA,EAAA;YACA,IAAA,MAAA,OAAA,IAAA,CAAA,aAAA,UAAA,CAAA,EAAA,CACA,IAAA,IAAA,CAAA,aAAA,UAAA,CAAA,EAAA,CAAA,eAAA,MACA,IAAA,KAAA;YAGA,OAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;ACnIA;;;;;;;;;;;;;;;;;;;;;;CAsBC;;AAID,uDAAgB;AAMhB,iDAAgB;AAGhB,qDAAgB;gDAIH;AAfb;;AAEO,SAAS,kBAAkB,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;IACzD,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,MAAM,kBAAkB,OAAO,QAAQ,SAAS;IAClD;AACF;AAEO,SAAS,YAAY,KAAK,EAAE,KAAK;IACtC,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO;AACjD;AACO,SAAS,gBAAgB,KAAK,EAAE,KAAK;IAC1C,OAAO,OAAO,YAAY,OAAO,UAAU,OAAO;AACpD;AAEO,MAAM,aAAa,CAAA,GAAA,8BAAO,EAAE,aAAa;;;ACvChD;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAGD;;;;CAIC;;AACD,wDAAgB;AAgDhB,wDAAgB;AAyBhB,kDAAgB;AAIhB,iDAAgB;AAKhB,+CAAgB;AAQhB,oDAAgB;AA1FT,SAAS,mBAAmB,KAAK,EAAE,GAAG;IAC3C,MAAM,OAAO;QAAC;KAAI;IAClB,KAAK,MAAM,KAAK,IAAK;QACnB,IAAI,WAAW;QACf,IAAI,EAAE,UAAU,MAAM,WAAW,CAAC,aAAa,CAAC;QAChD,MAAM,MAAM,CAAC,OAAO,EAAE,EAAE,IAAI,WAAW,SAAS,EAAE,EAAE,MAAM,WAAW,EAAE,SAAS,EAAE,CAAC;QACnF,KAAK,KAAK;IACZ;IACA,KAAK,KAAK;IACV,MAAM,MAAM,CAAC;;mBAEI,EAAE,KAAK,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAgC9B,CAAC;IACJ,OAAO,MAAM,gBAAgB,oBAAoB;AACnD;AAGO,SAAS,mBAAmB,KAAK;IACtC,MAAM,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;KAoBV,CAAC;IACJ,OAAO,MAAM,gBAAgB,oBAAoB;AACnD;AAEO,SAAS,aAAa,MAAM;IACjC,OAAO,OAAO,QAAQ,uBAAuB,SAAS,oCAAoC;AAC5F;AAEO,SAAS,YAAY,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE;IAClD,IAAI,SAAS,KAAK,OAAO,IAAI,OAAO,MAAM,aAAa,QAAQ,KAAK;IACpE,IAAI,SAAS,KAAK,OAAO,IAAI,OAAO,aAAa,OAAO;IACxD,IAAI,SAAS,KAAK,OAAO,IAAI,OAAO,MAAM;AAC5C;AACO,SAAS,UAAU,KAAK;IAC7B,OAAO;QACL,KAAK,YAAY,KAAK;QACtB,OAAO,YAAY,KAAK;QACxB,OAAO;IACT;AACF;AAEO,SAAS,eAAe,IAAI;IACjC,IAAI,OAAO,OAAO,iBAAiB,mBAAmB,eAAe,OACnE,OAAO,OAAO,OAAO,iBAAiB,kBAAkB,CAAC,KAAK;AAElE;;;;;AC3HA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA6B;IAC3C,OAAO,kBAAkB,QAAQ,oBAA6B;IAC9D,OAAO,WAAW;IAG5B,QAAQ,oBAA2B,QAAQ;IAC3C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A,I,M;A,I,gB;I,M;I,O;Q,M;Y,S;Y,M;Y,S,I;Q;Q,S;Y,S;Y,M;Y,S,I;Q;I;I;Q,O;Y,I;Q;I;I;Q,I,C,K,I,C,K;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,O;Y,M,I;Q;I,G;Q,G,a;Y,O;gB,U,M,I;gB,U;Y;Y,a,I,G;gB;oB,K;oB,I,S,G;wB,I,K,I;wB,O;4B,G,S,I,G;gC,O;oC,Q;oC,U;gC;gC,I;oC,S,S,M;wC,O;wC,O,I,M,W,I;oC;gC;4B,G,K;gC,G,U;oC,O;wC,S;oC;gC,G;oC,I,G,iB,I,G,I,Q;iC;6B,E;yB;oB;gB;a;Q,G;Y,I,G;Y,G,Q;gB,I,G,I,G,I;a;S;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,U;Q,O;Y,S;Q;I,G;Q,G,a;Y,O;gB,Q;gB,S;Y;Q,G;Y,G,S;gB,O;oB,Q;gB;Y,G;gB,G,U;oB,I;wB,S,I;oB;gB,G;oB,I,G;iB;a,E;Y,I,G;Y,I,iB,Q,I,e,Q,G,mB;gB,I,G,a,I,G,I,a,Q;a,I,I;Y,I,G;Y,G;Y,I,G;Y,I,e,O,G,mB;gB,G,gB;oB,a;wB,U;oB;oB,O;wB,e;wB,Q;wB,S;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,c;wB;wB,Y;oB;gB;a,E,K,I;Y,I,G;Y,G,S;gB,O;oB,Q;gB;gB,I;oB,S,S,M;wB,I,a,C,I;oB;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;S,E;Q,I,G;Q,I,iB,O,G,e;Y,G,U;gB,a;gB,O;oB,Y;oB,a;oB,S;oB,Q;gB;Y,G,I,G,I,Y,S,I;gB,O,G,e;oB,K,K;oB,I;wB,S,S,M;4B,O,I,Q;wB;wB,c,S,M;4B,O,I,a;wB;oB;gB,G;oB,G,uB;wB,G,qB;4B,U;gC,e,I,G,K;4B;wB;wB,I,G;wB,G,yB;4B,U;gC,e,I,G,K;4B;wB;qB,E;oB,I,G;oB,G,sB;wB,a;oB,G;wB,G,c;4B,O;gC,Q;gC,W;4B;4B,I;gC,W,S,M;oC,O,I,e;gC;4B;wB;qB,E;iB,E;Y,I;Y,I,G;Y,G,O;gB,a;oB,c;gB;Y,G;gB,G,gB;oB,O;wB,U,I;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,O;wB;wB,Y;oB;gB;a,E;S,E,K,G,e;Y,G,gB;gB,a;gB,O;oB,W,I;oB,S,I,a;oB,uB,I;oB,c,I;gB;gB,I;oB,qB,S,M;wB,I,a;oB;gB;gB,a,I,G;oB;wB,K;wB,I,S,K;4B,O;gC,G,M;oC,I,G,I,G,M,K;iC;gC,I,G;gC,G,M;oC,I,G,I,G,M,K;iC;gC,I,G;gC,G,M;oC,I,G,I,G,M,K;iC;gC,I,G;gC,G,M;oC,I,G,I,G,M,K;iC;gC,I,G;gC,G,M;oC,I,G,I,G,M,K;iC;gC,I,G;gC,G,M;oC,I,G,I,G,M,K;iC;gC,I,G;gC,G,M;oC,I,G,I,G,M,K;iC;gC,I,G;gC,G,M;oC,I,G,I,G,M,K;iC;6B;wB;oB;iB;Y;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AHJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AIJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAkC;IAChD,OAAO,kBAAkB,QAAQ,oBAAkC;IACnE,OAAO,WAAW;IAG5B,QAAQ,oBAAgC,QAAQ;IAChD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;;A,I,gB;I,M;I,Y;sB,C,G,+B;I;I,O;Q,W;Y,S;Y,M;Y,S,I;Q;Q,U;Y,M;Y,U;Q;I;I;Q,O;Y,Q;Y,S;Y,O,E;Y,S;gB;oB,M;oB,O;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;oB,U;gB;a;Y,a;Y,mB;Y,U;Y,e;Q;I;I,O;Q,M;Y,I,I,C,W;gB,M,Q,C,G,kC,E,I,C;gB,I,C,S,M,C,G,sC,E;gB,M,Y,I,C,O,O,C,O,I,C,S,S;gB,I,a,U,S,G,I,C,U,S,C,E;Y;Q;I;I,S;Q,Y,O,E,I,E,I;Y,I,Y,K,O;Y,I,Y,K,O,C,C,E,K,C,C;Y,I,Y,K;gB,I,M,O,C,C,E,K,C,E,K,C;qB,O,C,C,E,K,C,C;Y;Q;Q;Y,I;gB,M,O,I,C;gB,I,C,M,Y;Y,E,O,G;gB,Q,M;gB,I,C,kB,E;gB,I,C,gB;Y;Q;Q;Y,M,O,E;Y,I,I,C,W,M,K,K,C,G,6B,E,I,C;Y,K,M,Q,I,C,M,K,K;gB,K,C,G,+B,E,K,S,K,K,K;gB,O,C,G,+B,E,K,S,K,K,K;Y;Y,O;Q;Q;Y,I;gB,M,O,I,C;gB,I,C,M,W;Y,E,O,G;gB,Q,M;gB,I,C,kB,E;gB,I,C,gB;Y;Q;Q;Y,I,C,c;Y,I,C,oB;Y,I,C,W;gB,K;gB,S;gB,S;gB,K;gB,S;gB,S;Y;Q;Q,U,I;Y,I,C,c;Y,I,C,oB;Y,I,C,W;Q;Q,Y,I;Y,M,M,I,C,M,Q;Y,I,Q,I,I,C,M,O,K;Q;Q;Y,I,C,oB;Q;Q,Y,I;Y,I,C,oB;Y,I,I,C,gB,O,O,I,C,M,K;Y,I,C,S,M,K;Y,I,C,S,U,K;Y,I,K,Y,K,I,C,S,U,K;iB,I,C,S,U;Y,I,C,S,M,K;YA2Gf,IAAA,CAAA,SAAA,UAAA,KAAA;YACA,IAAA,KAAA,YAAA,KAAA,IAAA,CAAA,SAAA,UAAA,KAAA;iBACA,IAAA,CAAA,SAAA,UAAA;QACA;QACA,SAAA;QACA,WAAA;QACA,SAAA;QACA,UAAA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;;;ACtIA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA+B;IAC7C,OAAO,kBAAkB,QAAQ,oBAA+B;IAChE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA4B;IAC1D,QAAQ,oBAA6B,QAAQ;IAC7C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q;Q;Q;Q;Q;Q;Q;K;I;Q,O;Y,O;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;a;Y,Y;Y,gB;Y,gB;Y,Y;Y,gB;Y,gB;Q;I;I,U;Q,uB;Y;gB,O,I,C,kB;Y;Y,K,K;gB,K,M,Q,I,C,M,I,K,S,O,I,C,oB;Y;Q;Q,uB;Y;gB,O,I,C,kB;Y;Y,K,K;gB,K,M,Q,I,C,M,I,K,S,O,I,C,oB;Y;Q;Q;Y,O,I,C,kB,U;Q;Q;Y,O,I,C,kB,U;Q;Q,iB;Y;gB,O,I,C;Y;Y,K,K;gB,I,O,I,C,M;Y;Q;Q;Y,O,I,C,gB,M,I,C,sB;Q;Q,mB;Y;gB,I,I,C,gB,K,M,Q,I,C,M;oB,I,I,C,mB,K,O,O;gB;gB,I,I,C,S,K,M,Q,I,C,M;oB,I,I,C,Y,K,O,O;gB;gB,O;oB,M;oB,O;gB;Y;Y,K,K;gB,I,C,iB,M;Y;Q;Q,W;Y;gB,I,I,C,Y,O,I,C;gB,I,I,C,S,O,I,C;gB,O;Y;Y,K,K;gB,I,C,a;Y;Q;Q,e;Y;gB,I,I,C,gB,O,I,C;gB,I,I,C,S,O,I,C;gB,O;Y;Y,K,K;gB,I,C,iB;Y;Q;Q,mB;Y;gB,I,I,C,gBAgGf,KAAA,MAAA,QAAA,IAAA,CAAA,MAAA;oBACA,IAAA,IAAA,CAAA,mBAAA,KAAA,OAAA,OAAA;gBACA;gBAEA,IAAA,IAAA,CAAA,SACA,KAAA,MAAA,QAAA,IAAA,CAAA,MAAA;oBACA,IAAA,IAAA,CAAA,YAAA,KAAA,OAAA,OAAA;gBACA;gBAEA,OAAA;oBAAA,MAAA;oBAAA,OAAA;gBAAA;YACA;YACA,KAAA,KAAA;gBACA,IAAA,CAAA,iBAAA,MAAA;YACA;QACA;QACA,aAAA;YACA;gBACA,IAAA,IAAA,CAAA,YAAA,OAAA,IAAA,CAAA;gBACA,IAAA,IAAA,CAAA,KAAA,OAAA,IAAA,CAAA;gBACA,OAAA;YACA;YACA,KAAA,KAAA;gBACA,IAAA,CAAA,aAAA;YACA;QACA;QACA,eAAA;YACA;gBACA,IAAA,IAAA,CAAA,gBAAA,OAAA,IAAA,CAAA;gBACA,IAAA,IAAA,CAAA,SAAA,OAAA,IAAA,CAAA;gBACA,OAAA;YACA;YACA,KAAA,KAAA;gBACA,IAAA,CAAA,iBAAA;YACA;QACA;IACA;IACA,OAAA;QACA,YAAA,KAAA;YACA,IAAA,OAAA;gBACA,IAAA,CAAA,aAAA;gBACA,IAAA,CAAA,iBAAA;gBACA,IAAA,CAAA,iBAAA;gBACA,IAAA,CAAA,aAAA;gBACA,IAAA,CAAA,iBAAA;gBACA,IAAA,CAAA,iBAAA;YACA;QACA;IACA;IACA,SAAA;QACA;YACA,IAAA,CAAA,MAAA;QACA;QACA;YACA,MAAA,MAAA;gBACA,KAAA,IAAA,CAAA;gBACA,SAAA,IAAA,CAAA,cAAA;gBACA,SAAA,IAAA,CAAA,kBAAA;gBACA,KAAA,IAAA,CAAA,YAAA;gBACA,SAAA,IAAA,CAAA;gBACA,SAAA,IAAA,CAAA,kBAAA;YACA;YACA,IAAA,CAAA,MAAA,QAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,Y;Q,O;Y,c;Y,Q;Q;Q,O;Y,O,I;Y,U,S,G;gB,I,kB;Y;Y,Y;Q;I,G;Q,G,U;Y,a;Q,G;Y,G,e;gB,G,e;oB,O;wB,gB;oB;gB,G;oB,G,Y;wB,O;4B,Q;wB;oB,G;wB,G,U;4B,O;gC,Q;gC,O;4B;wB,G;4B,G,M;gC,I,G;6B;4B,I,G;4B,G,Y;gC,G,a;oC,O;wC,M;wC,Q;wC,Y;oC;oC,O;wC,O,I;wC,U,S,G;4C,I,wB;wC;wC,Y;oC;gC,G,I,G,I,O,S,I;oC,O,G,a;wC,O;4C,S,K;wC;oC,G;wC,I,G,yB,I,G,K,Q;qC;gC,I;6B,E;4B,I,G;4B,G,O;gC,G,gB;oC,O;wC,S;oC;oC,O;wC,O,I;wC,U,S,G;4C,I,Y;wC;wC,Y;oC;gC;gC,I,G;gC,I,c,G,gB;oC,a;oC,O;wC,S;oC;oC,O;wC,O,I;wC,U,S,G;4C,I,gB;wC;wC,Y;oC;gC,K,I;6B,E;yB,E;wB,I,G;wB,G,U;4B,O;gC,Q;gC,O;4B;wB,G;4B,G,M;gC,I,G;6B;4B,I,G;4B,G,Y;gC,G,a;oC,O;wC,M;wC,Q;wC,Y;oC;oC,O;wC,O,I;wC,U,S,G;4C,I,wB;wC;wC,Y;oC;gC,G,I,G,I,O,S,I;oC,O,G,a;wC,O;4C,S,K;wC;oC,G;wC,I,G,yB,I,G,K,Q;qC;gC,I;6B,E;4B,I,G;4B,G,O;gC,G,gB;oC,O;wC,S;oC;oC,O;wC,O,I;wC,U,S,G;4C,I,c;wC;wC,Y;oC;gC;gC,I,G;gC,I,c,G,gB;oC,a;oC,O;wC,S;oC;oC,O;wC,O,I;wC,U,S,G;4C,I,gB;wC;wC,Y;oC;gC,K,I;6B,E;yB,E;qB,E;iB,E;a,E;Y,I,G;Y,G,kB;gB,G;gB,I,G;gB,G,S;oB,O;wB,S;wB,Q;oB;oB,I;wB,S,I;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,S;oB,O;wB,S;wB,Q;wB,Y,I;oB;oB,I;wB,S,I;oB;gB,G;oB,I,G;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAlLA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,U;Q,G,e;Y,I,G;Y,I,G;Y,G,c;gB,O;oB,S;gB;gB,O;oB,O,I;oB,U,S,G;wB,I,S;oB;oB,Y;gB;Y;Y,I,G;Y,I,W,O,G,Y;gB,G,a;oB,O;wB,M;wB,Q;wB,Y;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,U;wB;wB,Y;oB;gB,G,I,G,I,Q,S,G;oB,O,G,a;wB,O;4B,S;wB;oB,G;wB,I,G,iB,I,G,O;qB;gB,I;a,E,K,I;Y,I,G;Y,I,W,Q,G,gB;gB,O;oB,W,I;oB,S,I;gB;gB,a,I,G;oB;wB,K;wB,I,S,K;4B,O;gC,G,M;oC,I,G,iB,I,G,I,W,M,K,S,M,K,K,M,K,Y;iC;gC,I,G;gC,G,M;oC,a;gC,G;oC,I,G,iB,I,G,I,W,M,K,S,M,K,K,M,K,Y;iC;gC,I,G;gC,G,M;oC,a;gC,G;oC,G,U;wC,a;wC,O;4C,S;wC;wC,I;4C,S,S,M;gD,O,I,S,M;4C;wC;oC,G;wC,I,G;qC;oC,I,G;oC,G,U;wC,O;4C,S;wC;wC,I;4C,S,S,M;gD,O,I,W,M;4C;wC;oC,G;wC,I,G;qC;iC,E;6B;wB;oB;iB,E,M,O;Y,K,I;S,E;Q,I,G;Q,G,kB;Y,G,S;gB,Y;oB;wB,M;wB,S;wB,O;wB,Y;oB;iB;gB,O;oB,Q;oB,Q;oB,Y,I;gB;gB,I;oB,S,I;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;Y,I,G;Y,I,W,Q,G,S;gB,Y;oB;wB,M;wB,S;wB,O;wB,Y;oB;iB;gB,O;oB,Q;oB,Q;oB,Y,I;gB;gB,I;oB,S,I;gB;Y,G;gB,G,U;oB,I,G;iB;a,E,K,I;Y,I,G;Y,G;Y,I,G;Y,G,S;gB,O;oB,S;oB,Q;oB,Y,I;gB;gB,I;oB,S,S,M;wB,O,I,M;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,S;gB,O;oB,S;oB,Q;oB,Y,I;gB;gB,I;oB,S,I;gB;Y,G;gB,I,G;a;S,E;Q,I,G;Q,I,W,G,gB;Y,O;gB,Y,I,S;gB,Y,I,S;gB,Y,I,S;gB,O,I,S;gB,Y,I,S;gB,Y,I,S;gB,e,I;Y;Y,I;gB,U,I;gB,Q,I;Y;Q,K,I;Q,I,G;Q,G,c;Y,O;gB,W;gB,Y;gB,U;Y;Y,O;gB,O,I;gB,U,S,G;oB,I,gB;gB;gB,Y;Y;Q,G;Y,I,G,kB,I,G,I,mB;Y,G,S;gB,O;oB,S;oB,Q;gB;gB,I;oB,S,S,M;wB,I,gB;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AEJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA0C;IACxD,OAAO,kBAAkB,QAAQ,oBAA0C;IAC3E,OAAO,WAAW;IAG5B,QAAQ,oBAAwC,QAAQ;IACxD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;;A,I,gB;I,M;I,Y;sB,C,G,+B;I;I,O;Q,W;Y,S;Y,M;Y,S,I;Q;I;I;Q,O;Y,gB;Y,Q,E;Y,W,E;Y,O,E;Y,S;gB;oB,M;oB,O;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;oB,U;gB;a;Y,a;Y,mB;Y,U;Y,e;Q;I;I,O;Q,M;Y,I,I,C,W;gB,M,Q,C,G,kC,E,I,C;gB,I,C,S,M,C,G,sC,E;gB,M,W;oB;oB;oB;oB;oB;oB;iB;gB,I,C,Y,I,C,O,O,C,O,S,S;Y;Q;I;I,S;Q,Y,O,E,I,E,I;Y,I,Y,K,O;Y,I,Y,K,O,C,C,E,K,C,C;Y,I,Y,K;gB,I,M,O,C,C,E,K,C,E,K,C;qB,O,C,C,E,K,C,C;Y;Q;Q;Y,I;gB,M,O,I,C;gB,I,C,M,Y;Y,E,O,G;gB,Q,M;gB,I,C,kB,E;gB,I,C,gB;Y;Q;Q;Y,M,O,E;Y,K,M,W,I,C,U,K,K,C,G,6B,E;Y,K,M,Q,I,C,M,K,K;gB,K,C,G,+B,E,K,S,K,K,K;gB,O,C,G,+B,E,K,S,K,K,K;Y;Y,O;Q;Q;Y,I;gB,M,O,I,C;gB,I,C,M,W;Y,E,O,G;gB,Q,M;gB,I,C,kB,E;gB,I,C,gB;Y;Q;Q;Y,I,C,c;Y,I,C,oB;Y,I,C,W;gB,K;gB,S;gB,S;gB,K;gB,S;gB,S;Y;Q;Q,U,I;Y,I,C,c;Y,I,C,oB;Y,I,C,W;Q;Q,Y,I;Y,M,M,I,C,M,Q;Y,I,Q,I,I,C,M,O,K;Q;Q;Y,I,C,oB;Q;Q,Y,I;Y,I,C,oB;Y,I,I,C,gB,O,O,I,C,M,K;Y,I,C,S,M,K;Y,I,C,S,U,K;Y,I,K,Y,K,I,C,S,U,K;iB,I,C,S,U;Y,I,C,S,M,K;YA+Gf,IAAA,CAAA,SAAA,UAAA,KAAA;YACA,IAAA,KAAA,YAAA,KAAA,IAAA,CAAA,SAAA,UAAA,KAAA;iBACA,IAAA,CAAA,SAAA,UAAA;QACA;QACA,SAAA;QACA,WAAA;QACA,SAAA;QACA,UAAA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,U;Q,G,e;Y,G,Y;gB,G,S;oB,O;wB,O;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,a;oB,O;wB,M;wB,Q;wB,Y;wB,Y;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,Y;wB;wB,Y;oB;gB,G,I,G,I,Q,S,G;oB,O,G,a;wB,O;4B,S;wB;oB,G;wB,I,G,iB,I,G,O;qB;gB,I;a,E;Y,I,G;Y,G,gB;gB,O;oB,W,I;oB,S,I;gB;gB,a,I,G;oB;wB,K;wB,I,S,K;4B,O;gC,G,M;oC,I,G,iB,I,G,I,W,M,K,S,M,K,K,M,K,Y;iC;gC,I,G;gC,G,M;oC,a;gC,G;oC,I,G,iB,I,G,I,W,M,K,S,M,K,K,M,K,Y;iC;gC,I,G;gC,G,M;oC,a;gC,G;oC,G,U;wC,a;wC,O;4C,S;wC;wC,I;4C,S,S,M;gD,O,I,S,M;4C;wC;oC,G;wC,I,G;qC;oC,I,G;oC,G,U;wC,O;4C,S;wC;wC,I;4C,S,S,M;gD,O,I,W,M;4C;wC;oC,G;wC,I,G;qC;iC,E;6B;wB;oB;iB;Y;S,E;Q,I,G;Q,G,kB;Y,G,S;gB,Y;oB;wB,M;wB,S;wB,O;wB,Y;oB;iB;gB,O;oB,Q;oB,Q;oB,Y,I;gB;gB,I;oB,S,I;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;Y,I,G;Y,G,S;gB,Y;oB;wB,M;wB,S;wB,O;wB,Y;oB;iB;gB,O;oB,Q;oB,Q;oB,Y,I;gB;gB,I;oB,S,I;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;Y,I,G;Y,G;Y,I,G;Y,G,S;gB,O;oB,S;oB,Q;oB,Y,I;gB;gB,I;oB,S,S,M;wB,O,I,M;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,S;gB,O;oB,S;oB,Q;oB,Y,I;gB;gB,I;oB,S,I;gB;Y,G;gB,I,G;a;S,E;Q,I,G;Q,I,W,G,gB;Y,O;gB,Y,I,S;gB,Y,I,S;gB,Y,I,S;gB,O,I,S;gB,Y,I,S;gB,Y,I,S;gB,e,I;Y;Y,I;gB,U,I;gB,Q,I;Y;Q,K,I;Q,I,G;Q,G,c;Y,O;gB,W;gB,Y;gB,U;Y;Y,O;gB,O,I;gB,U,S,G;oB,I,gB;gB;gB,Y;Y;Q,G;Y,I,G,kB,I,G,I,mB;Y,G,S;gB,O;oB,S;oB,Q;gB;gB,I;oB,S,S,M;wB,I,gB;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AA1IA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,G,a;Y,Y;gB;oB,M;oB,S;oB,O,C,I;oB,Y;gB;a;Y,a;Y,O;gB,Y;Y;Y,O;gB,O,I;gB,U,S,G;oB,I,K;gB;gB,Y;Y;Q,G;Y,G,kB;gB,O;oB,Q;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,qB;gB,O;oB,Q;gB;Y,G;gB,G,oB;oB,O;wB,Y,I;wB,a,I;oB;oB,I;wB,Y,I;oB;gB;a,E;Y,I,G;Y,G,kB;gB,O;oB,Q;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,qB;gB,O;oB,Q;gB;Y,G;gB,G,mB;oB,O;wB,c,I,M;wB,a;4B;yB;oB;oB,I;wB,W,I;wB,Y,I;wB,U,I;oB;gB;a,E;Y,I,G;Y,G,kB;gB,O;oB,Q;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,qB;gB,O;oB,Q;gB;Y,G;gB,G,mB;oB,O;wB,c,I,M;wB,a;4B;4B;yB;oB;oB,I;wB,W,I;wB,Y,I;wB,U,I;oB;gB,G;oB,G,c;wB,O;4B,S;wB;wB,O;4B,O,I;4B,U,S,G;gC,I,c;4B;4B,Y;wB;oB;oB,I,G;oB,I,c;wB,G,gB;4B,O;gC,S;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,e;gC;gC,Y;4B;wB;wB,I,G;wB,G,gB;4B,O;gC,S;gC,e;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,gB;gC;gC,Y;4B;wB;wB,I,G;wB,G,gB;4B,O;gC,S;gC,e;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,iB;gC;gC,Y;4B;wB;qB,G,I;iB,E;a,E;Y,I,G;Y,C,I,c;gB,G,kB;oB,O;wB,Q;oB;gB,G;oB,I,G;oB,G,S;wB,I,G;qB;iB;gB,I,G;gB,G,qB;oB,O;wB,Q;oB;gB,G;oB,G,mB;wB,O;4B,c,I,M;4B,a;gC;gC;6B;wB;wB,I;4B,W,I;4B,Y,I;4B,U,I;wB;oB,G;wB,G,gB;4B,O;gC,S;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,e;gC;gC,Y;4B;wB;wB,I,G;wB,G,gB;4B,O;gC,S;gC,e;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,gB;gC;gC,Y;4B;wB;wB,I,G;wB,G,gB;4B,O;gC,S;gC,e;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,iB;gC;gC,Y;4B;wB;qB,E;iB,E;a,G,I;Y,I,G;Y,G,kB;gB,O;oB,Q,I;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,qB;gB,O;oB,Q,I;gB;Y,G;gB,G,2B;oB,O;wB,c,I,M;oB;oB,I;wB,W,I;wB,Y,I;wB,U,I;oB;gB;a,E;Y,I,G;Y,G,kB;gB,O;oB,Q,I,gB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,qB;gB,O;oB,Q,I,gB;gB;Y,G;gB,G,S;oB,O;wB,S;wB,Q;wB,Y,I;oB;oB,I;wB,S,I;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,S;oB,O;wB,S;wB,Y,I;oB;oB,I;wB,S,I;oB;gB,G;oB,I,G;iB;a,E;S,E;Q,I,G;Q,I,e,G,O;Y,a;Q,G;Y,G,gB;gB,O;oB,S,I;oB,c,I,M;gB;gB,I;oB,S,S,M;wB,I,e;oB;gB;Y;S,E,K,I;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;APJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AQJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAsC;IACpD,OAAO,kBAAkB,QAAQ,oBAAsC;IACvE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAmC;IACjE,QAAQ,oBAAoC,QAAQ;IACpD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;A;;A;;A;;A;;A;;A;;A;;A;;A,I,gB;I,M;I,O;Q;Q;Q;K;I,Y;6B,C,G,sC;wB,C,G,iC;4B,C,G,qC;+B,C,G,wC;8B,C,G,uC;sC,C,G,+C;uB,C,G,gC;8B,C,G,uC;I;I;Q,I,C,mB,I;Q,O;Y,U;Y,Q;Y,U;Y,wB,E;Y,2B;Y,8B;Y,gB;gB;oB,M;oB,O;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;a;Y,U,E;Q;I;I,U;Q;Y,I,O;Y,I,I,C,Y,I,C,S,Q,I,C,S,K,U,K,M,Q,I,C,S,K,S;gB,I,K,U,Q,Q,K;gB,I,K,U,U,O,K,W,a,M;Y;Y,O,S,K,I,C,S,O;Q;I;I;Q,O,0B,U;Q,C,G,kB,E,I,e,I,C;Q,C,G,kB,E,I,c,I,C;Q,O,I,C;I;I;Q,C,G,kB,E,K,e,I,C;Q,C,G,kB,E,K,c,I,C;Q,O,0B,W;I;I,S;Q,oB,K;Y,I,I,C,8B,G,I,C,iB,O;iB,I,C,iB,I,O,I,C;Y,O,I,C;Q;Q,qB,gB;Y,I,mB,C,G,2C,E,Q,O;Y,I,mB,C,G,2C,E,Q,O;Y,I,mB,C,G,2C,E,Q,O;Y,O;Q;Q,c,M;Y,I,O,M;gB,I,O,K,Y,O,K,S,U,K,M,E,K,E,U,E,I,O,K,S,S;oB,I,U,Q,O;gB;Y;Y,K,M,E,I,E,K,E,I,O,W,W,W;gB,I,S,Q,O;Y;Q;Q,M,e,M;Y,I,C,W;Y,I,C,W;Y,I,C,S;Y,M,Q,C,G,kC;Y,M,a,M,C,G,2C,E;Y,I,C,4B;Y,I,C,+B;Y,I,C,yB;gB;oB,O;oB,O;gB;a;Y,M,Y,M,W,qB;Y,M,kB,M,Q,I,U,I,C;gB,I,S,e,I,C,kB,O,S,qB;Y;Y,M,S,I,C,iB,I,O,W,W;Y,K,M,iB,gB;gB,I,e,K,M,a,c;oB,M,O;wB,O,U,K,K;wB,O,U;oB;oB,I,W,U,Y;wB,I,C,4B,K;wB,I,C,+B,K;oB;oB,I,C,uB,K;gB;Y;Q;Q,M,c,E,M,E,M,E,I,E;Y,I,C,W;Y,I,C,W,S;Y,I,C,W,E;Y,I,C,S;Y,I,S,U;gB,I,C,sB,Q,O,U;gB,I,C,W,I,C,S,O,U,Y,O;Y,O,I,S,O;gB,I,C,sB,Q,O;gB,M,O,I,C,Y,O;gB,K,W,E;gB,K,M,a,O,S;oB,M,S,I,C,Y;oB,K,S,K;gB;gB,I,C,W;oB;iB;Y,O;gB,M,O,W,Q,C,O;gB,I,C,W;oB,M,K,K,K;oB,Q,K,K,G;oB,U;gB;Y;Q;Q,a,U;Y,M,Q;gB,M;gB,I,W;gB,M;oB;wB,O;wB,O,W;wB,M;oB;oB;wB,O;wB,O,W;wB,M;oB;iB;Y;Y,K,M,Q,W,W;gB,I,K,S,Q,M,Q,K;gB,I,K,S,S;gB,I,K,S,U,M,O,K,M,a,M,M;gB,M,K,K;oB,O,K;oB,O,K;oB,M,C,G,mC,E,K;gB;Y;Y,O;Q;Q,U,U,E,I;Y,M,Q;gB,M;gB,I,W;gB,M,W;gB,Y,W;gB,kB,W;gB;Y;Y,K,M,Q,W,W;gB,I,K,S,Q,M,Q,K;gB,I,K,S,U,M,O,K,M,a,M,M;Y;Y,O;Q;Q,M,uB,M,E,gB;Y,M,Q,C,G,kC;Y,M,a,M,C,G,2C,E;Y,I,C,4B;Y,I,C,+B;Y,I,C,yB;gB;oB,O;oB,O;gB;a;Y,M,Y,M,W,qB;Y,M,kB,M,Q,I,U,I,O;gB,I,S,e,I,C,kB;oB,M,S,M,S,qB;oB,K,M,S,O;wB,I,M,e,O,W,W,oB,O,M,qB;oBA8Mf;gBACA;YACA;YAEA,IAAA,aAAA,IAAA,CAAA,iBAAA,IAAA,iBAAA;YACA,KAAA,MAAA,gBAAA,gBAAA;gBACA,IAAA,cACA,KAAA,MAAA,YAAA,aAAA;oBACA,IAAA,CAAA,UAAA;oBACA,MAAA,OAAA;wBACA,OAAA,SAAA,KAAA,KAAA;wBACA,OAAA,SAAA;oBACA;oBACA,IAAA,eAAA,SAAA,YAAA;wBACA,IAAA,CAAA,4BAAA,KAAA;wBACA,IAAA,CAAA,+BAAA,KAAA;oB;oBAEA,IAAA,CAAA,uBAAA,KAAA;gBACA;YAEA;QACA;QACA,MAAA;YACA,IAAA,CAAA,IAAA,CAAA,kBAAA;YACA,IAAA,CAAA,WAAA;YACA,IAAA,CAAA,WAAA;YACA,MAAA,QAAA,CAAA,GAAA,kCAAA;YACA,MAAA,aAAA,MAAA,CAAA,GAAA,2CAAA,EAAA;YACA,MAAA,YAAA,EAAA;YACA,IAAA,MAAA,SAAA,IAAA,CAAA,UACA,IAAA,OAAA,eAAA,KAAA,IAAA,CAAA,WAAA,QAAA;gBACA,MAAA,aAAA,IAAA,CAAA,SAAA,CAAA,MAAA;gBACA,IAAA,CAAA,GAAA,+CAAA,EAAA,aAAA;oBACA,MAAA,OAAA,MAAA,CAAA,GAAA,iDAAA,EACA,YACA,YACA,IAAA,CAAA,kBACA,IAAA,CAAA;oBAEA,UAAA,KAAA;wBAAA;wBAAA;oBAAA;gBACA;YACA;YAEA,OAAA,0BAAA,UAAA,oBAAA;gBACA;gBACA,kBAAA,IAAA,CAAA;gBACA,kBAAA,IAAA,CAAA;gBACA,WAAA,IAAA,CAAA;YACA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;ACpRA;;;;;;;;;;;;;;;;;;;;;;CAsBC;;8CAGY;AADb;;AACO,MAAM,WAAW,IAAI,CAAA,GAAA,mBAAE;;;;;ACxB9B,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAsC;IACpD,OAAO,kBAAkB,QAAQ,oBAAsC;IACvE,OAAO,WAAW;IAG5B,QAAQ,oBAAoC,QAAQ;IACpD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q;Q;Q;K;I;Q,O,C;I;I,S,C;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,6B;Q,O;Y,U;Y,Q;Y,Y,I,S,W;Q;Q,a,I,G;Y;gB,K;gB,I;oB,O;wB,G,O;4B,I,G,I,G,I,S,O,I,G,I,S,U;yB;qB;gB;gB,O;Y;S;I,G;Q,I,G;Q,G,U;Y,G,e;gB,G,gB;oB,a;oB,O;wB,W,I;wB,S,I;oB;oB,a,I,G;wB;4B,K;4B,I,S,K;gC,O;oC,G,M;wC,I,G,I,G,M,K;qC;oC,I,G;oC,G,M;wC,G,iB;4C,O;gD,gB,M,K;gD,Q;4C;4C,I;gD,sB,S,M;oD,O,I,K,M,M,c;gD;gD,uB,S,M;oD,O,I,K,M,M,c;gD;4C;4C,a,I,G;gD;oD,K;oD,I;wD,O;4D,G,gB;gE,O;oE,S;oE,e;gE;gE,O;oE,O,M,K;oE,U,S,G;wE,I,K,M,M,c;oE;oE,Y;gE;4D;yD;oD;oD,O;gD;6C,E,M;wC,G;4C,I,G,qB,I,G,M,K,c;yC;qC,E;oC,I,G;oC,G,M;wC,I,G,I,G,M,K;qC;oC,I,G;oC,G,M;wC,I,G,I,G,M,K;qC;iC;4B;wB;qB;gB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAiC;IAC/C,OAAO,kBAAkB,QAAQ,oBAAiC;IAClE,OAAO,WAAW;IAG5B,QAAQ,oBAA+B,QAAQ;IAC/C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A,I,gB;I,M;I,O;Q;Q;K;I;Q,O;Y,gB;gB;oB,M;oB,O;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;a;Q;I;I,U;Q;Y,M,M,E;Y,K,M,Y,I,C,M;gB,M,O,C,G,iC,E,Q,C,S;gB,I,K;oB,M,K,K,K;oB,Q,K,K,G;oB;gB;Y;Y,O;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,6B;Q,O;Y,U;Y,Q;Y,Y,I,Q,W;Q;Q,a,I,G;Y;gB,K;gB,I;oB,O;wB,G,O;4B,I,G,I,G,I,S,O,I,G,I,Q,U;yB;qB;gB;gB,O;Y;S;I,G;Q,I,G;Q,G,U;Y,G,e;gB,G,gB;oB,a;oB,O;wB,W,I;wB,S,I;oB;oB,a,I,G;wB;4B,K;4B,I,S,K;gC,O;oC,G,M;wC,I,G,I,G,M,K;qC;oC,I,G;oC,G,M;wC,I,G,I,G,M,K;qC;oC,I,G;oC,G,M;wC,I,G,I,G,M,K;qC;iC;4B;wB;qB;gB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAqC;IACnD,OAAO,kBAAkB,QAAQ,oBAAqC;IACtE,OAAO,WAAW;IAG5B,QAAQ,oBAAmC,QAAQ;IACnD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;A,I,gB;I,M;I,O;Q;K;I,Y;uB,C,G,gC;I;I;Q,O;Y,W,E;Y,U,E;Q;I;I;Q,I,C;I;I,O;Q;Y,I,C;Q;I;I,S;Q;Y,I,C,Y,E;Y,I,I,C,O,K,M,a,I,C,M;gB,M,O,S,U;gB,I,I,C,S,W,G,I,C,S,K;gB,I,C,U,K;gB,K,W,E;gB,K,M,a,U,S;oBAkBf,MAAA,SAAA,SAAA;oB,K,S,K;gBAEA;YACA;QACA;IACA;AACA;AAEA,SAAA,SAAA,UAAA;IACA,MAAA,QAAA;QACA,MAAA;QACA,IAAA,WAAA;QACA,MAAA;YACA;gBAAA,OAAA;gBAAA,OAAA,WAAA;gBAAA,MAAA;YAAA;YACA;gBACA,OAAA;gBACA,OAAA,WAAA;gBACA,MAAA;YACA;SACA;IACA;IACA,KAAA,MAAA,QAAA,WAAA,WAAA;QACA,IAAA,KAAA,SAAA,QAAA,MAAA,QAAA,KAAA;QACA,IAAA,KAAA,SAAA,SAAA;QACA,IAAA,KAAA,SAAA,UACA,MAAA,OAAA,KAAA,MAAA,aAAA,MAAA,MAAA;QACA,MAAA,KAAA,KAAA;YACA,OAAA,KAAA;YACA,OAAA,KAAA;YACA,MAAA,CAAA,GAAA,mCAAA,EAAA,KAAA;QACA;IACA;IACA,OAAA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;;;ACrEA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAgC;IAC9C,OAAO,kBAAkB,QAAQ,oBAAgC;IACjE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA6B;IAC3D,QAAQ,oBAA8B,QAAQ;IAC9C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A,I,gB;I,M;I,O;Q;Q;K;I,Y;8B,C,G,uC;I;I;Q,O;Y,gB;gB;oB,M;oB,O;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;a;Q;I;I,U;Q;Y,I,O;Y,I,I,C,c,K,M,Q,I,C,a,K;gB,I,K,U,Q,Q,K;gB,I,K,U,U,O,K,M,a,M;Y;Y,O;Q;Q;Y,O,I,C,K,C,E;Q;Q,W;Y;gB,O,I,C;Y;Y,K,K;gB,I,C,M,S;Y;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;;;ACff,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAuC;IACrD,OAAO,kBAAkB,QAAQ,oBAAuC;IACxE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAoC;IAClE,QAAQ,oBAAqC,QAAQ;IACrD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A,I,gB;I,M;I,O;Q;Q;K;I;Q,O,C;I;I,S;Q,a,G;Y,K,M,Q,I;gB,I,K,U,Q,O,K;Y;Q;Q,S,M;Y,Q,I,6B,I,C;Y,M,Q,E;Y,I,I,C,S;gB,I,C,Q;oB,I,M,S,I,C,K,W,I,O,e,K,I,C,K,Y,Q,M,K,I,C,K,U,C,M,C,W;gB,O;oB,I,M,S,I,C,K,S,I,I,C,K,S,e,K,I,C,K,U,Q;wB,M,O,I,C,K,Q,C,M;wB,K,M,S,K,S,M,K,M;oB;gB;mB,I,I,C,S,W;gB,M,W,I,C,Y,I,C,K;gB,I,I,C,K,U,K,M,W,I,C,K,S;oB,M,c,I,C,Y,I,C,K;oB,I,a,M,K;gB;gB,I,U,M,K;Y,O,I,I,C,S,c;gB,M,S,I,C,K;gB,M,W,I,C,K;gB,M,Y,O,W,Q,C,S,W;gB,I,W;oB,M,K,U,W;oB,K,M,S,U,S,M,K,M;gB;Y;Y,O;Q;Q,kB,I,E,W,E,G;Y,K,M,O,K,K,M,Q,G,C,I,C,Y,K;Q;Q,e,K,E,U;Y,I,M,a,M;Y,M,Q,I,C,Q;Y,I,M,W,G;Y,M,S,C,G,mC;Y,O,O;Q;Q,Y,U;Y,M,Q,I,C,Q;Y,I,M,W,G;YA4Df,MAAA,SAAA,CAAA,GAAA,mCAAA;Y,O,U;QAEA;QACA,gBAAA,KAAA,EAAA,UAAA;YACA,IAAA,MAAA,aAAA,MAAA;YACA,MAAA,QAAA,IAAA,CAAA,QAAA;YACA,IAAA,MAAA,WAAA,GAAA;YACA,MAAA,SAAA,CAAA,GAAA,mCAAA;YACA,OAAA,QAAA;QACA;QACA,oBAAA,UAAA;YACA,MAAA,QAAA,IAAA,CAAA,QAAA;YACA,IAAA,MAAA,WAAA,GAAA;YACA,MAAA,SAAA,CAAA,GAAA,mCAAA;YACA,MAAA,OAAA,OAAA;YACA,IAAA,CAAA,iBAAA,MAAA,OAAA;YACA,OAAA,OAAA;QACA;QACA,qBAAA,UAAA;YACA,MAAA,QAAA,IAAA,CAAA,QAAA;YACA,IAAA,MAAA,WAAA,GAAA;YACA,MAAA,SAAA,CAAA,GAAA,mCAAA;YACA,MAAA,OAAA,OAAA;YACA,IAAA,CAAA,iBAAA,MAAA,OAAA;YACA,OAAA,QAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,a;I,G;Q,G,Y;Y,G,U;gB,I,G;a;Y,I,G;Y,G,S;gB,O;oB,U;oB,Q;gB;gB,I;oB,S;wB,S,M;4B,O,I,c;wB;wB,S,M;4B,I,C,O,U,O;4B,O,I;wB;qB;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;Y,I,G;Y,G,S;gB,O;oB,U;oB,Q;gB;gB,I;oB,S,S,M;wB,O,I;oB;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;Y,I,G;Y,G,S;gB,O;oB,U;oB,Q;gB;gB,I;oB,S;wB,S,M;4B,O,I,e;wB;wB,S,M;4B,I,C,O,U,O;4B,O,I;wB;qB;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;S,E;Q,I,G;Q,I,S,U;Y,G,Y;gB,G,U;oB,I,G;iB;gB,I,G;gB,G,S;oB,O;wB,U;wB,Q;oB;oB,I;wB,S;4B,S,M;gC,O,I,c,Q;4B;4B,S,M;gC,I,C,O,U,O;gC,O,I,mB;4B;yB;oB;gB,G;oB,G,U;wB,I,G;qB;iB,E;gB,I,G;gB,G,S;oB,O;wB,U;wB,Q;oB;oB,I;wB,S,S,M;4B,O,I,W;wB;oB;gB,G;oB,G,U;wB,I,G;qB;iB,E;gB,I,G;gB,G,S;oB,O;wB,U;wB,Q;oB;oB,I;wB,S;4B,S,M;gC,O,I,e,Q;4B;4B,S,M;gC,I,C,O,U,O;gC,O,I,oB;4B;yB;oB;gB,G;oB,G,U;wB,I,G;qB;iB,E;a,E;S,G,I;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAzGA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,Y;Q,O;Y,yB;Y,Q;Q;I,G;Q,G,U;Y,a;gB,Y;Y;Y,O;gB,O;gB,oB;Y;Q,G;Y,G,c;gB,O;oB,S,I;oB,U,I;oB,a;oB,Y;oB,iB;oB,e;gB;gB,I;oB,iB,S,M;wB,I,Y;oB;gB;Y;S,E;Q,I,G;Q,G,a;Y,O;gB,Y;Y;Q;Q,I,G;Q,G,U;Y,O;gB,U;gB,kB;Y;Q,G;Y,G,yB;gB,O;oB,Q;gB;Y,G;gB,I,U,W,I,G,O;oB,a;oB,a;wB,c;oB;gB,G;oB,I,G;iB,I,G,U;oB,a;oB,O;wB,Q;oB;gB,G;oB,G,O;wB,a;oB,G;wB,G,O;4B,I,G,mB,I,G,I,Q;yB;wB,I,G;wB,G,wB;4B,O;gC,Q;gC,Q,I;4B;wB;qB,E;oB,I,G;oB,G,e;wB,I,G;wB,I,G;wB,G,gB;4B,a;4B,O;gC,W,I;gC,S,I,a;4B;4B,a,I,G;gC;oC,K;oC,I,S,K;wC,O;4C,G,M;gD,I,G,I,G,M,K;6C;4C,I,G;4C,G,M;gD,I,G,I,G,M,K;6C;4C,I,G;4C,G,M;gD,I,G,I,G,M,K;6C;yC;oC;gC;6B;wB;qB,E;iB,E;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,6B;Q,O;Y,U;Y,Q;Y,Y,I,U,W;Q;Q,a,I,G;Y;gB,K;gB,I;oB,O;wB,G,O;4B,I,G,uB,I,G,I,U,U;yB;qB;gB;gB,O;Y;S;I,G;Q,I,G;Q,G,iB;Y,O;gB,a,I;Y;Y,O;gB,O,I;gB,U,S,G;oB,I,W;gB;gB,Y;Y;Q;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AGJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAwC;IACtD,OAAO,kBAAkB,QAAQ,oBAAwC;IACzE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAqC;IACnE,QAAQ,oBAAsC,QAAQ;IACtD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A,I,gB;I,M;I,O;Q;K;I,Y;sC,C,G,+C;I;I;Q,O;Y,U,E;Y,W,E;Q;I;I,U;Q;Y,O,I,C,Q,C,E;Q;I;I;Q,I,C;I;I,O;Q;Y,I,C;Q;I;I,S;Q;Y,I,C,Y,E;Y,I,C,W,E;Y,I,I,C,O,K,M,E,S,E,I,E,I,I,C,M;gB,M,O,S,U,Y;gB,I,C,U,K;Y;Q;I;A;A,S,S,U,E,I;I,M,Q;Q,M;Q,I,W;Q,M,W;Q,Y,W;Q;I;I,K,M,Q,W,W;Q,I,K,S,Q,M,Q,K;Q,I,K,S,U,M,O,K,M,a,M,M;I;I,O;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;;;ACff,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,kBAA+C;IAC7D,OAAO,kBAAkB,QAAQ,kBAA+C;IAChF,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA4C;IAC1E,QAAQ,oBAA6C,QAAQ;IAC7D,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,gB;gB;oB,M;oB,O;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;a;Q;I;I,U;Q;Y,I,O;Y,I,I,C,S,I,C,M,Q,I,C,M,K,U,K,M,Q,I,C,M,K,S;gB,I,K,U,Q,Q,K;gB,I,K,U,U,O,K,W,a,M;Y;Y,O,S,K,I,C,M,O;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,U;Q,a;Q,O;Y,Q;Q;I,G;Q,G,O;Y,a;Q,G;Y,G,K;gB,I,G,W,I,G,I;a;Y,I,G;Y,G,K;gB,I,G,W,I,G,I,M;a;Y,I,G;Y,G,K;gB,I,G,iB,I,G,I,M;a;S;Q,I,G;Q,G,e;Y,G,qB;gB,O;oB,U;gB;Y,G;gB,G,6B;oB,O;wB,U;wB,Q;wB,Y,I,M,K,S,W;oB;oB,a,I,G;wB;4B,K;4B,I;gC,O;oC,G,O;wC,I,G,gB,I,G,I,M,K,S,U;qC;iC;4B;4B,O;wB;qB;gB,G;oB,I,G;oB,G,gB;wB,a;wB,O;4B,W,I;4B,S,I,M,K;wB;wB,a,I,G;4B;gC,K;gC,I,S,K;oC,O;wC,G,M;4C,I,G,I,G,M,K;yC;wC,I,G;wC,G,M;4C,G,iB;gD,O;oD,gB,M,K;oD,Q;gD;gD,I;oD,sB,S,M;wD,O,I,K,M,M,c;oD;oD,uB,S,M;wD,O,I,K,M,M,c;oD;gD;gD,a,I,G;oD;wD,K;wD,I;4D,O;gE,G,gB;oE,O;wE,S;wE,e;oE;oE,O;wE,O,M,K;wE,U,S,G;4E,I,K,M,M,c;wE;wE,Y;oE;gE;6D;wD;wD,O;oD;iD,E,M;4C,G;gD,I,G,uB,I,G,M,K,c;6C;yC,E;wC,I,G;wC,G,M;4C,I,G,I,G,M,K;yC;wC,I,G;wC,G,M;4C,I,G,I,G,M,K;yC;qC;gC;4B;yB;oB;iB,E;gB,I,G;gB,G,6B;oB,O;wB,U;wB,Q;wB,Y,I,M,K,S,W;oB;oB,a,I,G;wB;4B,K;4B,I;gC,O;oC,G,O;wC,I,G,sB,I,G,I,M,K,S,U;qC;iC;4B;4B,O;wB;qB;gB,G;oB,I,G;oB,G,gB;wB,a;wB,O;4B,W,I;4B,S,I,M,K;wB;wB,a,I,G;4B;gC,K;gC,I,S,K;oC,O;wC,G,M;4C,I,G,I,G,M,K;yC;wC,I,G;wC,G,M;4C,G,iB;gD,O;oD,gB,M,K;oD,Q;gD;gD,I;oD,sB,S,M;wD,O,I,K,M,M,c;oD;oD,uB,S,M;wD,O,I,K,M,M,c;oD;gD;gD,a,I,G;oD;wD,K;wD,I;4D,O;gE,G,gB;oE,O;wE,S;wE,e;oE;oE,O;wE,O,M,K;wE,U,S,G;4E,I,K,M,M,c;wE;wE,Y;oE;gE;6D;wD;wD,O;oD;iD,E,M;4C,G;gD,I,G,uB,I,G,M,K,c;6C;yC,E;wC,I,G;wC,G,M;4C,I,G,I,G,M,K;yC;wC,I,G;wC,G,M;4C,I,G,I,G,M,K;yC;qC;gC;4B;yB;oB;iB,E;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,6B;Q,O;Y,U;Y,Q;Y,Y,I,U,W;Q;Q,a,I,G;Y;gB,K;gB,I;oB,O;wB,G,O;4B,I,G,yB,I,G,I,U,U;yB;qB;gB;gB,O;Y;S;I,G;Q,I,G;Q,G,Y;Y,O;gB,yB;gB,Q;Y;Q,G;Y,G,U;gB,a;oB,Y;gB;gB,O;oB,O;oB,oB;gB;Y,G;gB,G,c;oB,O;wB,S,I;wB,U,I;wB,a;wB,Y;wB,iB;wB,e;oB;oB,I;wB,iB,S,M;4B,I,W;wB;oB;gB;a,E;Y,I,G;Y,G,a;gB,O;oB,Y;gB;Y;Y,I,G;Y,G,U;gB,O;oB,U;oB,kB;gB;Y,G;gB,G,yB;oB,O;wB,Q;oB;gB,G;oB,I,S,W,I,G,O;wB,a;wB,a;4B,c;wB;oB,G;wB,I,G;qB,I,G,gC;wB,O;4B,S,I;wB;oB;iB,E;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AEJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAuC;IACrD,OAAO,kBAAkB,QAAQ,oBAAuC;IACxE,OAAO,WAAW;IAG5B,QAAQ,oBAAqC,QAAQ;IACrD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,U,E;Y,gB;gB;oB,M;oB,O;oB,O;gB;gB;oB,M;oB,O;gB;gB;oB,M;oB,O;gB;a;Y,W,E;Q;I;I,U;Q;Y,O,I,C,Q,C,E;Q;I;I;Q,I,C;I;I,O;Q;Y,I,C;Q;I;I,S;Q;Y,I,C,Y,E;Y,I,C,W,E;Y,I,I,C,O,K,M,U,I,C,M;gB,M,M,S;gB,I,C,U,K;Y;Q;I;A;A,S,S,U;I,M,Q;Q,M;Q,I,W;Q,M;Y;gB,O;gB,O,W;gB,M;Y;Y;gB,O;gB,O,W;gB,M;Y;S;I;I,K,M,Q,W,W;Q,I,K,S,Q,M,O,K;Q,I,K,S,S;Q,M,K,K;Y,O,K;Y,O,K;Y,M,C,G,mC,E,K;Q;I;I,O;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,6B;Q,O;Y,U;Y,Q;Y,Y,I,U,W;Q;Q,a,I,G;Y;gB,K;gB,I;oB,O;wB,G,O;4B,I,G,uC,I,G,I,U,U;yB;qB;gB;gB,O;Y;S;I,G;Q,I,G;Q,G,Y;Y,O;gB,yB;gB,Q;Y;Q,G;Y,G,U;gB,a;oB,Y;gB;gB,O;oB,O;oB,oB;gB;Y,G;gB,G,c;oB,O;wB,S,I;wB,U,I;wB,a;wB,Y;wB,iB;wB,e;oB;oB,I;wB,iB,S,M;4B,I,W;wB;oB;gB;a,E;Y,I,G;Y,G,a;gB,O;oB,Y;gB;Y;Y,I,G;Y,G,U;gB,O;oB,U;oB,kB;gB;Y,G;gB,G,yB;oB,O;wB,Q;oB;gB,G;oB,I,S,W,I,G,O;wB,a;wB,a;4B,c;wB;oB,G;wB,I,G;qB,I,G,U;wB,a;wB,O;4B,Q;wB;oB,G;wB,G,O;4B,I,G,mB,I,G,I,a,Q;yB;wB,I,G;wB,G,e;4B,G,gB;gC,a;gC,O;oC,W,I;oC,S,I,a;gC;gC,a,I,G;oC;wC,K;wC,I,S,K;4C,O;gD,G,M;oD,I,G,I,G,M,K;iD;gD,I,G;gD,G,M;oD,I,G,I,G,M,K;iD;gD,I,G;gD,G,M;oD,I,G,I,G,M,K;iD;6C;wC;oC;iC;4B;yB,E;qB,E;iB,E;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,S;gB,O;oB,Q;oB,Q;oB,S;gB;gB,I;oB,S,S,M;wB,O,I,M;oB;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;Y,I,G;Y,G;Y,I,G;Y,G,S;gB,O;oB,a;oB,Q;gB;gB,I;oB,S,I;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;S,E;Q,I,G;Q,G,O;Y,a;Q,G;Y,I,a,K,G,U;gB,G,gB;oB,G,O;wB,G,M;4B,a;wB,G;4B,I,G;yB;qB;iB;a,E,K,I;Y,I,G;Y,I,a,U,G,U;gB,G,gB;oB,G,O;wB,a;oB,G;wB,G,M;4B,a;wB,G;4B,I,G,I,G,I,a,I;yB;wB,I,G;wB,G,O;4B,I,G,I,G,I,oB,I,O,W,W;yB;qB;oB,I,G;oB,G,wB;wB,O;4B,Q;4B,Q,I,O;wB;oB;iB,E;gB,I,G;gB,G,e;oB,G,Y;wB,G,S;4B,I,G;yB;wB,I,G;wB,G,a;4B,a;4B,O;gC,Y;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,4B;gC;gC,Y;4B;wB,G,I,G,I,wB,S,I;4B,O,G,a;gC,K,K;gC,O;oC,S,K;gC;4B,G;gC,I,G,qB,I,G,K,S;6B;wB,I;wB,I,G;wB,G,S;4B,O;gC,a;gC,Y,I,8B,I;gC,Q;4B;4B,I;gC,S,S,M;oC,O,I,mB,I,O,W,W;gC;4B;wB,G;4B,G,U;gC,I,G;6B;yB,E;qB,E;oB,I,G;oB,G,qB;wB,O;4B,U;wB;oB,G;wB,I,O,O;4B,G,uB;gC,O;oC,Y,I,O,K,S;oC,kB,I;oC,S;gC;4B;4B,I,G;4B,G,uB;gC,O;oC,Y,I,O,K,S;oC,kB,I;oC,S;gC;4B;4B,I,G;4B,G,kB;gC,O;oC,S;oC,S,I,O,K,S;gC;4B;4B,I,G;4B,G,sB;gC,O;oC,S,I,O,K,S;gC;4B;4B,I,G;4B,G,yB;gC,O;oC,S,I,O,K,S;gC;4B;4B,I,G;4B,G,kB;gC,O;oC,S;oC,S,I,O,K,Q;gC;4B;4B,I,G;4B,G,wB;gC,O;oC,S,I,O,K,Q;gC;4B;yB,G,I;qB,E;iB,E;a,E,K,I;Y,I,G;Y,I,a,e,G,U;gB,G,gB;oB,G,O;wB,a;oB,G;wB,G,M;4B,a;wB,G;4B,I,G,I,G,I;yB;wB,I,G;wB,G,O;4B,I,G,I,G,I,oB,I,S;yB;qB;oB,I,G;oB,G,wB;wB,O;4B,Q;4B,Q;gC,U,I;gC,Q,I;4B;wB;oB;iB,E;gB,I,G;gB,G,e;oB,G,Y;wB,G,S;4B,I,G;yB;wB,I,G;wB,G,a;4B,a;4B,O;gC,Y;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,4B;gC;gC,Y;4B;wB,G,I,G,I,wB,S,I;4B,O,G,a;gC,K,K;gC,O;oC,S,K;gC;4B,G;gC,I,G,qB,I,G,K,S;6B;wB,I;wB,I,G;wB,G,S;4B,O;gC,a;gC,Y,I,8B,I;gC,Q;4B;4B,I;gC,S,S,M;oC,O,I,mB,I,S;gC;4B;wB,G;4B,G,U;gC,I,G;6B;yB,E;qB,E;oB,I,G;oB,G,gC;wB,O;4B,S,I;wB;oB;iB,E;a,E,K,I;Y,I,G;Y,I,a,e,G,U;gB,G,e;oB,a;gB,G;oB,G,gB;wB,a;wB,O;4B,gB;4B,gB;4B,S;gC;oC,O;oC,O,I,S;gC;gC;oC,O;oC,O,I,S;gC;gC;oC,O;oC,O,I,S;gC;6B;wB;wB,a,I,G;4B;gC,K;gC,I,S,K;oC,O;wC,G,M;4C,I,G,I,G,M,K;yC;wC,I,G;wC,G,M;4C,I,G,I,G,M,K;yC;qC;gC;4B;yB,E,M,O;oB;iB,E;a,E,K,I;Y,I,G;Y,I,a,Y,G,U;gB,G,iB;oB,O;wB,a,I;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,W;wB;wB,Y;oB;gB,G;oB,I,Q,C,E,K,I,Q,C,E,G,G,Y;wB,G,S;4B,I,G;yB;wB,I,G;wB,G,a;4B,a;4B,O;gC,Y;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,4B;gC;gC,Y;4B;wB,G,I,G,I,wB,S,I;4B,O,G,a;gC,K,K;gC,O;oC,S,K;gC;4B,G;gC,I,G,qB,I,G,K,S;6B;wB,I;wB,I,G;wB,G,S;4B,O;gC,a;gC,Y,I,8B,I;gC,Q;4B;4B,I;gC,S,S,M;oC,O,I,mB,I,Q,C,E,C;gC;4B;wB,G;4B,G,U;gC,I,G;6B;yB,E;qB,E,K,I;iB,E;a,E,K,I;S,E;K;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ATJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,S;Q,a;Q,O;Y,Q;Q;I,G;Q,G,O;Y,a;Q,G;Y,G,U;gB,Y;oB;wB,M;wB,S;wB,O,I;wB,Y;oB;iB;gB,O;oB,O,I;oB,U,S,G;wB,I,S;oB;oB,Y;gB;Y,G;gB,G,S;oB,O;wB,U;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,S;oB,O;wB,U;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,S;oB,O;wB,U;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,c;oB,a;gB,G;oB,I,W,I,G,oB;wB,O;4B,Y,I;4B,gB,I;wB;wB,I;4B,Y,I;wB;oB,K,I;iB,E;gB,I,G;gB,G,c;oB,I,W,I,G,uB;wB,O;4B,Y,I;4B,gB,I;wB;wB,I;4B,c,I;wB;oB,K,I;iB,E;gB,I,G;gB,G,c;oB,G,U;wB,G,e;4B,G,W;gC,I,G,I,S,S,I,E,K;oC,O;wC,K,U;4C,U,I,G,c;gD,K,A,K,Q;4C,K,I;4C,I,G;4C,G,gB;gD,K,K;4C,G;gD,I,G,I,G,K;6C;yC,G,G,gB;4C,K,K;4C,O;gD,Y,I;4C;4C,I;gD,S,S,M;oD,O,I,U,K;gD;4C;wC,G;4C,G,Q;gD,a;4C,G;gD,I,G,I,G,K;6C;yC;qC;gC;6B,E;yB,E;qB,E;iB,E;a,E;Y,I,G;Y,C,I,mB,G,uB;gB,O;oB,a,I;oB,oB,I;oB,a,I;gB;gB,I;oB,Q,S,M;wB,I,mB;oB;gB;Y,K,I;Y,I,G;Y,G,a;gB,O;oB,a,I;gB;gB,I;oB,mB,S,M;wB,I,a;oB;oB,oB,S,M;wB,I,a;oB;gB;Y,G;gB,G,mB;oB,I,G;iB;gB,I,G;gB,G,qB;oB,G,Y;wB,G,a;4B,O;gC,Y;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,qB;gC;gC,Y;4B;wB,G,I,G,I,U,S,W;4B,O,G,a;gC,K;gC,O;oC,S;gC;4B,G;gC,I,G,I,G;6B;wB,I;qB,E;iB,E;gB,I,G;gB,G,qB;oB,G,a;wB,a;wB,I;4B,S,S,M;gC,I,a;4B;wB;oB,G;wB,I,G;qB;oB,I,G;oB,G,a;wB,a;wB,I;4B,S,I;wB;oB,G;wB,I,G;qB;iB,E;a,E;Y,I,G;Y,I,O,G,qB;gB,a;gB,a;oB,U;gB;gB,O;oB,iB;oB,S;gB;Y,K,I;Y,I,G;Y,G,e;gB,O;oB,e;oB,a,I;oB,e,I;oB,iB;gB;gB,I;oB,mB,S,M;wB,I,e;oB;oB,oB,S,M;wB,I,e;oB;gB;Y,G;gB,G,Q;oB,I,G,I,G,I;iB;gB,I,G;gB,G,a;oB,a;oB,I;wB,S,S,M;4B,I,e;wB;oB;gB,G;oB,I,G;iB;a,E;S,E;K;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AVJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AoBJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAyC;IACvD,OAAO,kBAAkB,QAAQ,oBAAyC;IAC1E,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAsC;IACpE,QAAQ,mBAAuC,QAAQ;IACvD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;;A;;A,I,gB;I,M;I,Y;sB,C,G,8B;uB,C,G,gC;I;I;Q,O;Y,W;Y,c,E;Y,e;Y,U;Y,U;Y,W;Y,a;Y,c;Q;I;I,Y;I,S;Q,M,iB,S;Y,M,U,C,G,qC,E,I,C;Y,M,W,M,C,G,sD,E,S;Y,I,C,a,K;Q;Q,M,iB,M;Y,I,C,W;Y,I;gB,M,O;gB,I,C,gB;gB,I,C,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ACvC,OAAO,SAAS,QAAQ,oBAA8B;IAC5C,OAAO,kBAAkB,QAAQ,oBAA8B;IAC/D,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA2B;IACzD,QAAQ,oBAA4B,QAAQ;IAC5C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;;A,I,gB;I,M;I,Y;yB,C,G,kC;4B,C,G,qC;I;I,O;Q;K;I;Q,O;Y,M;Y,U,E;Y,S;Y,Y;Q;I;I,U;Q,gB;Y;gB,O,C,C,I,C;Y;Y,K,K;gB,I,U,O,I,C,U;Y;Q;Q,mB;Y;gB,O,C,C,I,C;Y;Y,K,K;gB,I,U,O,I,C,a;Y;Q;I;I,S;Q,Y,W;Y,I,Y,a,M,O,a,Y;iB,O;Q;Q,iB,M;Y,I,C,M,mB;Q;Q;Y,I,C,M,Y,I,C;Q;Q,a,G;Y,I,C,M,e,I,C,W;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;;;ACff,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAkC;IAChD,OAAO,kBAAkB,QAAQ,oBAAkC;IACnE,OAAO,WAAW;IAG5B,QAAQ,oBAAgC,QAAQ;IAChD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I;Q,O;Y,W;Y,M;Q;I;I,U;Q;Y,O,I,C,U,W,K,I,C,U,U;Q;I;I,O;Q;Y,I,I,C,S,O,I,C,Y;Q;I;I,S;Q;Y,I,C,M,mB,I,C;Y,I,C,O;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,Y;Q,O;Y,S;Y,U;Q;Q,a,I,G;Y;gB,K;gB,I,S,G;oB,I,K,I;oB,O;wB,G,S,I,G;4B,O;gC,S;gC,Q;gC,S;gC,O;4B;wB,G,K;4B,G,U;gC,O;oC,Q;gC;4B,G;gC,I,G;6B;yB,E;qB;gB;Y;S;Q,O;Y,O,I;Y,U,S,G;gB,I,O;Y;Y,Y;Q;I,G;Q,I,G;Q,G,U;Y,G,gB;gB,a;Y,G;gB,I,G;a;Y,I,G;Y,G,e;gB,G,gB;oB,O;wB,W;wB,S;wB,Y;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,Y;wB;wB,Y;oB;gB;a,E;Y,I,G;Y,G,kB;gB,G;gB,I,G;gB,G,S;oB,O;wB,S;wB,Q;oB;oB,I;wB,S,S,M;4B,I,O;wB;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,S;oB,O;wB,S;wB,Q;wB,Y,I;oB;oB,I;wB,S,I;oB;gB,G;oB,I,G;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAqC;IACnD,OAAO,kBAAkB,QAAQ,oBAAqC;IACtE,OAAO,WAAW;IAG5B,QAAQ,oBAAmC,QAAQ;IACnD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q,K;Y,U;Y,M;Q;I;I;Q,O;Y,K;Q;I;I,U;Q;Y,O,I,C,M,e;Q;I;I,S;Q,W,Q;Y,I,C,M,U,I,C;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,gB;Q,O;Y,a;Y,iB;Y,c;Q;Q,a,I,G;Y;gB,K;gB,I;oB,O;wB,G,S;4B,Y;gC;oC,M;oC,S;oC,O,I;oC,Y;gC;6B;4B,O;gC,S;gC,S;gC,Q;gC,O;4B;4B,I;gC,S,S,M;oC,O;oC,I,M,C,I;gC;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,M;gC;gC,Y;4B;wB,G;4B,G,U;gC,I,G;6B;4B,I,G;4B,G,U;gC,I,G;6B;yB,E;qB;gB;gB,O;Y;S;Q,O;Y,O,I;Y,U,S,G;gB,I,M;Y;Y,Y;Q;I,G;Q,I,G;Q,G,S;Y,Y;gB;oB,M;oB,S;oB,O;oB,Y;gB;a;Y,O;gB,O;gB,Q;gB,S;gB,S;Y;Y,I;gB,S,S,M;oB,O;oB,O,I,U;gB;Y;Q,G;Y,G,U;gB,I,G;a;S,E;Q,I,G;Q,G,S;Y,Y;gB;oB,M;oB,S;oB,O;oB,Y;gB;a;Y,O;gB,O;gB,Q;gB,S;gB,S;Y;Y,I;gB,S,S,M;oB,O;oB,O,I,U;gB;Y;Q,G;Y,G,U;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,a;I,G;Q,G,a;Y,a;Y,O;gB,S;gB,Q;gB,S;Y;Q,G;Y,G;Y,I,G;Y,G,mB;gB,I;oB,mB,I;gB;Y;Y,I,G;Y,G,S;gB,O;oB,Q;oB,S;oB,S;gB;gB,I;oB,S,S,M;wB,O,I,M;oB;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;Y,I,G;Y,G,S;gB,O;oB,Q;oB,S;oB,S;oB,Y,I,S,W;gB;gB,I;oB,S,I;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;S,E;Q,I,G;Q,G,O;Y,a;Q,G;Y,G,W;gB,a;Y,G;gB,G,O;oB,a;gB,G;oB,G,W;wB,I,a,W,I,G,gB;4B,G,Q;gC,a;gC,a;oC,e;gC;4B,G;gC,I,G;6B;yB,I,I;wB,I,G;wB,I,G,I,c,S,W;4B,O,G,gB;gC,K,Y;gC,I;oC,S,S,M;wC,O,I,M,e;oC;gC;4B,G;gC,G,e;oC,a;oC,O;wC,S,Y;oC;oC,O;wC,O,I;wC,U,S,G;4C,I,W;wC;wC,Y;oC;gC;gC,I,G;gC,G,O;oC,a;gC,G;oC,G,Q;wC,I,G,I,G,Y;qC;oC,I,G;oC,G,Q;wC,I,G,I,G,I,W;qC;iC;gC,I,G;gC,G,sB;oC,O;wC,O,Y;oC;oC,I;wC,e,S,M;4C,I,a;wC;wC,Y,S,M;4C,I,U;wC;oC;gC;gC,I,G;gC,Y,Y,M,G,qB;oC,a;oC,O;wC,O,Y;wC,U,S,G;4C,I,K,a,Y;wC;wC,Y;oC;gC,K,I;6B,E;wB;qB,E;iB,E;a;S,E;Q,I,G;Q,I,a,G,qB;Y,O;gB,a,I;gB,Y;gB,mB;gB,kB;Y;Y,I;gB,mB,S,M;oB,I,oB;gB;gB,oB,S,M;oB,I,oB;gB;gB,a,S,M;oB,I,oB;gB;gB,c,I;Y;Q,K,I;Q,I,G;Q,I,U,G,oB;Y,O;gB,a,I;gB,Y;gB,sB;gB,wB;gB,mB;Y;Y,I;gB,mB,S,M;oB,I,iB;gB;gB,oB,S,M;oB,I,iB;gB;gB,c,S,M;oB,O,I,M;gB;Y;Y,O;gB,O,I,Q;gB,U,S,G;oB,I,K,I,S,Q;gB;gB,Y;Y;Q,K,I;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AFJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AGJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAgC;IAC9C,OAAO,kBAAkB,QAAQ,oBAAgC;IACjE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA6B;IAC3D,QAAQ,oBAA8B,QAAQ;IAC9C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;;A;;A;;A;A,I,gB;I,M;I,O;Q;Q;Q;Q;K;I,Y;mB,C,G,4B;qC,C,G,8C;8B,C,G,uC;2B,C,G,oC;I;I;Q,O;Y,Y;Q;I;I,U,C;I,S;Q,I,G;Y,M,M,I,C,I,C,I;Y,I,C,K,O,K;Y,I,C,K,O,M,G,G;Y,I,C,M;Q;Q,M,G;Y,M,M,I,C,I,C,I;Y,I,C,K,O,K;Y,I,C,K,O,M,G,G;Y,I,C,M;Q;Q,O,G;Y,O,Q;Q;Q,S,G;Y,O,Q,I,C,K,S;Q;Q;Y,I,C,M,Y;gB,I,C;a;Q;Q;Y,I,C,M;Y,O,C,G,4C,E,I,C,M,C,G,mC;Q;Q,W,U;Y,I,C,M;Y,C,G,8C,E,I,C,M;Q;Q,mB,C,G,2C;Q,oB,G;Y,I,C,M;Y,O,C,G,4C,E,K,I,C,M,C,G,mC;Q;Q,c,K,E,G;Y,M,O,I,C,I,C,M;Y,M,S,C,G,mC;Y,I,C,G,2C,E;gB,I,O,Q,a,K,U;qB,K,W,K;mB,K,W;Q;Q,mB,K,E,G;Y,M,O,I,C,I,C,M;Y,I,C,G,2C,E,O;gB,I,C,M;gB,K,W;Y;Q;Q,a,K;Y,I,C,M;Y,I,C,K,O,O;Q;Q,U,K;Y,M,O,I,C,I,C,M;Y,I,C,a;Q;Q,a,Q;Y,I,U;gB,K,M,Q,I,C,K,I,K,Q,S,K;oB,K,O,S;oB,K,O,I,S,O;oB,K,O,I,S,O;oB,K,O,I,S,O;oB,I,C,M;oB;gB;Y;Y,I,C,a;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;;;ACff,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA4B;IAC1C,OAAO,kBAAkB,QAAQ,oBAA4B;IAC7D,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAyB;IACvD,QAAQ,oBAA0B,QAAQ;IAC1C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O,C;I;Q,O;Y,W;Y,M;Y,gB;Q;I;I,U;Q;Y,I,I,C,mB,M,O;Y,O,I,C,U,W,K,I,C,U,U;Q;I;I,O;Q;Y,I,I,C,S,O,I,C,Y;Q;I;I,S;Q;Y,I,C,K,C,qB,C;Q;Q;Y,I,I,C,mB,M,I,C,M;iB,I,C,M,a,I,C;Y,I,C,O;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,Y;Q,O;Y,U;Q;Q,a,I,G;Y;gB,K;gB,I,S,G;oB,I,K,I;oB,O;wB,G,S,I,G;4B,O;gC,S;gC,Q;gC,S;gC,O;4B;wB,G,K;4B,G,U;gC,O;oC,Q;gC;4B,G;gC,I,G;6B;yB,E;qB;gB;Y;S;Q,O;Y,O,I;Y,U,S,G;gB,I,O;Y;Y,Y;Q;I,G;Q,I,G;Q,G,U;Y,G,gB;gB,a;Y,G;gB,I,G;a;Y,I,G;Y,G,e;gB,G,iB;oB,O;wB,O,I;wB,U,S,G;4B,I,iB;wB;wB,Y;oB;gB,G;oB,G,W;wB,O;4B,S;4B,S;wB;oB;oB,I,G;oB,G,W;wB,O;4B,S;4B,S;wB;oB;iB,E;gB,I,G;gB,I,mB,U,G,gB;oB,O;wB,W;wB,S;wB,Y;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,Y;wB;wB,Y;oB;gB,K,I;a,E;Y,I,G;Y,G,kB;gB,G;gB,I,G;gB,G,S;oB,O;wB,S;wB,Q;oB;oB,I;wB,S,S,M;4B,I,O;wB;oB;gB,G;oB,I,G;iB;gB,I,G;gB,G,S;oB,O;wB,S;wB,Q;wB,Y,I;oB;oB,I;wB,S,I;oB;gB,G;oB,I,G;iB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA8C;IAC5D,OAAO,kBAAkB,QAAQ,oBAA8C;IAC/E,OAAO,WAAW;IAG5B,QAAQ,oBAA4C,QAAQ;IAC5D,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q,O;Y,U;Y,M;Q;Q,a;Y,U;Y,M;Y,S;Q;I;I;Q,O;Y,K;Q;I;I,U;Q;Y,O,I,C,M,e;Q;I;I,S;Q,W,Q;Y,I,C,M,U,I,C;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,gB;Q,O;Y,a;Y,iB;Y,c;Q;Q,a,I,G;Y;gB,K;gB,I;oB,O;wB,G,S;4B,Y;gC;oC,M;oC,S;oC,O,I;oC,Y;gC;6B;4B,O;gC,S;gC,S;gC,Q;gC,O;4B;4B,I;gC,S,S,M;oC,O;oC,I,M,C,I;gC;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,M;gC;gC,Y;4B;wB,G;4B,G,U;gC,I,G;6B;4B,I,G;4B,G,U;gC,I,G;6B;yB,E;qB;gB;gB,O;Y;S;Q,O;Y,O,I;Y,U,S,G;gB,I,M;Y;Y,Y;Q;I,G;Q,I,G;Q,I,c,G,S;Y,Y;gB;oB,M;oB,S;oB,O;oB,Y;gB;a;Y,O;gB,O;gB,Q;gB,S;gB,S;Y;Y,I;gB,S,S,M;oB,O;oB,O,I,U;gB;Y;Q,G;Y,G,U;gB,I,G;a;S,E,K,I;Q,I,G;Q,G,S;Y,Y;gB;oB,M;oB,S;oB,O;oB,Y;gB;a;Y,O;gB,O;gB,Q;gB,S;gB,S;Y;Y,I;gB,S,S,M;oB,O;oB,O,I,U;gB;Y;Q,G;Y,G,U;gB,I,G;a;S,E;Q,I,G;Q,G,S;Y,Y;gB;oB,M;oB,S;oB,O;oB,Y;gB;a;Y,O;gB,O;gB,Q;gB,S;gB,S;Y;Y,I;gB,S,S,M;oB,O;oB,O,I,U;gB;Y;Q,G;Y,G,U;gB,I,G;a;S,E;Q,I,G;Q,G,S;Y,Y;gB;oB,M;oB,S;oB,O;oB,Y;gB;a;Y,O;gB,O;gB,Q;gB,S;gB,S;Y;Y,I;gB,S,S,M;oB,O;oB,O,I,U;gB;Y;Q,G;Y,G,U;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAuC;IACrD,OAAO,kBAAkB,QAAQ,oBAAuC;IACxE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAoC;IAClE,QAAQ,mBAAqC,QAAQ;IACrD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A,S,c,I;I,O,M,Q;A;A,I,gB;I,M;I,O;Q,O;Y,U;Y,M;Q;Q,M;Y,U;Y,M;Y,W;Q;I;I;Q,O;Y,M;Y,W;Q;I;I,U;Q;Y,M,M,A,C,I,C,O,C,I,I,C;Y,O,I,C,K,M,K,M,I,C;Q;Q;Y,O,K,K,I,C,K,S,I,C;Q;I;I,S;Q,S,I;Y,I,C,M,W,I,C,O;Q;Q,Y,I;Y,I,C,M,c,I,C,O;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,a;I,G;Q,G,U;Y,a;Y,O;gB,S;Y;Q,G;Y,I,G,I,U,S,G;gB,O,G,e;oB,K,I;oB,a;gB,G;oB,G,uB;wB,G,qB;4B,I,G,I,G,I;yB;wB,I,G;wB,G,yB;4B,I,G,I,G,I;yB;qB,E;oB,I,G;oB,G,sB;wB,a;oB,G;wB,G,S;4B,O;gC,Q;gC,U;4B;4B,I;gC,S,S,M;oC,O,I,W;gC;4B;wB,G;4B,G,U;gC,O;oC,S;gC;4B,G;gC,I,G;6B;yB,E;wB,I,G;wB,G,S;4B,O;gC,Q;gC,U;4B;4B,I;gC,S,S,M;oC,O,I,Q;gC;4B;wB,G;4B,G,U;gC,O;oC,S;gC;4B,G;gC,I,G;6B;yB,E;qB,E;iB,E;Y;Y,I,G;Y,I,K,W,I,G,e;gB,G,uB;oB,G,qB;wB,I,G;qB;iB,E;a,E,K,I;S,E;Q,I,G;Q,I,Y,I,G,gB;Y,O;gB,U,I;Y;Y,O;gB,O,I;gB,U,S,G;oB,I,O;gB;gB,Y;Y;Q,K,I;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,mBAAoC;IAClD,OAAO,kBAAkB,QAAQ,mBAAoC;IACrE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAiC;IAC/D,QAAQ,oBAAkC,QAAQ;IAClD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;A,S,oB,I;I,O,S,Q,K,U,O,K,O,M,Y,O,K,O,M,Y,O,K,O,M;A;A,I,gB;I,M;I,Y;iC,C,G,0C;I;I,O;Q,Y;Y,U;Y,W;Q;I;I;Q,O;Y,M;Y,Q;gB,G;gB,G;gB,G;Y;Y,K;Y,a;Q;I;I,U;Q;Y,I,I,C,c,M,Q,I,C,W,O,O,I,C,W,K,W;Y,O;Q;I;I,O;Q;Y,I,I,C,Y;gB,I,C,O,I,C,W;gB,I,C,O,I,I,C,W,O;gB,I,C,O,I,I,C,W,O;gB,I,C,O,I,I,C,W,O;gB,I,C,M,I,C,W;gB,I,C,c;Y;Q;I;I,Y;I,S;Q,c,M;Y,Q,I;Y,I,M,O,M,M,O,M,M,O,I;Y,I,C,O,I,O;Y,I,C,O,I,O;Y,I,C,O,I,O;Y,I,C;Q;Q,iB,I;Y,I,C,c;Y,I,C;Q;Q;Y,M,S,C,G,mC;Y,C,G,qC,E,I,C,Y,I,C,Q,I,C,a;Q;Q;Y,M,S,C,G,mC;Y,C,G,qC,E;Y,I,C,M;Q;Q;Y,M,S,C,G,mC;Y,C,G,qC,E;Y,I,C,M,S;gB,M,I,C;gBAiEf,QAAA,IAAA,CAAA;gBACA,KAAA,IAAA,CAAA;YACA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;;;ACxFA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA0C;IACxD,OAAO,kBAAkB,QAAQ,oBAA0C;IAC3E,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAuC;IACrE,QAAQ,oBAAwC,QAAQ;IACxD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;A,S,a,I;I,O,O,K,M,Y,O,K,M,Y,O,K,M;A;A,I,gB;I,M;I,O;Q,Q;Y,U;Y,M;Y,W;Q;Q,iB;Y,U;Y,M;Y,S,I;Q;I;I;Q,O;Y,Y;Y,K;gB,G;gB,G;gB,G;Y;Q;I;I,U;Q,O;Y;gB,O,C,G,yC;Y;Y,K,K;gB,C,G,yC,E;Y;Q;Q,I;Y;gB,O,I,C,O;Y;Y,K,K;gB,I,C,I,I;gB,O,I,C;Y;Q;Q,I;Y;gB,O,I,C,O;Y;Y,K,K;gB,I,C,I,I;gB,O,I,C;Y;Q;Q,I;Y;gB,O,I,C,O;Y;Y,K,K;gB,I,C,I,I;gB,O,I,C;Y;Q;I;I,O;Q;Y,I,C,I,I,I,C,O;Y,I,C,I,I,I,C,O;Y,I,C,I,I,I,C,O;Q;I;I;Q,I,C,kB,C,G,8B,E,I,C,S,K,I,G,K;Y,S;Q;I;I,S;Q;Y,I,C,M,Y;gB,G,W,I,C,I;gB,G,S,I,C,I,G;gB,G,W,I,C,I;Y;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,e;Q,a;Q,O;Y,S;Y,gB;Q;I,G;Q,G,Y;Y,O;gB,O;gB,gB;gB,kB;gB,wB;gB,Q;Y;Q,G;Y,G,S;gB,Y;oB;wB,M;wB,S;wB,O;wB,Y;oB;oB;wB,M;wB,S;wB,O,I;wB,Y;oB;iB;gB,a;gB,O;oB,Q;oB,Q;gB;gB,U;oB,S,I;gB;gB,I;oB,S,S,M;wB,I,O,O,W;wB,I,Q,O,O;oB;gB;Y;Y,I,G;Y,G,gB;gB,O;oB,a;gB;gB,O;oB,O,I;oB,U,S,G;wB,I,a;oB;oB,Y;gB;Y,G;gB,G,S;oB,Y;wB;4B,M;4B,S;4B,O;4B,Y;wB;qB;oB,O;wB,Y,I;wB,Q;oB;oB,I;wB,S,S,M;4B,O,I,M,mB;wB;oB;gB,G;oB,G,U;wB,I,G;qB;iB,E;gB,I,G;gB,G,S;oB,Y;wB;4B,M;4B,S;4B,O;4B,Y;wB;qB;oB,O;wB,Q;wB,Y,I;oB;oB,I;wB,S,S,M;4B,O,I,M,mB;wB;oB;gB,G;oB,G,U;wB,I,G;qB;iB,E;gB,I,G;gB,G,S;oB,Y;wB;4B,M;4B,S;4B,O;4B,Y;wB;qB;oB,O;wB,Q;wB,Y,I;oB;oB,I;wB,S,S,M;4B,O,I,M,mB;wB;oB;gB,G;oB,G,U;wB,I,G;qB;iB,E;a,E;S,E;Q,I,G;Q,G,Y;Y,O;gB,O;gB,Q;Y;Q,G;Y,G,U;gB,O;oB,O;gB;Y,G;gB,G,Y;oB,O;wB,Q;wB,O;wB,O;wB,S;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,K;wB;wB,Y;oB;gB;a,E;Y,I,G;Y,G,U;gB,O;oB,O;gB;Y,G;gB,G,gB;oB,a;oB,O;wB,Q;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,K;wB;wB,Y;oB;gB;a,E;Y,I,G;Y,G,U;gB,O;oB,O;gB;Y,G;gB,G,Y;oB,O;wB,Q;wB,O;wB,S;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,K;wB;wB,Y;oB;gB;a,E;Y,I,G;Y,G,U;gB,O;oB,O;gB;Y,G;gB,G,gB;oB,a;oB,O;wB,Q;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,K;wB;wB,Y;oB;gB;a,E;Y,I,G;Y,G,U;gB,O;oB,O;gB;Y,G;gB,G,Y;oB,O;wB,Q;wB,O;wB,O;wB,S;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,K;wB;wB,Y;oB;gB;a,E;Y,I,G;Y,G,U;gB,O;oB,O;gB;Y,G;gB,G,gB;oB,a;oB,O;wB,Q;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,K;wB;wB,Y;oB;gB;a,E;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,c;Q,O;Y,Q;Q;I,G;Q,I,e,O,G,O;Y,a;Q,G;Y,G,a;gB,O;oB,Q;oB,S;oB,Q;gB;Y,G;gB,G,mB;oB,I,G;iB;gB,I,G;gB,G;gB,I,G;gB,G,S;oB,Y;wB;4B,M;4B,S;4B,O;4B,Y;wB;qB;oB,O;wB,Q;wB,O;wB,S;wB,S;oB;oB,I;wB,S,I;oB;gB,G;oB,G,U;wB,I,G;qB;iB,E;gB,I,G;gB,G,S;oB,Y;wB;4B,M;4B,S;4B,O;4B,Y;wB;qB;oB,O;wB,Q;wB,O;wB,S;wB,S;oB;oB,I;wB,S,I;oB;gB,G;oB,G,U;wB,I,G;qB;iB,E;a,E;Y,I,G;Y,G,U;gB,a;Y,G;gB,G,e;oB,G,O;wB,a;oB,G;wB,G,gB;4B,O;gC,S;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,O;gC;gC,Y;4B;wB;qB,E;oB,I,G;oB,G,qB;wB,a;oB,G;wB,G,6B;4B,a,I,G;gC;oC,K;oC,I;wC,O;4C,G,O;gD,I,G;6C;yC;oC;oC,O;gC;6B,E,M,O;wB,G;4B,I,G;4B,G,U;gC,G,e;oC,G,2B;wC,O;4C,U,I;4C,oB,I;4C,Q,I;wC;wC,I;4C,Y,I;4C,mB,I;wC;oC;iC,E;6B,E;yB,E;qB,E;iB,E;a,E;S,E,K,I;K;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,a;I,G;Q,G,a;Y,a;Y,O;gB,S;gB,Q;gB,S;Y;Q,G;Y,G,S;gB,O;oB,Q;gB;gB,I;oB,S,S,M;wB,O,I,M;oB;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;Y,I,G,W,I,G,I,Q;Y,G;Y,I,G;Y,G,S;gB,O;oB,Q;oB,S;oB,S;oB,Y,I;gB;gB,I;oB,S,S,M;wB,O,I,M,Q;4B,I;yB;oB;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;Y,I,G;Y,G,a;gB,I;oB,a,I;oB,gB,I;gB;Y;Y,I,G;Y,G,S;gB,O;oB,Q;oB,Y,I,K,U;oB,S;gB;gB,I;oB,S,I;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;S,E;Q,I,G;Q,G,O;Y,a;Q,G;Y,G,W;gB,a;Y,G;gB,G,O;oB,a;gB,G;oB,G,U;wB,a;oB,G;wB,I,K,W,I,G,e;4B,G,uB;gC,I,G;6B;yB,E,K,I;wB,I,G;wB,I,G,I,M,S,I,E,C;4B,O;gC,I,kB,Q,G,gB;oC,K,K;oC,a;oC,O;wC,a;oC;oC,a,I,G;wC;4C,K;4C,I;gD,O;oD,G,e;wD,a;oD,G;wD,G,O;4D,a;wD,G;4D,G,S;gE,O;oE,U;oE,Y,I,M;gE;gE,I;oE,S,S,M;wE,O;wE,O,I,G;oE;gE;4D,G;gE,G,U;oE,I,G;iE;6D,E;4D,I,G;4D,G,S;gE,O;oE,U;oE,Y,I,Q;gE;gE,I;oE,S,S,M;wE,O;wE,O,I,K;oE;gE;4D,G;gE,G,U;oE,I,G;iE;6D,E;yD,E;wD,I,G;wD,G,uB;4D,G,qB;gE,a;4D,G;gE,G,Q;oE,Y;wE;4E,M;4E,S;4E,O,K;4E,Y;wE;qE;oE,a;gE,G;oE,I,G,gC,I,G,K,a,U,O,I,G,K,Q;iE;6D;yD,E;wD,I,G;wD,G,sB;4D,G,+B;gE,O;oE,S;gE;gE,I;oE,sB,I;oE,gB,I;oE,Y,I;oE,e,I;gE;4D;yD,E;qD,E;iD;4C;4C,O;wC;qC,E,M;gC,G;oC,I,G;oC,G,O;wC,a;oC,G;wC,G,uB;4C,G,wB;gD,O;oD,S;oD,Q,K;gD;gD,I;oD,W,I;oD,c,I;gD;4C;yC,E;qC,E;iC,I,G,e;oC,K,K;oC,a;gC,G;oC,G,O;wC,a;oC,G;wC,G,S;4C,O;gD,U;gD,Y,I,M;4C;4C,I;gD,S,S,M;oD,O,I,G;gD;4C;wC,G;4C,G,U;gD,I,G;6C;yC,E;wC,I,G;wC,G,S;4C,O;gD,U;gD,Y,I,Q;4C;4C,I;gD,S,S,M;oD,O,I,K;gD;4C;wC,G;4C,G,U;gD,I,G;6C;yC,E;qC,E;oC,I,G;oC,G,uB;wC,a;oC,G;wC,G,Q;4C,Y;gD;oD,M;oD,S;oD,O,K;oD,Y;gD;6C;4C,a;wC,G;4C,I,G,yB,I,G,K,Q;yC;qC;oC,I,G;oC,G,sB;wC,G,+B;4C,O;gD,S;gD,iB;4C;4C,I;gD,sB,I;gD,gB,I;gD,Y,I;gD,e,I;4C;wC;qC,E;iC,E;6B;wB;qB,E;iB,E;a;S,E;Q,I,G;Q,G,qB;Y,O;gB,gB,I;Y;Y,I;gB,S,I;Y;Q;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AJJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,S;Q,a;Q,O;Y,Q;Q;I,G;Q,G,O;Y,a;Q,G;Y,I,kB,Y,G,gB;gB,O;oB,gB,I;gB;gB,I;oB,mB,I;oB,e,I;oB,Y,I;oB,Q,I;oB,e,I;gB;Y,K,G,iB;gB,O;oB,Q,I,c;oB,O,I,c;oB,Q,I,c;oB,Y,I;gB;gB,I;oB,Q,I;oB,c,S,M;wB,I,W;oB;oB,Q,S,M;wB,I,gB;oB;oB,Y,I;gB;Y;Y,I,G;Y,I,Y,M,G,qB;gB,a;gB,O;oB,O,I;oB,U,S,G;wB,I,W;oB;oB,Y;gB;Y,K,I;S,E;Q,I,G;Q,G,e;Y,a;Y,O;gB,e;gB,a,I;gB,iB;Y;Y,I;gB,mB,S,M;oB,I,e;gB;gB,oB,S,M;oB,I,e;gB;Y;Q,G;Y,G,Q;gB,I,G,I,G,I;a;Y,I,G;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,I,e;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AJJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AUJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA6B;IAC3C,OAAO,kBAAkB,QAAQ,oBAA6B;IAC9D,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA0B;IACxD,QAAQ,mBAA2B,QAAQ;IAC3C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;;A,I,gB;I,M;I,Y;wB,C,G,iC;I;I;Q,O;Y,Q;Y,W;Y,gB;Y,S,E;Y,iB,E;Q;I;I,U;Q;Y,I,I,C,e,C,E,I,I,C,e,C,E,C,S,Q,O,I,C,e,C,E,C;Y,O;Q;I;I,M;Q,I,C,U,M,C,G,wC;I;I,S;Q,c,I;Y,Q,I,gB;Y,I,C,S;Q;Q,M;Y,M,W,M,C,G,oD;Y,I,U,I,C,S,S,K,K;Q;Q,M;Y,I,C,M,e;Q;Q,M,Q,E,S,E,c,E;Y,I,C,Y;Y,I,C,iB;Q;Q,Y;Q,U;Q,gB;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;;;ACff,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAiC;IAC/C,OAAO,kBAAkB,QAAQ,oBAAiC;IAClE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA8B;IAC5D,QAAQ,oBAA+B,QAAQ;IAC/C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;A;;A,I,gB;I,M;I,Y;4B,C,G,qC;I;I;Q,O;Y,Q;Y,S,E;Y,U,E;Q;I;I,O;Q;Q;Q;K;I,U;Q;Y,O,I,C,Q,O,C,K;gB,I,C,K,S,O;gB,O;Y,G;Q;Q;Y,O,I,C,S,O,C,K;gB,I,C,K,S,O;gB,O;Y,G;Q;I;I;Q,O,I,C;I;I;Q,I,C,S,C,G,gB,E,I,C,a;I;I,O;Q;Y,I,C;QA6Bf;QACA;YACA,IAAA,CAAA;QACA;IACA;IACA,SAAA;QACA,MAAA;YACA,IAAA,CAAA,IAAA,CAAA,aAAA,CAAA,IAAA,CAAA,gBAAA;YACA,MAAA,OAAA,MAAA,CAAA,GAAA,uCAAA,EAAA;gB,W,I,C;gBAEA,gBAAA,IAAA,CAAA;YACA;YACA,IAAA,CAAA,WAAA,KAAA;YACA,IAAA,CAAA,UAAA,KAAA;YACA,IAAA,IAAA,CAAA,QAAA,WAAA,KAAA,IAAA,CAAA,SAAA,QAAA,IAAA,CAAA,SAAA;QACA;QACA,cAAA,MAAA;YACA,IAAA,CAAA,MAAA,cAAA;QACA;QACA,MAAA;YACA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,MAAA,CAAA,GAAA,4DAAA,EACA,IAAA,CAAA,SACA,IAAA,CAAA;YAEA,MAAA,OAAA,IAAA,OAAA;YACA,MAAA,EACA,IAAA,EACA,SAAA,UAAA,EACA,IAAA,EACA,GAAA,MAAA,CAAA,GAAA,+CAAA,EAAA;YACA,CAAA,GAAA,6CAAA,EAAA;YACA,MAAA,CAAA,GAAA,2CAAA,EAAA;YACA,QAAA,IAAA,QAAA;YACA,OAAA,0BAAA,UAAA,gBAAA;gBACA,SAAA;gBACA;gBACA,WAAA,WAAA,KAAA,GAAA;YACA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;;;ACvFA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAqC;IACnD,OAAO,kBAAkB,QAAQ,oBAAqC;IACtE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAkC;IAChE,QAAQ,oBAAmC,QAAQ;IACnD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;A,I,gB;I,M;I,O;Q;Q;K;I,Y;gC,C,G,yC;I;I;Q,O;Y,S,E;Y,S,E;Q;I;I;Q,I,C;I;I,O;Q;Y,I,C;Q;I;I,S;Q;Y,I,C,I,C,O;Y,I,C,U,E;Y,I,C,U,E;Y,K,M,Q,I,C,M,I,K,S,I,C,Q,K;iB,I,C,Q,K;Q;Q,S,I;Y,K,U,I,C;Y,I,C;Q;Q,M,e,I;Y,M,Y,C,G,mD,E,K;Y,I,W;gB,M,Q,C,G,kC;gB,M,a,M,C,G,2C,E;gB,M,W,M,C,G,oC,E;gB,K,M,E,K,E,I,E,I,S,I,U,W;oB,K,I,K;oB;gB;gB,M,O,S,I,C;oB,O;wB,O,I;wB,W,M,K,I;oB;gB;gB,M,S,C,G,mC;gB,O,K,kB,iB;gB,O,U;oB,K;iB,E;gB,O,O;oB,K;iB,E;Y;Q;Q,U,I;Y,C,G,gD,E,K,M,K,W,I,C,c,K,S,K;Q;Q,U,I;Y,K,U;Y,I,C;Q;Q,a,M;Y,I,C,M,c;Q;I;A;AAsEf,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;;;ACtFA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAyC;IACvD,OAAO,kBAAkB,QAAQ,oBAAyC;IAC1E,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAsC;IACpE,QAAQ,oBAAuC,QAAQ;IACvD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A,I,gB;I,M;I;Q,O,C;I;I,O;Q;Q;K;I,U;Q;Y,M,O,C,G,qC,E,I,C;Y,I,M,O,K,K,K;Y,O,I,C;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,A,I,U,G,yB;Q,a;I,G;Q,I,mB,I,W,G,Q;Y,a;gB,S;Y;Y,I;gB,S,S,M;oB,O;oB,O,I,M,c,I;gB;Y;Q,G;Y,I,G,W,I,G,I,Y;S,I;Y,G,Q;gB,a;oB,S;gB;gB,I;oB,S,S,M;wB,O;wB,O,I,M,c,I;oB;gB;Y,G;gB,I,G,a,I,G,I,kB;a;Y,I,G;Y,G,Q;gB,a;oB,S;gB;Y,G;gB,G,K;oB,I;wB,S,S,M;4B,O;4B,O,I,M,c,I;wB;oB;gB,G;oB,I,G,I,G,I;iB;a;S;K,E,K,G,yB;Q,a;Q,I;Y,S,S,M;gB,O;gB,O,I,M,c,I;Y;Q;I,G;Q,G,Q;Y,a;gB,S;Y;Q,G;Y,I,G,W,I,G,I,Y;S;K;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,U;Q,a;Q,O;Y,Y;Y,S;Q;I,G;Q,I,G,I,S,S,I;Y,O,G,e;gB,K,K;gB,a;gB,O;oB,U;gB;gB,I;oB,S,S,M;wB,O,I,S;oB;gB;Y,G;gB,G,sB;oB,G,S;wB,O;4B,Q;4B,U;wB;wB,I;4B,S,S,M;gC,O;gC,O,I,c;4B;wB;oB,G;wB,G,U;4B,I,G;yB;qB,E;iB,E;gB,I,G;gB,G,uB;oB,G,qB;wB,I,G,I,G,K;qB;oB,I,G;oB,G,0B;wB,O;4B,W,K;4B,Y,K;wB;wB,I;4B,c,I;wB;oB;iB,E;gB,I,G;gB,G,sB;oB,G,S;wB,O;4B,Q;4B,U;4B,Y,C,I;wB;wB,I;4B,S,S,M;gC,O;gC,O,I,Q;4B;wB;oB,G;wB,G,U;4B,I,G;yB;qB,E;iB,E;a,E;Q;Q,I,G;Q,G;Q,I,G;Q,G,e;Y,I,G;S;Q,I,G;Q,I,G,I,S,S,I;Y,O,G,e;gB,K,K;gB,a;gB,O;oB,U;gB;gB,I;oB,S,S,M;wB,O,I,S;oB;gB;Y,G;gB,G,uB;oB,G,qB;wB,I,G,I,G,K;qB;oB,I,G;oB,G,0B;wB,O;4B,W,K;4B,Y,K;wB;wB,I;4B,c,I;wB;oB;iB,E;gB,I,G;gB,G,sB;oB,G,S;wB,O;4B,Q;4B,U;wB;wB,I;4B,S,S,M;gC,O;gC,O,I,S;4B;wB;oB,G;wB,G,U;4B,I,G;yB;qB,E;iB,E;a,E;Q;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,U;Q,a;Q,O;Y,Q;Y,c;Y,Q;Q;Q,O;Y,O,I;Y,U,S,G;gB,I,S;Y;Y,Y;Q;I,G;Q,G,S;Y,O;gB,U;Y;Q,G;Y,I,G,gB,I,G,I,W;S;Q,I,G;Q,G,S;Y,O;gB,U;Y;Q,G;Y,I,G,a,I,G,I,U;S;Q,I,G;Q,G,c;Y,a;Q,G;Y,G,sB;gB,O;oB,gB,I;oB,S,I;gB;gB,I;oB,c,I;gB;Y;S,E;Q,I,G;Q,G,c;Y,a;Q,G;Y,G,sB;gB,O;oB,gB,I;oB,S,I;gB;gB,I;oB,c,I;gB;Y;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,S;Q,a;Q,O;Y,Q;Q;I,G;Q,G,a;Y,O;gB,S;gB,Q;Y;Q,G;Y,G,S;gB,Y;oB;wB,M;wB,S;wB,O;wB,Y;oB;iB;gB,O;oB,Q;gB;gB,I;oB,S,I;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;Y,I,G;Y,G;Y,I,G;Y,G,S;gB,O;oB,Q;gB;gB,I;oB,S,I;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;S,E;Q,I,G;Q,G,O;Y,a;Q,G;Y,G,O;gB,a;Y,G;gB,G,gB;oB,O;wB,S;wB,Q;wB,Q;wB,gB;wB,a;wB,c;oB;oB,O;wB,O,I;wB,U,S,G;4B,I,S;wB;wB,Y;oB;gB;gB,I,G;gB,G,O;oB,a;gB,G;oB,I,Q,S,I,G,c;wB,K;wB,O;4B,S,I;4B,e;4B,gB;4B,U,I;4B,Y;4B,U,I;4B,iB;4B,c;wB;wB,I;4B,iB,S,M;gC,I,kB;4B;wB;oB,K,I;iB,E;a,E;Y,I,G;Y,G,O;gB,a;Y,G;gB,G,kB;oB,K;oB,O;wB,gB,I;wB,a,I;wB,kB,I;oB;oB,I;wB,c,I;oB;gB;a,E;S;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;AILA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAED,MAAM,EACJ,yBAAyB,EACzB,cAAc,EACf,GAAG,QAAQ;AAEZ,MAAM,uBAAuB,QAAQ,oBACnC,2BACA;AAGF,OAAO,UAAU;IACf;AACF;;;ACpCA;;;;;;;;;;;;;;;;;;;;;;CAsBC;AAED,MAAM,SAAS,OAAO,UAAU,cAAc,SAAS;AACvD,MAAM,4BAA4B,QAAQ;AAC1C,MAAM,iBAAiB,QAAQ;AAE/B,IAAI,OAAO,OAAO,WAAW,aAAa,OAAO,SAAS,CAAC;AAC3D,IAAI,OAAO,OAAO,OAAO,8BAA8B,aACrD,OAAO,OAAO,4BAA4B,IAAI;AAChD,MAAM,uBAAuB,QAAQ,oBACnC,OAAO,OAAO,2BACd;AAGF,OAAO,UAAU;IACf,2BAA2B,OAAO,OAAO;IACzC;IACA;IACA,SAAQ,GAAG;QACT,IAAI,UAAU,6B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UAAA,gBAAA;oBACA,SAAA;oBACA;oBACA,WAAA,QAAA,KAAA,GAAA;gBACA;YACA,EAAA,OAAA,GAAA;gBACA,QAAA,MAAA;YACA,SAAA;gBACA,IAAA,CAAA,UAAA;YACA;QACA;IACA;AACA;AAEA,IAAA,gBAAA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;;;ACvEA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAwC;IACtD,OAAO,kBAAkB,QAAQ,oBAAwC;IACzE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAqC;IACnE,QAAQ,oBAAsC,QAAQ;IACtD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;A;A;A,I,gB;I,M;I,O;Q;Q;K;I;Q,O;Y,c;Q;I;I,S;Q,S,gB;Y,I,mB,C,G,2C,E,Q,O;Y,I,mB,C,G,2C,E,Q,O;Y,O;Q;Q,U,gB;Y,I,mB,C,G,2C,E,Q,O;gB,2B;Y;Y,I,mB,C,G,2C,E,Q,O;gB,2B;Y;Y,I,mB,C,G,2C,E,Q,O;gB,2B;Y;Q;Q,S,M;Y,I,O,M;gB,I,O,K,Y,O,K,S,U,K,M,E,K,E,U,E,I,O,K,S,S;oB,I,U,Q,O;gB;Y;Y,K,M,E,I,E,K,E,I,O,W,W,W;gB,I,S,Q,O;Y;Q;Q,a,M;Y,I,O,M;gB,I,O,K,Y,O,K,S,U,K,M,E,K,E,U,E,I,O,K,S,S;oB,I,U,Q,O;gB;Y;Y,O,I,C,iB,O;Q;Q,kB,S;Y,I,S;Y,K,M,E,I,E,K,E,I,U,W,W;gB,I,S,Q,U;gB,I,S,U,Y;Y;Y,I,a,S,O,C,E,U,C,E,Q,C;Y,O;Q;Q,iB,S;Y,M,O,C,G,iC,E,Q,C,U;Y,I,gB,C,G,4B,K,K,K,M,O,K,K,K;Y,O;Q;Q,kB,M;Y,I,O,M,O,I,C,W,O,K;Y,O;Q;Q,Y,Q;Y,I,C,U,O;Y,M,M,E;Y,I,S,S,S,G,I,K,C,E,S,S,O,a,C;Y,I,S,S,S,G,I,K,C,E,S,S,O,Y,C;Y,I,I,W,G,O;Y,O,I,K;Q;Q,kB,M;Y,I,O,M;gB,M,M,E;gB,I,O,K,S,S,S,G,I,K,C,E,O,K,S,S,O,O,C;gB,I,O,K,S,S,S,G,I,K,C,E,O,K,S,S,O,I,C;gB,I,O,K,S,Y,S,G,I,K,C,E,O,K,S,Y,O,O,C;gB,I,I,W,G,O;gB,O,Y,I,K;Y;Y,O;Q;Q,oB,M;Y,I,O,M;gB,M,M,E;gB,I,O,K,Q,U,S,G,I,K,C,E,O,K,Q,U,O,O,C;gB,I,O,K,Q,U,S,G,I,K,C,E,O,K,Q,U,O,I,C;gB,I,I,W,G,O;gB,O,0B,I,K;Y;Y,O;Q;Q,e,M;Y,C,G,kB,E,M,e;Q;Q,c,M,E,M,E,I;Y,C,G,kB,E,M,c;gB;gB;gB;Y;Q;Q,iB,E,E,I;Y,M,M,I,C,M,U,C,M,I,O;Y,I,Q,I,I,C,M,Y;gB;gB;Y;iB,I,C,M,Y;Q;Q,c,E,E,Q;Y,M,M,C,M,I,O;Y,I,U,O,I,C,M,K,C,M,I,O,a,I,C,M,K;Y,O,I,C,M,K;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,U;Q,O;Y,Q;Y,Y;Q;I,G;Q,I,c,Y,G,e;Y,I,G;S,I,A,I,U,W,I,G,e;Y,I,G;S,I,I,G,I,W,S,M;Y,O,G,gB;gB,K,O,W,W;gB,O;oB,a;oB,Q;gB;gB,a,I,G;oB;wB,K;wB,I;4B,O;gC,G,e;oC,a;oC,O,I,S,O,W,W;oC,O;wC,U;oC;oC,I;wC,S,S,M;4C,O,I,c;wC;oC;gC,G;oC,G,sB;wC,G,S;4C,O;gD,U;gD,U;gD,S;gD,Q;4C;4C,I;gD,S,S,M;oD,O;oD,O,I,gB,O,W,W;gD;4C;wC,G;4C,I,a,O,W,W,c,G,U;gD,I,G;6C,I,G,U;gD,I,G;6C;yC,E;qC,E;oC,I,G;oC,G,uB;wC,G,qB;4C,a;wC,G;4C,I,G,I,G,I,Q;yC;wC,I,G;wC,G,yB;4C,a;wC,G;4C,I,G,mB,I,G,I,iB,W;yC;wC,I,G;wC,G,yB;4C,a;wC,G;4C,I,G,mB,I,G,I,iB,W;yC;wC,I,G;wC,G,yB;4C,a;wC,G;4C,I,G,mB,I,G,I,mB,W;yC;qC,E;iC,E;6B;wB;wB,O;oB;iB,E,M;Y,G;gB,I,G;gB,O,O;oB,I,G,O,K,S,U,S,Q;wB,O,G,e;4B,K;4B,a;4B,O;gC,U;4B;4B,I;gC,S,S,M;oC,O,I,a,Q,U;gC;4B;wB,G;4B,G,sB;gC,G,S;oC,O;wC,U;wC,U;wC,S;wC,Q;wC,Y,I,a,O,W,W;oC;oC,I;wC,S,S,M;4C,O;4C,O,I,gB;wC;oC;gC,G;oC,I,a,U,O,W,W,c,G,U;wC,I,G;qC,I,G,U;wC,I,G;qC;iC,E;6B,E;4B,I,G;4B,G,uB;gC,G,qB;oC,a;gC,G;oC,I,G,I,G,I,gB;iC;gC,I,G;gC,G,yB;oC,a;gC,G;oC,I,G,+B,I,G,Y;iC;6B,E;yB,E;oB;oB,I,G;oB,I,G,O,K,S,U,S,O;wB,O,G,e;4B,K,Q,W;4B,a;4B,O,I,S,Q,W;4B,I;gC,S,S,M;oC,O,I,a,Q,S;gC;4B;wB,G;4B,G,sB;gC,G,S;oC,O;wC,U;wC,U;wC,S;wC,Q;wC,Y,I,a,O,W,W;oC;oC,I;wC,S,S,M;4C,O;4C,O,I,gB,Q,W;wC;oC;gC,G;oC,I,a,Q,W,Y,O,W,W,c,G,U;wC,I,G;qC,I,G,U;wC,I,G;qC;iC,E;6B,E;4B,I,G;4B,G,uB;gC,G,qB;oC,a;gC,G;oC,I,G,I,G,I,iB;iC;6B,E;yB,E;oB;oB,I,G;oB,I,G,O,K,S,a,S,O;wB,O,G,e;4B,K,Q,U,W;4B,a;4B,O,I,S,Q,U,W;4B,O;gC,U;4B;4B,I;gC,S,S,M;oC,O,I,a,Q,S;gC;4B;wB,G;4B,G,sB;gC,G,S;oC,O;wC,Y,I,a,O,W,W;wC,U;wC,U;wC,S;wC,Q;oC;oC,I;wC,S,S,M;4C,O;4C,O,I,gB,Q,U,W;wC;oC;gC,G;oC,I,a,Q,U,W,Y,O,W,W,c,G,U;wC,I,G;qC,I,G,U;wC,I,G;qC;iC,E;6B,E;4B,I,G;4B,G,uB;gC,G,qB;oC,a;gC,G;oC,I,G,I,G,I,Y;iC;gC,I,G;gC,G,yB;oC,a;gC,G;oC,I,G,mB,I,G,I,W,Q,S;iC;6B,E;yB,E;oB;iB,G,I;a,E;Q;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,S;gB,O;oB,Q;oB,S;oB,Q;gB;gB,I;oB,S,I;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;Y,I,G;Y,G;Y,I,G;Y,G,S;gB,O;oB,Q;oB,S;oB,Q;gB;gB,I;oB,S,I;gB;Y,G;gB,G,U;oB,I,G;iB;a,E;S,E;Q,I,G;Q,G,O;Y,a;Q,G;Y,G,yB;gB,O;oB,a,I;gB;gB,I;oB,Y,I;oB,Y,I;gB;gB,O;oB,O,I;oB,U,S,G;wB,I,W;oB;oB,Y;gB;Y;S,E;K;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;AELA;;;;;;;;;;;;;;;;;;;;;;CAsBC;AACD;;AAKA;;AAJA,MAAM,EACJ,oBAAoB,EACrB,GAAG,QAAQ;AAGZ,SAAS;IACP,OAAO,IAAI,QAAQ,CAAA;QACjB,MAAM,QAAQ,YAAY;YACxB,MAAM,MAAM,SAAS;YACrB,IAAI,KAAK;gBACP,cAAc;gBACd,QAAQ;YACV;QACF,GAAG;IACL;AACF;AAEA,+BAA+B,KAC7B,CAAC;IACC,kDAAkD;IAClD,gBAAgB;IAChB,qBAAqB,MAAM;QACzB,mBAAmB;QACnB,MAAM;QACN,+CAA+C;QAC/C,mBAAmB,CAAA,GAAA,mBAAE,EAAE,OAAO,CAAA,GAAA,+BAAW;QACzC,iCAAiC;QACjC,iBAAiB;IACnB;AACF;;;;;ACpDF,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA+B;IAC7C,OAAO,kBAAkB,QAAQ,oBAA+B;IAChE,OAAO,WAAW;IAG5B,QAAQ,oBAA6B,QAAQ;IAC7C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;;A;;A,M,e;I,M;I,O;Q;K;I,Y;yB,C,G,kC;gC,C,G,yC;I;I;Q,O;iC,C,G,6C;wC,C,G,oD;Y,Y;Y,S;Y,M;Y,Q;Y,e;Y,iB;Q;I;I,S;Q,M,Q,M;Y,I,Q;gB,I,C,a;gB,I,C,S;gB,I;gB,I,O,gB,O,C,G,qC,E,O;qB,O,O;gB,I,C,O,K,K,e;gB,I;oB,I,C,U;oB,I,I,C,S,C,G,6C,G,M,I,C,M,gB,M,M,O;yB,I,I,C,S,C,G,oD,G,M,I,C,M,uB,M,M,O;gB,E,O,O;oB,Q,M;oB,I,C,gB;oB,I,C,kB;gB,S;oB,I,C,U;gB;Y,O;gB,I,C,gB;gB,I,C,kB;gB,Q,M;Y;Q;Q,M;Y,I,C,U;Y,I;gB,I,I,C,S,C,G,6C,G,M,I,C,M,gB,M,K,I,C,M;qB,I,I,C,S,C,G,oD,G,M,I,C,M,uB,M,K,I,C,M;YAuDf,EAAA,OAAA,OAAA;gBACA,QAAA,MAAA;gBACA,IAAA,CAAA,gBAAA;gBACA,IAAA,CAAA,kBAAA;YACA,SAAA;gBACA,IAAA,CAAA,UAAA;gBACA,IAAA,CAAA;YACA;QACA;QACA;YACA,OAAA,IAAA,CAAA;gBACA,KAAA;oBACA,OAAA;gBACA,KAAA;oBACA,OAAA;gBACA,KAAA;oBACA,OAAA;gBACA,KAAA;oBACA,OAAA;gBACA;oBACA,OAAA;YACA;QACA;QACA,SAAA,MAAA;YACA,IAAA,CAAA,aAAA;QACA;QACA,aAAA,WAAA;YACA,IAAA,OAAA,IAAA,CAAA,cAAA,YAAA,IAAA,CAAA;QACA;IACA;IACA,OAAA;QACA;YACA,IAAA,IAAA,CAAA,eAAA,OAAA,IAAA,CAAA;QACA;IACA;AACA;AAEA,IAAA,gBAAA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;;;AC9GA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAkC;IAChD,OAAO,kBAAkB,QAAQ,oBAAkC;IACnE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA+B;IAC7D,QAAQ,oBAAgC,QAAQ;IAChD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;;A,I,gB;I,M;I,O,E;I;Q,O;Y,Q,E;Y,U;Y,U;Y,Q;Q;I;I,O;Q,Q,K;Y,I,C,M,U;Q;I;I,S;Q,M,O,I,E,S;Y,I,C,W;Y,I,C,W;Y,I,C,S;Y,I,C,S,K,K,G;Y,I,C,Y;Y,M,S,C,G,sC,E;Y,M,U,M,C,G,qB,E,I,C,W,E,O,C,E;gB,c;Y;Y,M,c,M,Q,K;Y,I,C,U,C,G,oC,E;YAqBf,IAAA,CAAA,SAAA,IAAA,CAAA,QAAA,IAAA,CAAA,KAAA,GAAA;YACA,QAAA,IAAA,gBAAA,IAAA,CAAA,SAAA,IAAA,CAAA;QACA;QACA,MAAA;YACA,IAAA;gBACA,IAAA,CAAA,SAAA;gB,Q,I,c,I,C;gBAEA,MAAA,CAAA,GAAA,uCAAA,EACA,IAAA,CAAA,SACA,IAAA,CAAA,QACA,IAAA,CAAA,WACA,IAAA,CAAA;gBAEA,IAAA,CAAA,SAAA;gBACA,QAAA,IAAA;gBACA,MAAA,CAAA,GAAA,uCAAA,EACA,IAAA,CAAA,SACA,IAAA,CAAA,QACA,IAAA,CAAA,WACA,IAAA,CAAA;gBAEA,IAAA,CAAA,SAAA;YACA,EAAA,OAAA,OAAA;gBACA,IAAA,CAAA,SAAA;gBACA,MAAA;YACA;QACA;QACA,UAAA,QAAA,EAAA,QAAA;YACA,IAAA,CAAA,WAAA;YACA,IAAA,CAAA,WAAA;YACA,QAAA,IACA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,IAAA,CAAA,OAAA,OAAA,IAAA,EAAA,SAAA,CAAA,EACA,IAAA,CAAA,MAAA,CAAA,SAAA,CACA,CAAA;QAEA;QAEA,aAAA,KAAA;YACA,IAAA,IAAA,CAAA,WAAA,GAAA,OAAA;YACA,IAAA,IAAA,CAAA,WAAA,KAAA,IAAA,CAAA,WAAA,GAAA;gBACA,IAAA,IAAA,CAAA,WAAA,OAAA,OAAA;gBACA,IAAA,IAAA,CAAA,WAAA,OAAA,OAAA;gBACA,OAAA,AAAA,IAAA,CAAA,WAAA,IAAA,CAAA,MAAA,CAAA,MAAA,GAAA;YACA;YACA,OAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O,I,G,I,O,Q,S,K;Q,O,G,mB;Y,K;Y,a;Y,O;gB,W;gB,Y,I,Y;Y;Q;I,I;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAtFA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAyC;IACvD,OAAO,kBAAkB,QAAQ,oBAAyC;IAC1E,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAsC;IACpE,QAAQ,oBAAuC,QAAQ;IACvD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;;A,I,gB;I,M;I,O,E;I;Q,O;Y,U;Y,Q;Y,W;Q;I;I,S;Q,M,O,I,E,S;Y,I,C,M,U;Y,I,C,W;Y,I,C,S,K,K,G;Y,I,C,Y;Y,M,S,C,G,sC,E;Y,M,U,M,C,G,qB,E,I,C,W,E,O,C,E;gB,c;Y;Y,M,c,M,Q,K;Y,I,C,U,C,G,oC,E;Y,Q,I,gB,I,C;Q;Q,M;Y,I;gB,I,C,M,U;gBAmBf,IAAA,CAAA,WAAA;gBACA,QAAA,IAAA,cAAA,IAAA,CAAA;gBACA,MAAA,CAAA,GAAA,8CAAA,EACA,IAAA,CAAA,SACA,IAAA,CAAA,QACA,IAAA,CAAA,W,I,C;gBAGA,IAAA,CAAA,MAAA,UAAA;gBACA,QAAA,IAAA;gBACA,MAAA,CAAA,GAAA,8CAAA,EACA,IAAA,CAAA,SACA,IAAA,CAAA,QACA,IAAA,CAAA,WACA,IAAA,CAAA;gBAEA,IAAA,CAAA,MAAA,UAAA;YACA,EAAA,OAAA,OAAA;gBACA,IAAA,CAAA,MAAA,UAAA;gBACA,MAAA;YACA;QACA;QACA,YAAA,OAAA;YACA,QAAA,IAAA,sBAAA;YACA,IAAA,CAAA,WAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,G,mB;Y,a;Y,O;gB,W;gB,Y,I;Y;Q;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAhEA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,O;Y,a,I;Y,mB,C,I;Y,6B,C,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Q;I,G;Q,G,mB;Y,I,G;S;Q,I,G;Q,G,qB;Y,G,K;gB,I,G,a,I,G,I;a;Y,I,G;Y,G,mB;gB,Y;oB;wB,M;wB,S;wB,O,I,C,S,I;wB,Y;oB;iB;gB,K;gB,I;oB,U,S,M;wB,I,S,O;oB;gB;Y;Y,I,G;Y,G,0B;gB,Y;oB;wB,M;wB,S;wB,O,I,C,S,I;wB,Y;oB;iB;gB,K;gB,I;oB,U,S,M;wB,I,S,O;oB;gB;Y;S,E;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,O;oB,Y,I;gB;gB,I;oB,S,S,M;wB,I,a;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,I;gB;gB,I;oB,S,I;gB;Y,G;gB,I,G;a;S,E;Q,I,G;Q,G,e;Y,O;gB,e;gB,e;gB,a,I;gB,iB;Y;Y,I;gB,mB,S,M;oB,I,gB;gB;gB,oB,S,M;oB,I,gB;gB;Y;Q,G;Y,G,Q;gB,I,G,a,I,G,I;a;Y,I,G;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,I,gB;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AFJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A;AILA;;;;;;;;;;;;;;;;;;;;;;CAsBG,G,O,e,S,c;I,O;A;A,Q,0B,Q,yB,Q,yB,Q,0B,Q,6B,Q,yB,Q,qB,Q,iB,Q,oB,Q,oB,Q,6B,Q,qB,Q,uB,Q,gB,Q,gB,Q,iB,Q,oB,Q,gB,Q,yB,Q,iB,Q,mB,Q,Y,Q,Y,Q,a,Q,gB,Q,Y,Q,e,K;AAEH,MAAM,eAAe;AAmFnB,QAAA,eAAA;AAlFF,MAAM,YAAY;AAmFhB,QAAA,YAAA;AAlFF,MAAM,gBAAgB;AAmFpB,QAAA,gBAAA;AAlFF,MAAM,aAAa;AAmFjB,QAAA,aAAA;AAlFF,MAAM,YAAY;AAmFhB,QAAA,YAAA;AAlFF,MAAM,YAAY;AAmFhB,QAAA,YAAA;AAlFF,MAAM,iBAAiB;AAoFrB,QAAA,iBAAA;AAnFF,MAAM,iBAAiB;AA+FrB,QAAA,iBAAA;AA7FF,MAAM,gBAAgB;AAmFpB,QAAA,gBAAA;AAlFF,MAAM,oBAAoB;AAmFxB,QAAA,oBAAA;AAlFF,MAAM,iBAAiB;AAmFrB,QAAA,iBAAA;AAlFF,MAAM,gBAAgB;AAmFpB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","sources":["node_modules/spinal-env-viewer-plugin-generate-spatial-reference/index.js","node_modules/spinal-env-viewer-context-menu-service/index.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextMenuService.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","node_modules/spinal-env-viewer-context-menu-service/constants.js","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/SelectModelModal.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/BasicSelectModel.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/AdvancedSelect/AdvencedSelectModel.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/showTestList.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/services/dbIdUtils.js","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/services/getObjFromRvtModel.js","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/viewUtils/BtnTooltip.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/AdvancedSelect/AdvenceSettings.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/AdvancedSelect/DialogAddCat.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/AdvancedSelect/AdvenceSettingStructure.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/SpatialDiffSettings.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/eventbus.js","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/SpinalTableDiffInfo.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/SpinalTableDel.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/SpinalTableRoomNew.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/SpinalRoomNew.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/BtnGroupViewInViewer.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/SpinalTableRoomUpdate.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/SpinalTableRoomUpdateDetails.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/SpinalTableStructNew.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/ProjectObjectInContext.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/groupConfig/GroupConfig.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/groupConfig/AddAGroupConfig.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/groupConfig/GroupConfigItemBtn.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/SelectedGroup/SelectedGroup.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/SelectedGroup/AddAGroup.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/SelectedGroup/BimGroupsListHeaderBouttons.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/SelectedGroup/BimGroupsItemContent.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/SelectedGroup/BimGroupsItemEdit.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/SelectedGroup/BimGroupsItemEditOffset.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/AssingView/AssingView.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/AssingView/AssingDataView.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/AssingView/AssingDataViewList.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/ProjectBimObj/AssingView/AssignDataViewRoomName.vue","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/index.js","node_modules/spinal-env-viewer-panel-manager-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelManagerService.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelApp.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalMountExtention.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/SpinalForgeExtention.js","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/buttons/generate.js","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/buttons/AddObjectToContext.js","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/buttons/RunGeneration.js","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/buttons/ManualAssingment.js","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/index.js","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/SpinalDiffViewer.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/diffViewer/SpinalDiffFloorViewer.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/CmdRunViewer/index.js","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/CmdRunViewer/CmdRunViewer.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/CmdRunViewer/CmdRunViewerGeo.vue","node_modules/spinal-env-viewer-plugin-generate-spatial-reference/src/views/CmdRunViewer/CmdRunViewerProjection.vue","node_modules/spinal-env-viewer-context-geographic-service/build/constants.js","node_modules/spinal-env-viewer-context-geographic-service/src/constants.ts","node_modules/spinal-models-building-elements/build/index.js","node_modules/spinal-models-building-elements/src/index.js","node_modules/spinal-models-building-elements/build/AbstractElement.js","node_modules/spinal-models-building-elements/src/AbstractElement.js","node_modules/spinal-models-building-elements/build/Utilities.js","node_modules/spinal-models-building-elements/src/Utilities.js","node_modules/spinal-models-building-elements/build/BIMElement.js","node_modules/spinal-models-building-elements/src/BIMElement.js","node_modules/spinal-models-bimobject/build/BIMObject.js","node_modules/spinal-models-bimobject/BIMObject.js"],"sourcesContent":["/*\n * Copyright 2020 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n// import { SpinalMountExtention } from \"spinal-env-viewer-panel-manager-service\";\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\nimport Vue from 'vue';\nimport Vuetify from 'vuetify';\nVue.use(Vuetify);\n\nimport DialogGenerateContext from './src/views/SelectModelModal.vue';\nimport ProjectObjectInContext from \"./src/views/ProjectBimObj/ProjectObjectInContext.vue\";\nimport AssingView from \"./src/views/ProjectBimObj/AssingView/AssingView.vue\";\nimport { SpinalForgeExtention } from \"spinal-env-viewer-panel-manager-service_spinalforgeextention\";\n\nimport { ButtonGenerateContext } from \"./src/buttons/generate\";\nimport { ButtonAddObjectToCategory } from \"./src/buttons/AddObjectToContext\";\nimport { GenerateContextGeo } from \"./src/buttons/RunGeneration\";\nimport { ManualAssingmentButton } from \"./src/buttons/ManualAssingment\";\nimport \"./src/views/diffViewer/index\";\nimport \"./src/views/CmdRunViewer/index\";\nexport const TOP_BAR_HOOK_NAME = 'GraphManagerTopBar';\nconst SIDE_BAR_HOOK_NAME = \"GraphManagerSideBar\";\n\n//export const mure porte fenetere\nspinalContextMenuService.registerApp(TOP_BAR_HOOK_NAME, new ButtonGenerateContext(), [7]);\nspinalContextMenuService.registerApp(SIDE_BAR_HOOK_NAME, new ButtonAddObjectToCategory(), [7]);\nspinalContextMenuService.registerApp(SIDE_BAR_HOOK_NAME, new GenerateContextGeo(), [7]);\nspinalContextMenuService.registerApp(SIDE_BAR_HOOK_NAME, new ManualAssingmentButton(), [7]);\n\nSpinalForgeExtention.registerExtention('DialogGenerateContext', SpinalForgeExtention.createExtention({\n  name: \"DialogGenerateContext\",\n  // Vue.extend to create a Compoment constructor\n  vueMountComponent: Vue.extend(DialogGenerateContext),\n  // where to  append the Compoment\n  parentContainer: document.body,\n\n  panel: {\n    title: \"Generate / Update Spatial context\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"delete\"\n  },\n  style: {\n    left: \"405px\",\n    width: \"700px\",\n    height: '250px'\n  }\n}));\n\n\nSpinalForgeExtention.registerExtention('DialogAddObject', SpinalForgeExtention.createExtention({\n  name: \"DialogAddObject\",\n  // Vue.extend to create a Compoment constructor\n  vueMountComponent: Vue.extend(ProjectObjectInContext),\n  // where to  append the Compoment\n  parentContainer: document.body,\n\n  panel: {\n    title: \"Project objects in context\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"delete\"\n  },\n  style: {\n    left: \"405px\",\n    width: \"400px\",\n    height: '250px'\n  }\n}));\nSpinalForgeExtention.registerExtention('panelManualAssingView', SpinalForgeExtention.createExtention({\n  name: \"panelManualAssingView\",\n  // Vue.extend to create a Compoment constructor\n  vueMountComponent: Vue.extend(AssingView),\n  // where to  append the Compoment\n  parentContainer: document.body,\n\n  panel: {\n    title: \"Manual assignation\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"delete\"\n  },\n  style: {\n    left: \"405px\",\n    width: \"690px\",\n    height: '250px'\n  }\n}));\n;","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalContextMenuService = require(\"./SpinalContextMenuService\");\nconst SpinalContextApp = require(\"./SpinalContextApp\");\nconst Constant = require('./constants');\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalContextMenuService === \"undefined\")\n  G_root.spinal.spinalContextMenuService = new SpinalContextMenuService();\n\nmodule.exports = {\n  constants: Constant,\n  spinalContextMenuService: G_root.spinal.spinalContextMenuService,\n  SpinalContextApp,\n  install(Vue) {\n    Vue.prototype.$spinalContextMenuService =\n      G_root.spinal.spinalContextMenuService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport * as Q from 'q';\nvar debounce = require('lodash.debounce');\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} apps key = hookname, value array of apps\n * @class SpinalContextMenuService\n */\nclass SpinalContextMenuService {\n  /**\n   *Creates an instance of SpinalContextMenuService.\n   * @memberof SpinalContextMenuService\n   */\n  constructor() {\n    this.apps = {};\n    this.promiseByAppProfileId = {};\n    this.appRdy = Q.defer();\n    this.debouncedRdy = debounce(\n      () => {\n        this.appRdy.resolve();\n        this.debouncedRdy = () => {};\n      },\n      1000,\n      { leading: false, trailing: true }\n    );\n  }\n\n  // waitRdy() {\n  //   this.appRdy.promise;\n  // }\n\n  /**\n   * Return true if user has access to this appProfile\n   * @param appProfileId\n   * @return {PromiseLike<boolean > | Promise<boolean>}\n   */\n  async hasUserRight(appProfileId) {\n    this.debouncedRdy();\n    await window.spinal.spinalSystem.init();\n    const path =\n      '/etc/UserProfileDir/' + window.spinal.spinalSystem.getUser().username;\n    const userProfile = await window.spinal.spinalSystem.load(path);\n    let res = false;\n    if (userProfile) {\n      for (let i = 0; i < userProfile.appProfiles.length && !res; i++) {\n        res = ((1 << userProfile.appProfiles[i]) & appProfileId) !== 0;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * method to register the Application to a hook\n   *\n   * @param {string} hookname the place where is application button is located\n   * @param {SpinalContextApp} spinalContextApp the application\n   * @param {number} appProfileId id of the group that can use the application\n   * button\n   * @memberof SpinalContextMenuService\n   */\n  registerApp(hookname, spinalContextApp, appProfileId) {\n    this.debouncedRdy();\n    if (typeof appProfileId === 'undefined') {\n      console.warn(\n        'Deprecated: The usage of this function without the third' +\n          ' parameter appProfileId is deprecated your button is lock for admin' +\n          ' only until you set the third parameter'\n      );\n      appProfileId = 1;\n    }\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      appsInHooks = this.apps[hookname] = [];\n    }\n\n    if (!this.promiseByAppProfileId.hasOwnProperty(appProfileId)) {\n      this.promiseByAppProfileId[appProfileId] =\n        this.hasUserRight(appProfileId);\n    }\n\n    this.promiseByAppProfileId[appProfileId].then((hasAccess) => {\n      // push the app if not exist ans user has access to the button\n      if (hasAccess && appsInHooks.indexOf(spinalContextApp) === -1) {\n        appsInHooks.push(spinalContextApp);\n      }\n    });\n  }\n\n  /**\n   * method to get the applications registered to a hookname\n   *\n   * @param {String} hookname\n   * @param {object} option\n   * @memberof SpinalContextMenuService\n   * @returns {Promise} resolve : [spinalContextApp, ...]; reject: Error\n   */\n  async getApps(hookname, option) {\n    await this.appRdy.promise;\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      return Promise.resolve([]);\n    }\n    let promises = appsInHooks.map(async function (e, idx) {\n      try {\n        const res = await e.isShown(option);\n        return res === -1 ? -1 : e;\n      } catch (error) {\n        console.error(error);\n        return -1;\n      }\n    });\n    try {\n      const appRes = await Promise.all(promises);\n      return appRes.filter((itm) => itm !== -1);\n    } catch (error) {\n      console.error(error);\n      return [];\n    }\n  }\n}\n\nmodule.exports = SpinalContextMenuService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Interface like class to define a Contextual Application button\n * @see https://material.io/tools/icons/?style=baseline for material icons\n *\n * @class SpinalContextApp\n * @property {string} label=notset short name to be shown in the application\n * @property {string} description description of what the Application button do\n * @property {object} buttonCfg Object configuration of the Application button\n * @property {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n * @property {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n * @property {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n * @property {string} buttonCfg.fontColor=#FFFFFF font color of the button\n * @property {objet} [badgeCfg] Object configuration of the Application button badge\n * @property {string} badgeCfg.label string shown in a badge; if empty it's not shown\n * @property {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n * @property {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n */\nclass SpinalContextApp {\n  /**\n   * Creates an instance of SpinalContextApp.\n   * @param {string} label=notset short name to be shown in the application\n   * @param {string} description description of what the Application button do\n   * @param {object} buttonCfg Object configuration of the Application button\n   * @param {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n   * @param {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n   * @param {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n   * @param {string} buttonCfg.fontColor=#FFFFFF font color of the button\n   * @param {objet} [badgeCfg] Object configuration of the Application button badge\n   * @param {string} badgeCfg.label string shown in a badge; if empty it's not shown\n   * @param {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n   * @param {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n   * @memberof SpinalContextApp\n   */\n  constructor(label, description, buttonCfg, badgeCfg = {}) {\n    this.label = label || \"notset\";\n    this.description = description || \"\";\n    this.buttonCfg = {\n      icon: buttonCfg.icon || \"tab\",\n      icon_type: buttonCfg.icon_type || \"in\",\n      backgroundColor: colorHash(buttonCfg.backgroundColor || \"#0000FF\"),\n      fontColor: colorHash(buttonCfg.fontColor || \"#FFFFFF\")\n    };\n\n    this.badgeCfg = {\n      label: badgeCfg.label || \"\",\n      backgroundColor: colorHash(badgeCfg.backgroundColor || \"#FF0000\"),\n      fontColor: colorHash(badgeCfg.fontColor || \"#FFFFFF\")\n    };\n  }\n\n  /**\n   * Method called by `SpinalContextMenuService.getApps`\n   * to filter the Application button to show in the context hook\n   *\n   * @param {object} option\n   * @memberof SpinalContextApp\n   * @returns {Promise} Resolve: not shown if === -1;\n   */\n  isShown(option) {}\n\n  /**\n   * Method to call on click of the application button\n   *\n   * @param {object} option {}\n   * @memberof SpinalContextApp\n   */\n  action(option) {}\n}\n\nmodule.exports = SpinalContextApp;\n\nfunction colorHash(color) {\n  if (color[0] === \"#\") return color;\n  return \"#\" + color;\n}\n","\n\nmodule.exports = {\n  ADMINISTRATEUR: 'ADMINISTRATEUR',\n  MAINTENEUR: 'MAINTENEUR',\n  INTEGRATEUR: 'INTEGRATEUR',\n  ASSET_MANAGEUR: 'ASSET MANAGER',\n};","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-app dark class=\"gen-spatial-body\">\n    <div class=\"gen-spatial-container\">\n      <v-tabs v-show=\"hideDiffSettings\" v-model=\"active\">\n        <v-tab ripple> Basic </v-tab>\n        <v-tab ripple> Advanced </v-tab>\n        <v-tab ripple> Scripts </v-tab>\n        <v-tab-item class=\"spinal-modal-gen-spatial-tab-item\">\n          <Basicselectmodel\n            v-if=\"active === 0\"\n            :bimfiles=\"bimfiles\"\n            :btn-disabled=\"spin\"\n            @continue=\"generate\"\n          >\n          </Basicselectmodel>\n        </v-tab-item>\n        <v-tab-item>\n          <AdvencedSelectModel\n            v-if=\"active === 1\"\n            :bimfiles=\"bimfiles\"\n            :btn-disabled=\"spin\"\n            @onGenerate=\"advancedGenerate\"\n          />\n        </v-tab-item>\n        <v-tab-item>\n          <v-card>\n            <v-card-text>\n              <md-list>\n                <template v-for=\"(item, index) in scripts\">\n                  <template v-if=\"item.divider\">\n                    <md-divider\n                      v-if=\"index !== 0\"\n                      :key=\"`${item.title}-divider`\"\n                    ></md-divider>\n                    <md-subheader :key=\"item.title\">{{\n                      item.title\n                    }}</md-subheader>\n                  </template>\n                  <md-list-item\n                    v-else\n                    :key=\"item.title\"\n                    :disabled=\"spin\"\n                    @click=\"launchFct(item.fct)\"\n                  >\n                    <span class=\"md-list-item-text\">{{ item.title }}</span>\n                  </md-list-item>\n                </template>\n              </md-list>\n            </v-card-text>\n          </v-card>\n        </v-tab-item>\n      </v-tabs>\n      <SpatialDiffSettings\n        v-if=\"!hideDiffSettings\"\n        @back=\"hideDiffSettings = true\"\n        :archiData=\"archiData\"\n        :buildingServerId=\"buildingServId\"\n        :bimFileId=\"bimFileId\"\n      ></SpatialDiffSettings>\n      <md-dialog :md-active.sync=\"showDialog\">\n        <md-dialog-title>Choose which bimFile to update</md-dialog-title>\n        <md-dialog-content>\n          <md-field>\n            <md-select v-model=\"selectedModelModal\" multiple>\n              <md-option\n                v-for=\"bimFileName in bimfiles\"\n                :key=\"bimFileName\"\n                :value=\"bimFileName\"\n                >{{ bimFileName }}</md-option\n              >\n            </md-select>\n          </md-field>\n        </md-dialog-content>\n        <md-dialog-actions>\n          <md-button class=\"md-primary\" @click=\"showDialog = false\"\n            >Close</md-button\n          >\n          <md-button class=\"md-primary\" @click=\"updateDbIdsConfirm\"\n            >confirm</md-button\n          >\n        </md-dialog-actions>\n      </md-dialog>\n      <v-progress-linear\n        v-if=\"spin\"\n        style=\"margin: 0\"\n        class=\"spinal-modal-progress-bar\"\n        :indeterminate=\"true\"\n        color=\"primary\"\n      />\n      <md-snackbar\n        :md-position=\"'center'\"\n        :md-active.sync=\"showSnackbar\"\n        :md-duration=\"durationSnakebar\"\n        md-persistent\n      >\n        <span>{{ msgSnackbar }}</span>\n        <md-button class=\"md-primary\" @click=\"showSnackbar = false\"\n          >close</md-button\n        >\n      </md-snackbar>\n    </div>\n  </v-app>\n</template>\n\n<script>\nimport Basicselectmodel from './BasicSelectModel.vue';\nimport AdvencedSelectModel from './AdvancedSelect/AdvencedSelectModel.vue';\nimport SpatialDiffSettings from './diffViewer/SpatialDiffSettings.vue';\nimport {\n  getGraph,\n  getArchi,\n  transformArchi,\n  updateDbIds,\n  updateRoomDbId,\n  loadBimFile,\n  setLevelInContextGeo,\n  setAreaInContextGeo,\n  setCenterPosInContextGeo,\n  addNodeGraphService,\n  getViewer,\n  loadConfig,\n} from 'spinal-spatial-referential';\nexport default {\n  name: 'DialogGenerateContext',\n  components: { Basicselectmodel, AdvencedSelectModel, SpatialDiffSettings },\n  data: function () {\n    return {\n      models: [],\n      configName: 'default',\n      spin: false,\n      active: 0,\n      hideDiffSettings: true,\n      archiData: null,\n      buildingServId: NaN,\n      selectedModel: null,\n      selectedModelModal: null,\n      showDialog: false,\n      showSnackbar: false,\n      msgSnackbar: '',\n      durationSnakebar: Infinity,\n      scripts: [\n        { divider: true, title: 'Script before update' },\n        { title: 'Update dbids from externalIds', fct: this.updateDbIds },\n        {\n          title: \"Update Room's dbid attribute information\",\n          fct: this.updateRoomDbId,\n        },\n        { divider: true, title: 'Script after update' },\n        {\n          title: 'Set level attribute in context spatial',\n          fct: this.setLevelInContextGeo,\n        },\n        {\n          title: 'Set area attribute in context spatial',\n          fct: this.setAreaInContextGeo,\n        },\n        {\n          title: 'Set center postion attribute in context spatial',\n          fct: this.setCenterPosInContextGeo,\n        },\n      ],\n    };\n  },\n  computed: {\n    bimfiles() {\n      return this.models.map((child) => {\n        return child.info.name.get();\n      });\n    },\n    bimFileId() {\n      const bimFile = this.getBimFile();\n      if (bimFile) return bimFile.info.id.get();\n      return '';\n    },\n  },\n  async mounted() {\n    // this.manager = new SM.default.SpatialManager();\n    const graph = getGraph();\n\n    let context = await graph.getContext('BimFileContext');\n    if (!context) return;\n    addNodeGraphService(context);\n\n    const children = await context.getChildrenInContext(context);\n    for (const child of children) {\n      addNodeGraphService(child);\n      this.models.push(child);\n    }\n  },\n  methods: {\n    updateDbIds() {\n      this.showDialog = true;\n    },\n    async updateDbIdsConfirm() {\n      this.showDialog = false;\n      this.spin = true;\n      const viewer = getViewer();\n      try {\n        for (let i = 0; i < this.models.length; i++) {\n          const bimFileNode = this.models[i];\n          if (this.selectedModelModal.includes(bimFileNode.info.name.get())) {\n            const model = await loadBimFile(bimFileNode, viewer);\n            await updateDbIds(bimFileNode.info.id.get(), model);\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this.spin = false;\n      }\n    },\n\n    updateRoomDbId() {\n      const graph = getGraph();\n      return updateRoomDbId(graph);\n    },\n    setLevelInContextGeo() {\n      const graph = getGraph();\n      return setLevelInContextGeo(graph);\n    },\n    setAreaInContextGeo() {\n      const graph = getGraph();\n      return setAreaInContextGeo(graph);\n    },\n    setCenterPosInContextGeo() {\n      const graph = getGraph();\n      return setCenterPosInContextGeo(graph, this.callbackScript);\n    },\n    callbackScript(msg) {\n      if (!msg || msg === 'done') {\n        this.durationSnakebar = 4000;\n      } else {\n        this.showSnackbar = true;\n        this.durationSnakebar = Infinity;\n      }\n      this.msgSnackbar = msg;\n    },\n    async launchFct(fct) {\n      this.spin = true;\n      try {\n        await fct();\n        console.log('done');\n      } catch (error) {\n        console.error(error);\n      } finally {\n        this.spin = false;\n      }\n    },\n    getBimFile() {\n      for (let i = 0; i < this.models.length; i++) {\n        if (this.models[i].info.name.get() === this.selectedModel) {\n          return this.models[i];\n        }\n      }\n    },\n    async generate(opt) {\n      this.spin = true;\n      const graph = getGraph();\n      try {\n        this.selectedModel = opt.selectedModel;\n        const bimFile = this.getBimFile();\n        const viewer = getViewer();\n        console.log('start load bimfile');\n        const archi = await getArchi(graph, this.configName, bimFile, viewer);\n        transformArchi(archi);\n        console.log('get Archi Done', archi);\n        this.archiData = archi;\n        this.hideDiffSettings = false;\n        this.buildingServId = opt.buildingServId;\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this.spin = false;\n      }\n    },\n    async advancedGenerate(cfg) {\n      const graph = getGraph();\n      const spatialConfig = await loadConfig(graph);\n      spatialConfig.saveConfig(cfg);\n      await this.generate(cfg.basic);\n    },\n    opened() {\n      this.dialog = true;\n    },\n    removed() {},\n    close() {},\n    closeDialog() {},\n  },\n};\n</script>\n\n<style scoped>\n.gen-spatial-body {\n  height: calc(100% - 17px);\n  position: relative;\n}\n.spinal-modal-progress-bar {\n  margin: 0;\n  z-index: 1;\n  position: absolute;\n  bottom: 2px;\n}\n.spinal-modal-gen-spatial-tab,\n.spinal-modal-progress-bar {\n  background: #707070aa;\n}\n.spinal-modal-gen-spatial-btn-footer {\n  background: #222222aa;\n}\n.spinal-modal-gen-spatial-tab-item {\n  max-height: calc(100vh - 325px);\n  overflow-y: auto;\n}\n</style>\n<style>\n.gen-spatial-body > .application--wrap {\n  min-height: 100%;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n}\n.gen-spatial-body * {\n  box-sizing: border-box;\n}\n.gen-spatial-container {\n  height: 100%;\n  position: relative;\n}\n.gen-spatial-container > .v-tabs {\n  height: 100%;\n  position: relative;\n}\n.gen-spatial-container > .v-tabs > .v-window {\n  height: calc(100% - 50px);\n  position: relative;\n  overflow: auto;\n}\n\n.gen-spatial-container > .v-tabs > .v-window::-webkit-scrollbar {\n  width: 5px;\n  height: 5px;\n}\n.gen-spatial-container > .v-tabs > .v-window::-webkit-scrollbar-thumb {\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  background: rgba(169, 169, 169, 0.9);\n}\n.gen-spatial-container > .v-tabs > .v-window::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.3);\n  box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.3);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n}\n\n.spinal-modal-gen-spatial-tab-item > .v-window__container {\n  height: 100%;\n  position: relative;\n}\n.gen-spatial-container\n  > .v-tabs\n  > .v-window\n  > .v-window__container\n  > .v-window-item {\n  height: 100%;\n  position: relative;\n}\n.gen-spatial-container > .v-tabs > .v-tabs__bar {\n  background-color: #2e2e2e;\n}\n.gen-spatial-container .v-window > .v-window__container {\n  height: 100%;\n}\n\n/* .gen-spatial-body > .v-menu__content {\n  top: 52px !important;\n} */\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n<template>\n  <v-card>\n    <v-card-text>\n      <md-field>\n        <label for=\"modelselect\"\n          >Selection of the model that contains the architecture</label\n        >\n        <md-select\n          id=\"modelselect\"\n          v-model=\"selectedModel\"\n          name=\"modelselect\"\n          md-dense\n        >\n          <md-option v-for=\"bimfile in bimfiles\" :value=\"bimfile\">\n            {{ bimfile }}\n          </md-option>\n        </md-select>\n      </md-field>\n      <md-field>\n        <label for=\"building select\">select the building</label>\n        <md-select\n          id=\"building select\"\n          v-model=\"buildingSelectedValue\"\n          name=\"building select\"\n          md-dense\n          class=\"building-select\"\n        >\n          <md-option\n            v-for=\"building in buildings\"\n            :key=\"building.value\"\n            :value=\"building.value\"\n          >\n            {{ building.label }}\n          </md-option>\n        </md-select>\n        <md-button\n          class=\"md-icon-button\"\n          md-dense\n          @click=\"\n            newBuildingValue = '';\n            openDialogNewBuilding = true;\n          \"\n        >\n          <md-icon>add</md-icon>\n        </md-button>\n      </md-field>\n    </v-card-text>\n    <v-card-actions>\n      <v-spacer />\n      <v-btn\n        color=\"green darken-1\"\n        flat\n        :disabled=\"btnDisabledCompu\"\n        @click=\"onContinue\"\n      >\n        {{ btnLabel }}\n      </v-btn>\n    </v-card-actions>\n    <md-dialog-prompt\n      :md-active.sync=\"openDialogNewBuilding\"\n      v-model=\"newBuildingValue\"\n      :md-title=\"title\"\n      md-input-maxlength=\"30\"\n      md-input-placeholder=\"Type the building name...\"\n      md-confirm-text=\"Done\"\n      @md-confirm=\"onAcceptNewBuilding(newBuildingValue)\"\n    />\n  </v-card>\n</template>\n\n<script>\nimport {\n  getContextSpatial,\n  getGraph,\n  waitGetServerId,\n} from 'spinal-spatial-referential';\nimport geoService from 'spinal-env-viewer-context-geographic-service';\n\nexport default {\n  name: 'Basicselectmodel',\n  props: {\n    bimfiles: { require: true, type: Array, default: () => [] },\n    btnLabel: { type: String, default: () => 'Continue' },\n    btnDisabled: { type: Boolean, default: () => false },\n  },\n  data() {\n    return {\n      addLevel: false,\n      selectedModel: null,\n      newBuildingValue: '',\n      manualAssingment: new Map(),\n      openDialogNewBuilding: false,\n      buildings: [],\n      buildingSelectedValue: null,\n    };\n  },\n  computed: {\n    btnDisabledCompu() {\n      return (\n        this.btnDisabled ||\n        this.selectedModel === null ||\n        !this.buildingSelectedValue\n      );\n    },\n  },\n  mounted() {\n    return this.getBuildings();\n  },\n  methods: {\n    onModelSelected(value) {\n      this.selectedModel = value;\n    },\n    async getBuildings() {\n      const graph = getGraph();\n      const contextGeo = await getContextSpatial(graph);\n      const buildings = await contextGeo.getChildrenInContext(contextGeo);\n      this.buildings = buildings.map((itm) => {\n        return {\n          label: itm.info.name.get(),\n          value: itm._server_id,\n        };\n      });\n      if (this.buildings.length === 1)\n        this.buildingSelectedValue = this.buildings[0].value;\n    },\n    async onAcceptNewBuilding(buildingName) {\n      const graph = getGraph();\n      const contextGeo = await getContextSpatial(graph);\n      const node = await geoService.addBuilding(\n        contextGeo.info.id.get(),\n        contextGeo.info.id.get(),\n        buildingName\n      );\n      await waitGetServerId(node);\n      return this.getBuildings();\n    },\n    onContinue() {\n      this.$emit('continue', {\n        buildingServId: this.buildingSelectedValue,\n        selectedModel: this.selectedModel,\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.building-select {\n  align-items: flex-end;\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n<template>\n  <div>\n    <v-stepper\n      v-show=\"!showTestList\"\n      v-model=\"e1\"\n      class=\"advenced-select-model-container spinal-scrollbar\"\n      vertical\n    >\n      <v-stepper-step step=\"1\"> Basic parameters </v-stepper-step>\n      <v-stepper-content step=\"1\">\n        <Basicselectmodel\n          :bimfiles=\"bimfiles\"\n          :btn-label=\"btnLabel\"\n          @continue=\"onBasicSelect\"\n        >\n        </Basicselectmodel>\n      </v-stepper-content>\n\n      <v-stepper-step step=\"2\"> Levels </v-stepper-step>\n      <v-stepper-content step=\"2\">\n        <AdvenceSettings\n          :model-name=\"basic.selectedModel\"\n          :revit-cat=\"['Revit Level']\"\n          @seeList=\"seeTestList\"\n          @continue=\"onLevelSelect\"\n          @cancel=\"onCancel\"\n        />\n      </v-stepper-content>\n\n      <v-stepper-step step=\"3\"> Rooms </v-stepper-step>\n      <v-stepper-content step=\"3\">\n        <AdvenceSettings\n          :model-name=\"basic.selectedModel\"\n          :revit-cat=\"['Revit Pièces', 'Revit Rooms']\"\n          @seeList=\"seeTestList\"\n          @continue=\"onRoomSelect\"\n          @cancel=\"onCancel\"\n        >\n          <v-checkbox\n            v-model=\"isRoomRefOK\"\n            :label=\"`Use Rooms 3D as Reference.`\"\n          />\n          <template v-if=\"isRoomRefOK\">\n            <v-text-field\n              v-model=\"floorRoomNbr\"\n              label=\"Attribut name of the Room's number in the Level.\"\n            />\n            <v-text-field\n              v-model=\"floorRoomName\"\n              label=\"Attribut name to rename the Room\"\n              placeholder=\"Optional\"\n            />\n            <v-text-field\n              v-model=\"floorLevelName\"\n              label=\"Attribut name to rename the Level\"\n              placeholder=\"Optional\"\n            />\n          </template>\n        </AdvenceSettings>\n      </v-stepper-content>\n      <template v-if=\"!isRoomRefOK\">\n        <v-stepper-step step=\"4\">\n          Floors*\n          <small>Optional</small>\n        </v-stepper-step>\n        <v-stepper-content step=\"4\">\n          <AdvenceSettings\n            :model-name=\"basic.selectedModel\"\n            :revit-cat=\"['Revit Sols', 'Revit Floors']\"\n            @seeList=\"seeTestList\"\n            @continue=\"onFloorSelect\"\n            @cancel=\"onCancel\"\n          >\n            <v-text-field\n              v-model=\"floorRoomNbr\"\n              label=\"Attribut name of the Room's number in the Level.\"\n            />\n            <v-text-field\n              v-model=\"floorRoomName\"\n              label=\"Attribut name to rename the Room\"\n              placeholder=\"Optional\"\n            />\n            <v-text-field\n              v-model=\"floorLevelName\"\n              label=\"Attribut name to rename the Level\"\n              placeholder=\"Optional\"\n            />\n          </AdvenceSettings>\n        </v-stepper-content>\n      </template>\n\n      <v-stepper-step :step=\"structureStep\"> Structures </v-stepper-step>\n      <v-stepper-content :step=\"structureStep\">\n        <AdvenceSettingStructure\n          :model-name=\"basic.selectedModel\"\n          @seeList=\"seeTestList\"\n          @continue=\"onStructureSelect\"\n          @cancel=\"onCancel\"\n        />\n      </v-stepper-content>\n      <v-stepper-step :step=\"structureStep + 1\"> Confirm </v-stepper-step>\n      <v-stepper-content :step=\"structureStep + 1\">\n        <v-btn\n          color=\"red darken-1\"\n          flat\n          :disabled=\"btnDisabled\"\n          @click=\"onCancel\"\n        >\n          Cancel\n        </v-btn>\n        <v-btn color=\"primary\" :disabled=\"btnDisabled\" @click=\"onGenerate\">\n          Generate\n        </v-btn>\n      </v-stepper-content>\n    </v-stepper>\n    <div v-if=\"showTestList\" class=\"test-popover spinal-scrollbar\">\n      <ShowTestList\n        :items=\"testItems\"\n        :model-name=\"basic.selectedModel\"\n        @close=\"showTestList = false\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Basicselectmodel from '../BasicSelectModel.vue';\nimport ShowTestList from '../showTestList.vue';\nimport AdvenceSettings from './AdvenceSettings.vue';\nimport AdvenceSettingStructure from './AdvenceSettingStructure.vue';\n\nAdvenceSettings;\nimport {\n  getObjFromRvtModel,\n  getModelByName,\n} from '../../services/getObjFromRvtModel';\n\nexport default {\n  name: 'AdvencedSelectModel',\n  components: {\n    Basicselectmodel,\n    AdvenceSettings,\n    AdvenceSettingStructure,\n    ShowTestList,\n  },\n  props: {\n    bimfiles: { require: true, type: Array, default: () => [] },\n    btnLabel: { type: String, default: () => 'Continue' },\n    btnDisabled: { type: Boolean, default: () => false },\n    configNames: { require: true, type: Array, default: () => [] },\n  },\n  data() {\n    return {\n      firstname: 'test',\n      configName: 'default',\n      advenced: [],\n      e1: 1,\n      isRoomRefOK: true,\n      showTestList: false,\n      basic: {},\n      levelSelect: [],\n      roomSelect: [],\n      floorSelect: [],\n      structureSelect: [],\n      testItems: [],\n      floorRoomNbr: 'Number',\n      floorRoomName: '',\n      floorLevelName: '',\n    };\n  },\n  computed: {\n    structureStep() {\n      return this.isRoomRefOK ? 4 : 5;\n    },\n  },\n  methods: {\n    onCancel() {\n      this.e1 = this.e1 - 1;\n    },\n    onBasicSelect(value) {\n      this.e1 = this.e1 + 1;\n      this.basic = value;\n    },\n    onLevelSelect(value) {\n      this.levelSelect = value;\n      this.e1 = this.e1 + 1;\n    },\n    onRoomSelect(value) {\n      this.roomSelect = value;\n      this.e1 = this.e1 + 1;\n    },\n    onFloorSelect(value) {\n      this.floorSelect = value;\n      this.e1 = this.e1 + 1;\n    },\n    onStructureSelect(value) {\n      this.structureSelect = value;\n      this.e1 = this.e1 + 1;\n    },\n    onGenerate() {\n      const cfg = {\n        configName: this.configName,\n        basic: this.basic,\n        levelSelect: this.createData(this.levelSelect),\n        roomSelect: this.createData(this.roomSelect),\n        structureSelect: this.createData(this.structureSelect),\n      };\n      if (this.isRoomRefOK === false) {\n        Object.assign(cfg, { floorSelect: this.createData(this.floorSelect) });\n      }\n      if (this.floorRoomNbr) {\n        Object.assign(cfg, { floorRoomNbr: this.floorRoomNbr });\n      }\n      if (this.floorRoomName) {\n        Object.assign(cfg, { floorRoomName: this.floorRoomName });\n      }\n      if (this.floorLevelName) {\n        Object.assign(cfg, { floorLevelName: this.floorLevelName });\n      }\n\n      this.$emit('onGenerate', cfg);\n    },\n    createData(lstObj) {\n      const res = [];\n      for (const d of lstObj) {\n        const obj = {\n          key: d.key.toString(),\n          value: d.value.toString(),\n        };\n        if (d.isCat === true) Object.assign(obj, { isCat: true });\n        res.push(obj);\n      }\n      return res;\n    },\n    async seeTestList(dataRegexp) {\n      const model = getModelByName(this.basic.selectedModel);\n      this.testItems = await getObjFromRvtModel(model, dataRegexp);\n      this.showTestList = true;\n    },\n  },\n};\n</script>\n\n<style>\n.advenced-select-model-container {\n  height: 100%;\n  overflow-y: auto;\n}\n.spinal-scrollbar::-webkit-scrollbar {\n  width: 5px;\n  height: 5px;\n}\n.spinal-scrollbar::-webkit-scrollbar-thumb {\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  background: rgba(169, 169, 169, 0.9);\n}\n.spinal-scrollbar::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.3);\n  box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.3);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n}\n</style>\n<style scoped>\n.test-popover {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  overflow-y: auto;\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-card dense>\n    <v-toolbar dark dense>\n      <v-btn icon>\n        <v-icon @click=\"backBtn\"> arrow_back </v-icon>\n      </v-btn>\n\n      <v-toolbar-title v-if=\"itemSelected !== null && openSearch === false\">\n        {{ itemSelected.name }}\n      </v-toolbar-title>\n      <v-spacer />\n      <v-toolbar-title v-if=\"openSearch === true\">\n        <v-text-field\n          v-model=\"searchQuery\"\n          style=\"height: 42px\"\n          placeholder=\"Search\"\n          solo\n          label=\"Search\"\n        />\n      </v-toolbar-title>\n      <v-btn icon @click=\"openSearch = !openSearch\">\n        <v-icon> search </v-icon>\n      </v-btn>\n    </v-toolbar>\n    <v-card-text v-if=\"itemSelected === null\">\n      <v-list two-line subheader dense class=\"showTestListContainer\" dark>\n        <v-list-tile\n          v-for=\"item in itemsCompu\"\n          :key=\"item.dbId\"\n          @click=\"onClick(item)\"\n          @mouseenter=\"onMouseEnter(item)\"\n        >\n          <v-list-tile-content>\n            <v-list-tile-title v-text=\"item.name\" />\n            <v-list-tile-sub-title v-text=\"item.dbId\" />\n          </v-list-tile-content>\n          <v-list-tile-action class=\"action-btn\">\n            <BtnTooltip\n              icon=\"arrow_forward_ios\"\n              tooltip=\"See properties\"\n              @clicked=\"onClickDetails(item)\"\n            />\n          </v-list-tile-action>\n        </v-list-tile>\n      </v-list>\n      <div style=\"text-align: center\">\n        <v-pagination v-model=\"page\" :length=\"pageLen\" />\n      </div>\n    </v-card-text>\n    <v-card-text v-else>\n      <v-data-table\n        :headers=\"header\"\n        :items=\"itemSelected.properties\"\n        :rows-per-page-items=\"rowsPerPage\"\n        :pagination.sync=\"pagination\"\n        class=\"elevation-1\"\n      >\n        <template v-slot:items=\"props\">\n          <td>{{ props.item.displayName }}</td>\n          <td>{{ props.item.displayValue }}</td>\n          <td>{{ props.item.displayCategory }}</td>\n          <td>{{ props.item.attributeName }}</td>\n          <td>{{ props.item.type }}</td>\n          <td>{{ props.item.units }}</td>\n          <td>{{ props.item.hidden }}</td>\n          <td>{{ props.item.precision }}</td>\n        </template>\n      </v-data-table>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nimport {\n  getParamFromDbIds,\n  selectDbId,\n  fitToViewtDbIds,\n} from '../services/dbIdUtils';\nimport { escapeRegExp, getModelByName } from '../services/getObjFromRvtModel';\nimport BtnTooltip from '../viewUtils/BtnTooltip.vue';\n\nconst NBR_ITEMS = 15;\nexport default {\n  name: 'ShowTestList',\n  components: { BtnTooltip },\n  props: {\n    items: { require: true, type: Array, default: () => [] },\n    modelName: { require: true, type: String, default: () => '' },\n  },\n  data() {\n    return {\n      itemsParam: [],\n      itemSelected: null,\n      openSearch: false,\n      searchQuery: '',\n      privPage: 1,\n      header: [\n        { text: 'displayName', value: 'displayName' },\n        { text: 'displayValue', value: 'displayValue' },\n        { text: 'displayCategory', value: 'displayCategory' },\n        { text: 'attributeName', value: 'attributeName' },\n        { text: 'type', value: 'type' },\n        { text: 'units', value: 'units' },\n        { text: 'hidden', value: 'hidden' },\n        { text: 'precision', value: 'precision' },\n      ],\n      rowsPerPage: [\n        10,\n        25,\n        50,\n        100,\n        { text: '$vuetify.dataIterator.rowsPerPageAll', value: -1 },\n      ],\n      pagination: {\n        descending: true,\n        page: 1,\n        rowsPerPage: 25, // -1 for All,\n        sortBy: '',\n        totalItems: 0,\n      },\n    };\n  },\n  computed: {\n    selectedProps() {\n      const res = this.itemSelected.properties.map((e) => {\n        return {\n          displayName: String(e.displayName),\n          displayValue: String(e.displayValue),\n          displayCategory: String(e.displayCategory),\n          attributeName: String(e.attributeName),\n          type: String(e.type),\n          units: String(e.units),\n          hidden: String(e.hidden),\n          precision: String(e.precision),\n        };\n      });\n      return res;\n    },\n    tmpItemsCompu() {\n      if (this.openSearch === true && this.searchQuery !== '') {\n        let query = '';\n        try {\n          query = escapeRegExp(this.searchQuery);\n        } catch (e) {\n          query = this.searchQuery;\n        }\n        const reg = new RegExp(query, 'i');\n        return this.itemsParam.filter((item) => {\n          return reg.test(item.name) || reg.test(item.dbId);\n        });\n      }\n      return this.itemsParam;\n    },\n    itemsCompu() {\n      const idx = (this.page - 1) * NBR_ITEMS;\n      return this.tmpItemsCompu.slice(idx, idx + NBR_ITEMS);\n    },\n    pageLen() {\n      return Math.ceil(this.tmpItemsCompu.length / NBR_ITEMS);\n    },\n    page: {\n      get() {\n        if (this.pageLen < this.privPage) return this.pageLen;\n        return this.privPage;\n      },\n      set(value) {\n        this.privPage = value;\n      },\n    },\n  },\n  async mounted() {\n    if (this.items.length === 0) return;\n    this.model = getModelByName(this.modelName);\n    this.itemsParam = await getParamFromDbIds(this.model, this.items);\n  },\n  methods: {\n    backBtn() {\n      if (this.itemSelected) return (this.itemSelected = null);\n      this.$emit('close');\n    },\n    onClick(value) {\n      fitToViewtDbIds([value.dbId], this.model);\n    },\n    onMouseEnter(value) {\n      selectDbId([value.dbId], this.model);\n    },\n    onClickDetails(value) {\n      this.itemSelected = value;\n    },\n    getProps() {\n      if (this.itemSelected.properties.length === 0) return [];\n      const res = [];\n      for (const key in this.itemSelected.properties[0]) {\n        if (this.itemSelected.properties[0].hasOwnProperty(key)) {\n          res.push(key);\n        }\n      }\n      return res;\n    },\n  },\n};\n</script>\n\n<style>\n.showTestListContainer,\n.showTestListContainer * {\n  text-decoration: none !important;\n  color: white;\n}\n</style>\n<style scoped>\n.action-btn {\n  flex-wrap: wrap;\n}\n</style>\n","/*\n * Copyright 2020 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport debounce from 'lodash.debounce';\n\nexport function getParamFromDbIds(model, dbIds, params = {}) {\n  return new Promise((resolve, reject) => {\n    model.getBulkProperties(dbIds, params, resolve, reject);\n  });\n}\n\nexport function _selectDbId(dbIds, model) {\n  window.spinal.ForgeViewer.viewer.select(dbIds, model);\n}\nexport function fitToViewtDbIds(dbIds, model) {\n  window.spinal.ForgeViewer.viewer.fitToView(dbIds, model);\n}\n\nexport const selectDbId = debounce(_selectDbId, 100);\n","/*\n * Copyright 2020 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n\n/**\n * @param {*} model\n * @param {Array<Object>} cfg\n * @returns\n */\nexport function getObjFromRvtModel(model, cfg) {\n  const data = ['['];\n  for (const d of cfg) {\n    let isCatStr = '';\n    if (d.isCat === true) isCatStr = `, isCat: true`;\n    const str = `{ key: ${d.key.toString()}, value: ${d.value.toString()}${isCatStr}},`;\n    data.push(str);\n  }\n  data.push(']');\n  const fct = `\n    function userFunction(pdb) {\n      const data = ${data.join(\"\")}\n      const attrToWatch = [];\n      const result = [];\n      pdb.enumAttributes(function (i, attrDef) {\n        for (const d of data) {\n          if (\n            (attrDef.displayName && d.key.test(attrDef.displayName)) ||\n            (!attrDef.displayName && d.key.test(attrDef.name)) ||\n              (d.isCat === true && attrDef.category === '__category__' && d.key.test(attrDef.name))\n          ) {\n            attrToWatch.push({\n              id: i,\n              attrDef, d\n            });\n            break;\n          }\n        }\n      });\n      pdb.enumObjects(function (dbId) {\n        let isValid = false;\n        pdb.enumObjectProperties(dbId, function (attrId, valId) {\n          const attr = attrToWatch.find((item) => item.id === attrId);\n          if (!attr) return false;\n          let value = pdb.getAttrValue(attrId, valId);\n          if (attr.d.value.test(value)) {\n            isValid = true;\n            return true;\n          }\n        });\n        if (isValid) result.push(dbId);\n      });\n      return result;\n    }`;\n  return model.getPropertyDb().executeUserFunction(fct);\n}\n\n\nexport function getCatFromRvtModel(model) {\n  const fct = `\n    function userFunction(pdb) {\n      const result = new Set();\n      let idCat = -1\n      pdb.enumAttributes(function (i, attrDef) {\n        if (attrDef.name === 'Category' && attrDef.category === '__category__') {\n          idCat = i;\n        }\n      });\n      if (idCat === -1) return [];\n      pdb.enumObjects(function (dbId) {\n        pdb.enumObjectProperties(dbId, function (attrId, valId) {\n          if (idCat !== attrId) return false;\n          let value = pdb.getAttrValue(attrId, valId);\n          result.add(value);\n          return true;\n        });\n      });\n\n      return Array.from(result);\n    }`;\n  return model.getPropertyDb().executeUserFunction(fct);\n}\n\nexport function escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function createInput(type, name, regflag = \"\") {\n  if (type === 'e') return new RegExp(\"^\" + escapeRegExp(name) + \"$\", regflag);\n  if (type === 'c') return new RegExp(escapeRegExp(name), regflag);\n  if (type === 'r') return new RegExp(name, regflag);\n}\nexport function createCat(value) {\n  return {\n    key: createInput('e', 'Category'),\n    value: createInput('e', value),\n    isCat: true\n  };\n}\n\nexport function getModelByName(name) {\n  if (window.spinal.BimObjectService.mappingNameByModel.hasOwnProperty(name)) {\n    return window.spinal.BimObjectService.mappingNameByModel[name];\n  }\n}\n\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div :id=\"id\">\n    <v-tooltip :attach=\"`#${id}`\" bottom>\n      <template v-slot:activator=\"{ on }\">\n        <v-btn icon ripple v-on=\"on\" @click.stop=\"$emit('clicked', item)\">\n          <v-icon color=\"grey lighten-1\">\n            {{ icon }}\n          </v-icon>\n        </v-btn>\n      </template>\n      <span>{{ tooltip }}</span>\n    </v-tooltip>\n  </div>\n</template>\n\n<script>\nlet nbr = 0;\nexport default {\n  name: 'BtnTooltip',\n  props: {\n    icon: { require: true, type: String, default: () => 'arrow_forward_ios' },\n    tooltip: { require: true, type: String, default: () => '' },\n  },\n  data() {\n    return { id: 'spinal-btn-tooltip' };\n  },\n  mounted() {\n    this.id = this.id + nbr;\n    nbr++;\n  },\n};\n</script>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-card>\n    <v-card-text>\n      <slot />\n      <v-checkbox v-model=\"useCat\" label=\"Use a Category\" />\n      <md-field v-if=\"useCat === true\">\n        <md-select id=\"catLstRes\" v-model=\"catUsed\" name=\"catLstRes\" md-dense>\n          <md-option v-for=\"cat in catLst\" :value=\"cat\">\n            {{ cat }}\n          </md-option>\n        </md-select>\n      </md-field>\n\n      <v-data-table v-if=\"useCat === false\" :headers=\"headers\" :items=\"items\">\n        <template v-slot:items=\"props\">\n          <td>\n            {{\n              printInput(props.item.keyType, props.item.key, props.item.keyFlag)\n            }}\n          </td>\n          <td class=\"text-xs-left\">\n            {{\n              printInput(props.item.valType, props.item.val, props.item.valFlag)\n            }}\n          </td>\n\n          <td class=\"justify-center layout px-0\">\n            <v-icon small class=\"mr-2\" @click=\"editItem(props.item)\">\n              edit\n            </v-icon>\n            <v-icon small @click=\"deleteItem(props.item)\"> delete </v-icon>\n          </td>\n        </template>\n      </v-data-table>\n    </v-card-text>\n    <v-card-actions>\n      <v-btn\n        v-tooltip=\"'test the filter result'\"\n        flat\n        icon\n        :disabled=\"btnDisabledCompu\"\n        @click=\"onSeeList\"\n      >\n        <v-icon>list</v-icon>\n      </v-btn>\n\n      <v-btn\n        v-if=\"useCat === false\"\n        v-tooltip=\"'Add a filter'\"\n        flat\n        icon\n        :disabled=\"btnDisabledCompu\"\n        @click=\"addNewFilter\"\n      >\n        <v-icon>add</v-icon>\n      </v-btn>\n      <v-spacer />\n      <v-btn\n        color=\"red darken-1\"\n        flat\n        :disabled=\"btnDisabledCompu\"\n        @click=\"$emit('cancel')\"\n      >\n        Cancel\n      </v-btn>\n      <v-btn\n        color=\"green darken-1\"\n        flat\n        :disabled=\"btnDisabledCompu\"\n        @click=\"onContinue\"\n      >\n        Continue\n      </v-btn>\n    </v-card-actions>\n    <DialogAddCat\n      v-if=\"selected\"\n      :key-data=\"selected.key\"\n      :key-type=\"selected.keyType\"\n      :key-flag=\"selected.keyFlag\"\n      :val=\"selected.val\"\n      :val-type=\"selected.valType\"\n      :val-flag=\"selected.valFlag\"\n      :open-dialog=\"openDialogAddEdit\"\n      @cancel=\"onEditCancel\"\n      @save=\"onEditSave\"\n    />\n    <v-snackbar\n      v-model=\"snackbarError\"\n      :timeout=\"10000\"\n      absolute\n      :bottom=\"true\"\n    >\n      Error: {{ snackbarMessage }}\n      <v-btn color=\"pink\" flat @click=\"snackbarError = false\"> Close </v-btn>\n    </v-snackbar>\n  </v-card>\n</template>\n\n<script>\nimport {\n  createInput,\n  createCat,\n  getModelByName,\n  getCatFromRvtModel,\n} from '../../services/getObjFromRvtModel';\nimport DialogAddCat from './DialogAddCat.vue';\nexport default {\n  name: 'AdvenceSettings',\n  components: { DialogAddCat },\n  props: {\n    modelName: { require: true, type: String, default: () => '' },\n    revitCat: { type: Array, required: true },\n  },\n  data() {\n    return {\n      useCat: true,\n      catUsed: '',\n      items: [],\n      headers: [\n        {\n          text: 'Name',\n          align: 'left',\n          value: 'key',\n        },\n        { text: 'Value', value: 'val' },\n        { text: 'Actions', value: 'name', sortable: false },\n      ],\n      modalStatus: null,\n      openDialogAddEdit: false,\n      selected: null,\n      snackbarError: false,\n    };\n  },\n  watch: {\n    async modelName() {\n      if (this.modelName) {\n        const model = getModelByName(this.modelName);\n        this.catLst = await getCatFromRvtModel(model);\n        const catLstRes = this.catLst.filter((item) =>\n          this.revitCat.includes(item)\n        );\n        if (catLstRes && catLstRes.length > 0) {\n          this.catUsed = catLstRes[0];\n        }\n      }\n    },\n  },\n  methods: {\n    printInput(keyType, name, flag) {\n      if (keyType === 'e') return name;\n      if (keyType === 'c') return `[${name}]`;\n      if (keyType === 'r') {\n        if (flag) return `/${name}/${flag}`;\n        else return `/${name}/`;\n      }\n    },\n    onContinue() {\n      try {\n        const data = this.createData();\n        this.$emit('continue', data);\n      } catch (e) {\n        console.error(e);\n        this.snackbarMessage = e.message;\n        this.snackbarError = true;\n      }\n    },\n    createData() {\n      const data = [];\n      if (this.useCat === true) data.push(createCat(this.catUsed));\n      for (const item of this.items) {\n        data.push({\n          key: createInput(item.keyType, item.key, item.keyFlag),\n          value: createInput(item.valType, item.val, item.valFlag),\n        });\n      }\n      return data;\n    },\n\n    onSeeList() {\n      try {\n        const data = this.createData();\n        this.$emit('seeList', data);\n      } catch (e) {\n        console.error(e);\n        this.snackbarMessage = e.message;\n        this.snackbarError = true;\n      }\n    },\n    addNewFilter() {\n      this.modalStatus = 'new';\n      this.openDialogAddEdit = true;\n      this.selected = {\n        key: '',\n        keyType: 'e',\n        keyFlag: '',\n        val: '',\n        valType: 'e',\n        valFlag: '',\n      };\n    },\n    editItem(item) {\n      this.modalStatus = 'edit';\n      this.openDialogAddEdit = true;\n      this.selected = item;\n    },\n    deleteItem(item) {\n      const idx = this.items.indexOf(item);\n      if (idx !== -1) this.items.splice(idx, 1);\n    },\n    onEditCancel() {\n      this.openDialogAddEdit = false;\n    },\n    onEditSave(data) {\n      this.openDialogAddEdit = false;\n      if (this.modalStatus === 'new') return this.items.push(data);\n      this.selected.key = data.key;\n      this.selected.keyType = data.keyType;\n      if (data.keyType === 'r') this.selected.keyFlag = data.keyFlag;\n      else this.selected.keyFlag = '';\n\n      this.selected.val = data.val;\n      this.selected.valType = data.valType;\n      if (data.valType === 'r') this.selected.valFlag = data.valFlag;\n      else this.selected.valFlag = '';\n    },\n    save() {},\n    cancel() {},\n    open() {},\n    close() {},\n  },\n};\n</script>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-dialog v-model=\"openDialogCompu\" persistent lazy>\n    <v-card class=\"spinal-model-gen-context-dialog-edit-cat\">\n      <!-- <v-card-title>\n        <span class=\"headline\"></span>\n      </v-card-title> -->\n\n      <v-card-text>\n        <v-container grid-list-md>\n          <v-layout wrap>\n            <v-flex xs12 sm6>\n              <h4>Attribut name</h4>\n              <md-field>\n                <md-select\n                  id=\"selectKeyFlagType\"\n                  v-model=\"selectKeyFlagTypeComp\"\n                  name=\"selectKeyFlagType\"\n                  md-dense\n                >\n                  <md-option v-for=\"item in items\" :value=\"item.name\">\n                    {{ item.name }}\n                  </md-option>\n                </md-select>\n              </md-field>\n\n              <!-- <v-select v-model=\"selectKeyFlagType\"\n                        :items=\"items\"\n                        return-object\n                        item-text=\"name\"\n                        item-value=\"value\" /> -->\n              <div>\n                <v-text-field v-model=\"resultKey\" label=\"Nom\" />\n                <v-text-field\n                  v-if=\"haveKeyFlag\"\n                  v-model=\"resultKeyFlag\"\n                  class=\"input-regex-fleg\"\n                  label=\"indicateur(s)\"\n                />\n              </div>\n            </v-flex>\n            <v-flex xs12 sm6>\n              <h4>Attribut value</h4>\n\n              <md-field>\n                <md-select\n                  id=\"selectValFlagType\"\n                  v-model=\"selectValFlagTypeComp\"\n                  name=\"selectValFlagType\"\n                  md-dense\n                >\n                  <md-option v-for=\"item in items\" :value=\"item.name\">\n                    {{ item.name }}\n                  </md-option>\n                </md-select>\n              </md-field>\n\n              <!-- <v-select v-model=\"selectValFlagType\"\n                        :items=\"items\"\n                        return-object\n                        item-text=\"name\"\n                        item-value=\"value\" /> -->\n\n              <div>\n                <v-text-field v-model=\"resultValue\" label=\"Valeur\" />\n                <v-text-field\n                  v-if=\"haveValFlag\"\n                  v-model=\"resultValFlag\"\n                  class=\"input-regex-fleg\"\n                  label=\"indicateur(s)\"\n                />\n              </div>\n            </v-flex>\n          </v-layout>\n        </v-container>\n      </v-card-text>\n\n      <v-card-actions>\n        <v-spacer />\n        <v-btn color=\"blue darken-1\" flat @click=\"close\"> Cancel </v-btn>\n        <v-btn color=\"blue darken-1\" flat :disabled=\"btnValid\" @click=\"save\">\n          Save\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  name: 'DialogAddCat',\n  props: [\n    'keyData',\n    'keyType',\n    'keyFlag',\n    'val',\n    'valType',\n    'valFlag',\n    'openDialog',\n  ],\n  data() {\n    return {\n      items: [\n        { name: 'Equal', value: 'e' },\n        { name: 'Contains', value: 'c' },\n        { name: 'Advanced (Regular expression)', value: 'r' },\n      ],\n      result_key: null,\n      result_keyFlag: null,\n      result_keyType: null,\n      result_val: null,\n      result_valFlag: null,\n      result_valType: null,\n    };\n  },\n  computed: {\n    selectValFlagTypeComp: {\n      get() {\n        return this.selectValFlagType.name;\n      },\n      set(value) {\n        for (const item of this.items) {\n          if (item.name === value) {\n            this.selectValFlagType = item;\n          }\n        }\n      },\n    },\n    selectKeyFlagTypeComp: {\n      get() {\n        return this.selectKeyFlagType.name;\n      },\n      set(value) {\n        for (const item of this.items) {\n          if (item.name === value) {\n            this.selectKeyFlagType = item;\n          }\n        }\n      },\n    },\n    haveValFlag() {\n      return this.selectValFlagType.value === 'r';\n    },\n    haveKeyFlag() {\n      return this.selectKeyFlagType.value === 'r';\n    },\n    openDialogCompu: {\n      get() {\n        return this.openDialog;\n      },\n      set(value) {\n        if (value) {\n          this.$emit('close');\n        }\n      },\n    },\n    btnValid() {\n      return this.resultValue === '' && this.selectKeyFlagType === '';\n    },\n    selectKeyFlagType: {\n      get() {\n        if (this.result_keyType) {\n          for (const type of this.items) {\n            if (this.result_keyType === type.value) return type;\n          }\n        }\n        if (this.keyType) {\n          for (const type of this.items) {\n            if (this.keyType === type.value) return type;\n          }\n        }\n        return { name: 'Egale', value: 'e' };\n      },\n      set(value) {\n        this.result_keyType = value.value;\n      },\n    },\n    resultKey: {\n      get() {\n        if (this.result_key) return this.result_key;\n        if (this.keyData) return this.keyData;\n        return '';\n      },\n      set(value) {\n        this.result_key = value;\n      },\n    },\n    resultKeyFlag: {\n      get() {\n        if (this.result_keyFlag) return this.result_keyFlag;\n        if (this.keyFlag) return this.keyFlag;\n        return '';\n      },\n      set(value) {\n        this.result_keyFlag = value;\n      },\n    },\n    selectValFlagType: {\n      get() {\n        if (this.result_valType) {\n          for (const type of this.items) {\n            if (this.result_valType === type.value) return type;\n          }\n        }\n        if (this.valType) {\n          for (const type of this.items) {\n            if (this.valType === type.value) return type;\n          }\n        }\n        return { name: 'Egale', value: 'e' };\n      },\n      set(value) {\n        this.result_valType = value.value;\n      },\n    },\n    resultValue: {\n      get() {\n        if (this.result_key) return this.result_val;\n        if (this.val) return this.val;\n        return '';\n      },\n      set(value) {\n        this.result_val = value;\n      },\n    },\n    resultValFlag: {\n      get() {\n        if (this.result_valFlag) return this.result_valFlag;\n        if (this.valFlag) return this.valFlag;\n        return '';\n      },\n      set(value) {\n        this.result_valFlag = value;\n      },\n    },\n  },\n  watch: {\n    openDialog(value) {\n      if (value) {\n        this.result_key = null;\n        this.result_keyFlag = null;\n        this.result_keyType = null;\n        this.result_val = null;\n        this.result_valFlag = null;\n        this.result_valType = null;\n      }\n    },\n  },\n  methods: {\n    close() {\n      this.$emit('cancel');\n    },\n    save() {\n      const res = {\n        key: this.resultKey,\n        keyFlag: this.resultKeyFlag.trim(),\n        keyType: this.selectKeyFlagType.value,\n        val: this.resultValue.trim(),\n        valFlag: this.resultValFlag,\n        valType: this.selectValFlagType.value,\n      };\n      this.$emit('save', res);\n    },\n  },\n};\n</script>\n\n<style>\n.spinal-model-gen-context-dialog-edit-cat {\n  z-index: 99999;\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-card>\n    <v-card-text>\n      <md-field>\n        <label for=\"catLstRes\">Select categories:</label>\n        <md-select\n          id=\"catLstRes\"\n          v-model=\"catLstRes\"\n          name=\"catLstRes\"\n          multiple\n          md-dense\n        >\n          <md-option v-for=\"cat in catLst\" :value=\"cat\">\n            {{ cat }}\n          </md-option>\n        </md-select>\n      </md-field>\n\n      <v-data-table :headers=\"headers\" :items=\"items\">\n        <template v-slot:items=\"props\">\n          <td>\n            {{\n              printInput(props.item.keyType, props.item.key, props.item.keyFlag)\n            }}\n          </td>\n          <td class=\"text-xs-left\">\n            {{\n              printInput(props.item.valType, props.item.val, props.item.valFlag)\n            }}\n          </td>\n\n          <td class=\"justify-center layout px-0\">\n            <v-icon small class=\"mr-2\" @click=\"editItem(props.item)\">\n              edit\n            </v-icon>\n            <v-icon small @click=\"deleteItem(props.item)\"> delete </v-icon>\n          </td>\n        </template>\n      </v-data-table>\n    </v-card-text>\n    <v-card-actions>\n      <v-btn\n        v-tooltip=\"'test the filter result'\"\n        flat\n        icon\n        :disabled=\"btnDisabledCompu\"\n        @click=\"onSeeList\"\n      >\n        <v-icon>list</v-icon>\n      </v-btn>\n\n      <v-btn\n        v-tooltip=\"'Ajouter un flitre'\"\n        flat\n        icon\n        :disabled=\"btnDisabledCompu\"\n        @click=\"addNewFilter\"\n      >\n        <v-icon>add</v-icon>\n      </v-btn>\n      <v-spacer />\n      <v-btn\n        color=\"red darken-1\"\n        flat\n        :disabled=\"btnDisabledCompu\"\n        @click=\"$emit('cancel')\"\n      >\n        Cancel\n      </v-btn>\n      <v-btn\n        color=\"green darken-1\"\n        flat\n        :disabled=\"btnDisabledCompu\"\n        @click=\"onContinue\"\n      >\n        Continue\n      </v-btn>\n    </v-card-actions>\n    <DialogAddCat\n      v-if=\"selected\"\n      :key-data=\"selected.key\"\n      :key-type=\"selected.keyType\"\n      :key-flag=\"selected.keyFlag\"\n      :val=\"selected.val\"\n      :val-type=\"selected.valType\"\n      :val-flag=\"selected.valFlag\"\n      :open-dialog=\"openDialogAddEdit\"\n      @cancel=\"onEditCancel\"\n      @save=\"onEditSave\"\n    />\n    <v-snackbar\n      v-model=\"snackbarError\"\n      :timeout=\"10000\"\n      absolute\n      :bottom=\"true\"\n    >\n      Error: {{ snackbarMessage }}\n      <v-btn color=\"pink\" flat @click=\"snackbarError = false\"> Close </v-btn>\n    </v-snackbar>\n  </v-card>\n</template>\n\n<script>\nimport {\n  createInput,\n  createCat,\n  getModelByName,\n  getCatFromRvtModel,\n} from '../../services/getObjFromRvtModel';\nimport DialogAddCat from './DialogAddCat.vue';\nexport default {\n  name: 'AdvenceSettingStructure',\n  components: { DialogAddCat },\n  props: {\n    modelName: { require: true, type: String, default: () => '' },\n  },\n  data() {\n    return {\n      // useCat: true,\n      catLst: [],\n      catLstRes: [],\n      items: [],\n      headers: [\n        {\n          text: 'Name',\n          align: 'left',\n          value: 'key',\n        },\n        { text: 'Value', value: 'val' },\n        { text: 'Actions', value: 'name', sortable: false },\n      ],\n      modalStatus: null,\n      openDialogAddEdit: false,\n      selected: null,\n      snackbarError: false,\n    };\n  },\n  watch: {\n    async modelName() {\n      if (this.modelName) {\n        const model = getModelByName(this.modelName);\n        this.catLst = await getCatFromRvtModel(model);\n        const register = [\n          'Revit Murs',\n          'Revit Portes',\n          'Revit Fenêtres',\n          'Revit Walls',\n          'Revit Doors',\n          'Revit Windows',\n        ];\n        this.catLstRes = this.catLst.filter((item) => register.includes(item));\n      }\n    },\n  },\n  methods: {\n    printInput(keyType, name, flag) {\n      if (keyType === 'e') return name;\n      if (keyType === 'c') return `[${name}]`;\n      if (keyType === 'r') {\n        if (flag) return `/${name}/${flag}`;\n        else return `/${name}/`;\n      }\n    },\n    onContinue() {\n      try {\n        const data = this.createData();\n        this.$emit('continue', data);\n      } catch (e) {\n        console.error(e);\n        this.snackbarMessage = e.message;\n        this.snackbarError = true;\n      }\n    },\n    createData() {\n      const data = [];\n      for (const catName of this.catLstRes) {\n        data.push(createCat(catName));\n      }\n      for (const item of this.items) {\n        data.push({\n          key: createInput(item.keyType, item.key, item.keyFlag),\n          value: createInput(item.valType, item.val, item.valFlag),\n        });\n      }\n      return data;\n    },\n    onSeeList() {\n      try {\n        const data = this.createData();\n        this.$emit('seeList', data);\n      } catch (e) {\n        console.error(e);\n        this.snackbarMessage = e.message;\n        this.snackbarError = true;\n      }\n    },\n    addNewFilter() {\n      this.modalStatus = 'new';\n      this.openDialogAddEdit = true;\n      this.selected = {\n        key: '',\n        keyType: 'e',\n        keyFlag: '',\n        val: '',\n        valType: 'e',\n        valFlag: '',\n      };\n    },\n    editItem(item) {\n      this.modalStatus = 'edit';\n      this.openDialogAddEdit = true;\n      this.selected = item;\n    },\n    deleteItem(item) {\n      const idx = this.items.indexOf(item);\n      if (idx !== -1) this.items.splice(idx, 1);\n    },\n    onEditCancel() {\n      this.openDialogAddEdit = false;\n    },\n    onEditSave(data) {\n      this.openDialogAddEdit = false;\n      if (this.modalStatus === 'new') return this.items.push(data);\n      this.selected.key = data.key;\n      this.selected.keyType = data.keyType;\n      if (data.keyType === 'r') this.selected.keyFlag = data.keyFlag;\n      else this.selected.keyFlag = '';\n\n      this.selected.val = data.val;\n      this.selected.valType = data.valType;\n      if (data.valType === 'r') this.selected.valFlag = data.valFlag;\n      else this.selected.valFlag = '';\n    },\n    save() {},\n    cancel() {},\n    open() {},\n    close() {},\n  },\n};\n</script>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div class=\"spatial-diff-settings\">\n    <div class=\"spatial-diff-settings-header\">\n      <v-btn dark :icon=\"true\" round @click=\"$emit('back')\">\n        <v-icon>arrow_back</v-icon>\n      </v-btn>\n      <v-spacer></v-spacer>\n      <v-btn elevation=\"2\" icon @click=\"update\">\n        <v-icon>refresh</v-icon>\n      </v-btn>\n    </div>\n    <div class=\"spatial-diff-settings-body spinal-scrollbar\">\n      <v-card v-if=\"modeView === ''\">\n        <v-card-title>\n          <div>\n            <h6 class=\"headline mb-0\">Select an item in the sidebar</h6>\n          </div>\n        </v-card-title>\n      </v-card>\n      <v-card v-if=\"modeView === 'floor'\">\n        <v-card-title>\n          <div class=\"spatial-diff-settings-title-container\">\n            <h6 class=\"headline mb-0\">{{ getFloorName(FAData) }}</h6>\n            <div>{{\n              getModificationType(FAData.floorArchi.properties.modificationType)\n            }}</div>\n          </div>\n          <BtnGroupViewInViewer\n            type=\"floor\"\n            :data=\"FAData.floorArchi\"\n          ></BtnGroupViewInViewer>\n        </v-card-title>\n        <v-card-text>\n          <md-field>\n            <label>Manual assingment selection</label>\n            <md-select\n              v-model=\"manualAssingmentSelection\"\n              md-dense\n              class=\"spinal-md-select\"\n            >\n              <md-option\n                v-for=\"item in manualAssingmentChoice\"\n                :key=\"item.value\"\n                :value=\"item.value\"\n              >\n                {{ item.label }}\n              </md-option>\n            </md-select>\n            <v-btn\n              elevation=\"2\"\n              :disabled=\"\n                manualAssingmentSelection === manualAssingmentSelectionTmp\n              \"\n              icon\n              @click=\"\n                validateAssingment(FAData.floorArchi.properties.externalId)\n              \"\n            >\n              <v-icon>check</v-icon>\n            </v-btn>\n          </md-field>\n          <v-expansion-panel popout>\n            <template v-if=\"FAData.diff\">\n              <!-- diff info -->\n              <SpinalTableDiffInfo\n                :diffInfo=\"FAData.diff.diffInfo.diffInfo\"\n                :diffInfoHeader=\"diffInfoHeader\"\n                :title=\"'Diff Info'\"\n              ></SpinalTableDiffInfo>\n              <!-- diff attr -->\n              <SpinalTableDiffInfo\n                :diffInfo=\"FAData.diff.diffInfo.diffAttr\"\n                :diffInfoHeader=\"diffInfoHeader\"\n                :title=\"'Diff Attributes'\"\n              ></SpinalTableDiffInfo>\n              <!-- diff room del-->\n              <SpinalTableDel\n                :title=\"'Room to be removed'\"\n                :value=\"FAData.diff.diffRoom.delRooms\"\n              ></SpinalTableDel>\n              <!-- diff room new -->\n              <SpinalTableRoomNew\n                :value=\"FAData.diff.diffRoom.newRooms\"\n              ></SpinalTableRoomNew>\n              <!-- diff room update -->\n              <SpinalTableRoomUpdate\n                :value=\"FAData.diff.diffRoom.updateRooms\"\n              ></SpinalTableRoomUpdate>\n              <!-- diff structures del -->\n              <SpinalTableDel\n                :title=\"'Reference Structures to be removed'\"\n                :value=\"FAData.diff.diffRef.delBimObj\"\n              ></SpinalTableDel>\n              <!-- diff structures new -->\n              <SpinalTableStructNew\n                :value=\"FAData.diff.diffRef.newBimObj\"\n              ></SpinalTableStructNew>\n            </template>\n          </v-expansion-panel>\n        </v-card-text>\n      </v-card>\n      <v-card v-if=\"modeView === 'roomupdate'\">\n        <v-card-title>\n          <div class=\"spatial-diff-settings-title-container\">\n            <h6 class=\"headline mb-0\">{{ compuName }}</h6>\n            <div>{{ getModificationType(roomData.modificationType) }}</div>\n          </div>\n          <BtnGroupViewInViewer\n            type=\"roomUpdate\"\n            :data=\"{ roomData, FAData }\"\n          ></BtnGroupViewInViewer>\n        </v-card-title>\n        <v-card-text>\n          <md-field>\n            <label>Manual assingment selection</label>\n            <md-select\n              v-model=\"manualAssingmentSelection\"\n              md-dense\n              class=\"spinal-md-select\"\n            >\n              <md-option\n                v-for=\"item in manualAssingmentChoice\"\n                :key=\"item.value\"\n                :value=\"item.value\"\n              >\n                {{ item.label }}\n              </md-option>\n            </md-select>\n            <v-btn\n              elevation=\"2\"\n              :disabled=\"\n                manualAssingmentSelection === manualAssingmentSelectionTmp\n              \"\n              icon\n              @click=\"validateAssingment(roomData.externalId)\"\n            >\n              <v-icon>check</v-icon>\n            </v-btn>\n          </md-field>\n          <SpinalTableRoomUpdateDetails\n            :value=\"roomData\"\n          ></SpinalTableRoomUpdateDetails>\n        </v-card-text>\n      </v-card>\n      <v-card v-if=\"modeView === 'roomdelete'\">\n        <v-card-text class=\"spinal-diff-room-delete-container\">\n          <v-data-table\n            hide-headers\n            hide-actions\n            :items=\"[\n              { label: 'Name', value: roomData.name },\n              { label: 'Node ID', value: roomData.nodeId },\n              { label: 'Server ID', value: roomData.serverId },\n            ]\"\n            class=\"elevation-1\"\n          >\n            <template v-slot:items=\"props\">\n              <td>{{ props.item.label }}</td>\n              <td>{{ props.item.value }}</td>\n            </template>\n          </v-data-table>\n        </v-card-text>\n      </v-card>\n      <v-card v-if=\"modeView === 'roomnew'\">\n        <SpinalRoomNew :tableData=\"roomData\" v-model=\"selected\">\n          <md-field v-if=\"roomData[0] === selected[0]\">\n            <label>Manual assingment selection</label>\n            <md-select\n              v-model=\"manualAssingmentSelection\"\n              md-dense\n              class=\"spinal-md-select\"\n            >\n              <md-option\n                v-for=\"item in manualAssingmentChoice\"\n                :key=\"item.value\"\n                :value=\"item.value\"\n              >\n                {{ item.label }}\n              </md-option>\n            </md-select>\n            <v-btn\n              elevation=\"2\"\n              :disabled=\"\n                manualAssingmentSelection === manualAssingmentSelectionTmp\n              \"\n              icon\n              @click=\"validateAssingment(selected[0].id)\"\n            >\n              <v-icon>check</v-icon>\n            </v-btn>\n          </md-field>\n        </SpinalRoomNew>\n      </v-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { EModificationType, getGraph } from 'spinal-spatial-referential';\nimport {\n  diffFloorWithContextGeo,\n  getContextSpatial,\n  floorArchiHasChildren,\n} from 'spinal-spatial-referential';\nimport { eventBus } from './eventbus';\nimport SpinalTableDiffInfo from './SpinalTableDiffInfo.vue';\nimport SpinalTableDel from './SpinalTableDel.vue';\nimport SpinalTableRoomNew from './SpinalTableRoomNew.vue';\nimport SpinalTableRoomUpdate from './SpinalTableRoomUpdate.vue';\nimport SpinalTableStructNew from './SpinalTableStructNew.vue';\nimport SpinalTableRoomUpdateDetails from './SpinalTableRoomUpdateDetails.vue';\nimport SpinalRoomNew from './SpinalRoomNew.vue';\nimport { parseUnit } from 'spinal-spatial-referential';\nimport BtnGroupViewInViewer from './BtnGroupViewInViewer.vue';\n\nexport default {\n  name: 'SpatialDiffSettings',\n  props: ['archiData', 'buildingServerId', 'bimFileId'],\n  components: {\n    SpinalTableDiffInfo,\n    SpinalTableDel,\n    SpinalTableRoomNew,\n    SpinalTableRoomUpdate,\n    SpinalTableStructNew,\n    SpinalTableRoomUpdateDetails,\n    SpinalRoomNew,\n    BtnGroupViewInViewer,\n  },\n  data() {\n    this.manualAssingment = new Map();\n    return {\n      modeView: '',\n      FAData: null,\n      roomData: null,\n      manualAssingmentChoice: [],\n      manualAssingmentSelection: 0,\n      manualAssingmentSelectionTmp: 0,\n      diffInfoHeader: [\n        { text: 'Label', align: 'left', value: 'name' },\n        { text: 'New Value', value: 'new' },\n        { text: 'Old value', value: 'old' },\n        { text: 'Unit', value: 'unit' },\n      ],\n      selected: [],\n    };\n  },\n  computed: {\n    compuName() {\n      let name = '';\n      if (this.roomData && this.roomData.diff && this.roomData.diff.diffAttr)\n        for (const attr of this.roomData.diff.diffAttr) {\n          if (attr.label === 'name') name += attr.archiValue;\n          if (attr.label === 'number')\n            name = attr.archiValue.toString() + '-' + name;\n        }\n      return name === '' ? this.roomData.name : name;\n    },\n  },\n  mounted() {\n    spinal.spinalPanelManagerService.openPanel('SpinalDiffViewer');\n    eventBus.$on('selectFloor', this.onSelectFloor);\n    eventBus.$on('selectRoom', this.onSelectRoom);\n    return this.update();\n  },\n  beforDestroy() {\n    eventBus.$off('selectFloor', this.onSelectFloor);\n    eventBus.$off('selectRoom', this.onSelectRoom);\n\n    spinal.spinalPanelManagerService.closePanel('SpinalDiffViewer');\n  },\n  methods: {\n    validateAssingment(extId) {\n      if (this.manualAssingmentSelection === 0) {\n        this.manualAssingment.delete(extId);\n      } else {\n        this.manualAssingment.set(extId, this.manualAssingmentSelection);\n      }\n      return this.update();\n    },\n    getModificationType(modificationType) {\n      if (modificationType & EModificationType.update) return 'update';\n      if (modificationType & EModificationType.delete) return 'delete';\n      if (modificationType & EModificationType.create) return 'new';\n      return 'nothing to do';\n    },\n    getFloorName(FAData) {\n      if (FAData.diff) {\n        if (FAData.diff.diffInfo && FAData.diff.diffInfo.diffInfo) {\n          for (const { label, archiValue } of FAData.diff.diffInfo.diffInfo) {\n            if (label === 'name') return archiValue;\n          }\n        }\n      }\n      for (const { name, value } of FAData.floorArchi.properties.properties) {\n        if (name === 'name') return value;\n      }\n    },\n\n    async onSelectFloor(FAData) {\n      this.modeView = 'floor';\n      this.roomData = null;\n      this.FAData = FAData;\n      const graph = getGraph();\n      const contextGeo = await getContextSpatial(graph);\n      this.manualAssingmentSelection = 0;\n      this.manualAssingmentSelectionTmp = 0;\n      this.manualAssingmentChoice = [{ label: 'none', value: 0 }];\n      const buildings = await contextGeo.getChildrenInContext(contextGeo);\n      const buildingsFloors = await Promise.all(\n        buildings.map((building) => {\n          if (building._server_id === this.buildingServerId)\n            return building.getChildrenInContext(contextGeo);\n        })\n      );\n      const servId = this.manualAssingment.get(\n        FAData.floorArchi.properties.externalId\n      );\n      for (const buildingFloor of buildingsFloors) {\n        if (buildingFloor) {\n          for (const floorNode of buildingFloor) {\n            const data = {\n              label: floorNode.info.name.get(),\n              value: floorNode._server_id,\n            };\n            if (servId === floorNode._server_id) {\n              this.manualAssingmentSelection = data.value;\n              this.manualAssingmentSelectionTmp = data.value;\n            }\n            this.manualAssingmentChoice.push(data);\n          }\n        }\n      }\n    },\n    async onSelectRoom({ FAData, RAData, type }) {\n      this.roomData = null;\n      this.modeView = 'room' + type;\n      this.selected = [];\n      this.FAData = FAData;\n      if (type === 'update') {\n        this.onSelectRoomSetAssing(FAData, RAData.roomArchi.properties);\n        this.roomData = this.getProps(RAData.roomArchi.properties, RAData.diff);\n      } else if (type === 'new') {\n        this.onSelectRoomSetAssing(FAData, RAData.properties);\n        const room = this.getPropsNew(RAData.properties);\n        room.children = [];\n        for (const structure of RAData.children) {\n          const struct = this.getPropsNew(structure);\n          room.children.push(struct);\n        }\n        this.roomData = [room];\n      } else {\n        const node = FileSystem._objects[RAData];\n        this.roomData = {\n          name: node.info.name.get(),\n          nodeId: node.info.id.get(),\n          serverId: RAData,\n        };\n      }\n    },\n    getPropsNew(properties) {\n      const props = {\n        name: '',\n        id: properties.externalId,\n        attr: [\n          { label: 'dbId', value: properties.dbId, unit: '' },\n          {\n            label: 'externalId',\n            value: properties.externalId,\n            unit: '',\n          },\n        ],\n      };\n      for (const attr of properties.properties) {\n        if (attr.name === 'name') props.name += attr.value;\n        if (attr.name === 'level') continue;\n        if (attr.name === 'number')\n          props.name = attr.value.toString() + '-' + props.name;\n        props.attr.push({\n          label: attr.name,\n          value: attr.value,\n          unit: parseUnit(attr.dataTypeContext),\n        });\n      }\n      return props;\n    },\n    getProps(properties, diff) {\n      const props = {\n        name: '',\n        id: properties.externalId,\n        dbId: properties.dbId,\n        externalId: properties.externalId,\n        modificationType: properties.modificationType,\n        diff,\n      };\n      for (const attr of properties.properties) {\n        if (attr.name === 'name') props.name += attr.value;\n        if (attr.name === 'number')\n          props.name = attr.value.toString() + '-' + props.name;\n      }\n      return props;\n    },\n    async onSelectRoomSetAssing(FAData, RADataProperties) {\n      const graph = getGraph();\n      const contextGeo = await getContextSpatial(graph);\n      this.manualAssingmentSelection = 0;\n      this.manualAssingmentSelectionTmp = 0;\n      this.manualAssingmentChoice = [{ label: 'none', value: 0 }];\n      const buildings = await contextGeo.getChildrenInContext(contextGeo);\n      const buildingsFloors = await Promise.all(\n        buildings.map(async (building) => {\n          if (building._server_id === this.buildingServerId) {\n            const floors = await building.getChildrenInContext(contextGeo);\n            for (const floor of floors) {\n              if (\n                floor._server_id ===\n                FAData.floorArchi.properties.spinalnodeServerId\n              ) {\n                return floor.getChildrenInContext(contextGeo);\n              }\n            }\n          }\n        })\n      );\n      let roomServId = this.manualAssingment.get(RADataProperties.externalId);\n      for (const buildingRoom of buildingsFloors) {\n        if (buildingRoom) {\n          for (const roomNode of buildingRoom) {\n            if (!roomNode) continue;\n            const data = {\n              label: roomNode.info.name.get(),\n              value: roomNode._server_id,\n            };\n            if (roomServId === roomNode._server_id) {\n              this.manualAssingmentSelection = data.value;\n              this.manualAssingmentSelectionTmp = data.value;\n            }\n            this.manualAssingmentChoice.push(data);\n          }\n        }\n      }\n    },\n    async update() {\n      if (!this.buildingServerId) return;\n      this.modeView = '';\n      this.roomData = null;\n      const graph = getGraph();\n      const contextGeo = await getContextSpatial(graph);\n      const archiData = [];\n      for (const extId in this.archiData) {\n        if (Object.hasOwnProperty.call(this.archiData, extId)) {\n          const floorArchi = this.archiData[extId];\n          if (floorArchiHasChildren(floorArchi)) {\n            const diff = await diffFloorWithContextGeo(\n              floorArchi,\n              contextGeo,\n              this.buildingServerId,\n              this.manualAssingment\n            );\n            archiData.push({ diff, floorArchi });\n          }\n        }\n      }\n      spinal.spinalPanelManagerService.openPanel('SpinalDiffViewer', {\n        archiData,\n        manualAssingment: this.manualAssingment,\n        buildingServerId: this.buildingServerId,\n        bimFileId: this.bimFileId,\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.spatial-diff-settings {\n  height: 100%;\n  position: relative;\n}\n.spatial-diff-settings-header {\n  background-color: #222;\n  display: flex;\n}\n\n.spatial-diff-settings-body {\n  position: relative;\n  overflow: auto;\n  height: calc(100% - 50px);\n  user-select: text;\n}\n.spinal-md-select {\n  align-items: flex-end;\n}\n.spatial-diff-settings-title-container {\n  flex-grow: 1;\n  margin-right: 16px;\n}\n.plugin-graph-viewer {\n  position: relative;\n}\n.spinal-diff-room-delete-container {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n</style>\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport Vue from 'vue';\nexport const eventBus = new Vue;","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-expansion-panel-content ripple lazy :disabled=\"diffInfo.length === 0\">\n    <template v-slot:header>\n      <div>{{ title }} ({{ diffInfo.length }})</div>\n    </template>\n    <v-card>\n      <v-card-text>\n        <v-data-table\n          :headers=\"diffInfoHeader\"\n          :items=\"diffInfo\"\n          class=\"elevation-1\"\n        >\n          <template v-slot:items=\"props\">\n            <td>{{ props.item.label }}</td>\n            <td>\n              <v-edit-dialog :return-value.sync=\"props.item.archiValue\" lazy>\n                {{ props.item.archiValue }}\n                <template v-slot:input>\n                  <v-text-field\n                    v-model=\"props.item.archiValue\"\n                    label=\"Edit\"\n                    single-line\n                  ></v-text-field>\n                </template>\n              </v-edit-dialog>\n            </td>\n            <td>{{ props.item.nodeValue }}</td>\n            <td>{{ props.item.unit }}</td>\n          </template>\n        </v-data-table>\n      </v-card-text>\n    </v-card>\n  </v-expansion-panel-content>\n</template>\n\n<script>\nexport default {\n  name: 'SpinalTableDiffInfo',\n  props: ['diffInfo', 'diffInfoHeader', 'title'],\n  data() {\n    return {};\n  },\n  methods: {},\n};\n</script>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-expansion-panel-content ripple lazy :disabled=\"dataArr.length === 0\">\n    <template v-slot:header>\n      <div>{{ title }} ({{ dataArr.length }})</div>\n    </template>\n    <v-card>\n      <v-card-text>\n        <v-data-table\n          :headers=\"diffInfoHeader\"\n          :items=\"dataArr\"\n          class=\"elevation-1\"\n        >\n          <template v-slot:items=\"props\">\n            <td>{{ props.item.name }}</td>\n            <td>{{ props.item.nodeId }}</td>\n            <td>{{ props.item.serverId }}</td>\n          </template>\n        </v-data-table>\n      </v-card-text>\n    </v-card>\n  </v-expansion-panel-content>\n</template>\n\n<script>\nimport { FileSystem } from 'spinal-core-connectorjs';\nexport default {\n  name: 'SpinalTableDel',\n  props: ['title', 'value'],\n  data() {\n    return {\n      diffInfoHeader: [\n        { text: 'Name', align: 'left', value: 'name' },\n        { text: 'Node ID', value: 'nodeId' },\n        { text: 'ServerID', value: 'serverId' },\n      ],\n    };\n  },\n  computed: {\n    dataArr() {\n      const res = [];\n      for (const serverId of this.value) {\n        const node = FileSystem._objects[serverId];\n        res.push({\n          name: node.info.name.get(),\n          nodeId: node.info.id.get(),\n          serverId,\n        });\n      }\n      return res;\n    },\n  },\n};\n</script>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-expansion-panel-content ripple lazy :disabled=\"dataTable.length === 0\">\n    <template v-slot:header>\n      <div>Room to be added ({{ dataTable.length }})</div>\n    </template>\n    <SpinalRoomNew :tableData=\"dataTable\" v-model=\"selected\"></SpinalRoomNew>\n  </v-expansion-panel-content>\n</template>\n\n<script>\nimport SpinalRoomNew from './SpinalRoomNew.vue';\n\nimport { parseUnit } from 'spinal-spatial-referential';\nexport default {\n  name: 'SpinalTableRoomNew',\n  props: ['value'],\n  components: {\n    SpinalRoomNew,\n  },\n  data() {\n    return {\n      dataTable: [],\n      selected: [],\n    };\n  },\n  mounted() {\n    this.update();\n  },\n  watch: {\n    value() {\n      this.update();\n    },\n  },\n  methods: {\n    update() {\n      this.dataTable = [];\n      if (this.value)\n        for (const roomArchi of this.value) {\n          const room = getProps(roomArchi.properties);\n          if (this.selected.length === 0) this.selected.push(room);\n          this.dataTable.push(room);\n          room.children = [];\n          for (const structure of roomArchi.children) {\n            const struct = getProps(structure);\n            room.children.push(struct);\n          }\n        }\n    },\n  },\n};\n\nfunction getProps(properties) {\n  const props = {\n    name: '',\n    id: properties.externalId,\n    attr: [\n      { label: 'dbId', value: properties.dbId, unit: '' },\n      {\n        label: 'externalId',\n        value: properties.externalId,\n        unit: '',\n      },\n    ],\n  };\n  for (const attr of properties.properties) {\n    if (attr.name === 'name') props.name += attr.value;\n    if (attr.name === 'level') continue;\n    if (attr.name === 'number')\n      props.name = attr.value.toString() + '-' + props.name;\n    props.attr.push({\n      label: attr.name,\n      value: attr.value,\n      unit: parseUnit(attr.dataTypeContext),\n    });\n  }\n  return props;\n}\n</script>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-layout justify-space-between pa-3>\n    <v-flex xs4 spinal-scrollbar style=\"overflow: auto\">\n      <v-treeview\n        :items=\"tableData\"\n        :active.sync=\"selectedC\"\n        hoverable\n        :open-all=\"true\"\n        return-object\n        activatable\n      ></v-treeview>\n    </v-flex>\n    <v-divider vertical></v-divider>\n    <v-flex d-flex text-xs-center>\n      <v-scroll-y-transition mode=\"out-in\">\n        <div\n          v-if=\"selectedC.length === 0\"\n          class=\"title grey--text text--lighten-1 font-weight-light\"\n          style=\"align-self: center\"\n        >\n          Select an item\n        </div>\n        <v-card v-else class=\"mx-auto\" flat>\n          <div class=\"spinal-diff-room-new-container\">\n            <div>\n              {{ name }}\n            </div>\n            <BtnGroupViewInViewer\n              type=\"roomNew\"\n              :data=\"selectedComp\"\n            ></BtnGroupViewInViewer>\n          </div>\n          <v-card-text>\n            <slot></slot>\n            <v-data-table\n              :headers=\"diffInfoHeader\"\n              :items=\"selectedComp.attr\"\n              class=\"elevation-1\"\n            >\n              <template v-slot:items=\"props\">\n                <td>{{ props.item.label }}</td>\n                <td>{{ props.item.value }}</td>\n                <td>{{ props.item.unit }}</td>\n              </template>\n            </v-data-table>\n          </v-card-text>\n        </v-card>\n      </v-scroll-y-transition>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nimport BtnGroupViewInViewer from './BtnGroupViewInViewer.vue';\n\nexport default {\n  name: 'SpinalRoomNew',\n  props: ['tableData', 'value'],\n  components: {\n    BtnGroupViewInViewer,\n  },\n  data() {\n    return {\n      diffInfoHeader: [\n        { text: 'Name', align: 'left', value: 'name' },\n        { text: 'Value', value: 'value' },\n        { text: 'Unit', value: 'unit' },\n      ],\n    };\n  },\n  computed: {\n    name() {\n      let name = '';\n      if (this.selectedComp)\n        for (const attr of this.selectedComp.attr) {\n          if (attr.label === 'name') name += attr.value;\n          if (attr.label === 'number')\n            name = attr.value.toString() + '-' + name;\n        }\n      return name;\n    },\n    selectedComp() {\n      return this.value[0];\n    },\n    selectedC: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        this.$emit('input', value);\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n.spinal-diff-room-new-container {\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n}\n.spinal-diff-room-new-container div:first-child {\n  flex-grow: 1;\n}\n</style>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div class=\"BtnGroupViewInViewer\">\n    <fieldset>\n      <legend>Structures:</legend>\n      <v-btn\n        circle\n        icon\n        @click=\"onClickSelect($event)\"\n        @click.shift=\"onShiftClickSelect()\"\n      >\n        <v-icon>devices</v-icon>\n      </v-btn>\n      <v-btn circle icon @click=\"onClickFit()\">\n        <v-icon>zoom_in</v-icon>\n      </v-btn>\n      <v-btn\n        circle\n        icon\n        @click=\"onClickIsolate($event)\"\n        @click.shift=\"onShiftClickIsolate()\"\n      >\n        <v-icon>settings_overscan</v-icon>\n      </v-btn>\n    </fieldset>\n    <template v-if=\"type === 'floor'\">\n      <fieldset>\n        <legend>Rooms:</legend>\n        <v-btn\n          circle\n          icon\n          @click=\"onClickSelect($event, true)\"\n          @click.shift=\"onShiftClickSelect(true)\"\n        >\n          <v-icon>devices</v-icon>\n        </v-btn>\n        <v-btn circle icon @click=\"onClickFit(true)\">\n          <v-icon>zoom_in</v-icon>\n        </v-btn>\n        <v-btn\n          circle\n          icon\n          @click=\"onClickIsolate($event, true)\"\n          @click.shift=\"onShiftClickIsolate(true)\"\n        >\n          <v-icon>settings_overscan</v-icon>\n        </v-btn>\n      </fieldset>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { getViewer } from 'spinal-spatial-referential';\n\nexport default {\n  name: 'BtnGroupViewInViewer',\n  props: ['data', 'type'],\n  data() {\n    return {};\n  },\n  methods: {\n    getAttrDbId(arr) {\n      for (const attr of arr) {\n        if (attr.label === 'dbId') return attr.value;\n      }\n    },\n    getDbId(target) {\n      console.log('BtnGroupViewInViewer data', this.data);\n      const dbIds = [];\n      if (this.type === 'floor') {\n        if (!target) {\n          for (const extId in this.data.structures) {\n            if (Object.hasOwnProperty.call(this.data.structures, extId)) {\n              dbIds.push(this.data.structures[extId].properties.dbId);\n            }\n          }\n        } else {\n          for (const extId in this.data.children) {\n            if (\n              this.data.children.hasOwnProperty.call(this.data.children, extId)\n            ) {\n              const room = this.data.children[extId];\n              for (const child of room.children) {\n                dbIds.push(child.dbId);\n              }\n            }\n          }\n        }\n      } else if (this.type === 'roomNew') {\n        const roomDbId = this.getAttrDbId(this.data.attr);\n        if (this.data.children) {\n          for (const roomRef of this.data.children) {\n            const roomRefDbId = this.getAttrDbId(this.data.attr);\n            if (roomRefDbId) dbIds.push(roomRefDbId);\n          }\n        }\n        if (roomDbId) dbIds.push(roomDbId);\n      } else if (this.type === 'roomUpdate') {\n        const FAData = this.data.FAData;\n        const roomData = this.data.roomData;\n        const roomArchi = FAData.floorArchi.children[roomData.externalId];\n        if (roomArchi) {\n          dbIds.push(roomArchi.properties.dbId);\n          for (const child of roomArchi.children) {\n            dbIds.push(child.dbId);\n          }\n        }\n      }\n      return dbIds;\n    },\n    getAggregateDbId(data, targetArray, key) {\n      for (const itm of data) {\n        for (const dbId of itm[key]) {\n          targetArray.push(dbId);\n        }\n      }\n    },\n    onClickSelect(event, targetRoom) {\n      if (event.shiftKey === true) return;\n      const dbIds = this.getDbId(targetRoom);\n      if (dbIds.length === 0) return;\n      const viewer = getViewer();\n      viewer.select(dbIds);\n    },\n    onClickFit(targetRoom) {\n      const dbIds = this.getDbId(targetRoom);\n      if (dbIds.length === 0) return;\n      const viewer = getViewer();\n      viewer.fitToView(dbIds);\n    },\n    onClickIsolate(event, targetRoom) {\n      if (event.shiftKey === true) return;\n      const dbIds = this.getDbId(targetRoom);\n      if (dbIds.length === 0) return;\n      const viewer = getViewer();\n      viewer.isolate(dbIds);\n    },\n    onShiftClickSelect(targetRoom) {\n      const dbIds = this.getDbId(targetRoom);\n      if (dbIds.length === 0) return;\n      const viewer = getViewer();\n      const aggr = viewer.getAggregateSelection();\n      this.getAggregateDbId(aggr, dbIds, 'selection');\n      viewer.select(dbIds);\n    },\n    onShiftClickIsolate(targetRoom) {\n      const dbIds = this.getDbId(targetRoom);\n      if (dbIds.length === 0) return;\n      const viewer = getViewer();\n      const aggr = viewer.getAggregateIsolation();\n      this.getAggregateDbId(aggr, dbIds, 'ids');\n      viewer.isolate(dbIds);\n    },\n  },\n};\n</script>\n<style scoped></style>\n<style>\n.BtnGroupViewInViewer .v-btn {\n  margin: 2px 0;\n}\n.BtnGroupViewInViewer .v-btn:last-child {\n  margin-right: 2px;\n}\n.BtnGroupViewInViewer .v-btn:first-of-type {\n  margin-left: 2px;\n}\n</style>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-expansion-panel-content ripple lazy :disabled=\"dataTable.length === 0\">\n    <template v-slot:header>\n      <div>Room to be updated ({{ dataTable.length }})</div>\n    </template>\n\n    <v-layout justify-space-between pa-3>\n      <v-flex xs4 spinal-scrollbar style=\"overflow: auto\">\n        <v-treeview\n          :items=\"dataTable\"\n          :active.sync=\"selected\"\n          hoverable\n          :open-all=\"true\"\n          return-object\n          activatable\n        ></v-treeview>\n      </v-flex>\n      <v-divider vertical></v-divider>\n      <v-flex d-flex text-xs-center>\n        <v-scroll-y-transition mode=\"out-in\">\n          <div\n            v-if=\"selected.length === 0\"\n            class=\"title grey--text text--lighten-1 font-weight-light\"\n            style=\"align-self: center\"\n          >\n            Select an item\n          </div>\n          <SpinalTableRoomUpdateDetails\n            v-else\n            :value=\"selectedComp\"\n          ></SpinalTableRoomUpdateDetails>\n        </v-scroll-y-transition>\n      </v-flex>\n    </v-layout>\n  </v-expansion-panel-content>\n</template>\n\n<script>\nimport SpinalTableRoomUpdateDetails from './SpinalTableRoomUpdateDetails.vue';\nexport default {\n  name: 'SpinalTableRoomUpdate',\n  props: ['value'],\n  components: { SpinalTableRoomUpdateDetails },\n  data() {\n    return {\n      selected: [],\n      dataTable: [],\n    };\n  },\n  computed: {\n    selectedComp() {\n      return this.selected[0];\n    },\n  },\n  mounted() {\n    this.update();\n  },\n  watch: {\n    value() {\n      this.update();\n    },\n  },\n  methods: {\n    update() {\n      this.dataTable = [];\n      this.selected = [];\n      if (this.value)\n        for (const { roomArchi, diff } of this.value) {\n          const room = getProps(roomArchi.properties, diff);\n          this.dataTable.push(room);\n        }\n    },\n  },\n};\n\nfunction getProps(properties, diff) {\n  const props = {\n    name: '',\n    id: properties.externalId,\n    dbId: properties.dbId,\n    externalId: properties.externalId,\n    diff,\n  };\n  for (const attr of properties.properties) {\n    if (attr.name === 'name') props.name += attr.value;\n    if (attr.name === 'number')\n      props.name = attr.value.toString() + '-' + props.name;\n  }\n  return props;\n}\n</script>\n\n<style scoped>\n.update-basic-info {\n  text-align: left;\n  padding: 0 16px;\n}\n.update-basic-info > p {\n  margin-bottom: 0;\n}\n</style>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n<template>\n  <v-card class=\"mx-auto\" flat>\n    <div class=\"update-basic-info\">\n      <p>name: {{ name }}</p>\n      <p>dbId: {{ value.dbId }}</p>\n      <p>externalId: {{ value.externalId }}</p>\n    </div>\n    <v-card-text>\n      <v-expansion-panel popout>\n        <v-expansion-panel-content\n          ripple\n          lazy\n          :disabled=\"value.diff.diffInfo.length === 0\"\n        >\n          <template v-slot:header>\n            <div>Diff info ({{ value.diff.diffInfo.length }})</div>\n          </template>\n          <v-data-table\n            :headers=\"diffInfoHeader\"\n            :items=\"value.diff.diffInfo\"\n            class=\"elevation-1\"\n          >\n            <template v-slot:items=\"props\">\n              <td>{{ props.item.label }}</td>\n              <td>\n                <v-edit-dialog :return-value.sync=\"props.item.archiValue\" lazy>\n                  {{ props.item.archiValue }}\n                  <template v-slot:input>\n                    <v-text-field\n                      v-model=\"props.item.archiValue\"\n                      label=\"Edit\"\n                      single-line\n                    ></v-text-field>\n                  </template>\n                </v-edit-dialog>\n              </td>\n              <td>{{ props.item.nodeValue }}</td>\n              <td>{{ props.item.unit }}</td>\n            </template>\n          </v-data-table>\n        </v-expansion-panel-content>\n        <v-expansion-panel-content\n          ripple\n          lazy\n          :disabled=\"value.diff.diffAttr.length === 0\"\n        >\n          <template v-slot:header>\n            <div>Diff Attributes ({{ value.diff.diffAttr.length }})</div>\n          </template>\n          <v-data-table\n            :headers=\"diffInfoHeader\"\n            :items=\"value.diff.diffAttr\"\n            class=\"elevation-1\"\n          >\n            <template v-slot:items=\"props\">\n              <td>{{ props.item.label }}</td>\n              <td>\n                <v-edit-dialog :return-value.sync=\"props.item.archiValue\" lazy>\n                  {{ props.item.archiValue }}\n                  <template v-slot:input>\n                    <v-text-field\n                      v-model=\"props.item.archiValue\"\n                      label=\"Edit\"\n                      single-line\n                    ></v-text-field>\n                  </template>\n                </v-edit-dialog>\n              </td>\n              <td>{{ props.item.nodeValue }}</td>\n              <td>{{ props.item.unit }}</td>\n            </template>\n          </v-data-table>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  name: 'SpinalTableRoomUpdateDetails',\n  props: ['value'],\n  data() {\n    return {\n      diffInfoHeader: [\n        { text: 'Name', align: 'left', value: 'name' },\n        { text: 'New Value', value: 'new' },\n        { text: 'Old value', value: 'old' },\n        { text: 'Unit', value: 'unit' },\n      ],\n    };\n  },\n  computed: {\n    name() {\n      let name = '';\n      if (this.value && this.value.diff && this.value.diff.diffAttr)\n        for (const attr of this.value.diff.diffAttr) {\n          if (attr.label === 'name') name += attr.archiValue;\n          if (attr.label === 'number')\n            name = attr.archiValue.toString() + '-' + name;\n        }\n      return name === '' ? this.value.name : name;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.update-basic-info {\n  text-align: left;\n  padding: 0 16px;\n}\n.update-basic-info > p {\n  margin-bottom: 0;\n  user-select: text;\n}\n</style>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-expansion-panel-content ripple lazy :disabled=\"dataTable.length === 0\">\n    <template v-slot:header>\n      <div>Reference Structures to be added ({{ dataTable.length }})</div>\n    </template>\n\n    <v-layout justify-space-between pa-3>\n      <v-flex xs4 spinal-scrollbar style=\"overflow: auto\">\n        <v-treeview\n          :items=\"dataTable\"\n          :active.sync=\"selected\"\n          hoverable\n          :open-all=\"true\"\n          return-object\n          activatable\n        ></v-treeview>\n      </v-flex>\n      <v-divider vertical></v-divider>\n      <v-flex d-flex text-xs-center>\n        <v-scroll-y-transition mode=\"out-in\">\n          <div\n            v-if=\"selected.length === 0\"\n            class=\"title grey--text text--lighten-1 font-weight-light\"\n            style=\"align-self: center\"\n          >\n            Select an item\n          </div>\n          <v-card v-else class=\"mx-auto\" flat>\n            <div>\n              {{ selectedComp.name }}\n            </div>\n            <v-card-text>\n              <v-data-table\n                :headers=\"diffInfoHeader\"\n                :items=\"selectedComp.attr\"\n                class=\"elevation-1\"\n              >\n                <template v-slot:items=\"props\">\n                  <td>{{ props.item.label }}</td>\n                  <td>{{ props.item.value }}</td>\n                  <td>{{ props.item.unit }}</td>\n                </template>\n              </v-data-table>\n            </v-card-text>\n          </v-card>\n        </v-scroll-y-transition>\n      </v-flex>\n    </v-layout>\n  </v-expansion-panel-content>\n</template>\n\n<script>\nimport { parseUnit } from 'spinal-spatial-referential';\nexport default {\n  name: 'SpinalTableStructNew',\n  props: ['value'],\n  data() {\n    return {\n      selected: [],\n      diffInfoHeader: [\n        { text: 'Name', align: 'left', value: 'name' },\n        { text: 'Value', value: 'value' },\n        { text: 'Unit', value: 'unit' },\n      ],\n      dataTable: [],\n    };\n  },\n  computed: {\n    selectedComp() {\n      return this.selected[0];\n    },\n  },\n  mounted() {\n    this.update();\n  },\n  watch: {\n    value() {\n      this.update();\n    },\n  },\n  methods: {\n    update() {\n      this.dataTable = [];\n      this.selected = [];\n      if (this.value)\n        for (const bimobj of this.value) {\n          const obj = getProps(bimobj);\n          this.dataTable.push(obj);\n        }\n    },\n  },\n};\n\nfunction getProps(properties) {\n  const props = {\n    name: '',\n    id: properties.externalId,\n    attr: [\n      { label: 'dbId', value: properties.dbId, unit: '' },\n      {\n        label: 'externalId',\n        value: properties.externalId,\n        unit: '',\n      },\n    ],\n  };\n  for (const attr of properties.properties) {\n    if (attr.name === 'name') props.name = attr.value;\n    if (attr.name === 'level') continue;\n    props.attr.push({\n      label: attr.name,\n      value: attr.value,\n      unit: parseUnit(attr.dataTypeContext),\n    });\n  }\n  return props;\n}\n</script>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-app dark class=\"geolocate-bimObj-body\">\n    <div class=\"geolocate-bimObj-container\">\n      <GroupeConfig\n        v-if=\"selectedGroup === undefined\"\n        :groupConfigs=\"groupConfigs\"\n        @addAGroupConfig=\"addAGroupConfig\"\n        @selectGroup=\"onselectedGroup\"\n        @generate=\"generate\"\n        @save=\"onSave\"\n        @deleteGroup=\"deleteGroup\"\n      ></GroupeConfig>\n      <SelectedGroup\n        v-else\n        :name=\"selectedGroup.name\"\n        :uid=\"selectedGroup.uid\"\n        :list=\"selectedGroup.data\"\n        :can-save=\"cleanCfg\"\n        @save=\"onSave\"\n        @savableCfg=\"cleanCfg = false\"\n        @back=\"selectedGroup = undefined\"\n        @generate=\"generate\"\n      ></SelectedGroup>\n      <v-progress-linear\n        class=\"geolocate-bimObj-progressbar\"\n        v-if=\"progress != 100\"\n        v-model=\"progress\"\n      ></v-progress-linear>\n    </div>\n    <md-snackbar\n      :md-position=\"'center'\"\n      :md-active.sync=\"showSnackbar\"\n      md-persistent\n      class=\"md-accent\"\n    >\n      <span>{{ msgSnackbar }}</span>\n      <md-button class=\"md-primary\" @click=\"showSnackbar = false\"\n        >close</md-button\n      >\n    </md-snackbar>\n  </v-app>\n</template>\n\n<script>\nimport {\n  getProjectionConfig,\n  getRealNode,\n  removeConfigFromContext,\n  createConfigNodeAndProjGroup,\n  getIntersects,\n  mergeIntersectRes,\n  createCmdNotFound,\n  createCmdProjection,\n  saveCmdsProjectionGeo,\n  addNodeGraphService,\n  waitPathSendToHub,\n  getRoomRefByFloor,\n  mergeRoomRef,\n  getRefFloorZMinMax,\n} from 'spinal-spatial-referential';\nimport GroupeConfig from './groupConfig/GroupConfig.vue';\nimport SelectedGroup from './SelectedGroup/SelectedGroup.vue';\n\nexport default {\n  name: 'ProjectObjectInContext',\n  components: { GroupeConfig, SelectedGroup },\n  data() {\n    return {\n      contextId: '',\n      groupConfigs: [],\n      selectedGroup: undefined,\n      cleanCfg: true,\n      progress: 100,\n      errorMode: true,\n      msgSnackbar: '',\n      showSnackbar: false,\n    };\n  },\n  mounted() {},\n  methods: {\n    async addAGroupConfig(groupName) {\n      const context = getRealNode(this.contextId);\n      const cfgGroup = await createConfigNodeAndProjGroup(context, groupName);\n      this.groupConfigs.push(cfgGroup);\n    },\n    async onselectedGroup(select) {\n      this.progress = 0;\n      try {\n        await select.loadConfigNode();\n        this.selectedGroup = select;\n        this.progress = 100;\n      } catch (error) {\n        console.error(error);\n        this.showSnackbar = true;\n        this.msgSnackbar = error.message;\n        this.progress = 100;\n      }\n    },\n    async onSave(configUidToGens) {\n      try {\n        const context = getRealNode(this.contextId);\n        if (!configUidToGens)\n          configUidToGens = this.groupConfigs.map((it) => it.uid);\n        this.progress = 0;\n        for (let idx = 0; idx < configUidToGens.length; idx++) {\n          const group = this.getConfigByUid(configUidToGens[idx]);\n          if (!group) {\n            console.error(\n              `${configUidToGens[idx]} skipped no config found with this uid`\n            );\n            continue;\n          }\n          await group.saveToContext(context);\n          this.progress = (configUidToGens.length / (idx + 1)) * 100;\n        }\n        this.cleanCfg = true;\n      } catch (error) {\n        this.showSnackbar = true;\n        this.msgSnackbar = error.message;\n        console.error(error);\n      } finally {\n        this.progress = 100;\n      }\n    },\n    getConfigByUid(configUidToGen) {\n      for (const cfg of this.groupConfigs) {\n        if (cfg.uid === configUidToGen) return cfg;\n      }\n    },\n    async generate(configUidToGens) {\n      await this.onSave(configUidToGens);\n      this.progress = 0;\n      try {\n        const roomRef = await getRoomRefByFloor();\n        this.progress = 25;\n        const floorsZData = await getRefFloorZMinMax(roomRef);\n        const mergedRoomRef = mergeRoomRef(roomRef);\n        const intersectRes = {\n          selection: [],\n          intersects: [],\n        };\n        for (let idx = 0; idx < configUidToGens.length; idx++) {\n          const configToGen = this.getConfigByUid(configUidToGens[idx]);\n          if (!configToGen) {\n            console.error(\n              `${configUidToGens[idx]} skipped no config found with this uid`\n            );\n            continue;\n          }\n          const intersectResTmp = await getIntersects(\n            configToGen,\n            mergedRoomRef\n          );\n          // merge intersectRes\n          mergeIntersectRes(intersectRes, intersectResTmp);\n          this.progress = (configUidToGens.length / (idx + 1)) * 66;\n          console.log(\n            'raycasting %d% => %d/%d',\n            (configUidToGens.length / (idx + 1)) * 100,\n            idx + 1,\n            configUidToGens.length\n          );\n        }\n        console.log('raycasting', intersectRes);\n        const cmdNotFounds = await createCmdNotFound(intersectRes);\n        console.log('cmdNotFounds', cmdNotFounds);\n        this.progress = 80;\n        const cmdProject = await createCmdProjection(\n          intersectRes.intersects,\n          this.contextId,\n          floorsZData\n        );\n        console.log('cmdProject', cmdProject);\n        this.progress = 90;\n        const cmd = cmdNotFounds.concat(cmdProject);\n        const {\n          node,\n          context: contextCmd,\n          data,\n        } = await saveCmdsProjectionGeo(cmd);\n        addNodeGraphService(node);\n        await waitPathSendToHub(data);\n        console.log('done', cmd);\n        spinal.spinalPanelManagerService.openPanel('CmdRunViewer', {\n          dataCmd: cmd,\n          node,\n          contextId: contextCmd.info.id.get(),\n        });\n      } catch (error) {\n        console.error(error);\n      } finally {\n        this.progress = 100;\n      }\n    },\n    deleteGroup(uid) {\n      const index = this.groupConfigs.findIndex((itm) => itm.uid === uid);\n      if (index !== -1) {\n        const itm = this.groupConfigs[index];\n        this.groupConfigs.splice(index, 1);\n        const context = getRealNode(this.contextId);\n        return removeConfigFromContext(context, itm.uid);\n      }\n    },\n    async getConfig() {\n      this.progress = 0;\n      const context = getRealNode(this.contextId);\n      this.groupConfigs = await getProjectionConfig(context);\n      this.progress = 100;\n    },\n    async opened(contextId) {\n      this.contextId = contextId;\n      return this.getConfig();\n    },\n    removed() {},\n    close() {},\n    closeDialog() {},\n  },\n};\n</script>\n\n<style scoped>\n.geolocate-bimObj-body {\n  height: calc(100% - 17px);\n  position: relative;\n}\n.geolocate-bimObj-container {\n  height: 100%;\n}\n.geolocate-bimObj-progressbar {\n  z-index: 1;\n  position: absolute;\n  bottom: 0;\n  margin: 0;\n}\n</style>\n\n<style>\n.geolocate-bimObj-body > .application--wrap {\n  min-height: 100%;\n  height: 100%;\n}\n.geolocate-bimObj-body * {\n  box-sizing: border-box;\n}\n</style>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div class=\"geolocate-group-config-container\">\n    <v-toolbar class=\"geolocate-group-config-header\" color=\"black\" dark dense>\n      <v-spacer></v-spacer>\n      <AddAGroupConfig @addAGroupConfig=\"addAGroupConfig\"></AddAGroupConfig>\n      <v-btn icon round @click=\"$emit('save')\" color=\"warning\">\n        <v-icon>save</v-icon>\n      </v-btn>\n      <v-btn\n        icon\n        round\n        @click=\"generate\"\n        color=\"success\"\n        :disabled=\"selected.length === 0\"\n      >\n        <v-icon>check</v-icon>\n      </v-btn>\n    </v-toolbar>\n    <div class=\"geolocate-group-config-main\">\n      <md-card class=\"geolocate-group-config-card\">\n        <div class=\"geolocate-group-config-card-content spinal-scrollbar\">\n          <md-list>\n            <md-list-item v-if=\"groupConfigs.length === 0\">\n              <span class=\"md-list-item-text\" style=\"white-space: normal\">\n                No Items in list, add items with the \"+\" button\n              </span>\n            </md-list-item>\n            <md-list-item\n              v-for=\"groupConfig in groupConfigs\"\n              :key=\"groupConfig.uid\"\n              @click=\"$emit('selectGroup', groupConfig)\"\n            >\n              <md-checkbox\n                class=\"geolocate-group-config-card-item-checkbox\"\n                v-model=\"selected\"\n                :value=\"groupConfig.uid\"\n              />\n              <div class=\"md-list-item-text\">\n                <span>{{ groupConfig.name }}</span>\n                <span>{{ countChild(groupConfig) }}</span>\n              </div>\n              <groupConfigItemBtn\n                :uid=\"groupConfig.uid\"\n                @deleteGroup=\"itemDelete = groupConfig\"\n                @showEdit=\"itmEdit = groupConfig\"\n              ></groupConfigItemBtn>\n              <v-progress-linear\n                class=\"geolocate-group-config-card-item-progressbar\"\n                v-if=\"groupConfig.progress != 100\"\n                v-model=\"groupConfig.progress\"\n              ></v-progress-linear>\n            </md-list-item>\n          </md-list>\n        </div>\n      </md-card>\n    </div>\n    <md-dialog-confirm\n      v-if=\"itemDelete\"\n      :md-active.sync=\"showConfirmDelete\"\n      md-title=\"Confirm delete\"\n      md-confirm-text=\"Confirm\"\n      md-cancel-text=\"Cancel\"\n      @md-cancel=\"showConfirmDelete = false\"\n      @md-confirm=\"deleteGroup\"\n    />\n    <md-dialog-prompt\n      v-if=\"itmEdit\"\n      :md-active.sync=\"showEditPrompt\"\n      v-model=\"itmEdit.name\"\n      md-title=\"Edit Name\"\n      md-input-maxlength=\"30\"\n      md-input-placeholder=\"name...\"\n      md-confirm-text=\"Edit\"\n      @md-confirm=\"$emit('savableCfg')\"\n    />\n  </div>\n</template>\n\n<script>\nimport AddAGroupConfig from './AddAGroupConfig.vue';\nimport GroupConfigItemBtn from './GroupConfigItemBtn.vue';\n\nexport default {\n  name: 'groupConfig',\n  components: { AddAGroupConfig, GroupConfigItemBtn },\n  props: ['groupConfigs'],\n  data() {\n    return { show: true, selected: [], itmEdit: null, itemDelete: null };\n  },\n  computed: {\n    showEditPrompt: {\n      get() {\n        return !!this.itmEdit;\n      },\n      set(value) {\n        if (value === false) this.itmEdit = null;\n      },\n    },\n    showConfirmDelete: {\n      get() {\n        return !!this.itemDelete;\n      },\n      set(value) {\n        if (value === false) this.itemDelete = null;\n      },\n    },\n  },\n  methods: {\n    countChild(groupConfig) {\n      if (groupConfig.isLoaded === true) {\n        return 'count : ' + groupConfig.countChild();\n      } else {\n        return '';\n      }\n    },\n    addAGroupConfig(target) {\n      this.$emit('addAGroupConfig', target);\n    },\n    generate() {\n      this.$emit('generate', this.selected);\n    },\n    deleteGroup(uid) {\n      this.$emit('deleteGroup', this.itemDelete.uid);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.geolocate-group-config-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.geolocate-group-config-header {\n  position: relative;\n  overflow: auto;\n}\n.geolocate-group-config-main {\n  height: calc(100% - 48px);\n  position: relative;\n  overflow: auto;\n}\n.geolocate-group-config-card,\n.geolocate-group-config-card-content {\n  height: 100%;\n}\n.geolocate-group-config-card-item-checkbox:first-child {\n  margin-right: 16px;\n}\n.geolocate-group-config-card-item-progressbar {\n  z-index: 1;\n  position: absolute;\n  bottom: 0;\n  margin: 0;\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-dialog v-model=\"show\" width=\"500\" attach=\"body\">\n    <template v-slot:activator=\"{ on }\">\n      <v-btn color=\"indigo\" dark small fab v-on=\"on\">\n        <v-icon dark> add </v-icon>\n      </v-btn>\n    </template>\n    <v-card>\n      <v-card-title class=\"headline\"> Add group config </v-card-title>\n      <v-card-text>\n        <v-text-field\n          v-model=\"groupName\"\n          :counter=\"30\"\n          label=\"Group config name\"\n          required\n        ></v-text-field>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"red darken-1\" flat @click=\"show = false\"> Cancel </v-btn>\n        <v-btn\n          color=\"green darken-1\"\n          flat\n          :disabled=\"canConfirm\"\n          @click=\"onConfirm\"\n        >\n          Confirm\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  name: 'AddAGroupConfig',\n  data() {\n    return {\n      groupName: '',\n      show: false,\n    };\n  },\n  computed: {\n    canConfirm() {\n      return this.groupName.length === 0 || this.groupName.length >= 30;\n    },\n  },\n  watch: {\n    show() {\n      if (this.show === false) this.groupName = '';\n    },\n  },\n  methods: {\n    onConfirm() {\n      this.$emit('addAGroupConfig', this.groupName);\n      this.show = false;\n    },\n  },\n};\n</script>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-speed-dial\n    v-model=\"fab\"\n    direction=\"left\"\n    :open-on-hover=\"true\"\n    transition=\"slide-x-reverse-transition\"\n  >\n    <template v-slot:activator>\n      <v-btn\n        v-model=\"fab\"\n        v-tooltip=\"openOrClose\"\n        color=\"blue darken-2\"\n        small\n        dark\n        fab\n        @click.stop=\"fab = !fab\"\n      >\n        <v-icon>more_vert</v-icon>\n        <v-icon>close</v-icon>\n      </v-btn>\n    </template>\n\n    <v-btn\n      v-tooltip=\"'Edit group'\"\n      fab\n      dark\n      small\n      color=\"orange\"\n      @click.stop=\"callEvent('showEdit')\"\n    >\n      <v-icon>edit</v-icon>\n    </v-btn>\n\n    <v-btn\n      v-tooltip=\"'Delete group'\"\n      fab\n      dark\n      small\n      color=\"red\"\n      @click.stop=\"callEvent('deleteGroup')\"\n    >\n      <v-icon>delete</v-icon>\n    </v-btn>\n  </v-speed-dial>\n</template>\n\n<script>\nexport default {\n  name: 'GroupConfigItemBtn',\n  props: {\n    uid: { required: true, type: String },\n  },\n  data() {\n    return {\n      fab: false,\n    };\n  },\n  computed: {\n    openOrClose() {\n      return this.fab ? 'Close menu' : 'Open  menu';\n    },\n  },\n  methods: {\n    callEvent(eventBtn) {\n      this.$emit(eventBtn, this.uid);\n    },\n  },\n};\n</script>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n<template>\n  <div class=\"geolocate-selected-groupe-container\">\n    <v-toolbar\n      class=\"geolocate-selected-groupe-header\"\n      color=\"black\"\n      dark\n      dense\n    >\n      <v-btn icon @click=\"$emit('back')\"><v-icon>arrow_back</v-icon></v-btn>\n      {{ name }}\n      <v-spacer></v-spacer>\n      <v-btn\n        icon\n        round\n        @click=\"$emit('save', [uid])\"\n        color=\"warning\"\n        :disabled=\"canSave\"\n      >\n        <v-icon>save</v-icon>\n      </v-btn>\n\n      <AddAGroup\n        @addAGroup=\"addAGroup\"\n        @addSelection=\"addSelection\"\n      ></AddAGroup>\n      <v-btn\n        icon\n        :disabled=\"list.length == 0\"\n        color=\"success\"\n        @click=\"generate\"\n      >\n        <v-icon>check</v-icon>\n      </v-btn>\n    </v-toolbar>\n    <div class=\"geolocate-selected-groupe-main\">\n      <md-card class=\"geolocate-groupe-card\">\n        <div class=\"geolocate-groupe-card-content spinal-scrollbar\">\n          <v-list class=\"spinal-project-item-main-list\">\n            <v-list-tile v-if=\"list.length === 0\">\n              <v-list-tile-content>\n                No Items in list, add items with the \"+\" button\n              </v-list-tile-content>\n            </v-list-tile>\n            <template v-for=\"(item, i) in list\">\n              <v-list-group\n                v-if=\"isProjectionGroup(item)\"\n                :key=\"item.uid\"\n                class=\"spinal-project-item-group-item\"\n                no-action\n              >\n                <template v-slot:activator>\n                  <v-list-tile class=\"spinal-project-item-group-item-container\">\n                    <div class=\"spinal-project-item-group-item-arrow-container\">\n                      <v-btn ripple @click.stop=\"up(i)\" :disabled=\"canUp(i)\">\n                        <v-icon> expand_less </v-icon>\n                      </v-btn>\n                      <v-btn\n                        ripple\n                        @click.stop=\"down(i)\"\n                        :disabled=\"canDown(i)\"\n                      >\n                        <v-icon> expand_more </v-icon>\n                      </v-btn>\n                    </div>\n                    <v-list-tile-content>\n                      <v-list-tile-title\n                        class=\"spinal-project-item-group-item-title-container\"\n                      >\n                        <span\n                          v-tooltip=\"item.name\"\n                          class=\"spinal-project-item-group-item-title\"\n                        >\n                          ({{ item.computedData.length }}) {{ item.name }}\n                        </span>\n                      </v-list-tile-title>\n                    </v-list-tile-content>\n                    <v-list-tile-action>\n                      <BimGroupsListHeaderBouttons\n                        :index=\"i\"\n                        @addViewerSelection=\"addViewerSelection\"\n                        @showInViewer=\"showInViewer\"\n                        @showEdit=\"showEdit\"\n                        @deleteGroup=\"deleteGroup\"\n                      >\n                      </BimGroupsListHeaderBouttons>\n                    </v-list-tile-action>\n                  </v-list-tile>\n                </template>\n                <div class=\"spinal-project-item-group-item-content\">\n                  <v-list-tile-content>\n                    <BimGroupsItemContent\n                      :index=\"i\"\n                      :item=\"item.computedData\"\n                      @seeItem=\"showInViewer\"\n                      @deleteItem=\"deleteItemIngroup\"\n                    >\n                    </BimGroupsItemContent>\n                  </v-list-tile-content>\n                </div>\n              </v-list-group>\n\n              <v-list-tile\n                v-else\n                :key=\"item.uid\"\n                class=\"spinal-project-item-group-item-container\"\n              >\n                <div class=\"spinal-project-item-group-item-arrow-container\">\n                  <v-btn ripple @click=\"up(i)\" :disabled=\"canUp(i)\">\n                    <v-icon> expand_less </v-icon>\n                  </v-btn>\n                  <v-btn ripple @click=\"down(i)\" :disabled=\"canDown(i)\">\n                    <v-icon> expand_more </v-icon>\n                  </v-btn>\n                </div>\n\n                <v-list-tile-content\n                  class=\"spinal-project-item-group-item-title-container\"\n                >\n                  <span\n                    v-tooltip=\"item.name\"\n                    class=\"spinal-project-item-group-item-title\"\n                  >\n                    {{ item.name }}\n                  </span>\n                </v-list-tile-content>\n                <v-list-tile-action>\n                  <BimGroupsListHeaderBouttons\n                    :index=\"i\"\n                    :is-item-group=\"false\"\n                    @addViewerSelection=\"addViewerSelection\"\n                    @showInViewer=\"showInViewer\"\n                    @showEdit=\"showEdit\"\n                    @deleteGroup=\"deleteGroup\"\n                  >\n                  </BimGroupsListHeaderBouttons>\n                </v-list-tile-action>\n              </v-list-tile>\n            </template>\n          </v-list>\n        </div>\n      </md-card>\n    </div>\n    <BimGroupsItemEdit\n      :item-to-edit=\"itemToEdit\"\n      @close=\"onCloseEdit\"\n    ></BimGroupsItemEdit>\n  </div>\n</template>\n\n<script>\nimport AddAGroup from './AddAGroup.vue';\nimport BimGroupsListHeaderBouttons from './BimGroupsListHeaderBouttons.vue';\nimport BimGroupsItemContent from './BimGroupsItemContent.vue';\nimport BimGroupsItemEdit from './BimGroupsItemEdit.vue';\nimport {\n  isProjectionGroup,\n  addToProjectionGroup,\n  addSelectionToList,\n  addViewerSelection,\n  getViewer,\n} from 'spinal-spatial-referential';\nexport default {\n  name: 'SelectedGroup',\n  props: ['name', 'uid', 'list', 'canSave'],\n  components: {\n    AddAGroup,\n    BimGroupsListHeaderBouttons,\n    BimGroupsItemContent,\n    BimGroupsItemEdit,\n  },\n  data() {\n    return {\n      itemToEdit: null,\n    };\n  },\n  computed: {},\n  methods: {\n    up(idx) {\n      const itm = this.list[idx];\n      this.list.splice(idx, 1);\n      this.list.splice(idx - 1, 0, itm);\n      this.$emit('savableCfg');\n    },\n    down(idx) {\n      const itm = this.list[idx];\n      this.list.splice(idx, 1);\n      this.list.splice(idx + 1, 0, itm);\n      this.$emit('savableCfg');\n    },\n    canUp(idx) {\n      return idx === 0;\n    },\n    canDown(idx) {\n      return idx === this.list.length - 1;\n    },\n    generate() {\n      this.$emit('generate', [this.uid]);\n    },\n    addSelection() {\n      this.$emit('savableCfg');\n      return addSelectionToList(this.list, getViewer());\n    },\n    addAGroup(groupeName) {\n      this.$emit('savableCfg');\n      addToProjectionGroup(this.list, groupeName);\n    },\n    isProjectionGroup: isProjectionGroup,\n    addViewerSelection(idx) {\n      this.$emit('savableCfg');\n      return addViewerSelection(idx, this.list, getViewer());\n    },\n    showInViewer(index, itm) {\n      const item = this.list[index];\n      const viewer = getViewer();\n      if (isProjectionGroup(item)) {\n        if (typeof itm === 'undefined') item.selectAll(viewer);\n        else item.selectItem(itm, viewer);\n      } else {\n        item.selectItem(viewer);\n      }\n    },\n    deleteItemIngroup(index, itm) {\n      const item = this.list[index];\n      if (isProjectionGroup(item)) {\n        this.$emit('savableCfg');\n        item.deleteItem(itm);\n      }\n    },\n    deleteGroup(index) {\n      this.$emit('savableCfg');\n      this.list.splice(index, 1);\n    },\n    showEdit(index) {\n      const item = this.list[index];\n      this.itemToEdit = item;\n    },\n    onCloseEdit(editItem) {\n      if (editItem) {\n        for (const item of this.list) {\n          if (item.uid === editItem.uid) {\n            item.name = editItem.name;\n            item.offset.r = editItem.offset.r;\n            item.offset.t = editItem.offset.t;\n            item.offset.z = editItem.offset.z;\n            this.$emit('savableCfg');\n            break;\n          }\n        }\n      }\n      this.itemToEdit = null;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.geolocate-selected-groupe-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.geolocate-selected-groupe-header {\n  position: relative;\n  overflow: auto;\n}\n.geolocate-selected-groupe-main {\n  height: calc(100% - 48px);\n  position: relative;\n  overflow: auto;\n}\n.geolocate-groupe-card,\n.geolocate-groupe-card-content {\n  height: 100%;\n}\n.spinal-project-item-group-item-title-container {\n  position: relative;\n}\n.spinal-project-item-group-item-title {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n  overflow: hidden;\n}\n.spinal-project-item-group-item-arrow-container {\n  position: absolute;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  height: 48px;\n}\n.spinal-project-item-group-item-arrow-container > button {\n  margin: 0;\n  padding: 0;\n  height: 24px;\n  min-width: unset;\n}\n</style>\n\n<style>\n.spinal-project-item-group-item-content > .v-list__tile {\n  padding-left: unset !important;\n}\n.spinal-project-item-group-item\n  .spinal-project-item-group-item-container\n  > .v-list__tile {\n  padding-right: 0;\n}\n.spinal-project-item-group-item-container > .v-list__tile {\n  padding-right: 0;\n  padding-left: 32px;\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-dialog v-model=\"show\" attach=\"body\">\n    <template v-slot:activator=\"{ on }\">\n      <v-btn color=\"indigo\" dark small fab v-on=\"on\">\n        <v-icon dark> add </v-icon>\n      </v-btn>\n    </template>\n    <v-card>\n      <v-card-title class=\"headline\"> Add Selection or a Group </v-card-title>\n      <v-card-text>\n        <v-radio-group v-model=\"radioSelection\">\n          <v-radio label=\"Add Selection from 3D Model\" value=\"3d\"></v-radio>\n          <v-radio label=\"Add a Group\" value=\"group\"> </v-radio>\n        </v-radio-group>\n        <v-text-field\n          v-if=\"radioSelection === 'group'\"\n          v-model=\"groupName\"\n          :counter=\"30\"\n          label=\"Group name\"\n          required\n        ></v-text-field>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"red darken-1\" flat @click=\"show = false\"> Cancel </v-btn>\n        <v-btn\n          color=\"green darken-1\"\n          flat\n          :disabled=\"canConfirm\"\n          @click=\"onConfirm\"\n        >\n          Confirm\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  name: 'AddAGroup',\n  props: {},\n  data() {\n    return {\n      groupName: '',\n      show: false,\n      radioSelection: '3d',\n    };\n  },\n  computed: {\n    canConfirm() {\n      if (this.radioSelection === '3d') return false;\n      return this.groupName.length === 0 || this.groupName.length >= 30;\n    },\n  },\n  watch: {\n    show() {\n      if (this.show === false) this.groupName = '';\n    },\n  },\n  methods: {\n    onClick() {\n      this.$refs['dialog-add-a-group'].showModal();\n    },\n    onConfirm() {\n      if (this.radioSelection === '3d') {\n        this.$emit('addSelection');\n      } else {\n        this.$emit('addAGroup', this.groupName);\n      }\n      this.show = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.dialog-add-a-group {\n  z-index: 99;\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-speed-dial\n    v-model=\"fab\"\n    direction=\"left\"\n    :open-on-hover=\"true\"\n    transition=\"slide-x-reverse-transition\"\n  >\n    <template v-slot:activator>\n      <v-btn\n        v-model=\"fab\"\n        v-tooltip=\"openOrClose\"\n        color=\"blue darken-2\"\n        small\n        dark\n        fab\n        @click.stop=\"fab = !fab\"\n      >\n        <v-icon>more_vert</v-icon>\n        <v-icon>close</v-icon>\n      </v-btn>\n    </template>\n    <v-btn\n      v-if=\"isItemGroup\"\n      v-tooltip=\"'Add viewer selections to group'\"\n      fab\n      dark\n      small\n      color=\"indigo\"\n      @click.stop=\"callEvent('addViewerSelection')\"\n    >\n      <v-icon>add</v-icon>\n    </v-btn>\n\n    <v-btn\n      v-tooltip=\"'Show in viewer'\"\n      fab\n      dark\n      small\n      color=\"green\"\n      @click.stop=\"callEvent('showInViewer')\"\n    >\n      <v-icon>remove_red_eye</v-icon>\n    </v-btn>\n\n    <v-btn\n      v-tooltip=\"'Edit group'\"\n      fab\n      dark\n      small\n      color=\"orange\"\n      @click.stop=\"callEvent('showEdit')\"\n    >\n      <v-icon>edit</v-icon>\n    </v-btn>\n\n    <v-btn\n      v-tooltip=\"'Delete group'\"\n      fab\n      dark\n      small\n      color=\"red\"\n      @click.stop=\"callEvent('deleteGroup')\"\n    >\n      <v-icon>delete</v-icon>\n    </v-btn>\n  </v-speed-dial>\n</template>\n\n<script>\nexport default {\n  name: 'BimGroupsListHeaderBouttons',\n  props: {\n    index: { required: true, type: Number },\n    isItemGroup: {\n      required: false,\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      fab: false,\n    };\n  },\n  computed: {\n    openOrClose() {\n      return this.fab ? 'Close menu' : 'Open  menu';\n    },\n  },\n  methods: {\n    callEvent(eventBtn) {\n      this.$emit(eventBtn, this.index);\n    },\n  },\n};\n</script>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div class=\"spinal-bim-groups-item-content\">\n    <v-list class=\"spinal-list-scrollbar\" dense>\n      <v-list-tile v-for=\"itm in pageData\" :key=\"itm.id\" class=\"dbid-list-item\">\n        <v-list-tile-content>\n          <v-list-tile-title>{{ itm.name }}</v-list-tile-title>\n          <v-list-tile-sub-title>{{ itm.dbId }}</v-list-tile-sub-title>\n        </v-list-tile-content>\n        <v-list-tile-action class=\"dbid-list-item-action-btn\">\n          <v-btn icon ripple @click=\"deleteItem(itm)\">\n            <v-icon color=\"red\"> clear </v-icon>\n          </v-btn>\n          <v-btn icon ripple @click=\"seeItem(itm)\">\n            <v-icon color=\"green\"> visibility </v-icon>\n          </v-btn>\n        </v-list-tile-action>\n      </v-list-tile>\n\n      <v-list-tile v-if=\"item.length === 0\">\n        <v-list-tile-content>\n          <v-list-tile-title>No Item in this group</v-list-tile-title>\n        </v-list-tile-content>\n      </v-list-tile>\n    </v-list>\n\n    <v-pagination v-if=\"totalPage > 1\" v-model=\"page\" :length=\"totalPage\" />\n  </div>\n</template>\n\n<script>\nfunction itemValidator(item) {\n  return Array.isArray(item);\n}\n\nexport default {\n  name: 'BimGroupsItemContent',\n  props: {\n    index: {\n      required: true,\n      type: Number,\n    },\n    item: {\n      required: true,\n      type: Array,\n      validator: itemValidator,\n    },\n  },\n  data() {\n    return { page: 1, nbPerPage: 10 };\n  },\n  computed: {\n    pageData() {\n      const idx = (this.page - 1) * this.nbPerPage;\n      return this.item.slice(idx, idx + this.nbPerPage);\n    },\n    totalPage() {\n      return Math.ceil(this.item.length / this.nbPerPage);\n    },\n  },\n  methods: {\n    seeItem(item) {\n      this.$emit('seeItem', this.index, item);\n    },\n    deleteItem(item) {\n      this.$emit('deleteItem', this.index, item);\n    },\n  },\n};\n</script>\n<style scoped>\n.dbid-list-item-action-btn {\n  flex-direction: row;\n}\n.spinal-bim-groups-item-content {\n  text-align: center;\n  width: 100%;\n}\n</style>\n<style>\n.spinal-bim-groups-item-content .v-list__tile {\n  padding-left: 26px;\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n<template>\n  <transition name=\"bim-groups-item-edit-transi\">\n    <div v-if=\"itemToEdit !== null\" class=\"bim-groups-item-edit\">\n      <v-toolbar card color=\"black\" dark>\n        <v-toolbar-title>Edit</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-btn\n          v-tooltip=\"'Cancel'\"\n          dark\n          fab\n          small\n          color=\"red darken-2\"\n          @click=\"onCancel\"\n        >\n          <v-icon>cancel</v-icon>\n        </v-btn>\n        <v-btn\n          v-tooltip=\"'Save'\"\n          dark\n          fab\n          small\n          color=\"blue darken-2\"\n          @click=\"onValid\"\n        >\n          <v-icon>done</v-icon>\n        </v-btn>\n      </v-toolbar>\n      <v-card class=\"bim-groups-item-edit-container spinal-scrollbar\">\n        <v-card-text>\n          <div class=\"bim-groups-edit-name\">\n            <v-text-field v-model=\"name\" label=\"Name\"></v-text-field>\n          </div>\n          <v-expansion-panel class=\"bim-groups-edit-content\">\n            <v-expansion-panel-content>\n              <template v-slot:header>\n                <div>Edit items' calculation point</div>\n              </template>\n              <v-card>\n                <v-card-text>\n                  <BimGroupsItemEditOffset\n                    :offset=\"offset\"\n                    :disabled-preview=\"disabledPreview\"\n                    :mode=\"previewMode\"\n                    @onChange=\"updateOffset\"\n                    @onChangePreview=\"onChangePreview\"\n                  >\n                  </BimGroupsItemEditOffset>\n                </v-card-text>\n              </v-card>\n            </v-expansion-panel-content>\n          </v-expansion-panel>\n        </v-card-text>\n      </v-card>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport BimGroupsItemEditOffset from './BimGroupsItemEditOffset.vue';\nimport {\n  previewItem,\n  stopPreview,\n  getViewer,\n} from 'spinal-spatial-referential';\n\nfunction itemToEditValidator(item) {\n  return (\n    item === null ||\n    (item.offset &&\n      typeof item.offset.r === 'number' &&\n      typeof item.offset.t === 'number' &&\n      typeof item.offset.z === 'number')\n  );\n}\n\nexport default {\n  name: 'BimGroupsItemEdit',\n  components: { BimGroupsItemEditOffset },\n  props: {\n    itemToEdit: { required: true, validator: itemToEditValidator },\n  },\n  data() {\n    return {\n      name: '',\n      offset: { r: 0, t: 0, z: 0 },\n      uid: 0,\n      previewMode: 0,\n    };\n  },\n  conputed: {\n    disabledPreview() {\n      if (this.itemToEdit && Array.isArray(this.itemToEdit.data)) {\n        return this.itemToEdit.data.length === 0;\n      }\n      return false;\n    },\n  },\n  watch: {\n    itemToEdit() {\n      if (this.itemToEdit) {\n        this.name = this.itemToEdit.name;\n        this.offset.r = this.itemToEdit.offset.r;\n        this.offset.t = this.itemToEdit.offset.t;\n        this.offset.z = this.itemToEdit.offset.z;\n        this.uid = this.itemToEdit.uid;\n        this.previewMode = 0;\n      }\n    },\n  },\n  mounted() {},\n  methods: {\n    updateOffset(offset) {\n      console.log(offset);\n      if (isNaN(offset.r) || isNaN(offset.t) || isNaN(offset.z)) return;\n      this.offset.r = offset.r;\n      this.offset.t = offset.t;\n      this.offset.z = offset.z;\n      this.preview();\n    },\n    onChangePreview(mode) {\n      this.previewMode = mode;\n      this.preview();\n    },\n    preview() {\n      const viewer = getViewer();\n      previewItem(this.itemToEdit, this.offset, this.previewMode, viewer);\n    },\n\n    onCancel() {\n      const viewer = getViewer();\n      stopPreview(viewer);\n      this.$emit('close');\n    },\n    onValid() {\n      const viewer = getViewer();\n      stopPreview(viewer);\n      this.$emit('close', {\n        name: this.name,\n        offset: this.offset,\n        uid: this.uid,\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.bim-groups-item-edit {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n  background-color: rgb(34, 34, 34);\n  opacity: 1;\n  z-index: 2;\n}\n.bim-groups-item-edit-container {\n  position: relative;\n  height: calc(100% - 56px);\n  overflow: auto;\n}\n\n.bim-groups-edit-name {\n  padding-left: 12px;\n  padding-right: 12px;\n}\n\n.bim-groups-item-edit-transi-enter-active {\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n}\n.bim-groups-item-edit-transi-enter,\n.bim-groups-item-edit-transi-leave-to {\n  opacity: 0;\n  transform: translateX(-1em);\n  min-width: unset;\n}\n.bim-groups-item-edit-transi-enter-to,\n.bim-groups-item-edit-transi-leave-to {\n  opacity: 1;\n  transform: translateX(0);\n  min-width: unset;\n}\n</style>\n\n<style>\n.bim-groups-edit-content .v-expansion-panel__header {\n  flex-direction: row-reverse;\n  padding: 0 5px 0 0;\n}\n.bim-groups-edit-content .v-expansion-panel__header:hover {\n  background-color: rgba(25, 25, 25, 0.2);\n}\n.bim-groups-edit-content\n  .v-expansion-panel__header\n  .v-expansion-panel__header__icon {\n  margin: 0 5px;\n}\n.bim-groups-edit-content .v-expansion-panel__header .bim-groups-item-header {\n  flex-direction: row;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n<template>\n  <v-container class=\"bim-groups-item-edit-offset\" fluid grid-list-lg>\n    <v-layout col align-center justify-center align-content-center wrap>\n      <input\n        type=\"color\"\n        class=\"bim-groups-item-edit-offset-color\"\n        name=\"color\"\n        v-tooltip=\"'Preview color'\"\n        v-model=\"color\"\n      />\n\n      <v-btn-toggle v-model=\"toggleView\" mandatory>\n        <v-btn\n          v-tooltip=\"'Disable preview'\"\n          :disabled=\"disabledPreview\"\n          flat\n          @click=\"$emit('onChangePreview', 0)\"\n        >\n          <v-icon>visibility_off</v-icon>\n        </v-btn>\n        <v-btn\n          v-tooltip=\"'Preview only the 1st Object'\"\n          flat\n          :disabled=\"disabledPreview\"\n          @click=\"$emit('onChangePreview', 1)\"\n        >\n          <v-icon>hdr_strong</v-icon>\n        </v-btn>\n        <v-btn\n          v-tooltip=\"'Preview all Objects'\"\n          flat\n          :disabled=\"disabledPreview\"\n          @click=\"$emit('onChangePreview', 2)\"\n        >\n          <v-icon>grain</v-icon>\n        </v-btn>\n      </v-btn-toggle>\n    </v-layout>\n    <v-layout row wrap>\n      <v-flex xs9>\n        <v-slider\n          v-model=\"_r\"\n          :step=\"0.1\"\n          :max=\"50\"\n          :min=\"-50\"\n          label=\"R\"\n        ></v-slider>\n      </v-flex>\n\n      <v-flex xs3>\n        <v-text-field v-model=\"_r\" class=\"mt-0\" type=\"number\"></v-text-field>\n      </v-flex>\n\n      <v-flex xs9>\n        <v-slider v-model=\"_t\" :step=\"1\" :max=\"360\" label=\"T\"></v-slider>\n      </v-flex>\n\n      <v-flex xs3>\n        <v-text-field v-model=\"_t\" class=\"mt-0\" type=\"number\"></v-text-field>\n      </v-flex>\n\n      <v-flex xs9>\n        <v-slider\n          v-model=\"_z\"\n          :step=\"0.1\"\n          :max=\"50\"\n          :min=\"-50\"\n          label=\"Z\"\n        ></v-slider>\n      </v-flex>\n\n      <v-flex xs3>\n        <v-text-field v-model=\"_z\" class=\"mt-0\" type=\"number\"></v-text-field>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nfunction rtzValidator(item) {\n  return (\n    typeof item.r === 'number' &&\n    typeof item.t === 'number' &&\n    typeof item.z === 'number'\n  );\n}\n\nimport throttle from 'lodash.throttle';\nimport { getColorPreview, setColorPreview } from 'spinal-spatial-referential';\nexport default {\n  name: 'BimGroupsItemEditOffset',\n  props: {\n    offset: { required: true, type: Object, validator: rtzValidator },\n    disabledPreview: { required: true, type: Boolean, default: () => false },\n  },\n  data() {\n    return {\n      toggleView: 0,\n      tmp: { r: 0, t: 0, z: 0 },\n    };\n  },\n  computed: {\n    color: {\n      get() {\n        return getColorPreview();\n      },\n      set(value) {\n        setColorPreview(value);\n      },\n    },\n    _r: {\n      get() {\n        return this.offset.r;\n      },\n      set(value) {\n        this.tmp.r = value;\n        return this.onChangeTrottle();\n      },\n    },\n    _t: {\n      get() {\n        return this.offset.t;\n      },\n      set(value) {\n        this.tmp.t = value;\n        return this.onChangeTrottle();\n      },\n    },\n    _z: {\n      get() {\n        return this.offset.z;\n      },\n      set(value) {\n        this.tmp.z = value;\n        return this.onChangeTrottle();\n      },\n    },\n  },\n  watch: {\n    offset() {\n      this.tmp.r = this.offset.r;\n      this.tmp.t = this.offset.t;\n      this.tmp.z = this.offset.z;\n    },\n  },\n  mounted() {\n    this.onChangeTrottle = throttle(this.onChange.bind(this), 500, {\n      leading: false,\n    });\n  },\n  methods: {\n    onChange() {\n      this.$emit('onChange', {\n        r: parseFloat(this.tmp.r),\n        t: parseInt(this.tmp.t, 10),\n        z: parseFloat(this.tmp.z),\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.bim-groups-item-edit-offset,\n.bim-groups-item-edit-offset * {\n  padding-bottom: 0 !important;\n  padding-top: 0 !important;\n}\n.bim-groups-item-edit-offset-color {\n  height: 36px;\n  width: 34px;\n  margin-right: 8px;\n  cursor: pointer;\n  border-radius: 3px;\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-app dark class=\"manual-assign-projection-body\">\n    <v-toolbar dense dark>\n      <v-btn\n        v-tooltip=\"'import floor to search bar'\"\n        icon\n        @click=\"importFloorToSearch\"\n      >\n        <v-icon>image_search</v-icon>\n      </v-btn>\n      <v-spacer></v-spacer>\n      <v-btn icon @click=\"generate\">\n        <v-icon>check</v-icon>\n      </v-btn>\n    </v-toolbar>\n    <div class=\"manual-assign-projection-container\">\n      <div class=\"manual-assign-projection-spatial-container\">\n        <v-text-field\n          v-model=\"search\"\n          label=\"search\"\n          dark\n          flat\n          hide-details\n          clearable\n          clear-icon=\"clear\"\n        ></v-text-field>\n        <div\n          class=\"manual-assign-projection-treeview-container spinal-scrollbar\"\n        >\n          <v-treeview\n            v-if=\"spatial.length > 0\"\n            ref=\"assingTree\"\n            :items=\"spatial\"\n            activatable\n            active-class=\"manual-assign-projection-treeview-item-active\"\n            :active.sync=\"selectedSpatial\"\n            open-all\n            :search=\"search\"\n            return-object\n            transition\n          >\n          </v-treeview>\n        </div>\n      </div>\n      <div class=\"manual-assign-projection-list-container spinal-scrollbar\">\n        <AssingDataView\n          ref=\"assingDataView\"\n          :roomSelected=\"selectedSpatialIdCompu\"\n          :contextId=\"contextId\"\n          :selectedNodeId=\"selectedNodeId\"\n          @roomSelect=\"onRoomSelect\"\n        ></AssingDataView>\n      </div>\n    </div>\n  </v-app>\n</template>\n\n<script>\nimport {\n  getSpatialTree,\n  getRoomNodeFromSelectFloor,\n} from 'spinal-spatial-referential';\nimport AssingDataView from './AssingDataView.vue';\n\nexport default {\n  name: 'AssingView',\n  components: { AssingDataView },\n  data() {\n    return {\n      search: '',\n      contextId: '',\n      selectedNodeId: '',\n      spatial: [],\n      selectedSpatial: [],\n    };\n  },\n  computed: {\n    selectedSpatialIdCompu() {\n      if (this.selectedSpatial[0] && this.selectedSpatial[0].type === 'room')\n        return this.selectedSpatial[0].id;\n      return '';\n    },\n  },\n  async mounted() {\n    this.spatial = await getSpatialTree();\n  },\n  methods: {\n    onRoomSelect(name) {\n      console.log('onRoomSelect', name);\n      this.search = name;\n    },\n    async importFloorToSearch() {\n      const roomNode = await getRoomNodeFromSelectFloor();\n      if (roomNode) {\n        this.search = roomNode.info.name.get();\n      }\n    },\n    async generate() {\n      this.$refs.assingDataView.generate();\n    },\n    async opened({ contextId, selectedNodeId }) {\n      this.contextId = contextId;\n      this.selectedNodeId = selectedNodeId;\n    },\n    removed() {},\n    close() {},\n    closeDialog() {},\n  },\n};\n</script>\n\n<style scoped>\n.manual-assign-projection-body {\n  height: calc(100% - 17px);\n  position: relative;\n}\n.manual-assign-projection-container {\n  position: relative;\n  height: calc(100% - 48px);\n  display: flex;\n  flex-direction: row;\n}\n.manual-assign-projection-container > div {\n  width: 50%;\n  height: 100%;\n  overflow: auto;\n  min-width: 200px;\n}\n.manual-assign-projection-treeview-container {\n  height: calc(100% - 48px);\n  overflow: auto;\n}\n.manual-assign-projection-spatial-container {\n  margin: 0 8px;\n}\n</style>\n\n<style>\n.manual-assign-projection-body > .application--wrap {\n  min-height: 100%;\n  height: 100%;\n}\n.manual-assign-projection-body * {\n  box-sizing: border-box;\n}\n.manual-assign-projection-treeview-item-active {\n  background-color: #e3db00 !important;\n  color: black;\n}\n</style>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n<template>\n  <v-tabs class=\"AssingDataView-vtabs\" v-model=\"active\" dark fixed-tabs grow>\n    <v-tab ripple> Warnings ({{ warnLen }})</v-tab>\n    <v-tab ripple> Error ({{ errLen }})</v-tab>\n    <v-tab-item class=\"AssingDataView-tab-container\">\n      <AssingDataViewList\n        :roomSelected=\"roomSelected\"\n        :items=\"warnArr\"\n        @roomSelect=\"onRoomSelect\"\n      ></AssingDataViewList>\n    </v-tab-item>\n    <v-tab-item class=\"AssingDataView-tab-container\">\n      <AssingDataViewList\n        :roomSelected=\"roomSelected\"\n        :items=\"errorArr\"\n        @roomSelect=\"onRoomSelect\"\n      ></AssingDataViewList\n    ></v-tab-item>\n  </v-tabs>\n</template>\n\n<script>\nimport {\n  getDataAssing,\n  createCmdProjectionForManualAssing,\n  saveCmdsProjectionGeo,\n  addNodeGraphService,\n  waitPathSendToHub,\n} from 'spinal-spatial-referential';\nimport { debounce } from 'lodash';\nimport AssingDataViewList from './AssingDataViewList.vue';\n\nexport default {\n  name: 'AssingDataView',\n  components: { AssingDataViewList },\n  data() {\n    return {\n      active: 0,\n      warnArr: [],\n      errorArr: [],\n    };\n  },\n  props: ['contextId', 'selectedNodeId', 'roomSelected'],\n  computed: {\n    warnLen() {\n      return this.warnArr.reduce((acc, item) => {\n        if (!item.validId) acc += 1;\n        return acc;\n      }, 0);\n    },\n    errLen() {\n      return this.errorArr.reduce((acc, item) => {\n        if (!item.validId) acc += 1;\n        return acc;\n      }, 0);\n    },\n  },\n  mounted() {\n    return this.update();\n  },\n  created() {\n    this.update = debounce(this._updateData, 100);\n  },\n  watch: {\n    contextId() {\n      this.update();\n    },\n    selectedNodeId() {\n      this.update();\n    },\n  },\n  methods: {\n    async _updateData() {\n      if (!this.contextId || !this.selectedNodeId) return;\n      const data = await getDataAssing({\n        contextId: this.contextId,\n        selectedNodeId: this.selectedNodeId,\n      });\n      this.errorArr = data.error;\n      this.warnArr = data.warn;\n      if (this.warnArr.length === 0 && this.errorArr.length) this.active = 1;\n    },\n    onRoomSelect(roomId) {\n      this.$emit('roomSelect', roomId);\n    },\n    async generate() {\n      const { cmd, cmdMiss } = await createCmdProjectionForManualAssing(\n        this.warnArr,\n        this.errorArr\n      );\n      const cmds = cmd.concat(cmdMiss);\n      const {\n        node,\n        context: contextCmd,\n        data,\n      } = await saveCmdsProjectionGeo(cmds);\n      addNodeGraphService(node);\n      await waitPathSendToHub(data);\n      console.log('done', cmd);\n      spinal.spinalPanelManagerService.openPanel('CmdRunViewer', {\n        dataCmd: cmd,\n        node,\n        contextId: contextCmd.info.id.get(),\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.AssingDataView-vtabs {\n  height: 100%;\n}\n</style>\n\n<style>\n.AssingDataView-vtabs *:hover {\n  text-decoration: none !important;\n}\n.AssingDataView-vtabs .v-window {\n  height: calc(100% - 48px);\n  position: relative;\n}\n.AssingDataView-vtabs .v-window .v-window__container,\n.AssingDataView-vtabs .AssingDataView-tab-container {\n  height: 100%;\n}\n</style>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-list two-line dense class=\"AssingDataViewList-container spinal-scrollbar\">\n    <v-list-tile\n      v-for=\"item in currArr\"\n      :key=\"item.externalId\"\n      class=\"assingDataitem\"\n      ripple\n      @click=\"showItem(item)\"\n    >\n      <v-list-tile-action>\n        <v-btn icon ripple @click.stop=\"searchRoomRef(item)\">\n          <v-icon>view_compact</v-icon>\n        </v-btn>\n      </v-list-tile-action>\n\n      <v-list-tile-content>\n        <v-list-tile-title>{{ item.name }}</v-list-tile-title>\n        <AssignDataViewRoomName\n          :validId=\"item.validId\"\n          :nodeName=\"item.PName\"\n          @roomSelect=\"onRoomClick\"\n        ></AssignDataViewRoomName>\n      </v-list-tile-content>\n\n      <v-list-tile-action>\n        <v-btn\n          icon\n          ripple\n          :disabled=\"!roomSelected\"\n          @click.stop=\"onValid(item)\"\n        >\n          <v-icon>check</v-icon>\n        </v-btn>\n      </v-list-tile-action>\n    </v-list-tile>\n    <v-divider></v-divider>\n    <v-subheader> Done </v-subheader>\n    <v-list-tile\n      v-for=\"item in doneArr\"\n      ripple\n      @click=\"showItem(item)\"\n      class=\"assingDataitem\"\n      :key=\"item.externalId\"\n    >\n      <v-list-tile-content>\n        <v-list-tile-title>{{ item.name }}</v-list-tile-title>\n        <AssignDataViewRoomName\n          :validId=\"item.validId\"\n          :nodeName=\"item.PName\"\n          @roomSelect=\"onRoomClick\"\n        ></AssignDataViewRoomName>\n      </v-list-tile-content>\n      <v-list-tile-action>\n        <v-btn icon ripple @click.stop=\"onCancel(item)\">\n          <v-icon>cancel</v-icon>\n        </v-btn>\n      </v-list-tile-action>\n    </v-list-tile>\n  </v-list>\n</template>\n<script>\nimport AssignDataViewRoomName from './AssignDataViewRoomName.vue';\nimport {\n  viewDataAssignInViewer,\n  getRoomRef,\n  getContextSpatial,\n  getModelByBimFileIdLoaded,\n  getGraph,\n  getViewer,\n} from 'spinal-spatial-referential';\n\nexport default {\n  name: 'AssingDataViewList',\n  props: ['items', 'roomSelected'],\n  components: { AssignDataViewRoomName },\n  data() {\n    return {\n      currArr: [],\n      doneArr: [],\n    };\n  },\n  mounted() {\n    this.updateData();\n  },\n  watch: {\n    items() {\n      this.updateData();\n    },\n  },\n  methods: {\n    updateData() {\n      if (!this.items) return;\n      this.currArr = [];\n      this.doneArr = [];\n      for (const item of this.items) {\n        if (item.validId) this.doneArr.push(item);\n        else this.currArr.push(item);\n      }\n    },\n    onValid(item) {\n      item.validId = this.roomSelected;\n      this.updateData();\n    },\n    async searchRoomRef(item) {\n      const modelDbid = getModelByBimFileIdLoaded(item.bimFileId);\n      if (modelDbid) {\n        const graph = getGraph();\n        const contextGeo = await getContextSpatial(graph);\n        const aggrData = await getRoomRef(contextGeo);\n        for (const { model, dbId } of aggrData) {\n          if (model === modelDbid) {\n            dbId.add(item.dbid);\n            break;\n          }\n        }\n        const data = aggrData.map((itm) => {\n          return {\n            model: itm.model,\n            selection: Array.from(itm.dbId),\n          };\n        });\n        const viewer = getViewer();\n        viewer.impl.visibilityManager.aggregateIsolate(data);\n        viewer.fitToView([item.dbid], modelDbid);\n        viewer.select([item.dbid], modelDbid);\n      }\n    },\n    showItem(item) {\n      viewDataAssignInViewer(\n        item.dbid,\n        item.bimFileId,\n        this.roomSelected,\n        item.validId,\n        item.PNId\n      );\n    },\n    onCancel(item) {\n      item.validId = '';\n      this.updateData();\n    },\n    onRoomClick(itemId) {\n      this.$emit('roomSelect', itemId);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.assingDataSelected {\n  background-color: #365bab !important;\n}\n.assingDataitem * {\n  color: #fff !important;\n  text-decoration: none !important;\n}\n.AssingDataViewList-container {\n  height: 100%;\n  overflow: auto;\n}\n</style>\n\n<style>\n.AssingDataViewList-container .v-list__tile__action {\n  min-width: 36px;\n}\n</style>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <v-list-tile-sub-title v-if=\"validId\" class=\"AssignDataViewRoomName\">\n    <span\n      style=\"color: #00e300\"\n      v-if=\"validCompuText === nodeName\"\n      @click.stop=\"$emit('roomSelect', nodeName)\"\n    >\n      {{ nodeName }}\n    </span>\n    <template v-else>\n      <span\n        style=\"color: #00e300\"\n        @click.stop=\"$emit('roomSelect', validCompuText)\"\n      >\n        {{ validCompuText }}\n      </span>\n      <span style=\"color: red\">\n        <s @click.stop=\"$emit('roomSelect', nodeName)\">{{ nodeName }}</s>\n      </span>\n    </template>\n  </v-list-tile-sub-title>\n  <v-list-tile-sub-title\n    class=\"AssignDataViewRoomName\"\n    v-else\n    @click.stop=\"$emit('roomSelect', nodeName)\"\n  >\n    <span style=\"color: #00e300\">\n      {{ nodeName }}\n    </span>\n  </v-list-tile-sub-title>\n</template>\n\n<script>\nimport { getRealNode } from 'spinal-spatial-referential';\n\nexport default {\n  name: 'AssignDataViewRoomName',\n  data() {\n    return {};\n  },\n  props: ['nodeName', 'validId'],\n  computed: {\n    validCompuText() {\n      const node = getRealNode(this.validId);\n      if (node) return node.info.name.get();\n      return this.validId;\n    },\n  },\n};\n</script>\n<style scoped>\n.AssignDataViewRoomName:hover {\n  background-color: #363636;\n}\n</style>\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst {\n  spinalPanelManagerService,\n  SpinalPanelApp\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst SpinalForgeExtention = require(\"./SpinalForgeExtention.js\")(\n  spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  SpinalForgeExtention\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalPanelManagerService = require(\"./SpinalPanelManagerService\");\nconst SpinalPanelApp = require(\"./SpinalPanelApp\");\n\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalPanelManagerService === \"undefined\")\n  G_root.spinal.spinalPanelManagerService = new SpinalPanelManagerService();\nconst SpinalMountExtention = require(\"./SpinalMountExtention.js\")(\n  G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  spinalPanelManagerService: G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp,\n  SpinalMountExtention,\n  install(Vue) {\n    Vue.prototype.$spinalPanelManagerService =\n      G_root.spinal.spinalPanelManagerService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} panels key = panelName, value = an instance of SpinalPanelApp\n * @class SpinalPanelManagerService\n */\nclass SpinalPanelManagerService {\n  /**\n   *Creates an instance of SpinalPanelManagerService.\n   * @memberof SpinalPanelManagerService\n   */\n  constructor() {\n    this.panels = {};\n  }\n\n  /**\n   * method to register an Panel Application\n   *\n   * @param {string} panelName the name of the panel\n   * @param {SpinalPanelApp} spinalPanelApp the application\n   * @memberof SpinalPanelManagerService\n   */\n  registerPanel(panelName, spinalPanelApp) {\n    this.panels[panelName] = spinalPanelApp;\n  }\n\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  openPanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].openPanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  closePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].closePanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  tooglePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].tooglePanel(option);\n    return false;\n  }\n}\n\nmodule.exports = SpinalPanelManagerService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n * Base interface like class of a panel\n *\n * @class SpinalPanelApp\n */\nclass SpinalPanelApp {\n  constructor() {}\n\n  openPanel(option) {}\n  closePanel(option) {}\n  tooglePanel(option) {}\n}\n\nmodule.exports = SpinalPanelApp;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (!option.vueMountComponent) {\n    throw new Error(\"mount : missing option vueMountComponent\");\n  }\n\n  cfg.name = option.name || \"SpinalMount\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.parentContainer = option.parentContainer || document.body;\n  return cfg;\n}\n\nfunction getDialog() {\n  if (!this.dialog) {\n    this.dialog = document.createElement(\"div\");\n    const _compo = document.createElement(\"div\");\n    this.dialog.className = \"spinal-modal-container\";\n    this.cfg.parentContainer.appendChild(this.dialog);\n    this.dialog.appendChild(_compo);\n    this.compoment = new this.cfg.vueMountComponent({\n      propsData: {\n        onFinised: this.onFinised.bind(this)\n      }\n    }).$mount(_compo);\n  }\n  return this.dialog;\n}\n\n/**\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { mount }\n */\nmodule.exports = function(spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n```js\n{\n  name: \"myCustomDialogName\",\n  vueMountComponent: Vue.extend(aVueCompomentDialog),\n  parentContainer: document.body\n}```\n     *\n     * @param {*} option\n     */\n    mount(option) {\n      let cfg = configInit(option);\n      const SpinalMount = class extends SpinalPanelApp {\n        constructor() {\n          super();\n          this.cfg = cfg;\n          this.dialog = null;\n          this.compoment = null;\n        }\n\n        openPanel(opt) {\n          getDialog.call(this);\n          this.compoment.opened(opt);\n        }\n        closePanel(opt) {\n          if (this.dialog !== null) {\n            this.compoment.removed(opt);\n            this.dialog.remove();\n            this.dialog = null;\n            this.compoment = null;\n          }\n        }\n\n        tooglePanel(opt) {\n          if (this.dialog !== null) {\n            this.closePanel(opt);\n          } else {\n            this.openPanel(opt);\n          }\n        }\n\n        /**\n         * called when dialog closed by the dialog itself\n         */\n        onFinised(closeResult) {\n          this.closePanel(closeResult);\n        }\n      };\n      let SpinalMountInstance = new SpinalMount();\n      spinalPanelManagerService.registerPanel(cfg.name, SpinalMountInstance);\n    }\n  };\n};\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (typeof option.toolbar !== \"undefined\") {\n    cfg.toolbar = {\n      icon: option.toolbar.icon || \"done\",\n      label: option.toolbar.label || \"label\",\n      subToolbarName: option.toolbar.subToolbarName || \"spinalcom\",\n      styleBtn: {},\n      styleIcon: {}\n    };\n    Object.assign(cfg.toolbar.styleBtn, option.toolbar.styleBtn);\n    Object.assign(cfg.toolbar.styleIcon, option.toolbar.styleIcon);\n  }\n  if (typeof option.panel !== \"undefined\") {\n    cfg.panel = {\n      title: option.panel.title || \"Spinalcom Panel\",\n      classname: option.panel.classname || \"spinal-pannel\",\n      closeBehaviour: option.panel.closeBehaviour || \"hide\"\n    };\n    if (typeof option.style !== \"undefined\") {\n      cfg.style = {};\n      Object.assign(cfg.style, option.style);\n    }\n  }\n  cfg.name = option.name || \"spinalExtention\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.onLoad = option.onLoad;\n  cfg.onUnLoad = option.onUnLoad;\n  return cfg;\n}\n\nfunction onToolbarCreated() {\n  this.viewer.removeEventListener(\n    window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n    this.onToolbarCreatedBinded\n  );\n  this.onToolbarCreatedBinded = null;\n  createToolbar.call(this);\n}\n\nfunction createToolbar() {\n  this.toolbarButton = new window.Autodesk.Viewing.UI.Button(\n    this.cfg.toolbar.label\n  );\n  this.toolbarButton.onClick = () => {\n    this.tooglePanel(this.cfg);\n  };\n  var icon = this.toolbarButton.container.firstChild;\n  icon.className = \"adsk-button-icon md-icon md-icon-font md-theme-default\";\n  icon.innerHTML = this.cfg.toolbar.icon;\n\n  for (var key in this.cfg.toolbar.styleIcon) {\n    if (this.cfg.toolbar.styleIcon.hasOwnProperty(key)) {\n      icon.style[key] = this.cfg.toolbar.styleIcon[key];\n    }\n  }\n  for (var key in this.cfg.toolbar.styleBtn) {\n    if (this.cfg.toolbar.styleBtn.hasOwnProperty(key)) {\n      this.toolbarButton.container.style[key] = this.cfg.toolbar.styleBtn[key];\n    }\n  }\n\n  this.toolbarButton.setToolTip(this.cfg.toolbar.label);\n  this.subToolbar = this.viewer.toolbar.getControl(\n    this.cfg.toolbar.subToolbarName\n  );\n  if (!this.subToolbar) {\n    this.subToolbar = new window.Autodesk.Viewing.UI.ControlGroup(\n      this.cfg.toolbar.subToolbarName\n    );\n    this.viewer.toolbar.addControl(this.subToolbar);\n  }\n  this.subToolbar.addControl(this.toolbarButton);\n}\n\nfunction closeComponent() {\n  if (this.cfg.panel.closeBehaviour !== \"hide\") {\n    try {\n      this.component.removed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n    this.panel.container.remove();\n    this.panel = null;\n  } else {\n    try {\n      this.component.closed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction getPanel() {\n  if (this.panel === null) {\n    this.panel = new window.PanelClass(this.viewer, this.cfg.panel.title);\n    var _container = document.createElement(\"div\");\n    var _scrollContainer = this.panel.createScrollContainer();\n\n    _container.className +=\n      this.panel.container.id + \"-panelcontainer \" + this.cfg.panel.classname;\n    for (var key in this.cfg.style) {\n      if (this.cfg.style.hasOwnProperty(key)) {\n        this.panel.container.style[key] = this.cfg.style[key];\n      }\n    }\n\n    if (this.panel.container.style.left) {\n      this.panel.container.style.left = \"0\";\n    }\n\n    this.panel.container.appendChild(_scrollContainer);\n    _scrollContainer.style.height = \"calc(100% - 52px)\";\n    _scrollContainer.appendChild(_container);\n\n    var _footer = this.panel.createFooter();\n    this.panel.container.appendChild(_footer);\n\n    if (this.cfg.vueMountComponent) {\n      this.component = new this.cfg.vueMountComponent().$mount(_container);\n    }\n\n    const _this = this;\n    this.panel.addVisibilityListener(open => {\n      if (!open) {\n        closeComponent.call(_this);\n      }\n    });\n  }\n  return this.panel;\n}\n\n/**\n *\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { createExtention, registerExtention }\n */\nmodule.exports = function (spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n     * factory function to create a dynamic class that extends the `SpinalPanelApp` class\n     *```js\n{\n  name: \"extention_name\",\n  vueMountComponent: Vue.extend(aVueCompoment),\n  onLoad: () => {console.log(\"onLoad\");},\n  onUnLoad: () => {console.log(\"onUnLoad\");},\n  toolbar: {\n    icon: \"done\",\n    label: \"testLabel\",\n    subToolbarName: \"spinalcom\"\n  },\n  panel: {\n    title: \"Spinalcom Panel\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"hide\"\n  },\n  style: {}\n}\n```\n     * @param {object} option see description\n     * @returns SpinalForgeExtention\n     */\n    createExtention(option) {\n      const cfg = configInit(option);\n      /**\n       * class returned by createExtention\n       * this extention is also registered in autodesk viweer\n       * @extends SpinalPanelApp\n       * @property {AutodeskViewer} viewer the autodesk view\n       * @property {AutodeskPanel} panel the panel\n       * @property {Vue.component} component the component mounted\n       * @property {Object} cfg the option given on creation\n       */\n      const SpinalForgeExtention = class extends SpinalPanelApp {\n        constructor(viewer, options) {\n          super();\n          window.Autodesk.Viewing.Extension.call(this, viewer, options);\n          this.viewer = viewer;\n          this.panel = null;\n          this.cfg = cfg;\n          spinalPanelManagerService.registerPanel(cfg.name, this);\n        }\n        /**\n         * method called on load of the extention (managed by the autodesk viewer)\n         * the method create a button in the toolbar if put in the option of `createExtention`.\n         */\n        load() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            // add toolbar\n            if (this.viewer.toolbar) {\n              createToolbar.call(this);\n            } else {\n              this.onToolbarCreatedBinded = onToolbarCreated.bind(this);\n              this.viewer.addEventListener(\n                window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n                this.onToolbarCreatedBinded\n              );\n            }\n          }\n          if (typeof cfg.onLoad !== \"undefined\") cfg.onLoad.call(this);\n          return true;\n        }\n        /**\n         * method called when the viewer unload of the extention\n         * (managed by the autodesk viewer)\n         */\n        unload() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            this.viewer.subToolbar.removeControl(this.toolbarButton);\n          }\n          if (typeof cfg.onUnLoad !== \"undefined\") cfg.onUnLoad.call(this);\n          return true;\n        }\n\n        activate() {\n          return this.load();\n        }\n\n        deactivate() {\n          return this.unload();\n        }\n\n        /**\n         *\n         * @param {*} option\n         */\n        openPanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(true);\n          try {\n            this.component.opened.call(this.component, option, this.viewer);\n          } catch (e) {\n            console.error(e);\n          }\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        closePanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(false);\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        tooglePanel(option) {\n          if (this.panel === null || this.panel.isVisible() === false) {\n            this.openPanel.call(this, option);\n          } else { this.closePanel.call(this, option); }\n        }\n      };\n      return SpinalForgeExtention;\n    },\n\n    /**\n     * Method to register an extention to the viewer and the forge viewer\n     * @param {string} name name of the extention\n     * @param {*} classExtention an extention created by `createExtention`\n     */\n    registerExtention(name, classExtention) {\n      // register to forge\n      window.Autodesk.Viewing.theExtensionManager.registerExtension(\n        name,\n        classExtention\n      );\n      // register to viewer\n      window.spinal.ForgeExtentionManager.addExtention(name);\n    }\n  };\n};\n","/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalContextApp } from 'spinal-env-viewer-context-menu-service';\n\nconst { spinalPanelManagerService } = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst LABEL = \"Spatial Context\";\nexport class ButtonGenerateContext extends SpinalContextApp {\n\n  constructor() {\n    super(LABEL, LABEL, {\n      icon: '3d_rotation',\n      icon_type: 'in',\n      backgroundColor: '#000000',\n      fontColor: '#ffffff'\n    });\n\n    this.action = this.openPanel.bind(this);\n  }\n\n  isShown() {\n    return Promise.resolve(true);\n  }\n\n  openPanel() {\n    spinalPanelManagerService.openPanel(\"DialogGenerateContext\");\n  }\n}\n","/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalContextApp } from 'spinal-env-viewer-context-menu-service';\n\nconst { spinalPanelManagerService } = require(\"spinal-env-viewer-panel-manager-service\");\nimport GeographicService from 'spinal-env-viewer-context-geographic-service';\n\nconst LABEL = 'Project objets in context';\nexport class ButtonAddObjectToCategory extends SpinalContextApp {\n\n  constructor() {\n    super(LABEL, LABEL, {\n      icon: 'picture_in_picture',\n      icon_type: 'in',\n      backgroundColor: '#000000',\n      fontColor: '#ffffff'\n    });\n\n    this.action = this.openPanel.bind(this);\n  }\n\n  isShown(option) {\n    if (option.selectedNode === option.context &&\n      option.selectedNode.type.get() === GeographicService.constants.CONTEXT_TYPE) {\n      return Promise.resolve(true);\n    }\n    return Promise.resolve(-1);\n  }\n\n  openPanel(option) {\n    spinalPanelManagerService.openPanel(\"DialogAddObject\", option.selectedNode.id.get());\n  }\n}\n","/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalContextApp } from 'spinal-env-viewer-context-menu-service';\nimport {\n  GENERATION_CONTEXT_TYPE,\n  GENERATION_TYPE,\n  GENERATION_GEO_TYPE,\n  GENERATION_PROJECTION_TYPE,\n} from 'spinal-spatial-referential';\n\nconst LABEL = 'Generate Context';\nexport class GenerateContextGeo extends SpinalContextApp {\n  constructor() {\n    super(LABEL, LABEL, {\n      icon: 'play_arrow',\n      icon_type: 'in',\n      backgroundColor: '#000000',\n      fontColor: '#ffffff'\n    });\n\n    this.action = this.myAction.bind(this);\n  }\n\n  isShown(option) {\n    if (option.context.type.get() === GENERATION_CONTEXT_TYPE &&\n      option.selectedNode.type.get() === GENERATION_TYPE &&\n      (option.selectedNode.generationType.get() === GENERATION_GEO_TYPE ||\n        option.selectedNode.generationType.get() === GENERATION_PROJECTION_TYPE)\n    ) {\n      return Promise.resolve(true);\n    }\n    return Promise.resolve(-1);\n  }\n\n  async myAction(option) {\n    spinal.spinalPanelManagerService.openPanel('CmdRunViewer', {\n      selectedNodeId: option.selectedNode.id.get(),\n      contextId: option.context.id.get()\n    });\n  }\n}\n","/*\n * Copyright 2019 SpinalCom - www.spinalcom.com\n *\n *  This file is part of SpinalCore.\n *\n *  Please read all of the following terms and conditions\n *  of the Free Software license Agreement (\"Agreement\")\n *  carefully.\n *\n *  This Agreement is a legally binding contract between\n *  the Licensee (as defined below) and SpinalCom that\n *  sets forth the terms and conditions that govern your\n *  use of the Program. By installing and/or using the\n *  Program, you agree to abide by all the terms and\n *  conditions stated or referenced herein.\n *\n *  If you do not agree to abide by these terms and\n *  conditions, do not demonstrate your acceptance and do\n *  not install or use the Program.\n *  You should have received a copy of the license along\n *  with this file. If not, see\n *  <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalContextApp } from 'spinal-env-viewer-context-menu-service';\n\nconst { spinalPanelManagerService } = require(\"spinal-env-viewer-panel-manager-service\");\nimport { GENERATION_CONTEXT_TYPE, GENERATION_PROJECTION_TYPE } from \"spinal-spatial-referential\";\nconst LABEL = 'Manual Assingment';\nexport class ManualAssingmentButton extends SpinalContextApp {\n\n  constructor() {\n    super(LABEL, LABEL, {\n      icon: 'sort',\n      icon_type: 'in',\n      backgroundColor: '#000000',\n      fontColor: '#ffffff'\n    });\n\n    this.action = this.openPanel.bind(this);\n  }\n\n  isShown(option) {\n    if (option.context.type.get() === GENERATION_CONTEXT_TYPE &&\n      option.selectedNode.generationType &&\n      option.selectedNode.generationType.get() === GENERATION_PROJECTION_TYPE) {\n      return Promise.resolve(true);\n    }\n    return Promise.resolve(-1);\n  }\n\n  openPanel(option) {\n    spinalPanelManagerService.openPanel(\"panelManualAssingView\", {\n      contextId: option.context.id.get(),\n      selectedNodeId: option.selectedNode.id.get()\n    });\n  }\n}\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\nimport Vue from 'vue';\nconst {\n  SpinalMountExtention\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nimport SpinalDiffViewer from \"./SpinalDiffViewer.vue\";\nfunction getDomElemWithClassNameRetry(classname) {\n  return new Promise(resolve => {\n    const inter = setInterval(() => {\n      const dom = document.body.getElementsByClassName(classname);\n      if (dom.length > 0) {\n        clearInterval(inter);\n        resolve(dom[0]);\n      }\n    }, 100);\n  });\n}\n\ngetDomElemWithClassNameRetry(\"plugin-graph-viewer\").then(\n  (domElement) => {\n    // include in div with class=\"plugin-graph-viewer\"\n    // a diff viewer\n    SpinalMountExtention.mount({\n      // name registered.\n      name: \"SpinalDiffViewer\",\n      // Vue.extend to create a Compoment constructor\n      vueMountComponent: Vue.extend(SpinalDiffViewer),\n      // where to  append the Compoment\n      parentContainer: domElement\n    });\n  }\n)\n\n\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n<template>\n  <div class=\"SpinalDiffViewer-container\">\n    <div class=\"SpinalDiffViewer-header\">\n      <v-btn dark @click=\"closeDialog\" round :icon=\"true\">\n        <v-icon>close</v-icon>\n      </v-btn>\n\n      <v-spacer></v-spacer>\n      <v-btn dark @click=\"generate\" round :icon=\"true\">\n        <v-icon>check</v-icon>\n      </v-btn>\n    </div>\n    <div class=\"SpinalDiffViewer-content spinal-scrollbar\">\n      <SpinalDiffFloorViewer\n        :archiData=\"archiData\"\n        v-model=\"skipList\"\n        @pushSkip=\"pushSkip\"\n        @rmAtSkip=\"rmAtSkip\"\n      ></SpinalDiffFloorViewer>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SpinalDiffFloorViewer from './SpinalDiffFloorViewer.vue';\nimport {\n  generateCmdGeo,\n  saveCmdsGenerateGeo,\n  addNodeGraphService,\n  waitPathSendToHub,\n} from 'spinal-spatial-referential';\nconst SpinalDiffViewer = {\n  name: 'SpinalDiffViewer',\n  props: ['onFinised'],\n  components: { SpinalDiffFloorViewer },\n  data() {\n    this.manualAssingment = null;\n    return {\n      showDialog: true,\n      contextServerid: 0,\n      archiData: undefined,\n      skipList: [],\n      loading: false,\n    };\n  },\n  methods: {\n    opened(option) {\n      if (option) {\n        this.archiData = option.archiData;\n        this.manualAssingment = option.manualAssingment;\n        this.buildingServerId = option.buildingServerId;\n        this.bimFileId = option.bimFileId;\n      }\n    },\n    removed(option) {\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === 'function') this.onFinised();\n    },\n    pushSkip(itm) {\n      this.skipList.push(itm);\n    },\n    rmAtSkip(idx) {\n      this.skipList.splice(idx, 1);\n    },\n    async generate() {\n      this.loading = true;\n      try {\n        const cmds = await generateCmdGeo(\n          this.archiData,\n          this.skipList,\n          this.buildingServerId,\n          this.bimFileId\n        );\n        const { node, context, data } = await saveCmdsGenerateGeo(cmds);\n        addNodeGraphService(node);\n        await waitPathSendToHub(data);\n        spinal.spinalPanelManagerService.openPanel('CmdRunViewer', {\n          dataCmd: cmds,\n          node,\n          contextId: context.info.id.get(),\n        });\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n};\n\nexport default SpinalDiffViewer;\n</script>\n\n<style scoped>\n.SpinalDiffViewer-container {\n  background-color: #424242;\n  height: 100%;\n  width: 100%;\n  position: relative;\n}\n.SpinalDiffViewer-header {\n  background-color: #222;\n  display: flex;\n}\n.SpinalDiffViewer-content {\n  height: calc(100% - 60px);\n  overflow: auto;\n}\n</style>\n\n<style>\n.plugin-graph-viewer {\n  position: relative;\n}\n.plugin-graph-viewer > .spinal-modal-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  z-index: 10;\n}\n</style>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n<template>\n  <v-list dark two-line>\n    <v-subheader v-if=\"archiData === undefined\"> loading... </v-subheader>\n    <v-subheader v-else-if=\"archiData.length === 0\"> no data </v-subheader>\n    <v-list-group\n      v-else\n      v-for=\"FAData in archiData\"\n      :key=\"FAData.floorArchi.properties.externalId\"\n      no-action\n      :lazy=\"true\"\n    >\n      <template v-slot:activator>\n        <v-list-tile\n          ripple\n          class=\"spinal-item-tile\"\n          :class=\"getColor(FAData.floorArchi.properties.modificationType)\"\n          @click=\"onSelectFloor(FAData)\"\n        >\n          <v-list-tile-action>\n            <v-btn\n              @click.stop=\"\n                onClickCheckbox(FAData.floorArchi.properties.externalId)\n              \"\n              ripple\n              circle\n              dense\n              icon\n            >\n              <v-icon\n                v-if=\"isInSkipList(FAData.floorArchi.properties.externalId)\"\n                >check_box_outline_blank</v-icon\n              >\n              <v-icon v-else>check_box</v-icon>\n            </v-btn>\n          </v-list-tile-action>\n\n          <v-list-tile-content>\n            <v-list-tile-title class=\"spinal-list-tile-title\">{{\n              getName(FAData)\n            }}</v-list-tile-title>\n            <v-list-tile-sub-title class=\"spinal-list-tile-title\">\n              {{ getFloorSummData(FAData) }}\n            </v-list-tile-sub-title>\n            <v-list-tile-sub-title class=\"spinal-list-tile-title\">\n              {{ getFloorSummRoom(FAData) }}\n            </v-list-tile-sub-title>\n            <v-list-tile-sub-title class=\"spinal-list-tile-title\">\n              {{ getFloorSummStruct(FAData) }}\n            </v-list-tile-sub-title>\n          </v-list-tile-content>\n        </v-list-tile>\n      </template>\n      <template v-if=\"FAData.diff\">\n        <v-list-tile\n          ripple\n          class=\"spinal-item-tile spinal-subitem-tile spinal-item-tile-delete\"\n          v-for=\"serverId in FAData.diff.diffRoom.delRooms\"\n          @click=\"onSelectRoom(FAData, serverId, 'delete')\"\n          :key=\"serverId\"\n        >\n          <v-list-tile-action>\n            <v-btn\n              @click.stop=\"onClickCheckbox(serverId)\"\n              ripple\n              circle\n              dense\n              icon\n              :disabled=\"isInSkipList(FAData.floorArchi.properties.externalId)\"\n            >\n              <v-icon\n                v-if=\"\n                  isInSkipList(\n                    serverId,\n                    FAData.floorArchi.properties.externalId\n                  )\n                \"\n                >check_box_outline_blank</v-icon\n              >\n              <v-icon v-else>check_box</v-icon>\n            </v-btn>\n          </v-list-tile-action>\n          <v-list-tile-content>\n            <v-list-tile-title class=\"spinal-list-tile-title\">{{\n              getRoomNameNode(serverId)\n            }}</v-list-tile-title>\n            <v-list-tile-sub-title class=\"spinal-list-tile-title\">\n              server id : {{ serverId }}\n            </v-list-tile-sub-title>\n          </v-list-tile-content>\n        </v-list-tile>\n        <v-list-tile\n          class=\"spinal-item-tile spinal-subitem-tile\"\n          v-for=\"subItem in FAData.diff.diffRoom.newRooms\"\n          @click=\"onSelectRoom(FAData, subItem, 'new')\"\n          :key=\"subItem.properties.externalId\"\n          :class=\"getColor(subItem.properties.modificationType)\"\n        >\n          <v-list-tile-action>\n            <v-btn\n              @click.stop=\"onClickCheckbox(subItem.properties.externalId)\"\n              ripple\n              circle\n              dense\n              icon\n              :disabled=\"isInSkipList(FAData.floorArchi.properties.externalId)\"\n            >\n              <v-icon\n                v-if=\"\n                  isInSkipList(\n                    subItem.properties.externalId,\n                    FAData.floorArchi.properties.externalId\n                  )\n                \"\n                >check_box_outline_blank</v-icon\n              >\n              <v-icon v-else>check_box</v-icon>\n            </v-btn>\n          </v-list-tile-action>\n\n          <v-list-tile-content>\n            <v-list-tile-title class=\"spinal-list-tile-title\">{{\n              getRoomNameArchi(subItem)\n            }}</v-list-tile-title>\n          </v-list-tile-content>\n        </v-list-tile>\n\n        <v-list-tile\n          ripple\n          class=\"spinal-item-tile spinal-subitem-tile\"\n          v-for=\"subItem in FAData.diff.diffRoom.updateRooms\"\n          :class=\"getColor(subItem.roomArchi.properties.modificationType)\"\n          :key=\"subItem.roomArchi.properties.externalId\"\n          @click=\"onSelectRoom(FAData, subItem, 'update')\"\n        >\n          <v-list-tile-action>\n            <v-btn\n              @click.stop=\"\n                onClickCheckbox(subItem.roomArchi.properties.externalId)\n              \"\n              :disabled=\"isInSkipList(FAData.floorArchi.properties.externalId)\"\n              ripple\n              circle\n              dense\n              icon\n            >\n              <v-icon\n                v-if=\"\n                  isInSkipList(\n                    subItem.roomArchi.properties.externalId,\n                    FAData.floorArchi.properties.externalId\n                  )\n                \"\n                >check_box_outline_blank</v-icon\n              >\n              <v-icon v-else>check_box</v-icon>\n            </v-btn>\n          </v-list-tile-action>\n\n          <v-list-tile-content>\n            <v-list-tile-title class=\"spinal-list-tile-title\">{{\n              getRoomName(subItem)\n            }}</v-list-tile-title>\n            <v-list-tile-sub-title class=\"spinal-list-tile-title\">\n              {{ getSumData(subItem.diff) }}\n            </v-list-tile-sub-title>\n          </v-list-tile-content>\n        </v-list-tile>\n      </template>\n    </v-list-group>\n  </v-list>\n</template>\n\n<script>\nimport { EModificationType } from 'spinal-spatial-referential';\nimport { FileSystem } from 'spinal-core-connectorjs';\nimport { SpinalNode } from 'spinal-model-graph';\nimport { eventBus } from './eventbus';\n\nexport default {\n  name: 'SpinalDiffFloorViewer',\n  props: ['archiData', 'value'],\n  data() {\n    return {\n      selectedItem: null,\n    };\n  },\n  methods: {\n    getIcon(modificationType) {\n      if (modificationType & EModificationType.update) return 'update';\n      if (modificationType & EModificationType.create) return 'new-box';\n      return 'delete';\n    },\n    getColor(modificationType) {\n      if (modificationType & EModificationType.update)\n        return { 'spinal-item-tile-update': true };\n      if (modificationType & EModificationType.create)\n        return { 'spinal-item-tile-create': true };\n      if (modificationType & EModificationType.delete)\n        return { 'spinal-item-tile-delete': true };\n    },\n    getName(FAData) {\n      if (FAData.diff) {\n        if (FAData.diff.diffInfo && FAData.diff.diffInfo.diffInfo) {\n          for (const { label, archiValue } of FAData.diff.diffInfo.diffInfo) {\n            if (label === 'name') return archiValue;\n          }\n        }\n      }\n      for (const { name, value } of FAData.floorArchi.properties.properties) {\n        if (name === 'name') return value;\n      }\n    },\n    getRoomName(RAData) {\n      if (RAData.diff) {\n        if (RAData.diff.diffInfo && RAData.diff.diffInfo.diffInfo) {\n          for (const { label, archiValue } of RAData.diff.diffInfo.diffInfo) {\n            if (label === 'name') return archiValue;\n          }\n        }\n      }\n      return this.getRoomNameArchi(RAData.roomArchi);\n    },\n    getRoomNameArchi(roomArchi) {\n      let resName, resNumber;\n      for (const { name, value } of roomArchi.properties.properties) {\n        if (name === 'name') resName = value;\n        if (name === 'number') resNumber = value;\n      }\n      if (resNumber && resName) return `${resNumber}-${resName}`;\n      return 'unamed';\n    },\n    getRoomNameNode(server_id) {\n      const node = FileSystem._objects[server_id];\n      if (node instanceof SpinalNode && node.info.name) {\n        return node.info.name.get();\n      }\n      return server_id;\n    },\n    getFloorSummData(FAData) {\n      if (FAData.diff) {\n        return this.getSumData(FAData.diff.diffInfo);\n      }\n      return '';\n    },\n    getSumData(diffInfo) {\n      if (!diffInfo) return '';\n      const tmp = [];\n      if (diffInfo.diffAttr.length > 0) {\n        tmp.push(`${diffInfo.diffAttr.length} attribute(s)`);\n      }\n      if (diffInfo.diffInfo.length > 0) {\n        tmp.push(`${diffInfo.diffInfo.length} nodeinfo(s)`);\n      }\n      if (tmp.length === 0) return '';\n      return tmp.join(', ');\n    },\n    getFloorSummRoom(FAData) {\n      if (FAData.diff) {\n        const tmp = [];\n        if (FAData.diff.diffRoom.delRooms.length > 0) {\n          tmp.push(`${FAData.diff.diffRoom.delRooms.length} Delete`);\n        }\n        if (FAData.diff.diffRoom.newRooms.length > 0) {\n          tmp.push(`${FAData.diff.diffRoom.newRooms.length} New`);\n        }\n        if (FAData.diff.diffRoom.updateRooms.length > 0) {\n          tmp.push(`${FAData.diff.diffRoom.updateRooms.length} Update`);\n        }\n        if (tmp.length === 0) return '';\n        return 'Rooms: ' + tmp.join(', ');\n      }\n      return '';\n    },\n    getFloorSummStruct(FAData) {\n      if (FAData.diff) {\n        const tmp = [];\n        if (FAData.diff.diffRef.delBimObj.length > 0) {\n          tmp.push(`${FAData.diff.diffRef.delBimObj.length} Delete`);\n        }\n        if (FAData.diff.diffRef.newBimObj.length > 0) {\n          tmp.push(`${FAData.diff.diffRef.newBimObj.length} New`);\n        }\n        if (tmp.length === 0) return '';\n        return 'Structure reference: ' + tmp.join(', ');\n      }\n      return '';\n    },\n    onSelectFloor(FAData) {\n      eventBus.$emit('selectFloor', FAData);\n    },\n    onSelectRoom(FAData, RAData, type) {\n      eventBus.$emit('selectRoom', { FAData, RAData, type });\n    },\n    onClickCheckbox(id, type) {\n      const idx = this.value.findIndex((itm) => itm.id === id);\n      if (idx === -1) {\n        this.$emit('pushSkip', { id, type });\n      } else {\n        this.$emit('rmAtSkip', idx);\n      }\n    },\n    isInSkipList(id, parentId) {\n      const fct = (itm) => itm.id === id;\n      if (parentId)\n        return (\n          this.value.some((itm) => itm.id === parentId) || this.value.some(fct)\n        );\n      return this.value.some(fct);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.spinal-list-tile-title {\n  color: white;\n}\n.spinal-item-tile {\n  position: relative;\n}\n</style>\n<style>\n.spinal-subitem-tile > a {\n  padding-left: 24px !important;\n}\n.spinal-item-tile .v-list__tile__action {\n  min-width: 32px;\n}\n.spinal-item-tile > a {\n  text-decoration: none !important;\n  padding: 0px 8px;\n}\n.spinal-item-tile .v-list__tile__action > button i {\n  color: #fff;\n}\n.spinal-item-tile.spinal-item-tile-update .v-list__tile__action > button i {\n  color: #71b3ff;\n}\n.spinal-item-tile.spinal-item-tile-create .v-list__tile__action > button i {\n  color: #49c750;\n}\n.spinal-item-tile.spinal-item-tile-delete .v-list__tile__action > button i {\n  color: #ff9090;\n}\n.SpinalDiffViewer-content\n  .v-list__group__header\n  .v-list__group__header__append-icon {\n  padding: 0px 8px;\n}\n</style>\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\nimport Vue from 'vue';\nconst {\n  SpinalMountExtention\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nimport CmdRunViewer from \"./CmdRunViewer.vue\";\nfunction getDomElemWithClassNameRetry() {\n  return new Promise(resolve => {\n    const inter = setInterval(() => {\n      const dom = document.body;\n      if (dom) {\n        clearInterval(inter);\n        resolve(dom);\n      }\n    }, 100);\n  });\n}\n\ngetDomElemWithClassNameRetry().then(\n  (domElement) => {\n    // include in div with class=\"plugin-graph-viewer\"\n    // a diff viewer\n    SpinalMountExtention.mount({\n      // name registered.\n      name: \"CmdRunViewer\",\n      // Vue.extend to create a Compoment constructor\n      vueMountComponent: Vue.extend(CmdRunViewer),\n      // where to  append the Compoment\n      parentContainer: domElement\n    });\n  }\n)\n\n\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n<template>\n  <md-dialog\n    :md-active.sync=\"showDialog\"\n    :md-close-on-esc=\"!loading\"\n    :md-click-outside-to-close=\"!loading\"\n  >\n    <md-dialog-title>Command Run</md-dialog-title>\n    <md-dialog-content>\n      <p>status: {{ getStatus() }}</p>\n      <CmdRunViewerGeo\n        v-show=\"this.mode === GENERATION_GEO_TYPE\"\n        ref=\"CmdRunViewerGeo\"\n        @status=\"status = $event.target\"\n      ></CmdRunViewerGeo>\n      <CmdRunViewerProjection\n        ref=\"CmdRunViewerProjection\"\n        v-show=\"this.mode === GENERATION_PROJECTION_TYPE\"\n        @status=\"status = $event.target\"\n      ></CmdRunViewerProjection>\n    </md-dialog-content>\n    <md-dialog-actions>\n      <md-button\n        class=\"md-primary\"\n        :disabled=\"loading\"\n        @click=\"showDialog = false\"\n        >Close</md-button\n      >\n      <md-button class=\"md-primary\" :disabled=\"loading\" @click=\"start\"\n        >Start</md-button\n      >\n    </md-dialog-actions>\n\n    <md-snackbar\n      md-position=\"left\"\n      :md-duration=\"4000\"\n      :md-active.sync=\"snackbarError\"\n      md-persistent\n    >\n      <span> Error: {{ snackbarMessage }}</span>\n      <md-button class=\"md-primary\" @click=\"snackbarError = false\"\n        >Close</md-button\n      >\n    </md-snackbar>\n  </md-dialog>\n</template>\n\n<script>\nimport {\n  getRealNode,\n  GENERATION_GEO_TYPE,\n  GENERATION_PROJECTION_TYPE,\n} from 'spinal-spatial-referential';\nimport CmdRunViewerGeo from './CmdRunViewerGeo.vue';\nimport CmdRunViewerProjection from './CmdRunViewerProjection.vue';\nconst CmdRunViewer = {\n  name: 'CmdRunViewer',\n  props: ['onFinised'],\n  components: { CmdRunViewerGeo, CmdRunViewerProjection },\n  data() {\n    return {\n      GENERATION_GEO_TYPE,\n      GENERATION_PROJECTION_TYPE,\n      showDialog: true,\n      loading: false,\n      mode: '',\n      status: 0,\n      snackbarError: false,\n      snackbarMessage: '',\n    };\n  },\n  methods: {\n    async opened(option) {\n      if (option) {\n        this.showDialog = true;\n        this.status = 0;\n        let node;\n        if (option.selectedNodeId) {\n          node = getRealNode(option.selectedNodeId);\n        } else {\n          node = option.node;\n        }\n        this.mode = node.info.generationType.get();\n        try {\n          this.loading = true;\n          if (this.mode === GENERATION_GEO_TYPE) {\n            await this.$refs.CmdRunViewerGeo.setUp(node, option.contextId);\n          } else if (this.mode === GENERATION_PROJECTION_TYPE) {\n            await this.$refs.CmdRunViewerProjection.setUp(\n              node,\n              option.contextId\n            );\n          }\n        } catch (error) {\n          console.error(error);\n          this.snackbarError = true;\n          this.snackbarMessage = error;\n        } finally {\n          this.loading = false;\n        }\n      } else {\n        this.snackbarError = true;\n        this.snackbarMessage = 'CmdRunViewer opened without an option';\n        console.error('CmdRunViewer opened without an option');\n      }\n    },\n    async start() {\n      this.loading = true;\n      try {\n        if (this.mode === GENERATION_GEO_TYPE) {\n          await this.$refs.CmdRunViewerGeo.start.call(\n            this.$refs.CmdRunViewerGeo\n          );\n        } else if (this.mode === GENERATION_PROJECTION_TYPE) {\n          await this.$refs.CmdRunViewerProjection.start.call(\n            this.$refs.CmdRunViewerProjection\n          );\n        }\n      } catch (error) {\n        console.error(error);\n        this.snackbarError = true;\n        this.snackbarMessage = 'Generation Error, please retry';\n      } finally {\n        this.loading = false;\n        this.closeDialog();\n      }\n    },\n    getStatus() {\n      switch (this.status) {\n        case 1:\n          return '1/2 - running...';\n        case 2:\n          return '2/2 - checking';\n        case 3:\n          return 'done';\n        case 4:\n          return 'error';\n        default: // standby\n          return 'stand by';\n      }\n    },\n    removed(option) {\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === 'function') this.onFinised();\n    },\n  },\n  watch: {\n    showDialog() {\n      if (this.showDialog === false) this.closeDialog();\n    },\n  },\n};\n\nexport default CmdRunViewer;\n</script>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div>\n    <md-progress-bar\n      class=\"command-run-progress-bar\"\n      v-for=\"index in cmdLen.length\"\n      :key=\"index\"\n      md-mode=\"determinate\"\n      :md-value=\"getProgress(index)\"\n    ></md-progress-bar>\n  </div>\n</template>\n\n<script>\nimport {\n  getCmdServId,\n  decodeCmds,\n  consumeCmdGeo,\n} from 'spinal-spatial-referential';\nimport Axios from 'axios';\n\nexport default {\n  name: 'CmdRunViewerGeo',\n  props: [],\n  data() {\n    return {\n      cmdLen: [],\n      indexCmd: 0,\n      idxInCmd: 0,\n      status: 0,\n    };\n  },\n  watch: {\n    status(value) {\n      this.$emit('status', value);\n    },\n  },\n  methods: {\n    async setUp(node, contextId) {\n      this.indexCmd = 0;\n      this.idxInCmd = 0;\n      this.status = 0;\n      this.nodeId = node.info.id.get();\n      this.contextId = contextId;\n      const servId = getCmdServId(node);\n      const getData = await Axios.get(`/sceen/_?u=${servId}`, {\n        responseType: 'blob',\n      });\n      const arrayBuffer = await getData.data.arrayBuffer();\n      this.dataCmd = decodeCmds(arrayBuffer);\n      this.cmdLen = this.dataCmd.map((it) => it.length);\n      console.log('this.dataCmd', this.dataCmd, this.cmdLen);\n    },\n    async start() {\n      try {\n        this.status = 1;\n        console.log('dataCmdRes', this.dataCmd);\n        await consumeCmdGeo(\n          this.dataCmd,\n          this.nodeId,\n          this.contextId,\n          this.progress\n        );\n        this.status = 2;\n        console.log('doing 2nd pass');\n        await consumeCmdGeo(\n          this.dataCmd,\n          this.nodeId,\n          this.contextId,\n          this.progress\n        );\n        this.status = 3;\n      } catch (error) {\n        this.status = 4;\n        throw error;\n      }\n    },\n    progress(indexCmd, idxInCmd) {\n      this.indexCmd = indexCmd;\n      this.idxInCmd = idxInCmd;\n      console.log(\n        `${indexCmd + 1}/${this.cmdLen.length} => ${idxInCmd}/${\n          this.cmdLen[indexCmd]\n        }`\n      );\n    },\n\n    getProgress(index) {\n      if (this.status === 3) return 100;\n      if (this.status === 1 || this.status === 2) {\n        if (this.indexCmd < index) return 0;\n        if (this.indexCmd > index) return 100;\n        return (this.idxInCmd / this.cmdLen[index]) * 100;\n      }\n      return 0;\n    },\n  },\n};\n</script>\n<style scoped>\n.command-run-progress-bar {\n  margin: 2px 0;\n}\n</style>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <div>\n    <md-progress-bar\n      class=\"command-run-progress-bar\"\n      md-mode=\"determinate\"\n      :md-value=\"progress\"\n    ></md-progress-bar>\n  </div>\n</template>\n\n<script>\nimport {\n  getCmdServId,\n  decodeCmds,\n  consumeCmdProjection,\n} from 'spinal-spatial-referential';\nimport Axios from 'axios';\n\nexport default {\n  name: 'CmdRunViewerProjection',\n  props: [],\n  data() {\n    return {\n      progress: 0,\n      nodeId: '',\n      contextId: '',\n    };\n  },\n  methods: {\n    async setUp(node, contextId) {\n      this.$emit('status', 0);\n      this.progress = 0;\n      this.nodeId = node.info.id.get();\n      this.contextId = contextId;\n      const servId = getCmdServId(node);\n      const getData = await Axios.get(`/sceen/_?u=${servId}`, {\n        responseType: 'blob',\n      });\n      const arrayBuffer = await getData.data.arrayBuffer();\n      this.dataCmd = decodeCmds(arrayBuffer);\n      console.log('this.dataCmd', this.dataCmd);\n    },\n    async start() {\n      try {\n        this.$emit('status', 1);\n        this.progress = 0;\n        console.log('dataCmdRes', this.dataCmd);\n        await consumeCmdProjection(\n          this.dataCmd,\n          this.nodeId,\n          this.contextId,\n          this.onProgress\n        );\n        this.$emit('status', 2);\n        console.log('doing 2nd pass');\n        await consumeCmdProjection(\n          this.dataCmd,\n          this.nodeId,\n          this.contextId,\n          this.onProgress\n        );\n        this.$emit('status', 3);\n      } catch (error) {\n        this.$emit('status', 4);\n        throw error;\n      }\n    },\n    onProgress(percent) {\n      console.log('onProgress => %d %', percent);\n      this.progress = percent;\n    },\n  },\n};\n</script>\n<style scoped>\n.command-run-progress-bar {\n  margin: 2px 0;\n}\n</style>\n","\"use strict\";\n/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REFERENCE_ROOM_RELATION = exports.ROOM_REFERENCE_CONTEXT = exports.ZONE_REFERENCE_CONTEXT = exports.FLOOR_REFERENCE_CONTEXT = exports.BUILDING_REFERENCE_CONTEXT = exports.SITE_REFERENCE_CONTEXT = exports.REFERENCE_RELATION = exports.REFERENCE_TYPE = exports.MAP_RELATION_TYPE = exports.MAP_TYPE_RELATION = exports.GEOGRAPHIC_RELATIONS_ORDER = exports.EQUIPMENT_RELATION = exports.GEOGRAPHIC_RELATIONS = exports.ROOM_RELATION = exports.ZONE_RELATION = exports.FLOOR_RELATION = exports.BUILDING_RELATION = exports.SITE_RELATION = exports.GEOGRAPHIC_TYPES_ORDER = exports.EQUIPMENT_TYPE = exports.GEOGRAPHIC_TYPES = exports.ROOM_TYPE = exports.ZONE_TYPE = exports.FLOOR_TYPE = exports.BUILDING_TYPE = exports.SITE_TYPE = exports.CONTEXT_TYPE = void 0;\nconst CONTEXT_TYPE = 'geographicContext';\nexports.CONTEXT_TYPE = CONTEXT_TYPE;\nconst SITE_TYPE = 'geographicSite';\nexports.SITE_TYPE = SITE_TYPE;\nconst BUILDING_TYPE = 'geographicBuilding';\nexports.BUILDING_TYPE = BUILDING_TYPE;\nconst FLOOR_TYPE = 'geographicFloor';\nexports.FLOOR_TYPE = FLOOR_TYPE;\nconst ZONE_TYPE = 'geographicZone';\nexports.ZONE_TYPE = ZONE_TYPE;\nconst ROOM_TYPE = 'geographicRoom';\nexports.ROOM_TYPE = ROOM_TYPE;\nconst EQUIPMENT_TYPE = 'BIMObject';\nexports.EQUIPMENT_TYPE = EQUIPMENT_TYPE;\nconst REFERENCE_TYPE = 'geographicReference';\nexports.REFERENCE_TYPE = REFERENCE_TYPE;\nconst SITE_RELATION = 'hasGeographicSite';\nexports.SITE_RELATION = SITE_RELATION;\nconst BUILDING_RELATION = 'hasGeographicBuilding';\nexports.BUILDING_RELATION = BUILDING_RELATION;\nconst FLOOR_RELATION = 'hasGeographicFloor';\nexports.FLOOR_RELATION = FLOOR_RELATION;\nconst ZONE_RELATION = 'hasGeographicZone';\nexports.ZONE_RELATION = ZONE_RELATION;\nconst ROOM_RELATION = 'hasGeographicRoom';\nexports.ROOM_RELATION = ROOM_RELATION;\nconst EQUIPMENT_RELATION = 'hasBimObject';\nexports.EQUIPMENT_RELATION = EQUIPMENT_RELATION;\nconst REFERENCE_RELATION = 'hasReferenceObject';\nexports.REFERENCE_RELATION = REFERENCE_RELATION;\nconst REFERENCE_ROOM_RELATION = 'hasReferenceObject.ROOM';\nexports.REFERENCE_ROOM_RELATION = REFERENCE_ROOM_RELATION;\nconst SITE_REFERENCE_CONTEXT = '.SiteContext';\nexports.SITE_REFERENCE_CONTEXT = SITE_REFERENCE_CONTEXT;\nconst BUILDING_REFERENCE_CONTEXT = '.BuildingContext';\nexports.BUILDING_REFERENCE_CONTEXT = BUILDING_REFERENCE_CONTEXT;\nconst FLOOR_REFERENCE_CONTEXT = '.FloorContext';\nexports.FLOOR_REFERENCE_CONTEXT = FLOOR_REFERENCE_CONTEXT;\nconst ZONE_REFERENCE_CONTEXT = '.ZoneContext';\nexports.ZONE_REFERENCE_CONTEXT = ZONE_REFERENCE_CONTEXT;\nconst ROOM_REFERENCE_CONTEXT = '.RoomContext';\nexports.ROOM_REFERENCE_CONTEXT = ROOM_REFERENCE_CONTEXT;\nconst GEOGRAPHIC_TYPES = Object.freeze([\n    SITE_TYPE,\n    BUILDING_TYPE,\n    FLOOR_TYPE,\n    ZONE_TYPE,\n    ROOM_TYPE,\n]);\nexports.GEOGRAPHIC_TYPES = GEOGRAPHIC_TYPES;\nconst GEOGRAPHIC_TYPES_ORDER = Object.freeze([\n    CONTEXT_TYPE,\n    SITE_TYPE,\n    BUILDING_TYPE,\n    FLOOR_TYPE,\n    ZONE_TYPE,\n    ROOM_TYPE,\n    EQUIPMENT_TYPE,\n]);\nexports.GEOGRAPHIC_TYPES_ORDER = GEOGRAPHIC_TYPES_ORDER;\nconst GEOGRAPHIC_RELATIONS = Object.freeze([\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n]);\nexports.GEOGRAPHIC_RELATIONS = GEOGRAPHIC_RELATIONS;\nconst GEOGRAPHIC_RELATIONS_ORDER = Object.freeze([\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n]);\nexports.GEOGRAPHIC_RELATIONS_ORDER = GEOGRAPHIC_RELATIONS_ORDER;\nconst MAP_TYPE_RELATION = Object.freeze(new Map([\n    [SITE_TYPE, SITE_RELATION],\n    [BUILDING_TYPE, BUILDING_RELATION],\n    [FLOOR_TYPE, FLOOR_RELATION],\n    [ZONE_TYPE, ZONE_RELATION],\n    [ROOM_TYPE, ROOM_RELATION],\n    [EQUIPMENT_TYPE, EQUIPMENT_RELATION],\n]));\nexports.MAP_TYPE_RELATION = MAP_TYPE_RELATION;\nconst MAP_RELATION_TYPE = Object.freeze(new Map([\n    [SITE_RELATION, SITE_TYPE],\n    [BUILDING_RELATION, BUILDING_TYPE],\n    [FLOOR_RELATION, FLOOR_TYPE],\n    [ZONE_RELATION, ZONE_TYPE],\n    [ROOM_RELATION, ROOM_TYPE],\n    [EQUIPMENT_RELATION, EQUIPMENT_TYPE],\n]));\nexports.MAP_RELATION_TYPE = MAP_RELATION_TYPE;\n//# sourceMappingURL=constants.js.map","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst CONTEXT_TYPE = 'geographicContext';\nconst SITE_TYPE = 'geographicSite';\nconst BUILDING_TYPE = 'geographicBuilding';\nconst FLOOR_TYPE = 'geographicFloor';\nconst ZONE_TYPE = 'geographicZone';\nconst ROOM_TYPE = 'geographicRoom';\nconst EQUIPMENT_TYPE = 'BIMObject';\nconst REFERENCE_TYPE = 'geographicReference';\n\nconst SITE_RELATION = 'hasGeographicSite';\nconst BUILDING_RELATION = 'hasGeographicBuilding';\nconst FLOOR_RELATION = 'hasGeographicFloor';\nconst ZONE_RELATION = 'hasGeographicZone';\nconst ROOM_RELATION = 'hasGeographicRoom';\nconst EQUIPMENT_RELATION = 'hasBimObject';\nconst REFERENCE_RELATION = 'hasReferenceObject';\nconst REFERENCE_ROOM_RELATION = 'hasReferenceObject.ROOM';\n\nconst SITE_REFERENCE_CONTEXT = '.SiteContext';\nconst BUILDING_REFERENCE_CONTEXT = '.BuildingContext';\nconst FLOOR_REFERENCE_CONTEXT = '.FloorContext';\nconst ZONE_REFERENCE_CONTEXT = '.ZoneContext';\nconst ROOM_REFERENCE_CONTEXT = '.RoomContext';\n\nconst GEOGRAPHIC_TYPES = Object.freeze([\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n]) as string[];\n\nconst GEOGRAPHIC_TYPES_ORDER = Object.freeze([\n  CONTEXT_TYPE,\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  EQUIPMENT_TYPE,\n]) as string[];\n\nconst GEOGRAPHIC_RELATIONS = Object.freeze([\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n]) as string[];\n\nconst GEOGRAPHIC_RELATIONS_ORDER = Object.freeze([\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n]) as string[];\n\nconst MAP_TYPE_RELATION = Object.freeze(\n  new Map([\n    [SITE_TYPE, SITE_RELATION],\n    [BUILDING_TYPE, BUILDING_RELATION],\n    [FLOOR_TYPE, FLOOR_RELATION],\n    [ZONE_TYPE, ZONE_RELATION],\n    [ROOM_TYPE, ROOM_RELATION],\n    [EQUIPMENT_TYPE, EQUIPMENT_RELATION],\n  ])\n) as Map<string, string>;\n\nconst MAP_RELATION_TYPE = Object.freeze(\n  new Map([\n    [SITE_RELATION, SITE_TYPE],\n    [BUILDING_RELATION, BUILDING_TYPE],\n    [FLOOR_RELATION, FLOOR_TYPE],\n    [ZONE_RELATION, ZONE_TYPE],\n    [ROOM_RELATION, ROOM_TYPE],\n    [EQUIPMENT_RELATION, EQUIPMENT_TYPE],\n  ])\n) as Map<string, string>;\n\nexport {\n  CONTEXT_TYPE,\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  GEOGRAPHIC_TYPES,\n  EQUIPMENT_TYPE,\n  GEOGRAPHIC_TYPES_ORDER,\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  GEOGRAPHIC_RELATIONS,\n  EQUIPMENT_RELATION,\n  GEOGRAPHIC_RELATIONS_ORDER,\n  MAP_TYPE_RELATION,\n  MAP_RELATION_TYPE,\n  REFERENCE_TYPE,\n  REFERENCE_RELATION,\n  SITE_REFERENCE_CONTEXT,\n  BUILDING_REFERENCE_CONTEXT,\n  FLOOR_REFERENCE_CONTEXT,\n  ZONE_REFERENCE_CONTEXT,\n  ROOM_REFERENCE_CONTEXT,\n  REFERENCE_ROOM_RELATION\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BIMElement = exports.AbstractElement = undefined;\n\nvar _AbstractElement = require(\"./AbstractElement\");\n\nvar _AbstractElement2 = _interopRequireDefault(_AbstractElement);\n\nvar _BIMElement = require(\"./BIMElement\");\n\nvar _BIMElement2 = _interopRequireDefault(_BIMElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nexports.AbstractElement = _AbstractElement2.default;\nexports.BIMElement = _BIMElement2.default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJzcGluYWxDb3JlIiwicmVxdWlyZSIsImdsb2JhbFR5cGUiLCJ3aW5kb3ciLCJnbG9iYWwiLCJBYnN0cmFjdEVsZW1lbnQiLCJCSU1FbGVtZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBS0E7Ozs7QUFDQTs7Ozs7O0FBTkEsTUFBTUEsYUFBYUMsUUFBUSx5QkFBUixDQUFuQjtBQUNBLE1BQU1DLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixXQUFsQixHQUFnQ0MsTUFBaEMsR0FBeUNELE1BQTVEOztRQVFFRSxlLEdBQUFBLHlCO1FBQ0FDLFUsR0FBQUEsb0IiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cblxuXG5pbXBvcnQgQWJzdHJhY3RFbGVtZW50IGZyb20gJy4vQWJzdHJhY3RFbGVtZW50JztcbmltcG9ydCBCSU1FbGVtZW50IGZyb20gJy4vQklNRWxlbWVudCc7XG5cbmV4cG9ydCB7XG4gIEFic3RyYWN0RWxlbWVudCxcbiAgQklNRWxlbWVudFxufSJdfQ==","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\n\n\nimport AbstractElement from './AbstractElement';\nimport BIMElement from './BIMElement';\n\nexport {\n  AbstractElement,\n  BIMElement\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Utilities = require(\"./Utilities\");\n\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass AbstractElement extends globalType.Model {\n  constructor(_name, _type, name = \"AbstractElement\") {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        name: _name,\n        id: _Utilities.Utilities.guid(name),\n        type: _type\n      });\n    }\n  }\n\n  setName(_name) {\n    this.name.set(_name);\n  }\n\n}\n\nexports.default = AbstractElement;\nspinalCore.register_models([AbstractElement]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9BYnN0cmFjdEVsZW1lbnQuanMiXSwibmFtZXMiOlsic3BpbmFsQ29yZSIsInJlcXVpcmUiLCJnbG9iYWxUeXBlIiwid2luZG93IiwiZ2xvYmFsIiwiQWJzdHJhY3RFbGVtZW50IiwiTW9kZWwiLCJjb25zdHJ1Y3RvciIsIl9uYW1lIiwiX3R5cGUiLCJuYW1lIiwiRmlsZVN5c3RlbSIsIl9zaWdfc2VydmVyIiwiYWRkX2F0dHIiLCJpZCIsIlV0aWxpdGllcyIsImd1aWQiLCJ0eXBlIiwic2V0TmFtZSIsInNldCIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0E7O0FBSEEsTUFBTUEsYUFBYUMsUUFBUSx5QkFBUixDQUFuQjtBQUNBLE1BQU1DLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixXQUFsQixHQUFnQ0MsTUFBaEMsR0FBeUNELE1BQTVEOztBQU9lLE1BQU1FLGVBQU4sU0FBOEJILFdBQVdJLEtBQXpDLENBQStDO0FBQzVEQyxjQUFZQyxLQUFaLEVBQW1CQyxLQUFuQixFQUEwQkMsT0FBTyxpQkFBakMsRUFBb0Q7QUFDbEQ7QUFDQSxRQUFJQyxXQUFXQyxXQUFmLEVBQTRCO0FBQzFCLFdBQUtDLFFBQUwsQ0FBYztBQUNaSCxjQUFNRixLQURNO0FBRVpNLFlBQUlDLHFCQUFVQyxJQUFWLENBQWVOLElBQWYsQ0FGUTtBQUdaTyxjQUFNUjtBQUhNLE9BQWQ7QUFLRDtBQUNGOztBQUVEUyxVQUFRVixLQUFSLEVBQWU7QUFDYixTQUFLRSxJQUFMLENBQVVTLEdBQVYsQ0FBY1gsS0FBZDtBQUNEOztBQWQyRDs7a0JBQXpDSCxlO0FBa0JyQkwsV0FBV29CLGVBQVgsQ0FBMkIsQ0FBQ2YsZUFBRCxDQUEzQiIsImZpbGUiOiJBYnN0cmFjdEVsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cbmltcG9ydCB7XG4gIFV0aWxpdGllc1xufSBmcm9tIFwiLi9VdGlsaXRpZXNcIjtcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBYnN0cmFjdEVsZW1lbnQgZXh0ZW5kcyBnbG9iYWxUeXBlLk1vZGVsIHtcbiAgY29uc3RydWN0b3IoX25hbWUsIF90eXBlLCBuYW1lID0gXCJBYnN0cmFjdEVsZW1lbnRcIikge1xuICAgIHN1cGVyKCk7XG4gICAgaWYgKEZpbGVTeXN0ZW0uX3NpZ19zZXJ2ZXIpIHtcbiAgICAgIHRoaXMuYWRkX2F0dHIoe1xuICAgICAgICBuYW1lOiBfbmFtZSxcbiAgICAgICAgaWQ6IFV0aWxpdGllcy5ndWlkKG5hbWUpLFxuICAgICAgICB0eXBlOiBfdHlwZVxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBzZXROYW1lKF9uYW1lKSB7XG4gICAgdGhpcy5uYW1lLnNldChfbmFtZSlcbiAgfVxuXG59XG5cbnNwaW5hbENvcmUucmVnaXN0ZXJfbW9kZWxzKFtBYnN0cmFjdEVsZW1lbnRdKSJdfQ==","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nimport {\n  Utilities\n} from \"./Utilities\";\n\n\nexport default class AbstractElement extends globalType.Model {\n  constructor(_name, _type, name = \"AbstractElement\") {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        name: _name,\n        id: Utilities.guid(name),\n        type: _type\n      })\n    }\n  }\n\n  setName(_name) {\n    this.name.set(_name)\n  }\n\n}\n\nspinalCore.register_models([AbstractElement])","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nlet Utilities = {};\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nUtilities.getViewer = function () {\n  return new Promise((resolve, reject) => {\n    if (globalType.v === \"undefined\") {\n      let interval = setInterval(() => {\n        if (globalType.v !== \"undefined\") {\n          resolve(globalType.v);\n          clearInterval(interval);\n        }\n      }, 500);\n    } else resolve(globalType.v);\n  });\n};\n\nUtilities.promiseGetProperties = function (_dbId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.getProperties(_dbId, resolve);\n    });\n  });\n};\n\nUtilities.promiseGetExternalIdMapping = function (_externalId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.model.getExternalIdMapping(res => {\n        resolve(res[_externalId]);\n      });\n    });\n  });\n};\n\n// Utilities.promiseLoad = function(_ptr) {\n//   return new Promise(resolve => {\n//     _ptr.load(resolve);\n//   });\n// }\nUtilities.promiseLoad = function (_ptr) {\n  if (_ptr instanceof globalType.Ptr && _ptr.data.value != 0 && typeof FileSystem._objects[_ptr.data.value] != \"undefined\") return Promise.resolve(FileSystem._objects[_ptr.data.value]);else return new Promise(resolve => {\n    _ptr.load(resolve);\n  });\n};\n\nUtilities.getExternalId = (() => {\n  var _ref = _asyncToGenerator(function* (_dbId) {\n    let properties = yield Utilities.promiseGetProperties(_dbId);\n    return properties.externalId;\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();\n\nUtilities.getDbIdByExternalId = (() => {\n  var _ref2 = _asyncToGenerator(function* (_externalId) {\n    let dbid = yield Utilities.promiseGetExternalIdMapping(_externalId);\n    return dbid;\n  });\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n})();\n\nUtilities.arraysEqual = function (arrayA, arrayB) {\n  if (arrayA === arrayB) return true;\n  if (arrayA == null || arrayB == null) return false;\n  if (arrayA.length != arrayB.length) return false;\n  arrayA.sort();\n  arrayB.sort();\n  for (var i = 0; i < arrayA.length; ++i) {\n    if (arrayA[i] !== arrayB[i]) return false;\n  }\n  return true;\n};\n\nUtilities.containsLstById = function (_list, _node) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.id.get() == _node.id.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLstModel = function (_list, _model) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _model.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLst = function (_list, _element) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _element) return true;\n  }\n  return false;\n};\n\nUtilities.include = function (arr, obj) {\n  return arr.indexOf(obj) != -1;\n};\n\nUtilities.getIndex = function (arr, obj) {\n  return arr.indexOf(obj);\n};\n\nUtilities.getIds = function (array) {\n  let res = [];\n  for (let index = 0; index < array.length; index++) {\n    res.push(array[index].id.get());\n  }\n  return res;\n};\n// Utilities.addNotExisting = function(arr, obj) {\n//   return (arr.indexOf(obj));\n// }\n\nUtilities.concat = function (listA, listB) {\n  let res = [];\n  for (let index = 0; index < listA.length; index++) {\n    res.push(listA[index]);\n  }\n  for (let index = 0; index < listB.length; index++) {\n    res.push(listB[index]);\n  }\n  return res;\n};\n\nUtilities.allButMeById = function (_list, _node) {\n  let res = [];\n  for (let index = 0; index < _list.length; index++) {\n    const node = _list[index];\n    if (node.id.get() != _node.id.get()) {\n      res.push(node);\n    }\n    return res;\n  }\n};\n\nUtilities.guid = function (_constructor) {\n  return _constructor + \"-\" + this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4() + this.s4() + \"-\" + Date.now().toString(16);\n};\n\nUtilities.s4 = function () {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\nUtilities.putOnTopLst = function (lst, elementB) {\n  lst.remove_ref(elementB);\n  lst.unshift(elementB);\n  // for (let index = 0; index < lst.length; index++) {\n  //   const element = lst[index];\n  //   if (element.id.get() === elementB.id.get()) {\n  //     lst.remove(index);\n  //   }\n\n  // }\n};\n\nexports.Utilities = Utilities;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","let Utilities = {};\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nUtilities.getViewer = function() {\n  return new Promise((resolve, reject) => {\n    if (globalType.v === \"undefined\") {\n      let interval = setInterval(() => {\n        if (globalType.v !== \"undefined\") {\n          resolve(globalType.v);\n          clearInterval(interval);\n        }\n      }, 500);\n    } else resolve(globalType.v);\n  });\n};\n\nUtilities.promiseGetProperties = function(_dbId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.getProperties(_dbId, resolve);\n    });\n  });\n};\n\nUtilities.promiseGetExternalIdMapping = function(_externalId) {\n  return new Promise(resolve => {\n    Utilities.getViewer().then(viewer => {\n      viewer.model.getExternalIdMapping(res => {\n        resolve(res[_externalId]);\n      });\n    });\n  });\n\n}\n\n\n// Utilities.promiseLoad = function(_ptr) {\n//   return new Promise(resolve => {\n//     _ptr.load(resolve);\n//   });\n// }\nUtilities.promiseLoad = function(_ptr) {\n  if (\n    _ptr instanceof globalType.Ptr &&\n    _ptr.data.value != 0 &&\n    typeof FileSystem._objects[_ptr.data.value] != \"undefined\"\n  )\n    return Promise.resolve(FileSystem._objects[_ptr.data.value]);\n  else\n    return new Promise(resolve => {\n      _ptr.load(resolve);\n    });\n};\n\n\n\n\nUtilities.getExternalId = async function(_dbId) {\n  let properties = await Utilities.promiseGetProperties(_dbId);\n  return properties.externalId;\n};\n\nUtilities.getDbIdByExternalId = async function(_externalId) {\n  let dbid = await Utilities.promiseGetExternalIdMapping(_externalId);\n  return dbid;\n};\n\nUtilities.arraysEqual = function(arrayA, arrayB) {\n  if (arrayA === arrayB) return true;\n  if (arrayA == null || arrayB == null) return false;\n  if (arrayA.length != arrayB.length) return false;\n  arrayA.sort();\n  arrayB.sort();\n  for (var i = 0; i < arrayA.length; ++i) {\n    if (arrayA[i] !== arrayB[i]) return false;\n  }\n  return true;\n};\n\nUtilities.containsLstById = function(_list, _node) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.id.get() == _node.id.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLstModel = function(_list, _model) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _model.get()) return true;\n  }\n  return false;\n};\n\nUtilities.containsLst = function(_list, _element) {\n  for (let index = 0; index < _list.length; index++) {\n    const element = _list[index];\n    if (element.get() == _element) return true;\n  }\n  return false;\n};\n\nUtilities.include = function(arr, obj) {\n  return arr.indexOf(obj) != -1;\n};\n\nUtilities.getIndex = function(arr, obj) {\n  return arr.indexOf(obj);\n};\n\nUtilities.getIds = function(array) {\n  let res = [];\n  for (let index = 0; index < array.length; index++) {\n    res.push(array[index].id.get());\n  }\n  return res;\n};\n// Utilities.addNotExisting = function(arr, obj) {\n//   return (arr.indexOf(obj));\n// }\n\nUtilities.concat = function(listA, listB) {\n  let res = [];\n  for (let index = 0; index < listA.length; index++) {\n    res.push(listA[index]);\n  }\n  for (let index = 0; index < listB.length; index++) {\n    res.push(listB[index]);\n  }\n  return res;\n};\n\nUtilities.allButMeById = function(_list, _node) {\n  let res = [];\n  for (let index = 0; index < _list.length; index++) {\n    const node = _list[index];\n    if (node.id.get() != _node.id.get()) {\n      res.push(node);\n    }\n    return res;\n  }\n};\n\nUtilities.guid = function(_constructor) {\n  return (\n    _constructor +\n    \"-\" +\n    this.s4() +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    \"-\" +\n    this.s4() +\n    this.s4() +\n    this.s4() +\n    \"-\" +\n    Date.now().toString(16)\n  );\n};\n\nUtilities.s4 = function() {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n};\n\nUtilities.putOnTopLst = function(lst, elementB) {\n  lst.remove_ref(elementB);\n  lst.unshift(elementB);\n  // for (let index = 0; index < lst.length; index++) {\n  //   const element = lst[index];\n  //   if (element.id.get() === elementB.id.get()) {\n  //     lst.remove(index);\n  //   }\n\n  // }\n};\n\nexport {\n  Utilities\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _spinalModelsBimobject = require(\"spinal-models-bimobject\");\n\nvar _spinalModelsBimobject2 = _interopRequireDefault(_spinalModelsBimobject);\n\nvar _Utilities = require(\"./Utilities\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass BIMElement extends _spinalModelsBimobject2.default {\n  constructor(_id, _name, _type, name = \"BIMElement\") {\n    super(_id, _name, 0);\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        type: _type || \"BimObject\",\n        externalId: \"\"\n      });\n    }\n  }\n\n  initExternalId() {\n    _Utilities.Utilities.getExternalId(this.id.get()).then(_externalId => {\n      this.externalId.set(_externalId);\n    });\n  }\n\n  initExternalIdAsync() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let _externalId = yield _Utilities.Utilities.getExternalId(_this.id.get());\n      _this.externalId.set(_externalId);\n    })();\n  }\n\n  setName(_name) {\n    this.name.set(_name);\n  }\n\n  toIfc() {\n    return `${this.constructor.name}(${this.id.get()},${this.name.get()});`;\n  }\n\n}\n\nexports.default = BIMElement;\nspinalCore.register_models([BIMElement]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9CSU1FbGVtZW50LmpzIl0sIm5hbWVzIjpbInNwaW5hbENvcmUiLCJyZXF1aXJlIiwiZ2xvYmFsVHlwZSIsIndpbmRvdyIsImdsb2JhbCIsIkJJTUVsZW1lbnQiLCJTcGluYWxCSU1PYmplY3QiLCJjb25zdHJ1Y3RvciIsIl9pZCIsIl9uYW1lIiwiX3R5cGUiLCJuYW1lIiwiRmlsZVN5c3RlbSIsIl9zaWdfc2VydmVyIiwiYWRkX2F0dHIiLCJ0eXBlIiwiZXh0ZXJuYWxJZCIsImluaXRFeHRlcm5hbElkIiwiVXRpbGl0aWVzIiwiZ2V0RXh0ZXJuYWxJZCIsImlkIiwiZ2V0IiwidGhlbiIsIl9leHRlcm5hbElkIiwic2V0IiwiaW5pdEV4dGVybmFsSWRBc3luYyIsInNldE5hbWUiLCJ0b0lmYyIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0E7Ozs7QUFFQTs7Ozs7O0FBTEEsTUFBTUEsYUFBYUMsUUFBUSx5QkFBUixDQUFuQjtBQUNBLE1BQU1DLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixXQUFsQixHQUFnQ0MsTUFBaEMsR0FBeUNELE1BQTVEOztBQVFlLE1BQU1FLFVBQU4sU0FBeUJDLCtCQUF6QixDQUF5QztBQUN0REMsY0FBWUMsR0FBWixFQUFpQkMsS0FBakIsRUFBd0JDLEtBQXhCLEVBQStCQyxPQUFPLFlBQXRDLEVBQW9EO0FBQ2xELFVBQU1ILEdBQU4sRUFBV0MsS0FBWCxFQUFrQixDQUFsQjtBQUNBLFFBQUlHLFdBQVdDLFdBQWYsRUFBNEI7QUFDMUIsV0FBS0MsUUFBTCxDQUFjO0FBQ1pDLGNBQU1MLFNBQVMsV0FESDtBQUVaTSxvQkFBWTtBQUZBLE9BQWQ7QUFJRDtBQUVGOztBQUVEQyxtQkFBaUI7QUFDZkMseUJBQVVDLGFBQVYsQ0FBd0IsS0FBS0MsRUFBTCxDQUFRQyxHQUFSLEVBQXhCLEVBQXVDQyxJQUF2QyxDQUE0Q0MsZUFBZTtBQUN6RCxXQUFLUCxVQUFMLENBQWdCUSxHQUFoQixDQUFvQkQsV0FBcEI7QUFDRCxLQUZEO0FBR0Q7O0FBRUtFLHFCQUFOLEdBQTRCO0FBQUE7O0FBQUE7QUFDMUIsVUFBSUYsY0FBYyxNQUFNTCxxQkFBVUMsYUFBVixDQUF3QixNQUFLQyxFQUFMLENBQVFDLEdBQVIsRUFBeEIsQ0FBeEI7QUFDQSxZQUFLTCxVQUFMLENBQWdCUSxHQUFoQixDQUFvQkQsV0FBcEI7QUFGMEI7QUFHM0I7O0FBSURHLFVBQVFqQixLQUFSLEVBQWU7QUFDYixTQUFLRSxJQUFMLENBQVVhLEdBQVYsQ0FBY2YsS0FBZDtBQUNEOztBQUVEa0IsVUFBUTtBQUNOLFdBQVEsR0FBRSxLQUFLcEIsV0FBTCxDQUFpQkksSUFBSyxJQUFHLEtBQUtTLEVBQUwsQ0FBUUMsR0FBUixFQUFjLElBQUcsS0FBS1YsSUFBTCxDQUFVVSxHQUFWLEVBQWdCLElBQXBFO0FBQ0Q7O0FBL0JxRDs7a0JBQW5DaEIsVTtBQW1DckJMLFdBQVc0QixlQUFYLENBQTJCLENBQUN2QixVQUFELENBQTNCIiwiZmlsZSI6IkJJTUVsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cbmltcG9ydCBTcGluYWxCSU1PYmplY3QgZnJvbSBcInNwaW5hbC1tb2RlbHMtYmltb2JqZWN0XCI7XG5cbmltcG9ydCB7XG4gIFV0aWxpdGllc1xufSBmcm9tIFwiLi9VdGlsaXRpZXNcIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCSU1FbGVtZW50IGV4dGVuZHMgU3BpbmFsQklNT2JqZWN0IHtcbiAgY29uc3RydWN0b3IoX2lkLCBfbmFtZSwgX3R5cGUsIG5hbWUgPSBcIkJJTUVsZW1lbnRcIikge1xuICAgIHN1cGVyKF9pZCwgX25hbWUsIDApO1xuICAgIGlmIChGaWxlU3lzdGVtLl9zaWdfc2VydmVyKSB7XG4gICAgICB0aGlzLmFkZF9hdHRyKHtcbiAgICAgICAgdHlwZTogX3R5cGUgfHwgXCJCaW1PYmplY3RcIixcbiAgICAgICAgZXh0ZXJuYWxJZDogXCJcIlxuICAgICAgfSk7XG4gICAgfVxuXG4gIH1cblxuICBpbml0RXh0ZXJuYWxJZCgpIHtcbiAgICBVdGlsaXRpZXMuZ2V0RXh0ZXJuYWxJZCh0aGlzLmlkLmdldCgpKS50aGVuKF9leHRlcm5hbElkID0+IHtcbiAgICAgIHRoaXMuZXh0ZXJuYWxJZC5zZXQoX2V4dGVybmFsSWQpXG4gICAgfSlcbiAgfVxuXG4gIGFzeW5jIGluaXRFeHRlcm5hbElkQXN5bmMoKSB7XG4gICAgbGV0IF9leHRlcm5hbElkID0gYXdhaXQgVXRpbGl0aWVzLmdldEV4dGVybmFsSWQodGhpcy5pZC5nZXQoKSlcbiAgICB0aGlzLmV4dGVybmFsSWQuc2V0KF9leHRlcm5hbElkKVxuICB9XG5cblxuXG4gIHNldE5hbWUoX25hbWUpIHtcbiAgICB0aGlzLm5hbWUuc2V0KF9uYW1lKVxuICB9XG5cbiAgdG9JZmMoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0oJHt0aGlzLmlkLmdldCgpfSwke3RoaXMubmFtZS5nZXQoKX0pO2BcbiAgfVxuXG59XG5cbnNwaW5hbENvcmUucmVnaXN0ZXJfbW9kZWxzKFtCSU1FbGVtZW50XSlcbiJdfQ==","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nimport SpinalBIMObject from \"spinal-models-bimobject\";\n\nimport {\n  Utilities\n} from \"./Utilities\"\n\nexport default class BIMElement extends SpinalBIMObject {\n  constructor(_id, _name, _type, name = \"BIMElement\") {\n    super(_id, _name, 0);\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        type: _type || \"BimObject\",\n        externalId: \"\"\n      });\n    }\n\n  }\n\n  initExternalId() {\n    Utilities.getExternalId(this.id.get()).then(_externalId => {\n      this.externalId.set(_externalId)\n    })\n  }\n\n  async initExternalIdAsync() {\n    let _externalId = await Utilities.getExternalId(this.id.get())\n    this.externalId.set(_externalId)\n  }\n\n\n\n  setName(_name) {\n    this.name.set(_name)\n  }\n\n  toIfc() {\n    return `${this.constructor.name}(${this.id.get()},${this.name.get()});`\n  }\n\n}\n\nspinalCore.register_models([BIMElement])\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\nexports.default = SpinalBIMObject;\n\nspinalCore.register_models([SpinalBIMObject]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL0JJTU9iamVjdC5qcyJdLCJuYW1lcyI6WyJzcGluYWxDb3JlIiwicmVxdWlyZSIsImdsb2JhbFR5cGUiLCJ3aW5kb3ciLCJnbG9iYWwiLCJTcGluYWxCSU1PYmplY3QiLCJNb2RlbCIsImNvbnN0cnVjdG9yIiwiX2lkIiwiX25hbWUiLCJGaWxlU3lzdGVtIiwiX3NpZ19zZXJ2ZXIiLCJhZGRfYXR0ciIsImlkIiwibmFtZSIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxhQUFhQyxRQUFRLHlCQUFSLENBQW5CO0FBQ0EsTUFBTUMsYUFBYSxPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLEdBQWdDQyxNQUFoQyxHQUF5Q0QsTUFBNUQ7O0FBS0EsTUFBTUUsZUFBTixTQUE4QkgsV0FBV0ksS0FBekMsQ0FBK0M7QUFDN0NDLGNBQVlDLEdBQVosRUFBaUJDLEtBQWpCLEVBQXdCO0FBQ3RCO0FBQ0EsUUFBSUMsV0FBV0MsV0FBZixFQUE0QjtBQUMxQixXQUFLQyxRQUFMLENBQWM7QUFDWkMsWUFBSUwsR0FEUTtBQUVaTSxjQUFNTDtBQUZNLE9BQWQ7QUFJRDtBQUNGO0FBVDRDOztrQkFhaENKLGU7O0FBQ2ZMLFdBQVdlLGVBQVgsQ0FBMkIsQ0FBQ1YsZUFBRCxDQUEzQiIsImZpbGUiOiJCSU1PYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cblxuXG5cbmNsYXNzIFNwaW5hbEJJTU9iamVjdCBleHRlbmRzIGdsb2JhbFR5cGUuTW9kZWwge1xuICBjb25zdHJ1Y3RvcihfaWQsIF9uYW1lKSB7XG4gICAgc3VwZXIoKTtcbiAgICBpZiAoRmlsZVN5c3RlbS5fc2lnX3NlcnZlcikge1xuICAgICAgdGhpcy5hZGRfYXR0cih7XG4gICAgICAgIGlkOiBfaWQsXG4gICAgICAgIG5hbWU6IF9uYW1lXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBTcGluYWxCSU1PYmplY3Q7XG5zcGluYWxDb3JlLnJlZ2lzdGVyX21vZGVscyhbU3BpbmFsQklNT2JqZWN0XSk7Il19","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\n\n\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\n\nexport default SpinalBIMObject;\nspinalCore.register_models([SpinalBIMObject]);"],"names":["spinalCore","require","globalType","window","global","AbstractElement","BIMElement","Model","constructor","_name","_type","name","FileSystem","_sig_server","add_attr","id","Utilities","guid","type","setName","set","register_models","getViewer","Promise","resolve","reject","v","interval","setInterval","clearInterval","promiseGetProperties","_dbId","then","viewer","getProperties","promiseGetExternalIdMapping","_externalId","model","getExternalIdMapping","res","promiseLoad","_ptr","Ptr","data","value","_objects","load","getExternalId","properties","externalId","getDbIdByExternalId","dbid","arraysEqual","arrayA","arrayB","length","sort","i","containsLstById","_list","_node","index","element","get","containsLstModel","_model","containsLst","_element","include","arr","obj","indexOf","getIndex","getIds","array","push","concat","listA","listB","allButMeById","node","_constructor","s4","Date","now","toString","Math","floor","random","substring","putOnTopLst","lst","elementB","remove_ref","unshift","SpinalBIMObject","_id","initExternalId","initExternalIdAsync","toIfc"],"version":3,"file":"spinal-env-viewer-plugin-generate-spatial-reference.916c35ae.js.map"}