{"mappings":";;;;;;;;;;;;;;A;;;;;;;A;;;;;A;;;;;;;;;A;;;;;;;;;A;;;;;A;;;;;A;;;;A;;;;;;A;;;;;;A;;;;;;;;;A;;;;;A;;;;;;A;;;;;A;;;;;;A;;;;A;;;;;A;;;;;;;;;A;;;;;;;A;;;;;;A;;;;A;;;;;A;;;;A;;;;A;;;;;A;;;;A;;;;A;;;;A;;;;A;;;;;;A;;;;;A;;;;;A;;;;;;;A;;;;;;A;;;;;;;A;;;;;;A;;;;A;;;;;A;;;;;;A;;;;A;;;;;A;;;;;A;;;;;;;A;;;;;;A;;;;A;;;;;A","sources":["node_modules/spinal-env-viewer-vue-components-lib/components/Button/BaseIconButtonClass.vue","node_modules/spinal-env-viewer-vue-components-lib/components/Button/BaseIconButtonIn.vue","node_modules/spinal-env-viewer-vue-components-lib/components/Button/BaseIconButtonSrc.vue","node_modules/spinal-env-viewer-vue-components-lib/components/Button/SpinalIconButton.vue","node_modules/spinal-env-viewer-vue-components-lib/components/Button/SpinalBadgeIconButton.vue","node_modules/spinal-env-viewer-vue-components-lib/components/Button/DropUpDownButton.vue","node_modules/spinal-env-viewer-vue-components-lib/components/ColorMarker/ColorMaker.vue","node_modules/spinal-env-viewer-vue-components-lib/components/Nodes/NodeHeader.vue","node_modules/spinal-env-viewer-vue-components-lib/components/Nodes/NodeItem.vue","node_modules/spinal-env-viewer-vue-components-lib/components/Nodes/NodesList.vue","node_modules/spinal-env-viewer-vue-components-lib/components/Nodes/NodeInspector.vue","node_modules/spinal-env-viewer-vue-components-lib/components/ToolsBar/ToolsBar.vue","node_modules/spinal-env-viewer-vue-components-lib/components/ToolsBar/SideBar.vue","node_modules/spinal-env-viewer-vue-components-lib/components/ToolsBar/TopBar.vue","node_modules/spinal-env-viewer-vue-components-lib/components/Selectors/IconSelector.vue","node_modules/spinal-env-viewer-vue-components-lib/components/List/SpinalListItem.vue","node_modules/spinal-env-viewer-vue-components-lib/components/List/SpinalList.vue","node_modules/spinal-env-viewer-plugin-graph-manager/src/vue/App.vue"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","<template>\n    <div class=\"node-header\"\n         @click=\"$emit('click')\"\n    >\n\n        <drop-up-down-button\n                class=\"node-list-icon\"\n                :opened=\"opened\"\n                @click=\"$emit('toggle-display-child')\"\n                :style=\"{visibility: isDropDownVisible}\"/>\n\n        <div  class=\"node-body\">\n            <div class=\"node-name\">\n                {{name}}\n            </div>\n\n\n            <color-maker\n                    class=\"node-color\"\n                    :color=\"color\"/>\n        </div>\n\n\n    </div>\n</template>\n\n<script>\n  import DropUpDownButton from \"../Button/DropUpDownButton.vue\";\n  import ColorMaker from \"../ColorMarker/ColorMaker.vue\";\n\n  export default {\n    name: \"NodeHeader\",\n    components: { ColorMaker, DropUpDownButton },\n    props: {\n      opened: {\n        type: Boolean,\n        default: function () {\n          return false;\n        }},\n      hasChild: {\n        type: Boolean,\n        default: function () {\n          return false;\n        }\n      },\n\n      showHideBimObject: {\n        type: Boolean,\n        default: function () {\n          return false\n        }\n      },\n\n      name: {\n        type: String,\n        default: function () {\n          return \"UNKNOWN NAME\"\n        }\n      },\n\n      color: {\n        type: String,\n        default: function () {\n          return \"\"\n        }\n      }\n    },\n    computed: {\n      isDropDownVisible: function () {\n        if (!this.hasChild) {\n          return \"hidden\";\n        }\n        return \"\";\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n    .node-header {\n        position: relative;\n        width: 100%;\n        height: 36px;\n        padding: 9px 6px 6px 13px;\n\n    }\n\n    .node-header:hover {\n        background-color: rgba(0, 0, 0, 0.3);\n        cursor: pointer;\n    }\n\n    .node-list-icon {\n        position: absolute;\n        left: 0;\n        top: 7px;\n        width: 21px;\n        user-select: none;\n        -moz-user-select: none;\n\n    }\n\n    .node-name {\n        position: absolute;\n        left: 26px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        width: calc(100% - 77px);\n    }\n\n\n    .node-color {\n        position: absolute;\n        right: 0;\n    }\n</style>\n","<!--\n  - Copyright 2019 SpinalCom - www.spinalcom.com\n  -\n  -  This file is part of SpinalCore.\n  -\n  -  Please read all of the following terms and conditions\n  -  of the Free Software license Agreement (\"Agreement\")\n  -  carefully.\n  -\n  -  This Agreement is a legally binding contract between\n  -  the Licensee (as defined below) and SpinalCom that\n  -  sets forth the terms and conditions that govern your\n  -  use of the Program. By installing and/or using the\n  -  Program, you agree to abide by all the terms and\n  -  conditions stated or referenced herein.\n  -\n  -  If you do not agree to abide by these terms and\n  -  conditions, do not demonstrate your acceptance and do\n  -  not install or use the Program.\n  -  You should have received a copy of the license along\n  -  with this file. If not, see\n  -  <http://resources.spinalcom.com/licenses.pdf>.\n  -->\n\n<template>\n    <div v-if=\"isInContext\"  >\n        <node-header\n                :class=\"{active: isActive, context: isContext}\"\n                :color=\"color\"\n                :has-child=\"hasChildInContext(nodeInfo.id, contextId)\"\n                :name=\"name\"\n                :show-hide-bim-object=\"showHideBimObject\"\n                :opened=\"opened\"\n                v-tooltip=\"name\"\n                @click=\"onHeaderClick\"\n                @hide-bim-object=\"onHideBimObject\"\n                @right-click=\"onHeaderRightClick\"\n                @toggle-display-child=\"onToggleDisplayChildren\"\n        />\n\n        <node-item\n                class=\"node-item\"\n                v-if=\"opened\"\n                v-for=\"(child) in childrenIds.filter(onlyUnique)\"\n                :key=\"child\"\n\n\n                :active-nodes-id=\"activeNodesId\"\n                :context-id=\"contextId\"\n                :nodes=\"nodes\"\n                :node-info=\"genNodeRef(nodes[child])\"\n\n                :has-child-in-context=\"hasChildInContext\"\n                :show-hide-object=\"showHideBimObject\"\n\n                @click=\"$emit('click', $event)\"\n                @hide-bim-object=\"$emit('hide-bim-object', $event)\"\n                @right-click=\"$emit('click-right', $event)\"\n\n        />\n\n    </div>\n\n</template>\n\n<script>\n  import NodeHeader from \"./NodeHeader.vue\";\n  import genNodeRef from \"./genNodeRef.js\";\n\n  export default {\n    name: \"NodeItem\",\n\n    components: { NodeHeader },\n\n    data: function () {\n      return {\n        opened: false\n      }\n    },\n\n    props: {\n      activeNodesId: {\n        type: Array,\n        default: function () {\n          return []\n        }\n      },\n      contextId: {\n        type: String,\n        required: true\n      },\n      nodes: {\n        type: Object,\n        default: function () {\n          return {}\n        }\n      },\n      nodeInfo: {\n        type: Object,\n      },\n      showHideBimObject: {\n        type: Boolean,\n        default: function () {\n          return false;\n        }\n      },\n      hasChildInContext: {\n        type: Function,\n        required: true\n      }\n    },\n\n    computed: {\n\n      isActive: function () {\n        return this.activeNodesId.includes( this.nodeInfo.id )\n      },\n      isContext: function () {\n        return this.nodeInfo.id === this.contextId;\n      },\n      name: function () {\n        if (this.nodeInfo.hasOwnProperty( 'name' ) &&\n          typeof this.nodeInfo.name !== \"undefined\")\n          return this.nodeInfo.name;\n        return 'Uknown Name';\n      },\n      color: function () {\n\n        if (\n          (typeof this.nodeInfo !== \"undefined\")\n          && (this.nodeInfo.hasOwnProperty( 'color' ))\n        )\n          return this.nodeInfo.color;\n      },\n      isInContext: function () {\n        if (\n          (typeof this.nodeInfo !== \"undefined\")\n          && (this.nodeInfo.hasOwnProperty( 'contextIds' ))\n        ) {\n          return this.nodeInfo.contextIds.hasOwnProperty( this.contextId ) ||\n            this.contextId === this.nodeInfo.id;\n        }\n\n        return false;\n      },\n      childrenIds() {\n        return this.nodeInfo.childrenIds.filter(this.onlyUnique);\n      }\n    },\n\n    methods: {\n      genNodeRef,\n      onlyUnique: function ( value, index, self ) {\n        return self.indexOf( value ) === index;\n      },\n      onHideBimObject: function ( event ) {\n        if (this.showHideBimObject) {\n          if (typeof event === \"undefined\")\n            event = this.nodeInfo.id;\n          this.emit( 'hide-bim-object', event );\n        }\n      },\n\n      onToggleDisplayChildren: function () {\n        // TO DO \n        // - peu etre mettre un state \"loading\" ici ou dans le NodeHeader\n        // - test si on a pas deja pull les children ?\n        this.$store\n          .dispatch(\"pullChildren\", this.nodeInfo.id)\n          .then(() => {\n            this.opened = !this.opened;\n          })\n          .catch(e => console.error(e));\n      },\n\n      onHeaderClick: function () {\n\n        const event = {};\n        event['contextId'] = this.contextId;\n        event['nodeId'] = this.nodeInfo.id;\n        this.$emit( 'click', event )\n\n      },\n\n      onHeaderRightClick: function () {\n\n        const event = {};\n        event['contextId'] = this.contextId;\n        event['nodeId'] = this.nodeInfo.id;\n        this.$emit( 'right-click', event )\n\n      }\n    },\n\n\n  }\n</script>\n\n<style scoped>\n\n    .node-item {\n        width: 100%;\n        padding-left: 18px;\n    }\n\n    .active {\n        background-color: #365bab !important;\n    }\n\n    .context {\n        background-color: rgba(46, 46, 46, 0.5);\n    }\n\n\n</style>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","<!--\n\n- Copyright 2019 SpinalCom - www.spinalcom.com\n-\n-  This file is part of SpinalCore.\n-\n-  Please read all of the following terms and conditions\n-  of the Free Software license Agreement (\"Agreement\")\n-  carefully.\n-\n-  This Agreement is a legally binding contract between\n-  the Licensee (as defined below) and SpinalCom that\n-  sets forth the terms and conditions that govern your\n-  use of the Program. By installing and/or using the\n-  Program, you agree to abide by all the terms and\n-  conditions stated or referenced herein.\n-\n-  If you do not agree to abide by these terms and\n-  conditions, do not demonstrate your acceptance and do\n-  not install or use the Program.\n-  You should have received a copy of the license along\n-  with this file. If not, see\n-  <http://resources.spinalcom.com/licenses.pdf>.\n-->\n<template>\n  <div class=\"node-inspector\">\n    <!-- <div class=\"node-inspector-name\">\n      {{ name }}\n    </div> -->\n\n    <md-field v-if=\"relationNames.length > 0\">\n      <label for=\"relationNames\">Relations</label>\n      <md-select id=\"relationNames\"\n                 v-model=\"relationName\"\n                 name=\"relationName\">\n        <md-option v-for=\"(relName, index) in relationNames\"\n                   :key=\"index\"\n                   :value=\"relName\">\n          {{ relName }}\n        </md-option>\n      </md-select>\n    </md-field>\n    <div class=\"node-inspector-children\">\n      <i v-if=\"editMode\"\n         class=\"material-icons node-inspector-btn-icon\"\n         @click=\"sort()\">\n        sort_by_alpha\n      </i>\n\n      <div v-for=\"(info, index) in lstCompu\"\n           :key=\"info._server_id\"\n           class=\"node-inspector-child\">\n        <template v-if=\"editMode\">\n          <i class=\"material-icons node-inspector-btn-icon\"\n             :class=\"{'arrow-disable': index === 0}\"\n             @click=\"moveUp(info, index)\">\n            keyboard_arrow_up\n          </i>\n          <i class=\"material-icons node-inspector-btn-icon\"\n             :class=\"{'arrow-disable': lstCompu.length -1 <= index}\"\n             @click=\"moveDown(info, index)\">\n            keyboard_arrow_down\n          </i>\n        </template>\n        <div v-if=\"info.hasOwnProperty('name')\"\n             class=\"node-inspector-child-name\">\n          {{ info.name }}\n        </div>\n        <div v-else\n             class=\"node-inspector-child-name\">\n          undefined\n        </div>\n\n        <div class=\"node-inspector-child-delete-buttons\">\n          <md-menu md-direction=\"bottom-start\">\n            <i class=\"material-icons node-inspector-btn-icon\"\n               md-menu-trigger>\n              more_vert\n            </i>\n            <md-menu-content>\n              <!-- <md-menu-item @click=\"$emit('remove-from-parent', info.id)\">\n                Remove children\n              </md-menu-item> -->\n              <md-menu-item @click=\"$emit('remove-from-graph', info.id)\">\n                Remove from graph\n              </md-menu-item>\n            </md-menu-content>\n          </md-menu>\n          <!--\n          <i class=\"material-icons node-inspector-btn-icon\"\n             @click=\"$emit('remove-from-graph', info.id)\">\n            delete\n          </i>\n          <i class=\"material-icons node-inspector-btn-icon\"\n             @click=\"$emit('remove-from-parent', info.id)\">\n            delete\n          </i> -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// import deleteForEvener from \"./remove-forever.svg\";\n\nexport default {\n  name: \"NodeInspector\",\n  props: {\n    childInfo: {\n      type: Array,\n      default: function () {\n        return [];\n      }\n    },\n    defaultRelationName: {\n      type: String,\n      default: function () {\n        return \"\";\n      }\n    },\n    relationNames: {\n      type: Array,\n      default: function () {\n        return [];\n      }\n    },\n    editMode: {\n      type: Boolean,\n      default: function () {\n        return false;\n      }\n    }\n  },\n  data: function () {\n    return {\n      relationName: this.defaultRelationName,\n      lstCompu: []\n      // deleteForEvenerIcon: deleteForEvener,\n    };\n  },\n  watch: {\n    relationName: {\n      handler: function (newValue) {\n        if (newValue !== \"\") this.$emit(\"get-children\", newValue);\n      }\n    },\n    childInfo: {\n      handler: function () {\n        this.reset();\n      }\n    }\n  },\n  methods: {\n    moveUp(info, idx) {\n      if (idx === 0) return;\n      this.lstCompu.splice(idx, 1);\n      this.lstCompu.splice(idx - 1, 0, info);\n    },\n    moveDown(info, idx) {\n      if (this.lstCompu.length - 1 <= idx) return;\n      this.lstCompu.splice(idx, 1);\n      this.lstCompu.splice(idx + 1, 0, info);\n    },\n    sort() {\n      this.lstCompu.sort((a, b) => {\n        return a.name ? a.name.localeCompare(b.name) : -1;\n      });\n    },\n    returnSort() {\n      return this.lstCompu;\n    },\n    reset() {\n      console.log(this.childInfo);\n      this.lstCompu = [];\n      this.lstCompu.push(...this.childInfo);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.arrow-disable {\n  color: #7e7e7e;\n  background: unset !important;\n  cursor: alias !important;\n}\n.node-inspector-name {\n  text-align: center;\n  height: 30px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  font-size: 28px;\n}\n.node-inspector-children {\n  overflow-y: auto;\n  max-height: 40vh;\n}\n.node-inspector-btn-icon {\n  cursor: pointer;\n  user-select: none;\n}\n.node-inspector-btn-icon:hover {\n  background: #7e7e7e;\n  border-radius: 50%;\n}\n.node-inspector-children::-webkit-scrollbar {\n  width: 4px;\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  background-color: #121212;\n}\n\n.node-inspector-children::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n}\n.node-inspector-children::-webkit-scrollbar-thumb {\n  outline: 1px solid slategrey;\n  background-color: #737374;\n}\n\n.node-inspector-child {\n  border: 1px solid #979797;\n  position: relative;\n  width: 100%;\n  height: 30px;\n  display: flex;\n  padding: 4px;\n}\n\n.node-inspector-child-name {\n  padding-left: 4%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.node-inspector-child-delete-buttons {\n  position: absolute;\n  right: 4%;\n  display: flex;\n}\n\n.node-inspector {\n  max-height: 70vh;\n}\n</style>\n","<template>\n    <div class=\"tool-bar\">\n        <spinal-badge-icon-button\n                v-for=\"(b, index) in buttons\"\n                :key=\"index\"\n                :background-color=\"b.button.backgroundColor\"\n                :font-color=\"b.button.fontColor\"\n                :icon=\"b.button.icon\"\n                :icon_type=\"b.button.icon_type\"\n                :tool-tip=\"b.button.toolTip\"\n                :tool-tip-direction=\"b.button.toolTipDirection\"\n                :badge_background_color=\"b.badge_content.backgroundColor\"\n                :badge_font_color=\"b.badge_content.fontColor\"\n                :badge_label=\"b.badge_content.label\"\n                @click=\"b.button.action(option)\"\n        />\n    </div>\n</template>\n\n<script>\n\n\n    import SpinalBadgeIconButton from \"../Button/SpinalBadgeIconButton.vue\";\n\n    export default {\n        name: \"ToolsBar\",\n        components: {SpinalBadgeIconButton},\n        props: {\n            buttons: {\n                type: Array,\n                required: true,\n            },\n            option: {\n                type: Object,\n\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .tool-bar {\n        min-width: 30px;\n        min-height: 30px;\n    }\n</style>","<template>\n    <tools-bar class=\"sideBar\"\n               :buttons=\"buttons\"\n               :option=\"option\"\n    />\n</template>\n\n<script>\n  import ToolsBar from \"./ToolsBar.vue\";\n\n  export default {\n    name: \"sideBar\",\n    components: { ToolsBar },\n    props: {\n      buttons: {\n        type: Array,\n        required: true,\n      },\n      option: {\n        type: Object,\n        required: true\n      }\n    }\n  }\n</script>\n\n<style scoped>\n    .sideBar {\n        width: 50px;\n    }\n</style>","<template>\n    <tools-bar class=\"top-bar\"\n            :buttons=\"buttons\"\n            :option=\"option\"\n    />\n</template>\n\n<script>\n  import ToolsBar from \"./ToolsBar.vue\";\n\n  export default {\n        name: \"topBar\",\n        components: {ToolsBar},\n        props: {\n            buttons: {\n                type: Array,\n                required: true,\n            },\n            option:{\n                type: Object\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .top-bar {\n        min-height: 30px;\n    }\n</style>","<!--\n  - Copyright 2019 SpinalCom - www.spinalcom.com\n  -\n  -  This file is part of SpinalCore.\n  -\n  -  Please read all of the following terms and conditions\n  -  of the Free Software license Agreement (\"Agreement\")\n  -  carefully.\n  -\n  -  This Agreement is a legally binding contract between\n  -  the Licensee (as defined below) and SpinalCom that\n  -  sets forth the terms and conditions that govern your\n  -  use of the Program. By installing and/or using the\n  -  Program, you agree to abide by all the terms and\n  -  conditions stated or referenced herein.\n  -\n  -  If you do not agree to abide by these terms and\n  -  conditions, do not demonstrate your acceptance and do\n  -  not install or use the Program.\n  -  You should have received a copy of the license along\n  -  with this file. If not, see\n  -  <http://resources.spinalcom.com/licenses.pdf>.\n  -->\n\n<template>\n    <div>\n        <label>{{title}} : </label>\n\n        <spinal-icon-button\n                v-if=\"!open\"\n                v-on:click=\"open = !open\"\n                :icon=\"defaultIcon\"\n                :tool-tip=\"defaultToolTip\"/>\n        <div class=\"spinal-icon-selector\" v-else>\n        <spinal-icon-button class=\"spinal-icon-selector-item\"\n                v-for=\"(icon, index) in icons\"\n                :key=\"index\"\n                v-on:click=\"setSelectedIcon(icon)\"\n                :icon=\"icon\"/>\n        </div>\n    </div>\n\n</template>\n\n<script>\n  import { SpinalIconButton } from '../Button'\n\n\n  export default {\n    name: \"IconSelector\",\n    components: { SpinalIconButton },\n\n\n    data: function () {\n      return {\n        selectedIcon: '',\n        empty: '',\n        open: false\n      }\n    },\n\n    props: {\n      icons: {\n        type: Array,\n        default: function () {\n          return []\n        }\n      },\n      title: {\n        type: String,\n        default: function (){\n          return 'Chose an icon'\n        }\n\n      }\n    },\n    computed: {\n      defaultIcon: function () {\n        if (this.selectedIcon === '')\n          return 'add_circle_outline';\n        return this.selectedIcon;\n      },\n      defaultToolTip: function () {\n        if (this.selectedIcon === '')\n          return 'add icon';\n        return 'change icon'\n      }\n    },\n    methods: {\n      setSelectedIcon: function ( icon ) {\n        this.selectedIcon = icon;\n        this.$emit( 'icon-selected', this.selectedIcon );\n        this.open = !this.open;\n      }\n    }\n  }\n</script>\n\n<style>\n    .spinal-icon-selector{\n        display: grid;\n        grid-template-columns: auto auto auto;\n    }\n    .spinal-icon-selector-item{\n        text-align: center;\n    }\n    .md-menu-content {\n        z-index: 10;\n    }\n</style>","<!--\n  - Copyright 2019 SpinalCom - www.spinalcom.com\n  -\n  -  This file is part of SpinalCore.\n  -\n  -  Please read all of the following terms and conditions\n  -  of the Free Software license Agreement (\"Agreement\")\n  -  carefully.\n  -\n  -  This Agreement is a legally binding contract between\n  -  the Licensee (as defined below) and SpinalCom that\n  -  sets forth the terms and conditions that govern your\n  -  use of the Program. By installing and/or using the\n  -  Program, you agree to abide by all the terms and\n  -  conditions stated or referenced herein.\n  -\n  -  If you do not agree to abide by these terms and\n  -  conditions, do not demonstrate your acceptance and do\n  -  not install or use the Program.\n  -  You should have received a copy of the license along\n  -  with this file. If not, see\n  -  <http://resources.spinalcom.com/licenses.pdf>.\n  -->\n\n<template>\n    <div class=\"list-item\">\n        <div class=\"item-header\">\n            <drop-up-down-button\n                    v-if=\"children.length > 0\"\n                    class=\"node-list-icon\"\n                    @click=\"opened = !opened\"\n                    :style=\"{visibility: isDropDownVisible}\"\n                    :opened=\"opened\"\n            >\n\n            </drop-up-down-button>\n\n            <div @click=\"onClick\" :class=\"{active: isActive()}\">\n                {{item.name}}\n            </div>\n        </div>\n        <spinal-list-item\n                class=\"list-item-child\"\n                v-if=\"opened\"\n                v-for=\"(child, index) in children\"\n\n                :parent-active=\"active\"\n                :item=\"child\"\n                :value=\"child.value\"\n                :parent=\"{value, parent}\"\n\n                @selected=\"onChildClick\"\n        />\n    </div>\n</template>\n\n<script>\n  import SpinalList from \"./SpinalList.vue\";\n  import DropUpDownButton from \"../Button/DropUpDownButton.vue\";\n\n  export default {\n    name: \"SpinalListItem\",\n    components: { DropUpDownButton, SpinalList },\n    props: {\n      parent: { parent: null, value: null },\n      item: {},\n      value: '',\n      parentActive: false\n    },\n    data: function () {\n      return {\n        opened: false,\n        active: false,\n      }\n    },\n    computed: {\n      children: function () {\n        if (this.item.hasOwnProperty( 'children' )) {\n          return this.item.children;\n        }\n        return []\n      }\n    },\n    methods: {\n      onClick: function () {\n        this.active = !this.active;\n        this.$emit( 'selected', { value: {id:this.item.id, value: this.value},\n          parent:\n          this.parent\n        } )\n      },\n      onChildClick: function ( event ) {\n        this.active = false;\n\n        this.$emit( 'selected', event )\n      },\n      isActive: function () {\n        return this.active && !this.parentActive\n      }\n    }\n  }\n</script>\n\n<style scoped>\n    .item-header {\n        display: flex;\n    }\n\n    .list-item-child {\n        padding-left: 18px;\n    }\n\n    .active {\n        color: #365bab;\n    }\n</style>","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","<!--\n  - Copyright 2019 SpinalCom - www.spinalcom.com\n  -\n  -  This file is part of SpinalCore.\n  -\n  -  Please read all of the following terms and conditions\n  -  of the Free Software license Agreement (\"Agreement\")\n  -  carefully.\n  -\n  -  This Agreement is a legally binding contract between\n  -  the Licensee (as defined below) and SpinalCom that\n  -  sets forth the terms and conditions that govern your\n  -  use of the Program. By installing and/or using the\n  -  Program, you agree to abide by all the terms and\n  -  conditions stated or referenced herein.\n  -\n  -  If you do not agree to abide by these terms and\n  -  conditions, do not demonstrate your acceptance and do\n  -  not install or use the Program.\n  -  You should have received a copy of the license along\n  -  with this file. If not, see\n  -  <http://resources.spinalcom.com/licenses.pdf>.\n  -->\n\n<template>\n    <div class=\"plugin-graph-viewer\" >\n\n        <div class=\"graph-manager-top-bar\">\n\n            <top-bar :buttons=\"topBarButton\"\n                     :option=\"graph\"\n                     class=\"graph-manager-top-tools-bar\"\n            />\n\n\n            <input v-if=\"isSearchActive\"\n                   v-model=\"searchText\"\n                   placeholder=\"search name \"\n            />\n            <spinal-icon-button\n                    v-else\n                    class=\"plugin-graph-viewer-refresh\"\n                    icon=\"search\"\n                    tool-tip=\"search graph\"\n                    v-on:click=\"isSearchActive = true\"\n            />\n\n\n            <spinal-icon-button\n                    class=\"plugin-graph-viewer-refresh\"\n                    icon=\"refresh\"\n                    tool-tip=\"refresh graph\"\n                    v-on:click=\"refresh\"\n            />\n\n        </div>\n\n        <div class=\"graph-manager-body\" >\n\n\n\n            <nodes-list class=\"graph-viewer\"\n\n                        :active-nodes-id=\"activeNodesId\"\n                        :contexts-id=\"displayNodes\"\n\n                        :has-child-in-context=\"hasChildInContext\"\n                        :nodes=\"nodes\"\n                        :show-hide-bim-object=\"false\"\n\n                        @click=\"onNodeSelected\"\n                        @right-click=\"\"\n                        @hide-bim-object=\"onHideBimObject\"\n            />\n            <side-bar class=\"graph-manager-side-bar\"\n                      :buttons=\"sideBarButton\"\n                      :option=\"selectedNode\"\n            />\n\n        </div>\n    </div>\n</template>\n\n<script>\n\n  function test() {\n    const res = {};\n    for (const arg of arguments) {\n      Object.assign( res, arg );\n    }\n    return res;\n  }\n\n  import {\n    NodeList,\n    SideBar,\n    SpinalIconButton,\n    TopBar\n  } from \"spinal-env-viewer-vue-components-lib\";\n  import {\n    mapGetters,\n    mapState\n  } from 'vuex'\n\n  export default {\n    name: 'graph-manager',\n    components: {\n      SpinalIconButton,\n      sideBar: SideBar,\n      TopBar: TopBar,\n      NodesList: NodeList\n    },\n    data: function () {\n      return {\n        isSearchActive: false,\n        searchText: '',\n        displayNodes: []\n      }\n    },\n    computed: test(\n      mapState( [\n        'topBarButton',\n        'sideBarButton',\n        'contextsId',\n        'nodes',\n        'activeNodesId',\n        'selectedNode',\n        'searchId',\n        'nodes'\n      ] ),\n      mapGetters( ['arrayNode', 'getChildrenId', 'hasChildInContext'] ),\n      {\n        isV6: function(){\n          return LMV_VIEWER_VERSION.includes('6')\n        },\n\n      }\n    ),\n    methods: {\n      onNodeSelected: function ( event ) {\n        this.$store.dispatch( \"onNodeSelected\", event )\n          .then()\n          .catch( e => console.error( e ) );\n      },\n\n      height: function () {\n        return \"100%\";\n      },\n\n      onHideBimObject: function ( event ) {\n        console.log( \"hide bim obj event\", event )\n      },\n\n      refresh: function () {\n        this.$store.commit( 'REFRESH' )\n      },\n\n    },\n    watch: {\n      'searchText': {\n        handler: function ( value ) {\n          this.$store.commit( 'SEARCH_TEXT', value );\n          if (value.length === 0) {\n            this.displayNodes = this.contextsId;\n            this.isSearchActive = false;\n          } else {\n            this.displayNodes = this.searchId;\n          }\n        }\n      },\n      immediate: true\n    },\n    mounted() {\n      this.displayNodes = this.contextsId\n    }\n  }\n\n</script>\n\n<style>\n    .plugin-graph-viewer {\n        overflow: hidden;\n        width: 260px;\n    }\n\n    .plugin-graph-viewer * {\n        margin: 0;\n        box-sizing: border-box;\n    }\n\n    .graph-viewer {\n        border-right: 1px solid rgba(128, 128, 128, 0.64);\n        width: 100%;\n        overflow-y: auto;\n        overflow-x: hidden;\n    }\n\n    .graph-manager-top-bar {\n        display: flex;\n        background-color: rgba(52, 52, 52, 0.85);\n        border-bottom: 1px solid rgba(128, 128, 128, 0.64);\n    }\n\n    .graph-manager-side-bar {\n        overflow-y: auto;\n        overflow-x: hidden;\n        background-color: rgba(52, 52, 52, 0.85);\n        border-bottom: 1px solid rgba(128, 128, 128, 0.64);\n\n    }\n\n    .graph-manager-side-bar::-webkit-scrollbar {\n        width: 2px;\n        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n        background-color: #121212;\n    }\n\n    .graph-manager-side-bar::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n    }\n    .graph-manager-side-bar::-webkit-scrollbar-thumb {\n        outline: 1px solid slategrey;\n        background-color: #737374;\n    }\n\n\n\n    .graph-viewer::-webkit-scrollbar {\n        width: 4px;\n        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n        background-color: #121212;\n    }\n\n    .graph-viewer::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n    }\n\n    .graph-viewer::-webkit-scrollbar-thumb {\n        outline: 1px solid slategrey;\n        background-color: #737374;\n    }\n\n    .plugin-graph-viewer-refresh {\n        float: right;\n        font-size: 2%;\n    }\n\n    .graph-manager-top-tools-bar {\n        float: left;\n        width: 98%;\n        overflow: auto;\n        display: flex;\n    }\n\n    .graph-manager-top-tools-bar::-webkit-scrollbar {\n        height: 5px;\n        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n        background-color: #121212;\n    }\n\n    .graph-manager-top-tools-bar::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n    }\n\n    .graph-manager-top-tools-bar::-webkit-scrollbar-thumb {\n        outline: 1px solid slategrey;\n        background-color: #737374;\n    }\n\n    .graph-manager-body {\n        display: flex;\n        width: 100%;\n        height: calc(100% - 41px);\n    }\n\n\n</style>\n"],"names":[],"version":3,"file":"spinal-env-viewer-plugin-graph-manager.09971ede.css.map"}