{"mappings":"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CZ,IAAI,CAAC,SAAS;wBACd,IAAI,CAAC,YAAY;oBACnB;gBACF;gBAEA,YAAY,GAAG,EAAE;oBACf,IAAI,IAAI,CAAC,WAAW,MAClB,IAAI,CAAC,WAAW;yBAEhB,IAAI,CAAC,UAAU;gBAEnB;gBAEA;;SAEC,GACD,UAAU,WAAW,EAAE;oBACrB,IAAI,CAAC,WAAW;gBAClB;YACF;YACA,IAAI,sBAAsB,IAAI;YAC9B,0BAA0B,cAAc,IAAI,MAAM;QACpD;IACF;AACF;;;;;AC/GA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAgC;IAC9C,OAAO,kBAAkB,QAAQ,oBAAgC;IACjE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA6B;IAC3D,QAAQ,mBAA8B,QAAQ;IAC9C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;;A;;A;A,I,gB;I,M;I,O;Q;K;I;Q,I,C,a,C,G,uB;Q,O;Y,Y;Y,O;Y,Y;Y,c,C,G,uD,E,U;Y,K;gB,U;gB,M;Y;Y,U,K;Q;I;I,S;Q,Q,M;Y,I,C,Q,O;Y,I,O,iB;gB,I,C,I,W;gB,I,C,I,O,O;Y,O;gB,I,C,I,W;gB,I,C,I,O;Y;Y,I,O,U,I,C,W,O;Q;Q,S,M;Y,I,Q;gB,I,Q,I,C,W;gB,I,I,C,I,U,I,C,e,I,C,I;gB,C,G,6D,E,mB,O,I,C,c,K,C;oB,I,C,U,K,K,G;gB;Y;Y,I,C,a;Q;Q,a,W;Y,I,O,I,C,c,Y,I,C,U;Q;Q,W,E;Y,I,I,C,Y,O,I,C,a,Y,I,C,S;Y,C,G,uB,E,M,e;QAmDf;QAEA;Y,O,I,C,W,O,W;QAEA;I;IAEA,SAAA;QACA,aAAA,SAAA,IAAA;YACA,OAAA,KAAA;QACA;IACA;A;AAGA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;;;ACjFA;;AACA;;AAGA,MAAM,WAAW,IAAI,CAAA,GAAA,mBAAE;AAEvB,SAAS,IAAI,aAAa,CAAC;IACzB,CAAA,GAAA,yBAAQ,EAAE,cAAc,KAAK,IAAI,KAAK,CAAA;QA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3E;AACA;AACA;AACA;AACA;AACA;kBAEe;IAAC;QACZ,MAAM;QACN,MAAM,CAAA,GAAA,uBAAW;IACnB;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,oBAAQ;IAChB;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,wBAAY;IACpB;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,qBAAS;IACjB;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,oBAAQ;IAChB;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,oBAAQ;IAChB;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,yBAAa;IACrB;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,wCAAgB,EAAE;IAC1B;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,sCAAc,EAAE;IACxB;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,uCAAe,EAAE;IACzB;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,6CAAqB,EAAE;IAC/B;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,qBAAQ;IAChB;IACA;QACE,MAAO;QACP,MAAO,CAAA,GAAA,sCAAS;IAClB;IACA;QACE,MAAO;QACP,MAAO,CAAA,GAAA,sEAAwB,EAAE;IACnC;IACA;QACE,MAAM;QACN,MAAM,CAAA,GAAA,4DAAoB,EAAE;IAC9B;CACD;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,O;Y,a,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Y,a,S,M;gB,O,I,Y;Y;Q;I,G;Q,G,mB;Y,I,G,I,G,I,G,e,I;S;Q,I,G;Q,G,qB;Y,a;Q,G;Y,G,O;gB,G,Y;oB,G,S;wB,I,G;qB;oB,I,G;oB,G,Y;wB,O;4B,O,I;4B,U,S,G;gC,I,a;4B;4B,Y;wB;oB;iB,E;gB,I,G;gB,C,I,I,W,G,O;oB,G,Q;wB,a;oB,G;wB,I,G;qB;oB,I,G;oB,I,G,I,Y,S,C,E,K;wB,O,G,Y;4B,K;4B,a;4B,O;gC,S,E;4B;4B,O;gC,O,I;gC,U,S,G;oC,I,e;gC;gC,Y;4B;wB,G;4B,I,G,I,G,E;yB;oB;iB,E,K,G,O;oB,I,G,qB,I,G,I,I;iB;a,E;S;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,I;gB;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ANlED,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AOJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAiC;IAC/C,OAAO,kBAAkB,QAAQ,oBAAiC;IAClE,OAAO,WAAW;IAG5B,QAAQ,mBAA+B,QAAQ;IAC/C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;;A;A,I,gB;I,M;I,O;Q;K;I,Y;Q,kB,C,G,kC;I;I;Q,I,C;Q,O;Y,Y;Y,c;Y,O;Y,Y;Y,c;Y,W;Y,U,K;Q;I;I,S;Q,Q,M;Y,I,C,O,O;Y,I,C,Q,O;Y,I,C,Y,O;Y,I,C,e,O,a,G;Y,I,C,e;Y,I,I,C,M;gB,I,C,a,O,a,K;gB,I,C,e,O;Y;Y,I,O,U,I,C,W,O;Q;Q,S,M;Y,I,Q,I,C,gB,K,C;gB,I,C,U,O,K,G;Y;Y,I,C,a;Q;Q,a,W;Y,I,O,I,C,c,Y,I,C,U;QAoCf;QAEA,WAAA,EAAA;Y,I,I,C,Y,O,I,C,a,YAEA,IAAA,CAAA,SAAA;YAEA,CAAA,GAAA,uBAAA,EAAA,MAAA,eAAA;QACA;QAEA,YAAA,IAAA;YACA,IAAA,CAAA,eAAA;QACA;QAEA;YACA,IAAA,CAAA,IAAA,CAAA,MACA,OAAA,CAAA,GAAA,6DAAA,EAAA,YACA,IAAA,CAAA,WACA,IAAA,CAAA,WAAA,QACA,IAAA,CAAA;iBAGA,OAAA,CAAA,GAAA,6DAAA,EAAA,eAAA,IAAA,CAAA,cAAA;gBACA,MAAA,IAAA,CAAA,WAAA;gBACA,MAAA,IAAA,CAAA;YACA;QAEA;Q;YAGA,OACA,IAAA,CAAA,WAAA,OAAA,WAAA,KACA,OAAA,IAAA,CAAA,iBAAA;QAEA;IACA;I,S;QAEA,aAAA,SAAA,IAAA;YACA,OAAA,KAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;;;AC9FA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAkC;IAChD,OAAO,kBAAkB,QAAQ,oBAAkC;IACnE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA+B;IAC7D,QAAQ,oBAAgC,QAAQ;IAChD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A,I,gB;I,M;I,O;Q,U;Y,M;Q;I;I;Q,I,C,W,O,O,C,G,yB;Q,I,C,a,I,C;Q,O;Y,gB,O,O,C,G,yB;Y,c;Y,kB;Y,O,E;Q;I;I;Q,I,O,I,C,a,a,I,C,e,I,C;I;I,S;Q;Y,I,W,I,C,qB,S,I,C,mB;Y,I,C,iB,I,C,mB;Q;Q;Y,O,I,C,S,I,C,K,G;Q;Q,oB,Y;Y,I,O,iB,a;gB,I,W,I,C,S,K,C,K,G,S;gB,I,O,a,a,O;oB;iB;Y,O,O,I,C;Y,O,E;Q;Q,Y,I;Y,I,C,e;Y,I,C,M,c;Q;Q,Y,I;Y,O,I,C,iB;Q;Q,U,U;Y,I,C,Q,I,Q,C;gB,W;oB,I,Q,I,C;oB,I,C,Y,Q;yB;wB,M,O,W;wB,Q,M,O,C,K,G,c,S;oB;gB,G;Y;Q;Q;Y,I,C,I,C,U,O,E;Y,O,I,C,S,O,C,K;gB,I,Q,K,M,I,C,K,G;gB,O;Y,G,E;Q;I;I,O;Q,kB;YAmEf,IAAA,CAAA;Q;QAEA;YACA,IAAA,CAAA,eAAA,IAAA,CAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;AC5FA,OAAO,UAAU,KAAK,MAAM;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,G,mB;Y,O;gB,c,I;Y;Y,I;gB,c,I;gB,a,I;Y;Y,a,I,G;gB;oB,K;oB,I,S,G;wB,I,O,I;wB,O;4B,G,O;gC,G,W;oC,I,G,I,G;iC;gC,I,G,kC,I,G,Q;6B,E;yB;oB;gB;a;Y,O;gB,O,I;gB,U,S,G;oB,I,e;gB;gB,Y;Y;Q,G;Y,G,S;gB,I,G;a;S;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADC5B,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,O;Y,a,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Y,a,S,M;gB,O,I,Y;Y;Q;I,G;Q,G,mB;Y,I,G,I,G,I,G,e,I;S;Q,I,G;Q,G,qB;Y,a;Q,G;Y,G,O;gB,G,Y;oB,G,S;wB,I,G;qB;oB,I,G;oB,G,Y;wB,O;4B,O,I;4B,U,S,G;gC,I,a;4B;4B,Y;wB;oB;iB,E;gB,I,G;gB,G,kB;oB,O;wB,Y,I;oB;oB,I;wB,c,I;oB;gB;a,E;S;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,I;gB;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AGJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA8B;IAC5C,OAAO,kBAAkB,QAAQ,oBAA8B;IAC/D,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA2B;IACzD,QAAQ,oBAA4B,QAAQ;IAC5C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;A;A;;A,I,gB;I,M;I,O;Q;K;I,Y;Q,iB,C,G,gB;Q,kB,C,G,kC;Q,oB,C,G,mB;I;I;Q,I,C;Q,O;Y,Y;Y,O;Y,W;Y,O;Y,Y;Y,c;Y,c;Y,U,K;Q;I;I,S;Q,Q,M;Y,I,C,O,O;Y,I,C,Q,O;Y,I,C,Y,O;Y,I,C,e,O,a,G;Y,I,C,e;Y,Q,I,U;Y,I,I,C,M;gB,I,C,a,O,a,K;gB,I,C,Q,O;gB,I,C,e,A,O,a,Q,O,a,K,S;Y;Y,I,O,U,I,C,W,O;Q;Q,S,M;Y,I,Q,I,C,gB,K,C;gB,M,K,O,O,O,K,G,Q,O,G;gB,I,C,U;Y;Y,I,C,a;Q;Q,a,W;Y,I,O,I,C,c,YA0Cf,IAAA,CAAA,UAAA;QAEA;Q,W,E;YAGA,IAAA,IAAA,CAAA,YAAA,OAAA,IAAA,CAAA,aAAA,YACA,IAAA,CAAA,SAAA;YAEA,CAAA,GAAA,uBAAA,EAAA,MAAA,eAAA;QACA;QAEA;YACA,OAAA,IAAA,CAAA,WAAA,OAAA,WAAA;QACA;QAEA,YAAA,IAAA;YACA,IAAA,CAAA,eAAA;QACA;QAEA;YACA,MAAA,QACA,OAAA,IAAA,CAAA,UAAA,WAAA,IAAA,CAAA,QAAA,IAAA,CAAA,MAAA;YAEA,IAAA,CAAA,IAAA,CAAA,MACA,OAAA,CAAA,GAAA,6DAAA,EAAA,SACA,IAAA,CAAA,WACA,IAAA,CAAA,cACA,IAAA,CAAA,WAAA,QACA,OACA,IAAA,CAAA;iBAGA,OAAA,CAAA,GAAA,6DAAA,EAAA,YAAA,IAAA,CAAA,cAAA;gBACA,MAAA,IAAA,CAAA,WAAA;gBACA,OAAA;gBACA,MAAA,IAAA,CAAA;YACA;QAEA;IACA;IACA,SAAA;Q,a,S,I;YAEA,OAAA,KAAA;QACA;I;AAEA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,O;Y,a,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Y,a,S,M;gB,O,I,Y;Y;Q;I,G;Q,G,mB;Y,I,G,I,G,I,G,e,I;S;Q,I,G;Q,G,qB;Y,a;Q,G;Y,G,Y;gB,G,S;oB,I,G;iB;gB,I,G;gB,G,Y;oB,O;wB,O,I;wB,U,S,G;4B,I,a;wB;wB,Y;oB;gB;a,E;Y,I,G;Y,G,O;gB,a;Y,G;gB,G,kB;oB,O;wB,Y,I;oB;oB,I;wB,c,I;oB;gB;a,E;Y,I,G;Y,G,O;gB,a;Y,G;gB,G,iB;oB,O;wB,O,I;wB,U,S,G;4B,I,Q;wB;wB,Y;oB;gB;a,E;S,E;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,I;gB;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAzGA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA8B;IAC5C,OAAO,kBAAkB,QAAQ,oBAA8B;IAC/D,OAAO,WAAW;IAG5B,QAAQ,oBAA4B,QAAQ;IAC5C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;A,I,gB;I,M;I,O;Q;K;I,Y;Q,iB,C,G,gB;I;I;Q,O;Y,Y;Y,O;Y,O;Y,M;Y,Y;Q;I;I,S;Q,Q,M;Y,I,C,Q,C,K,E,O,M,C;Y,I,C,a,O;Y,I,C,Q,O;Y,I,C,O,O;QASf;QACA,aAAA,WAAA;Y,I,O,I,C,c,YAEA,IAAA,CAAA,UAAA;QAEA;QACA,SAAA,MAAA;YACA,IAAA,QAAA;gBACA,IAAA,WAAA,CAAA,GAAA,+CAAA,EAAA,YAAA,IAAA,CAAA,KAAA,GAAA;gBAEA,SAAA,KAAA,KAAA,IAAA,IAAA,CAAA,WAAA;gBAEA,IAAA,CAAA,SAAA,KAAA,OACA,SAAA,KAAA,SAAA,SAAA,IAAA,CAAA,MAAA;qBAEA,SAAA,KAAA,MAAA,IAAA,IAAA,CAAA,MAAA;YAEA;YACA,IAAA,CAAA,aAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,O;Y,a,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Y,a,S,M;gB,O,I,Y;Y;Q;I,G;Q,G,mB;Y,I,G,I,G,I;S;Q,I,G;Q,G,qB;Y,G,Y;gB,G,S;oB,I,G;iB;gB,I,G;gB,G,Y;oB,O;wB,O,I;wB,U,S,G;4B,I,a;wB;wB,Y;oB;gB;a,E;Y,I,G;Y,G,iB;gB,O;oB,O,I;oB,U,S,G;wB,I,Q;oB;oB,Y;gB;Y;S,E;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,I,W,O,W;gB;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAhDA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA8B;IAC5C,OAAO,kBAAkB,QAAQ,oBAA8B;IAC/D,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA2B;IACzD,QAAQ,oBAA4B,QAAQ;IAC5C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;A;A;;A,I,gB;I,M;I,Y;Q,iB,C,G,sC;I;I,O;Q;K;I;Q,O;Y,Y;Y,M,E;Y,Q,E;Y,Y,E;Y,iB;Y,kB;Y,e;Y,O,E;Y,M;Y,U;Q;I;I;I,wC;I,qC;I,wB;I,M;I;I,S;Q,Q,M;Y,I,C,Q,O;Y,I,C,O,O;Y,I,C,W,O;Y,I,C;Q;Q,S,M;Y,I,Q;gB,I,C,M,Q,C;oB,C,G,qB,E,S,I,C,iB,I,C,e,G;gB;gB,I,O,I,C,a,a;oB,M,U,I,C,K,K,C,K,G,O,I,C;oB,M,W,I,C,W,K,C,K,G,O,I,C;oB,M,Q,I,C,O,K,C,K,G,O,I,C;oB,I,C,S,S,U;gB;Y;Y,I,C,a;Q;Q,a,W;Y,I,O,I,C,c,Y,I,C,U;Q;Q;Y,C,G,qB,E,mB,I,C,M,K,C;gB,I,C,O;gB,I,C;gBAiEf,IAAA,CAAA;Y;QAEA;QACA,oBAAA;QACA,uCAAA;QAEA,gCAAA;QACA,sEAAA;QACA,oCAAA;QACA,MAAA;QACA,eAAA;QACA,KAAA;QACA;YACA,IAAA,CAAA,gBAAA;YAEA,IAAA,IAAA,CAAA,mBAAA,IAAA,CAAA,kBAAA;gBACA,IAAA,UAAA,IAAA,CAAA,KAAA,KACA,CAAA,KAAA,GAAA,OAAA,IAAA,CAAA;gBAEA,IAAA,SAAA;oBACA,IAAA,WAAA,QAAA,SAAA,KACA,CAAA,KAAA,GAAA,MAAA,IAAA,CAAA;oBAGA,IAAA,U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AAiB,KAAK;YACjE,IAAI,UAAU,IAAI,aAAa,SAAS,GAAG;YAE3C,IAAI,UAAU,KAAK;QAErB,OAAO,IAAI,KAAK,SAAS,IAAI,CAAC,2BAA2B;YAEvD,IAAI,WAAW,KAAK;YACpB,MAAM,QAAQ,MAAM,IAAI,CAAC,gBAAgB,KAAK;YAE9C,IAAI,OAAO;gBACT,IAAI,UAAU,MAAM,GAAG;gBACvB,MAAM,WAAW,MAAM,CAAA,GAAA,6DAAkB,EAAE,iBAAiB,MAAM,GAC/D;gBAEH,IAAI,UAAU,IAAI,aAAa,SAAS,GAAG;YAE7C;QAEF;QAEA,OAAO;IAET;AAEF;kBAxMqB;;;;;ACRrB,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAsC;IACpD,OAAO,kBAAkB,QAAQ,oBAAsC;IACvE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAmC;IACjE,QAAQ,oBAAoC,QAAQ;IACpD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q;Q;Q;Q;K;I,S;Q;Y,I,C,M;Q;Q,Y,E;Y,I,C,M,U;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,O;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,O;gB,I,G,I,G,I;a;Y,I,G;Y,G,O;gB,a;Y,G;gB,G,a;oB,a;oB,O;wB,Y,I;oB;oB,I;wB,S,I;oB;gB,G;oB,G,W;wB,I,G;qB;iB,E;a,E;S;Q,I,G;Q,G,c;Y,a;Q,G;Y,G,W,I,G,I,M,S,I,E,K;gB,O,G,gB;oB,Y;wB;4B,M;4B,S;4B,O,K;4B,Y;wB;qB;oB,K;oB,a;oB,O;wB,Y,K,O,I;oB;oB,I;wB,S,S,M;4B,O,I,W,K;wB;oB;gB,G;oB,G,Q;wB,a;oB,G;wB,I,G,I,G,K;qB;iB;Y,I;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,a;Q,O;Y,a,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Y,a,S,M;gB,O,I,Y;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,G,Y,I,G,I,Q;S;Q,I,G;Q,G,qB;Y,a;Q,G;Y,G,O;gB,a;Y,G;gB,G,iB;oB,O;wB,S;wB,Q,I;wB,gB,I;oB;oB,I;wB,U,I;wB,U,I;oB;gB;a,E;Y,I,G;Y,G,O;gB,a;Y,G;gB,G,iB;oB,O;wB,S;wB,Q,I;wB,gB,I;wB,c,C,I;oB;oB,I;wB,U,I;wB,U,I;oB;gB;a,E;Y,I,G;Y,G,O;gB,a;Y,G;gB,G,iB;oB,O;wB,S;wB,Q,I;wB,gB,I;wB,c,C,I;oB;oB,I;wB,U,I;wB,U,I;oB;gB;a,E;S;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,I;gB;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ARJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ASJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAmC;IACjD,OAAO,kBAAkB,QAAQ,oBAAmC;IACpE,OAAO,WAAW;IAG5B,QAAQ,oBAAiC,QAAQ;IACjD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;;A,I,gB;I,M;I,O;Q;K;I;Q,I,C,Q,C,G,qB;Q,O;Y,Y;Y,c;Q;I;I,S;Q,Q,M,G;Q,S,M;Y,I,Q,C,G,6D,E,U,qB;gB,M,I,C;gB,c,E;Y;Y,I,C,a;Q;Q,a,W;Y,I,O,I,C,c,Y,I,C,U;Q;Q;Y,O,I,C,e,Q;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,O;Y,a,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Y,a,S,M;gB,O,I,Y;Y;Q;I,G;Q,G,mB;Y,I,G,I,G,c;S;Q,I,G;Q,G,qB;Y,a;Q,G;Y,G,O;gB,G,Y;oB,G,S;wB,O;4B,O;wB;oB,G;wB,I,G;qB;oB,I,G;oB,G,a;wB,O;4B,Q;4B,M;wB;wB,O;4B,O,I;4B,U,S,G;gC,I,e;4B;4B,Y;wB;oB,G,I,G,I,O,S,I,E,K;wB,O,G,a;4B,K;4B,O;gC,S,K;4B;wB,G;4B,I,G,I,G,K;yB;oB,I;iB,E;a,E;S;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,I;gB;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAuC;IACrD,OAAO,kBAAkB,QAAQ,oBAAuC;IACxE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAoC;IAClE,QAAQ,oBAAqC,QAAQ;IACrD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A;;A;A,I,gB;I,M;I,O;Q;K;I;Q,I,C,S;Y,Q;Y,S;Y,Q;Q;Q,O;Y,Y;Y,Y,E;Y,O,I,C,O;Y,W;Y,Q;Y,Q;Y,W;Q;I;I;I,wC;I,qC;I,wB;I,M;I;I,S;Q,Q,K;Y,O,M,O,C,O,E,S,E;gB,S,U;gB,O;Y,G;Q;I;I,S;Q,M,Q,E,S,E,M,E;Y,I,C,Y;Y,I,C,S;Y,M,a,I,C;Y,I,C,Y,O,M;Y,I,C,Q,I,C,O;Y,I,C,a;Y,I,C,a,M,I,C,mB;Y,I,C,Q,I,C,O;Q;Q,M,S,M;Y,I,C,a;Q;Q,a,W;Y,I,O,I,C,c,Y,I,C,U;QAgDf;Q;YAGA,OAAA,IAAA,CAAA,UAAA,IAAA,CAAA,OAAA;QACA;Q;YAGA,OAAA,IAAA,CAAA,UAAA,IAAA,CAAA,OAAA;QACA;QAEA;YACA,IAAA,aAAA,OAAA,OAAA,YAAA,OAAA;YACA,IAAA,WAAA,WAAA,GAAA;YAEA,OAAA;QACA;QAEA,oBAAA,UAAA;YACA,MAAA,WAAA,WAAA,IAAA,CAAA;gBACA,OAAA,CAAA,GAAA,yDAAA,EAAA,aAAA,GAAA,OAAA,GAAA;YACA;YAEA,OAAA,QAAA,IAAA;Q;QAGA,MAAA;YACA,IAAA;gBACA,IAAA,CAAA,QAAA,IAAA,CAAA,OAAA;gBAEA,MAAA,MAAA,IAAA,CAAA,4BACA,IAAA,CAAA,WACA,IAAA,CAAA,QACA,IAAA,CAAA;gBAEA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,GAAA,MAAA,CAAA,GAAA,yBAAA,EAAA,aAAA;gBAEA,IAAA,CAAA,SAAA,UAAA;gBACA,IAAA,CAAA,YAAA,OAAA;gBAEA,IAAA,CAAA,QAAA,IAAA,CAAA,OAAA;YACA,EAAA,OAAA,OAAA;gBACA,QAAA,MAAA;gBACA,MAAA;Y;QAGA,iDAAA;Q,wD;QAEA,oDAAA;Q,iC;QAGA,qBAAA;QACA,YAAA;QACA,kCAAA;Q,a;QAEA,oBAAA;QACA,sCAAA;QACA,8DAAA;Q,8B;QAEA,8BAAA;QACA,sBAAA;QACA,6BAAA;QACA,6DAAA;QACA,gCAAA;Q,wB;QAEA,wCAAA;QACA,mCAAA;QACA,+CAAA;Q,2C;QAEA,iDAAA;QAEA,4DAAA;Q,iC;QAEA,+BAAA;QACA,4BAAA;QACA,uBAAA;Q,oB;QAEA,oBAAA;QACA,kBAAA;Q,gB;QAEA,YAAA;QACA,WAAA;QACA,QAAA;QACA,QAAA;Q;QAGA,MAAA,kBAAA,KAAA,EAAA,IAAA;Y,I;gBAEA,MAAA,OAAA,MAAA,IAAA,CAAA,cAAA,OAAA;gBACA,OAAA,OAAA,iBAAA,gBAAA,MAAA,MAAA;YACA,EAAA,OAAA,OAAA;gB,Q,M,S,M,I;gBAEA,MAAA;YACA;QACA;QAEA,MAAA,gBAAA,SAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA;YACA,MAAA,OAAA,MAAA,IAAA,CAAA,iBAAA,OAAA;YAEA,OAAA,CAAA,GAAA,6DAAA,EAAA,mBACA,W,SAEA,KAAA,GAAA;QAEA;QAEA,eAAA,KAAA,EAAA,IAAA;Y,O,I,Q,C,S;gBAEA,MAAA,kBAAA;oBAAA;iBAAA,EAAA;oBAAA,YAAA;wBAAA;qBAAA;gBAAA,GAAA,CAAA;oBACA,QAAA,EAAA,CAAA,EAAA,CAAA;gBACA;Y;QAEA;QAEA,6BAAA,SAAA,EAAA,OAAA,EAAA,KAAA;YACA,OAAA,MAAA,OAAA,CAAA,KAAA,EAAA,KAAA,EAAA,SAAA,EAAA;gBACA,KAAA,MAAA,MAAA,UACA,IAAA,KAAA,IAAA,IAAA,CAAA,eAAA,WAAA,SAAA,OAAA;gBAEA,OAAA;YACA,GAAA,EAAA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,a;Q,a;Q,O;Y,a,I;Q;Q,I;Y,mB,S,M;gB,I,a;Y;Y,oB,S,M;gB,I,a;Y;Y,a,S,M;gB,O,I,Y;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,I,G;S;Q,I,G;Q,G,qB;Y,a;Q,G;Y,G,O;gB,Y;oB;wB,M;wB,S;wB,O,I,U,I,O;wB,Y;oB;iB;Y,G;gB,I,G,wC,I,G,I,G,U,I,e;a;Y,I,G;Y,G,O;gB,Y;oB;wB,M;wB,S;wB,O,I,U,I,O;wB,Y;oB;iB;Y,G;gB,G,uB;oB,O;wB,W;oB;gB;a,E;Y,I,G;Y,G,O;gB,Y;oB;wB,M;wB,S;wB,O,I,U,I,O;wB,Y;oB;iB;gB,a;Y,G;gB,G,O;oB,I,G;oB,G,Q;wB,a;oB,G;wB,I,G,M,I,G,I;qB;iB;gB,I,G;gB,G,O;oB,I,G;oB,G,Q;wB,a;oB,G;wB,I,G,I,G,I;qB;iB;a;S;Q,I,G;Q,G,qB;Y,G,a;gB,a;gB,O;oB,Y,I;gB;gB,I;oB,S,S,M;wB,O,I,Y;oB;gB;Y,G;gB,I,G;a;Y,I,G;Y,G,a;gB,a;gB,O;oB,Y,I;gB;gB,I;oB,S,I;gB;Y,G;gB,I,G;a;S,E;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AA5LA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;ACLA;;AAIA;;AACA;;AAHA,MAAM,EAAE,oBAAoB,EAAE,GAAG,QAAQ;AAOzC,IAAI,SAAS;IACV;QACG,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAE,EAAE,OAAO,CAAA,GAAA,+BAAY;QAC1C,OAAO;YACP,OAAO;YACP,gBAAgB;QAChB;QACA,OAAO;YACP,QAAQ;YACR,MAAM;QACN;IACH;IACA;QACG,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAE,EAAE,OAAO,CAAA,GAAA,oCAAgB;QAC9C,OAAO;YACP,OAAO;YACP,gBAAgB;QAChB;QACA,OAAO;YACP,QAAQ;YACR,MAAM;QACN;IACH;CACF;AAED,IAAK,IAAI,QAAQ,GAAG,QAAQ,OAAO,QAAQ,QAAS;IACnD,MAAM,UAAU,MAAM,CAAC,MAAM;IAC7B,MAAM,iBAAiB,qBAAqB,gBAAgB;IAC5D,qBAAqB,kBAAkB,QAAQ,MAAM;AACtD;;;ACxCA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAED,MAAM,EACJ,yBAAyB,EACzB,cAAc,EACf,GAAG,QAAQ;AAEZ,MAAM,uBAAuB,QAAQ,oBACnC,2BACA;AAGF,OAAO,UAAU;IACf;AACF;;;ACpCA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAED,SAAS,WAAW,MAAM;IACxB,MAAM,MAAM,CAAC;IACb,IAAI,OAAO,OAAO,YAAY,aAAa;QACzC,IAAI,UAAU;YACZ,MAAM,OAAO,QAAQ,QAAQ;YAC7B,OAAO,OAAO,QAAQ,SAAS;YAC/B,gBAAgB,OAAO,QAAQ,kBAAkB;YACjD,UAAU,CAAC;YACX,WAAW,CAAC;QACd;QACA,OAAO,OAAO,IAAI,QAAQ,UAAU,OAAO,QAAQ;QACnD,OAAO,OAAO,IAAI,QAAQ,WAAW,OAAO,QAAQ;IACtD;IACA,IAAI,OAAO,OAAO,UAAU,aAAa;QACvC,IAAI,QAAQ;YACV,OAAO,OAAO,MAAM,SAAS;YAC7B,WAAW,OAAO,MAAM,aAAa;YACrC,gBAAgB,OAAO,MAAM,kBAAkB;QACjD;QACA,IAAI,OAAO,OAAO,UAAU,aAAa;YACvC,IAAI,QAAQ,CAAC;YACb,OAAO,OAAO,IAAI,OAAO,OAAO;QAClC;IACF;IACA,IAAI,OAAO,OAAO,QAAQ;IAC1B,IAAI,oBAAoB,OAAO;IAC/B,IAAI,SAAS,OAAO;IACpB,IAAI,WAAW,OAAO;IACtB,OAAO;AACT;AAEA,SAAS;IACP,IAAI,CAAC,OAAO,oBACV,OAAO,SAAS,QAAQ,uBACxB,IAAI,CAAC;IAEP,IAAI,CAAC,yBAAyB;IAC9B,cAAc,KAAK,IAAI;AACzB;AAEA,SAAS;IACP,IAAI,CAAC,gBAAgB,IAAI,OAAO,SAAS,QAAQ,GAAG,OAClD,IAAI,CAAC,IAAI,QAAQ;IAEnB,IAAI,CAAC,cAAc,UAAU;QAC3B,IAAI,CAAC,YAAY,IAAI,CAAC;IACxB;IACA,IAAI,OAAO,IAAI,CAAC,cAAc,UAAU;IACxC,KAAK,YAAY;IACjB,KAAK,YAAY,IAAI,CAAC,IAAI,QAAQ;IAElC,IAAK,IAAI,OAAO,IAAI,CAAC,IAAI,QAAQ,UAC/B,IAAI,IAAI,CAAC,IAAI,QAAQ,UAAU,eAAe,MAC5C,KAAK,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,QAAQ,SAAS,CAAC,IAAI;IAGrD,IAAK,IAAI,OAAO,IAAI,CAAC,IAAI,QAAQ,SAC/B,IAAI,IAAI,CAAC,IAAI,QAAQ,SAAS,eAAe,MAC3C,IAAI,CAAC,cAAc,UAAU,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,QAAQ,QAAQ,CAAC,IAAI;IAI5E,IAAI,CAAC,cAAc,WAAW,IAAI,CAAC,IAAI,QAAQ;IAC/C,IAAI,CAAC,aAAa,IAAI,CAAC,OAAO,QAAQ,WACpC,IAAI,CAAC,IAAI,QAAQ;IAEnB,IAAI,CAAC,IAAI,CAAC,YAAY;QACpB,IAAI,CAAC,aAAa,IAAI,OAAO,SAAS,QAAQ,GAAG,aAC/C,IAAI,CAAC,IAAI,QAAQ;QAEnB,IAAI,CAAC,OAAO,QAAQ,WAAW,IAAI,CAAC;IACtC;IACA,IAAI,CAAC,WAAW,WAAW,IAAI,CAAC;AAClC;AAEA,SAAS;IACP,IAAI,IAAI,CAAC,IAAI,MAAM,mBAAmB,QAAQ;QAC5C,IAAI;YACF,IAAI,CAAC,UAAU,QAAQ,KAAK,IAAI,CAAC;QACnC,EAAE,OAAO,GAAG;YACV,QAAQ,MAAM;QAChB;QACA,IAAI,CAAC,MAAM,UAAU;QACrB,IAAI,CAAC,QAAQ;IACf,OACE,IAAI;QACF,IAAI,CAAC,UAAU,OAAO,KAAK,IAAI,CAAC;IAClC,EAAE,OAAO,GAAG;QACV,QAAQ,MAAM;IAChB;AAEJ;AAEA,SAAS;IACP,IAAI,IAAI,CAAC,UAAU,MAAM;QACvB,IAAI,CAAC,QAAQ,IAAI,OAAO,WAAW,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM;QAC/D,IAAI,aAAa,SAAS,cAAc;QACxC,IAAI,mBAAmB,IAAI,CAAC,MAAM;QAElC,WAAW,aACT,IAAI,CAAC,MAAM,UAAU,KAAK,qBAAqB,IAAI,CAAC,IAAI,MAAM;QAChE,IAAK,IAAI,OAAO,IAAI,CAAC,IAAI,MACvB,IAAI,IAAI,CAAC,IAAI,MAAM,eAAe,MAChC,IAAI,CAAC,MAAM,UAAU,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI;QAIzD,IAAI,IAAI,CAAC,MAAM,UAAU,MAAM,MAC7B,IAAI,CAAC,MAAM,UAAU,MAAM,OAAO;QAGpC,IAAI,CAAC,MAAM,UAAU,YAAY;QACjC,iBAAiB,MAAM,SAAS;QAChC,iBAAiB,YAAY;QAE7B,IAAI,UAAU,IAAI,CAAC,MAAM;QACzB,IAAI,CAAC,MAAM,UAAU,YAAY;QAEjC,IAAI,IAAI,CAAC,IAAI,mBACX,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,oBAAoB,OAAO;QAG3D,MAAM,QAAQ,IAAI;QAClB,IAAI,CAAC,MAAM,sBAAsB,CAAA;YAC/B,IAAI,CAAC,MACH,eAAe,KAAK;QAExB;IACF;IACA,OAAO,IAAI,CAAC;AACd;AAEA;;;;;;CAMC,GACD,OAAO,UAAU,SAAU,yBAAyB,EAAE,cAAc;IAClE,OAAO;QACL;;;;;;;;;;;;;;;;;;;;;;;KAuBC,GACD,iBAAgB,MAAM;YACpB,MAAM,MAAM,WAAW;YACvB;;;;;;;;OAQC,GACD,MAAM,uBAAuB,cAAc;gBACzC,YAAY,MAAM,EAAE,OAAO,CAAE;oBAC3B,KAAK;oBACL,OAAO,SAAS,QAAQ,UAAU,KAAK,IAAI,EAAE,QAAQ;oBACrD,IAAI,CAAC,SAAS;oBACd,IAAI,CAAC,QAAQ;oBACb,IAAI,CAAC,MAAM;oBACX,0BAA0B,cAAc,IAAI,MAAM,IAAI;gBACxD;gBACA;;;SAGC,GACD,OAAO;oBACL,IAAI,OAAO,IAAI,YAAY;wBACzB,cAAc;wBACd,IAAI,IAAI,CAAC,OAAO,SACd,cAAc,KAAK,IAAI;6BAClB;4BACL,IAAI,CAAC,yBAAyB,iBAAiB,KAAK,IAAI;4BACxD,IAAI,CAAC,OAAO,iBACV,OAAO,SAAS,QAAQ,uBACxB,IAAI,CAAC;wBAET;;oBAEF,IAAI,OAAO,IAAI,WAAW,aAAa,IAAI,OAAO,KAAK,IAAI;oBAC3D,OAAO;gBACT;gBACA;;;SAGC,GACD,SAAS;oBACP,IAAI,OAAO,IAAI,YAAY,aACzB,IAAI,CAAC,OAAO,WAAW,cAAc,IAAI,CAAC;oBAE5C,IAAI,OAAO,IAAI,aAAa,aAAa,IAAI,SAAS,KAAK,IAAI;oBAC/D,OAAO;gBACT;gBAEA,WAAW;oBACT,OAAO,IAAI,CAAC;gBACd;gBAEA,aAAa;oBACX,OAAO,IAAI,CAAC;gBACd;gBAEA;;;SAGC,GACD,UAAU,MAAM,EAAE;oBAChB,MAAM,QAAQ,SAAS,KAAK,IAAI;oBAChC,MAAM,WAAW;oBACjB,IAAI;wBACF,IAAI,CAAC,UAAU,OAAO,KAAK,IAAI,CAAC,WAAW,QAAQ,IAAI,CAAC;oBAC1D,EAAE,OAAO,GAAG;wBACV,QAAQ,MAAM;oBAChB;gBACF;gBACA;;;;SAIC,GACD,WAAW,MAAM,EAAE;oBACjB,MAAM,QAAQ,SAAS,KAAK,IAAI;oBAChC,MAAM,WAAW;gBACnB;gBACA;;;;SAIC,GACD,YAAY,MAAM,EAAE;oBAClB,IAAI,IAAI,CAAC,UAAU,QAAQ,IAAI,CAAC,MAAM,gBAAgB,OACpD,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;yBACnB,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBACtC;YACF;YACA,OAAO;QACT;QAEA;;;;KAIC,GACD,mBAAkB,IAAI,EAAE,cAAc;YACpC,oBAAoB;YACpB,OAAO,SAAS,QAAQ,oBAAoB,kBAC1C,MACA;YAEF,qBAAqB;YACrB,OAAO,OAAO,sBAAsB,aAAa;QACnD;IACF;AACF;;;;;AC3SA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAA+B;IAC7C,OAAO,kBAAkB,QAAQ,oBAA+B;IAChE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAA4B;IAC1D,QAAQ,oBAA6B,QAAQ;IAC7C,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;;A;A;A;A;;A,M,E,yB,E,G,Q;A,C,G,mB,E,U,mB,C,G,mC;A,I,gB;I,M;I,Y;I;I;Q,I,C,S;Y,Q;Y,S;Y,O;Q;Q,I,C,O,E;Q,I,C;Q,I,C;Q,I,C,e;Q,O;Y,Q;Y,U;Y,O;Y,U,E;Y,Y,E;Y,a;Y,U,I,C,O;Y,gB,E;Q;I;I,S;Q,Q,M;Y,I,C,W,I,C,O;Y,I,C,Y,O;Y,I,C,U,O;Y,e;Y,c;Y,wD;Y,gB;Y,sB;Y,I,C,S,I,C;Y,I,a,C,G,+C,E,W,O,U;Y,I,O,e,a;gB,I,C,W,E;gB,I,C,O,E;gB,I,C,a,E;gB,I,C,W,I,C,O;gB;Y;Y,I,e,W,K,G;Y,Q,I;gB,I,C,Q,c,O,U;gB,I,C,c,O;gB,I,C,kB,O;a,E,K,C;gB,Q,I,O;gB,I,C,O,G,C,E;gB,I,C,W,G,C,E;gB,I,C,a,G,C,E;gB,I,C,iB,G,C,E;gB,I,C,W,I,C,O;Y,G,M,C;gB,I,C,W,I,C,O;gB,Q,M;Y;Q;Q,S,Q,E,Y;Y,O,C,G,+C,E,Y,U,c,K,C;gB,O,I,I,C,K,G;Y;Q;Q,e,E;Y,0D;Y,oC;Y,M;Y,O,C,G,6D,E,yB,I,K,C;gB,O,O,I,C,K,G;Y;Q;Q,M,mB,M;Y,I,W,M,C,G,6D,E,iB;Y,I,U;gB,I,S,M,C,G,6D,E,U,S,G;gB,I,gB,O,O,C;oB,O,M,G,U;gBAyGf;gBAEA,OAAA,cAAA,IAAA,CAAA;oB,O;wBAEA,IAAA,GAAA,GAAA;wBACA,MAAA,GAAA,KAAA;wBACA,OAAA,GAAA,QAAA,GAAA,MAAA,QAAA;wB,U,C,G,+C,E,e,G,G;oBAEA;gB;YAEA;YAEA,OAAA,EAAA;Q;QAGA,UAAA,KAAA;YACA,0BAAA,OAAA,cAAA,MAAA,SACA;QAEA;QAEA,UAAA,IAAA;YACA,OAAA,IAAA,CAAA,WAAA,KAAA,CAAA;gBACA,OAAA,KAAA,OAAA,GAAA;YACA;QACA;QAEA,SAAA,IAAA;YACA,OAAA,OAAA,IAAA,CAAA,SAAA,UAAA,cACA,SACA;Q;QAGA,YAAA,IAAA;YACA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,CAAA,WAAA,QAAA,IAAA;gBACA,MAAA,UAAA,IAAA,CAAA,UAAA,CAAA,EAAA;gBACA,IAAA,QAAA,OAAA,KAAA,IAAA;oBACA,IAAA,CAAA,WAAA,OAAA,GAAA;oBACA;gBACA;YACA;QACA;QAEA,MAAA,YAAA,IAAA;YACA,IAAA,IAAA,CAAA,SAAA,OAAA;gBACA,MAAA,CAAA,GAAA,6DAAA,EAAA,qB,I,C,SAEA,KAAA;gB,I,C,W;YAGA,OAAA;gBACA,MAAA,MAAA,MAAA,CAAA,GAAA,6DAAA,EAAA,mBACA,IAAA,CAAA,WACA,IAAA,CAAA,SACA,KAAA;gBAGA,IAAA,OAAA,IAAA,cAAA,aAAA;oBACA,IAAA,QAAA,IAAA,CAAA,eAAA,KAAA,CAAA;wB,O,G,O,I;oBAEA;oBAEA,IAAA,OAAA,UAAA,aACA,MAAA,WAAA,MAAA,SAAA,OAAA,CAAA;wBACA,OAAA,OAAA,KAAA;oBACA;gB;gB,I,C,W,K;YAKA;QACA;QAEA,aAAA,SAAA,EAAA,IAAA;YACA,CAAA,GAAA,qBAAA,EAAA,MAAA,WAAA;QACA;Q;YAGA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA;QACA;QAEA,wBAAA,IAAA;Y,I,K,K;YAGA,IAAA,SAAA,IAAA,CAAA,eAAA,KAAA,CAAA;gBACA,OAAA,GAAA,SAAA,QAAA,QAAA;YACA;YAEA,IAAA,OAAA,WAAA,aAAA;gBACA,IAAA,CAAA,YAAA,GAAA,OAAA;gB,I,C,a,G,O;gBAEA,OAAA;YACA;YAEA,OAAA;QACA;IACA;IACA,OAAA;Q,Q,S,Q;YAEA,WAAA,SAAA;YACA,qCAAA;YACA,IAAA,SAAA,WAAA,GACA,IAAA,CAAA,WAAA,IAAA,CAAA;iBAEA,IAAA,CAAA,WAAA,IAAA,CAAA,KAAA,OAAA,CAAA;gBACA,OAAA,GAAA,KAAA,cAAA,SAAA,SAAA;YACA;QAEA;IACA;AAMA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,c;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,O;gB,a;gB,O;oB,U,I;gB;Y,G;gB,G,S;oB,Y;wB;4B,M;4B,S;4B,O,I;4B,Y;wB;qB;oB,a;oB,O;wB,U,I;oB;oB,O;wB,Q;wB,Q;wB,e;oB;oB,U;wB,S,I;oB;oB,I;wB,S,S,M;4B,I,O,O,W;4B,I,S,O,O;wB;oB;gB;gB,I,G;gB,G,K;oB,a;oB,I;wB,S,I;oB;gB,G;oB,G,W;wB,I,G;qB;iB,E;a;S;Q,I,G;Q,I,S,S,K,I,a,I,O,S,G,O;Y,a;Q,G;Y,G,c;gB,a;Y,G;gB,G,mB;oB,O;wB,S,I;wB,a;wB,a;oB;oB,a,I,G;wB;4B,K;4B,I,S,G;gC,I,O,I;gC,O;oC,G,O;wC,a;wC,I;4C,a,S,M;gD,O,I,Y,a;4C;4C,c,S,M;gD,O,I,Y,c;4C;wC;oC,G;wC,G,Q;4C,a;wC,G;4C,I,G,I,G,K;yC;wC,I,G;wC,I,uB,Q,G,O;4C,a;4C,O;gD,iB,K;4C;4C,O;gD,S,e,K;4C;wC,K,I;wC,I,G;wC,G,a;4C,a;4C,I;gD,S,S,M;oD,O,I,W;gD;4C;wC,G;4C,G,W;gD,I,G,I,G,I,Q;6C;yC,E;qC,E;iC;4B;wB;qB,E,M,O;gB;a,E;S,E,K,I;Q,I,G;Q,I,S,W,K,I,a,I,O,S,G,O;Y,a;Q,G;Y,I,G;S,I,I;Q,I,G;Q,I,a,I,O,U,G,O;Y,a;Q,G;Y,G,uB;gB,a;gB,O;oB,W;gB;Y;S,E,K,I;Q,I,G;Q,I,a,I,O,Q,G,O;Y,a;Q,G;Y,I,G;S,I,I;K;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AA9OA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAoC;IAClD,OAAO,kBAAkB,QAAQ,oBAAoC;IACrE,OAAO,WAAW;IAE5B,OAAO,eAAe,QAAQ,oBAAiC;IAC/D,QAAQ,oBAAkC,QAAQ;IAClD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;A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B,Q;gB,gB,E;Y;Q;I;I;Q,I,U,C,G,+C,E,W,C,G,uD,E,U;Q,I,S,C,G,+C,E,Y,Q,K,G,O;Y,C,G,uD,E,U;S,E,K,C;Y,I,C,Y,I,C,G,8B,E,K;Q;I;I,S;Q;Y,I,C,M,U,I,C;Q;I;I,O;Q,c,Q;Y,I,C,M,U;Q;I;A;A,I,U,O,kB,a,c,U;kB,S,wC;;;;;ACff,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,YAAY,SAAS,OAAO;IACvC,OAAO,SAAS,QAAQ,oBAAoC;IAClD,OAAO,kBAAkB,QAAQ,oBAAoC;IACrE,OAAO,WAAW;IAG5B,QAAQ,oBAAkC,QAAQ;IAClD,OAAO,YAAY;IACnB,OAAO,SAAS;AAClB;AACA;kBAEe;;;;;A;A,I,gB;I,M;I,O;Q;Q;Q;K;I;Q,O;YARf,OAAA;Q;IAEA;IACA;QACA,CAAA,GAAA,qBAAA,EACA,uBAAA,IAAA,CAAA,SAAA,IAAA,CAAA,WACA,KAAA,CAAA;YACA,+BAAA;YAEA,IAAA,CAAA,QAAA;QACA;IACA;IACA,SAAA;QACA;YACA,CAAA,GAAA,qBAAA,E,uB,I,C,S,I,C,WAEA,KAAA,CAAA;gBACA,IAAA,CAAA,IACA,CAAA,GAAA,qBAAA,EAAA,mBACA,IAAA,CAAA,SACA,IAAA,CAAA,WACA,IAAA,CAAA;qBAGA,CAAA,GAAA,qBAAA,EAAA,WAAA,IAAA,CAAA,SAAA,IAAA,CAAA;YAEA;QACA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,UAAA;kBACA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,e;Q,a;Q,I;Y,U,I;Q;Q,O;Y,O,I;Y,U,S,G;gB,I,Q;Y;Y,Y;Q;I;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;AAvCA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I;I,I,K,I,M,M;I,O,G,Y;Q,a;Q,O;Y,W;Y,iB;Y,mB;Q;Q,a,I,G;Y;gB,K;gB,I,S,G;oB,I,O,I;oB,O,G,gB,C,G;wB,G,iB;4B,O;gC,Y;gC,c;4B;wB,G;4B,I,G,I,G,K;yB;wB,I,G;wB,I,G,I,Q,S,K;4B,O,G,iB;gC,K,M;gC,O;oC,Y,M;gC;4B,G;gC,G,sB;oC,O;wC,W,M;wC,a,K;wC,a,I;oC;gC;6B,E;wB;qB,E;gB;Y;S;Q,O;Y,O,I;Y,U,S,G;gB,I,W;Y;Y,Y;Q;I,G;Q,G,oB;Y,a;Q,G;Y,G,O;gB,a;Y,G;gB,G,Y;oB,G,S;wB,O;4B,O;wB;oB,G;wB,I,G;qB;oB,I,G;oB,G,a;wB,O;4B,Q;4B,M;4B,Y;wB;wB,I;4B,a,I;wB;wB,O;4B,O,I,a;4B,U,S,G;gC,I,K,I,c,kB;4B;4B,Y;wB;oB,G,I,G,I,W,S,K;wB,O,G,a;4B,K,M;4B,O;gC,S,M;4B;wB,G;4B,I,G,I,G,M;yB;oB,I;iB,E;a,E;Y,I,G;Y,G,O;gB,a;Y,G;gB,G,Y;oB,O;wB,gB;oB;gB,G;oB,G,Y;wB,O;4B,e;wB;wB,I;4B,S,I;wB;wB,O;4B,O,I,a;4B,U,S,G;gC,I,K,I,c,U;4B;4B,Y;wB;oB;iB,E;a,E;S;Q,I,G;Q,G,wB;Y,O;gB,Y;Y;Q;K,E;A;A,I,kB,E;A,Q,S;A,Q,kB;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A;A,O,e,S,c;I,O;A;A,I,c,A,C;IGSA,IAAA,OAAA,kBAAA;QACE,MAAMA,YAAY,MAAMC,OAAOC,OAAOC,aAAaC;QAEnD,IAAI,CAACJ,UAAUK,eAAe,UAC5BL,UAAUM,SAAS;YACjBC,OAAO,IAAIC,kBAAAA;QADM;QAKrB,OAAOR,UAAUO;IAClB;IAVcE,OAAAA,SAAAA;Q,O,K,M,I,E;I;A,C;A,I,gB,A,C;IAYf,IAAA,QAAA,kBAAA;QACE,MAAMF,QAAQ,MAAM,IAAA,CAAKG;QACzB,IAAIC,UAAU,MAAMJ,MAAMK,WAAWC;QAErC,IAAIF,YAAYG,WAAW;YACzBH,UAAU,IAAII,kBAAAA,cAAcF;YAC5B,MAAMN,MAAMS,WAAWL;QACxB;QAED,OAAOA;IACR;IAVcM,OAAAA,SAAAA;Q,O,M,M,I,E;I;A,C;AA1Bf,IAAA,oBAAA,QAAA;AAMA,IAAA,yBAAA,QAAA;A,I,0B,uB;A,S,uB,G;I,O,O,I,a,M;Q,S;I;A;A,S,kB,E;I,O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","sources":["node_modules/spinal-env-viewer-room-manager/index.js","node_modules/spinal-env-viewer-room-manager/vue/dialogs/index.js","node_modules/spinal-env-viewer-panel-manager-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelManagerService.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelApp.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalMountExtention.js","node_modules/spinal-env-viewer-room-manager/vue/dialogs/create/createContext.vue","node_modules/spinal-env-viewer-room-manager/js/event.js","node_modules/spinal-env-viewer-room-manager/js/utilities.js","node_modules/spinal-env-viewer-room-manager/services/service.js","node_modules/spinal-env-viewer-room-manager/services/constants.js","node_modules/spinal-env-viewer-plugin-forge/dist/Constants.js","node_modules/spinal-env-viewer-room-manager/js/types.js","node_modules/spinal-env-viewer-room-manager/vue/dialogs/create/createCategory.vue","node_modules/spinal-env-viewer-room-manager/vue/dialogs/create/iconsComponents.vue","node_modules/spinal-env-viewer-room-manager/js/icons.json","node_modules/spinal-env-viewer-room-manager/vue/dialogs/create/createGroup.vue","node_modules/spinal-env-viewer-room-manager/vue/dialogs/color/colorDialog.vue","node_modules/spinal-env-viewer-room-manager/vue/dialogs/linkToGroup/linkToGroup.vue","node_modules/spinal-env-viewer-plugin-attribute-manager/src/services/index.js","node_modules/spinal-env-viewer-plugin-attribute-manager/src/services/classes/spinalAttributeService.js","node_modules/spinal-env-viewer-bim-manager-service/dist/index.js","node_modules/spinal-env-viewer-bim-manager-service/src/index.ts","node_modules/spinal-env-viewer-bim-manager-service/dist/bimObjects/bimService.js","node_modules/spinal-env-viewer-bim-manager-service/src/bimObjects/bimService.ts","node_modules/spinal-env-viewer-plugin-attribute-manager/src/services/classes/spinalConfigurationService.js","node_modules/spinal-env-viewer-room-manager/vue/dialogs/linkToGroup/linkToGroupTemplate.vue","node_modules/spinal-env-viewer-room-manager/vue/dialogs/selectTypeDialog.vue","node_modules/spinal-env-viewer-room-manager/vue/dialogs/linkToGroup/linkBimObjectToGroup.vue","node_modules/spinal-env-viewer-room-manager/vue/panel/index.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/index.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/SpinalForgeExtention.js","node_modules/spinal-env-viewer-room-manager/vue/panel/linkerDialog.vue","node_modules/spinal-env-viewer-room-manager/vue/panel/globalLinkerPanel.vue","node_modules/spinal-env-viewer-room-manager/vue/others/tableComponent.vue","node_modules/spinal-env-viewer-room-manager/vue/others/checkBoxComponent.vue","node_modules/spinal-env-viewer-plugin-bimobjectservice/build/createGraphBimObject.js","node_modules/spinal-env-viewer-plugin-bimobjectservice/createGraphBimObject.js","node_modules/spinal-models-bimobject/build/BIMObject.js","node_modules/spinal-models-bimobject/BIMObject.js","node_modules/spinal-env-viewer-room-manager/buttons/index.js","node_modules/spinal-env-viewer-room-manager/buttons/addBimObjectToGroup.js","node_modules/spinal-env-viewer-context-menu-service/index.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextMenuService.js","node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","node_modules/spinal-env-viewer-context-menu-service/constants.js","node_modules/spinal-env-viewer-room-manager/buttons/addBimRoomToGroup.js","node_modules/spinal-env-viewer-room-manager/buttons/createContextGroup.js","node_modules/spinal-env-viewer-room-manager/buttons/createElement.js","node_modules/spinal-env-viewer-room-manager/buttons/edit.js","node_modules/spinal-env-viewer-room-manager/buttons/findBimObject.js","node_modules/spinal-env-viewer-room-manager/buttons/findBimRoom.js","node_modules/spinal-env-viewer-room-manager/buttons/linkRooms.js","node_modules/spinal-env-viewer-room-manager/buttons/viewBtn.js"],"sourcesContent":["import \"./vue/dialogs\";\nimport \"./vue/panel\";\nimport \"./js/event\";\nimport \"./buttons\"\n\n// import ContextGroupBtn from \"./buttons/createContextGroup\";\n// import CreateElement from \"./buttons/createElement\";\n// // import DisplayBimObjects from \"./buttons/displayBimObject\";\n// import Edit from './buttons/edit';\n// import LinkRooms from \"./buttons/linkRooms\";\n// // import AddToReference from \"./buttons/addToReferenceContext\";\n// import ViewChildren from \"./buttons/viewBtn\";\n\n// import FindRoom from \"./buttons/findBimRoom\";\n// import FindBimObject from \"./buttons/findBimObject\";\n\n// import {\n//   spinalContextMenuService\n// } from \"spinal-env-viewer-context-menu-service\";\n\n\n// const SIDEBAR = \"GraphManagerSideBar\";\n// const HEADERBAR = \"GraphManagerTopBar\";\n// const CIRCULARMENU = 'circularMenu';\n\n\n\n\n\n// spinalContextMenuService.registerApp(SIDEBAR, new AddToReference());\n\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                     TESTS                                                   //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n// import {\n//   bimObjectManagerService\n// } from \"../spinal-env-viewer-bim-manager-service\";\n\n// import AddBtnFunction from \"../spinal-env-viewer-plugin-filter\";\n\n// window.tests = {\n//   bimObjectManagerService: bimObjectManagerService,\n// }\n\n\n// document.onreadystatechange = () => {\n//   console.log(\"state\", document.readyState)\n//   if (document.readyState === 'complete') {\n//     AddBtnFunction();\n//   }\n// }","import vue from \"vue\";\n\nconst {\n  SpinalMountExtention,\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nimport createContextGroup from \"./create/createContext.vue\";\nimport createCategoryDialog from \"./create/createCategory.vue\";\nimport createGroupDialog from \"./create/createGroup.vue\";\nimport colorConfigDialog from \"./color/colorDialog.vue\";\nimport LinkToGroup from \"./linkToGroup/linkToGroup.vue\";\nimport SelectGroupTypeDialog from \"./selectTypeDialog.vue\";\nimport AddBimObjectToGroupDialog from \"./linkToGroup/linkBimObjectToGroup.vue\";\n\nconst dialogs = [\n  {\n    name: \"linkToGroupDialog\",\n    vueMountComponent: vue.extend(LinkToGroup),\n    parentContainer: document.body,\n  },\n  {\n    name: \"addBimObjectToGroupDialog\",\n    vueMountComponent: vue.extend(AddBimObjectToGroupDialog),\n    parentContainer: document.body,\n  },\n  {\n    name: \"createGroupContextDialog\",\n    vueMountComponent: vue.extend(createContextGroup),\n    parentContainer: document.body,\n  },\n  {\n    name: \"createCategoryDialog\",\n    vueMountComponent: vue.extend(createCategoryDialog),\n    parentContainer: document.body,\n  },\n  {\n    name: \"createGroupDialog\",\n    vueMountComponent: vue.extend(createGroupDialog),\n    parentContainer: document.body,\n  },\n  {\n    name: \"colorConfigDialog\",\n    vueMountComponent: vue.extend(colorConfigDialog),\n    parentContainer: document.body,\n  },\n  {\n    name: \"selectGroupTypeDialog\",\n    vueMountComponent: vue.extend(SelectGroupTypeDialog),\n    parentContainer: document.body,\n  },\n];\n\nfor (let index = 0; index < dialogs.length; index++) {\n  SpinalMountExtention.mount(dialogs[index]);\n}\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalPanelManagerService = require(\"./SpinalPanelManagerService\");\nconst SpinalPanelApp = require(\"./SpinalPanelApp\");\n\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalPanelManagerService === \"undefined\")\n  G_root.spinal.spinalPanelManagerService = new SpinalPanelManagerService();\nconst SpinalMountExtention = require(\"./SpinalMountExtention.js\")(\n  G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  spinalPanelManagerService: G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp,\n  SpinalMountExtention,\n  install(Vue) {\n    Vue.prototype.$spinalPanelManagerService =\n      G_root.spinal.spinalPanelManagerService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} panels key = panelName, value = an instance of SpinalPanelApp\n * @class SpinalPanelManagerService\n */\nclass SpinalPanelManagerService {\n  /**\n   *Creates an instance of SpinalPanelManagerService.\n   * @memberof SpinalPanelManagerService\n   */\n  constructor() {\n    this.panels = {};\n  }\n\n  /**\n   * method to register an Panel Application\n   *\n   * @param {string} panelName the name of the panel\n   * @param {SpinalPanelApp} spinalPanelApp the application\n   * @memberof SpinalPanelManagerService\n   */\n  registerPanel(panelName, spinalPanelApp) {\n    this.panels[panelName] = spinalPanelApp;\n  }\n\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  openPanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].openPanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  closePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].closePanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  tooglePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].tooglePanel(option);\n    return false;\n  }\n}\n\nmodule.exports = SpinalPanelManagerService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n * Base interface like class of a panel\n *\n * @class SpinalPanelApp\n */\nclass SpinalPanelApp {\n  constructor() {}\n\n  openPanel(option) {}\n  closePanel(option) {}\n  tooglePanel(option) {}\n}\n\nmodule.exports = SpinalPanelApp;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (!option.vueMountComponent) {\n    throw new Error(\"mount : missing option vueMountComponent\");\n  }\n\n  cfg.name = option.name || \"SpinalMount\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.parentContainer = option.parentContainer || document.body;\n  return cfg;\n}\n\nfunction getDialog() {\n  if (!this.dialog) {\n    this.dialog = document.createElement(\"div\");\n    const _compo = document.createElement(\"div\");\n    this.dialog.className = \"spinal-modal-container\";\n    this.cfg.parentContainer.appendChild(this.dialog);\n    this.dialog.appendChild(_compo);\n    this.compoment = new this.cfg.vueMountComponent({\n      propsData: {\n        onFinised: this.onFinised.bind(this)\n      }\n    }).$mount(_compo);\n  }\n  return this.dialog;\n}\n\n/**\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { mount }\n */\nmodule.exports = function(spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n```js\n{\n  name: \"myCustomDialogName\",\n  vueMountComponent: Vue.extend(aVueCompomentDialog),\n  parentContainer: document.body\n}```\n     *\n     * @param {*} option\n     */\n    mount(option) {\n      let cfg = configInit(option);\n      const SpinalMount = class extends SpinalPanelApp {\n        constructor() {\n          super();\n          this.cfg = cfg;\n          this.dialog = null;\n          this.compoment = null;\n        }\n\n        openPanel(opt) {\n          getDialog.call(this);\n          this.compoment.opened(opt);\n        }\n        closePanel(opt) {\n          if (this.dialog !== null) {\n            this.compoment.removed(opt);\n            this.dialog.remove();\n            this.dialog = null;\n            this.compoment = null;\n          }\n        }\n\n        tooglePanel(opt) {\n          if (this.dialog !== null) {\n            this.closePanel(opt);\n          } else {\n            this.openPanel(opt);\n          }\n        }\n\n        /**\n         * called when dialog closed by the dialog itself\n         */\n        onFinised(closeResult) {\n          this.closePanel(closeResult);\n        }\n      };\n      let SpinalMountInstance = new SpinalMount();\n      spinalPanelManagerService.registerPanel(cfg.name, SpinalMountInstance);\n    }\n  };\n};\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n\t<md-dialog :md-active.sync=\"showDialog\" @md-closed=\"closeDialog(false)\">\n\t\t<md-dialog-title>{{ title | toUpperCase }}</md-dialog-title>\n\n\t\t<md-dialog-content class=\"dialogContainer\">\n\t\t\t<div>\n\t\t\t\t<md-field>\n\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t<md-input v-model=\"inputValue\"></md-input>\n\t\t\t\t</md-field>\n\n\t\t\t\t<div v-if=\"!pre.selected\">\n\t\t\t\t\t<span class=\"md-title\">Choose :</span>\n\n\t\t\t\t\t<md-radio\n\t\t\t\t\t\tclass=\"md-primary\"\n\t\t\t\t\t\tv-for=\"(t, index) in GroupTypes\"\n\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\tv-model=\"typeSelected\"\n\t\t\t\t\t\t:value=\"t.type\"\n\t\t\t\t\t\t>{{ t.name }}</md-radio\n\t\t\t\t\t>\n\t\t\t\t</div>\n\n\t\t\t\t<div v-else>type selected : {{ pre.type }}</div>\n\t\t\t</div>\n\t\t</md-dialog-content>\n\n\t\t<md-dialog-actions>\n\t\t\t<md-button class=\"md-primary\" @click=\"closeDialog(false)\"\n\t\t\t\t>Close</md-button\n\t\t\t>\n\t\t\t<md-button\n\t\t\t\tclass=\"md-primary\"\n\t\t\t\t@click=\"closeDialog(true)\"\n\t\t\t\t:disabled=\"isDisabled()\"\n\t\t\t\t>Save</md-button\n\t\t\t>\n\t\t</md-dialog-actions>\n\t</md-dialog>\n</template>\n\n<script>\n\timport EventBus from \"../../../js/event.js\";\n\timport CREATE_DATA_TYPES from \"../../../js/types.js\";\n\timport geographicService from \"spinal-env-viewer-context-geographic-service\";\n\n\timport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\n\n\texport default {\n\t\tname: \"createGroupContextDialog\",\n\t\tprops: [\"onFinised\"],\n\t\tdata() {\n\t\t\tthis.GroupTypes = CREATE_DATA_TYPES;\n\n\t\t\treturn {\n\t\t\t\tshowDialog: true,\n\t\t\t\ttitle: \"\",\n\t\t\t\tinputValue: \"\",\n\t\t\t\ttypeSelected: geographicService.constants.ROOM_TYPE,\n\t\t\t\tpre: {\n\t\t\t\t\tselected: false,\n\t\t\t\t\ttype: undefined,\n\t\t\t\t},\n\t\t\t\tcallback: () => {},\n\t\t\t};\n\t\t},\n\n\t\tmethods: {\n\t\t\topened(option) {\n\t\t\t\tthis.title = option.title;\n\n\t\t\t\tif (option.typePreselected) {\n\t\t\t\t\tthis.pre.selected = true;\n\t\t\t\t\tthis.pre.type = option.typePreselected;\n\t\t\t\t} else {\n\t\t\t\t\tthis.pre.selected = false;\n\t\t\t\t\tthis.pre.type = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (option.callback) this.callback = option.callback;\n\t\t\t},\n\n\t\t\tremoved(closed) {\n\t\t\t\tif (closed) {\n\t\t\t\t\tlet value = this.inputValue.trim();\n\n\t\t\t\t\tif (this.pre.selected) this.typeSelected = this.pre.type;\n\n\t\t\t\t\tgroupManagerService\n\t\t\t\t\t\t.createGroupContext(value, this.typeSelected)\n\t\t\t\t\t\t.then((_res) => {\n\t\t\t\t\t\t\tthis.sentEvent(_res.info.id.get());\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.showDialog = false;\n\t\t\t},\n\n\t\t\tcloseDialog(closeResult) {\n\t\t\t\tif (typeof this.onFinised === \"function\") {\n\t\t\t\t\tthis.onFinised(closeResult);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsentEvent(id) {\n\t\t\t\tif (this.callback && typeof this.callback === \"function\")\n\t\t\t\t\tthis.callback(id);\n\n\t\t\t\tEventBus.$emit(\"itemCreated\", id);\n\t\t\t},\n\n\t\t\tisDisabled() {\n\t\t\t\treturn this.inputValue.trim().length === 0;\n\t\t\t},\n\t\t},\n\t\tfilters: {\n\t\t\ttoUpperCase: function (data) {\n\t\t\t\treturn data.toUpperCase();\n\t\t\t},\n\t\t},\n\t};\n</script>\n\n<style scoped>\n\t.dialogContainer {\n\t\toverflow: hidden !important;\n\t}\n</style>\n","import Vue from 'vue';\nimport utilities from \"./utilities\";\n\n\nconst EventBus = new Vue();\n\nEventBus.$on(\"mouseover\", (item) => {\n  utilities.getBimObjects(item.id).then(res => {\n    let selections = [];\n\n    res.forEach(el => {\n      let info = el.get();\n      let model = window.spinal.BimObjectService.getModelByBimfile(\n        info.bimFileId);\n\n      let selected = selections.find(el2 => {\n        return el2.model.id === model.id\n      });\n\n      if (selected) {\n        selected.ids.push(el.dbid);\n      } else {\n        selections.push({\n          model: model,\n          ids: [info.dbid]\n        })\n      }\n\n\n    })\n\n    window.spinal.ForgeViewer.viewer.impl.selector\n      .setAggregateSelection(selections);\n\n  })\n})\n\nEventBus.$on(\"mouseleave\", () => {\n  window.spinal.ForgeViewer.viewer.select();\n})\n\nexport default EventBus;","import {\n  // ROOMS_CATEGORY_RELATION,\n  // ROOMS_GROUP_RELATION,\n  // ROOMS_TO_ELEMENT_RELATION,\n  // EQUIPMENTS_CATEGORY_RELATION,\n  // EQUIPMENTS_GROUP_RELATION,\n  // EQUIPMENTS_TO_ELEMENT_RELATION,\n  // ROOMS_GROUP_CONTEXT,\n  // ROOMS_GROUP,\n  // ROOMS_CATEGORY,\n  // EQUIPMENTS_GROUP_CONTEXT,\n  // EQUIPMENTS_CATEGORY,\n  // EQUIPMENTS_GROUP\n  groupService,\n} from \"../services/service\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\nimport { BIM_OBJECT_TYPE } from \"spinal-env-viewer-plugin-forge/dist/Constants\";\n\nimport geographicService from \"spinal-env-viewer-context-geographic-service\";\n\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\n\nlet ItemColoredMap = new Map();\nlet BimElementsColor = new Map();\n\nconst ROOMS_RELATIONS = [\n  // groupService.constants.CATEGORY_TO_GROUP_RELATION,\n  // groupService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  // groupService.constants.GROUP_TO_ROOMS_RELATION,\n  groupManagerService.constants.CATEGORY_TO_GROUP_RELATION,\n  groupManagerService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  groupManagerService.constants.OLD_RELATIONS_TYPES.GROUP_TO_ROOMS_RELATION,\n  `groupHas${geographicService.constants.ROOM_TYPE}`,\n  geographicService.constants.REFERENCE_RELATION,\n  geographicService.constants.EQUIPMENT_RELATION,\n];\n\nconst EQUIPMENTS_RELATIONS = [\n  // groupService.constants.CATEGORY_TO_GROUP_RELATION,\n  // groupService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  groupManagerService.constants.CATEGORY_TO_GROUP_RELATION,\n  groupManagerService.constants.CONTEXT_TO_CATEGORY_RELATION,\n  groupManagerService.constants.OLD_RELATIONS_TYPES\n    .GROUP_TO_EQUIPMENTS_RELATION,\n  `groupHas${geographicService.constants.EQUIPMENT_TYPE}`,\n];\n\nconst ROOMS_TYPES = [\n  groupManagerService.constants.OLD_CONTEXTS_TYPES.ROOMS_GROUP_CONTEXT,\n  groupManagerService.constants.CATEGORY_TYPE,\n  groupManagerService.constants.OLD_GROUPS_TYPES.ROOMS_GROUP,\n  `${geographicService.constants.ROOM_TYPE}GroupContext`,\n  `${geographicService.constants.ROOM_TYPE}Group`,\n];\n\n// eslint-disable-next-line no-unused-vars\nconst EQUIPMENTS_TYPES = [\n  groupManagerService.constants.OLD_CONTEXTS_TYPES.EQUIPMENTS_GROUP_CONTEXT,\n  groupManagerService.constants.CATEGORY_TYPE,\n  groupManagerService.constants.OLD_GROUPS_TYPES.EQUIPMENTS_GROUP,\n  `${geographicService.constants.EQUIPMENT_TYPE}GroupContext`,\n  `${geographicService.constants.EQUIPMENT_TYPE}Group`,\n];\n\nlet utilities = {\n  getIcon(selectedNode) {\n    return this._isColored(selectedNode).then((isColored) => {\n      return isColored;\n    });\n  },\n\n  getBimObjects(nodeId) {\n    let nodeInfo = SpinalGraphService.getInfo(nodeId);\n    let type = nodeInfo.type.get();\n\n    if (type === BIM_OBJECT_TYPE) {\n      return Promise.resolve([nodeInfo]);\n    } else if (type === geographicService.constants.ROOM_TYPE) {\n      return SpinalGraphService.getChildren(nodeId, [\n        geographicService.constants.REFERENCE_RELATION,\n        geographicService.constants.EQUIPMENT_RELATION,\n      ]);\n    } else {\n      let relations = [\n        groupService.constants.CONTEXT_TO_CATEGORY_RELATION,\n        groupService.constants.GROUP_TO_ROOMS_RELATION,\n        geographicService.constants.REFERENCE_RELATION,\n        geographicService.constants.EQUIPMENT_RELATION,\n        groupService.constants.CATEGORY_TO_GROUP_RELATION,\n        groupService.constants.GROUP_TO_EQUIPMENTS_RELATION,\n      ];\n\n      if (ROOMS_TYPES.indexOf(type) !== -1) {\n        relations = ROOMS_RELATIONS;\n      } else {\n        relations = EQUIPMENTS_RELATIONS;\n      }\n\n      return SpinalGraphService.findNodes(nodeId, relations, (node) => {\n        return node.getType().get() === BIM_OBJECT_TYPE;\n      }).then((res) => {\n        return res.map((el) => {\n          SpinalGraphService._addNode(el);\n          return el.info;\n        });\n      });\n    }\n  },\n\n  getGroups(selectedNode) {\n    let type = selectedNode.type.get();\n    let nodeId = selectedNode.id.get();\n\n    if (groupManagerService.isGroup(type)) {\n      return Promise.resolve([selectedNode]);\n    }\n\n    let relations = [];\n\n    return SpinalGraphService.findNodes(nodeId, relations, (node) => {\n      let argType = node.getType().get();\n      return groupManagerService.isGroup(argType);\n    }).then((res) => {\n      return res.map((el) => {\n        SpinalGraphService._addNode(el);\n        return el.info;\n      });\n    });\n  },\n\n  colorItem(selectedNode) {\n    this.getGroups(selectedNode).then((res) => {\n      res.forEach((el) => {\n        let id = el.id.get();\n        let color = el.color ? el.color.get() : undefined;\n        this.colorGroup(id, color);\n      });\n    });\n  },\n\n  restoreItem(selectedNode) {\n    this.getGroups(selectedNode).then((res) => {\n      res.forEach((el) => {\n        let id = el.id.get();\n        this.restoreGroup(id);\n      });\n    });\n  },\n\n  colorGroup(groupId, argColor) {\n    this.getBimObjects(groupId).then((res) => {\n      let color =\n        typeof argColor !== \"undefined\"\n          ? this._convertHexColorToRGB(argColor)\n          : this._convertHexColorToRGB(\"#000000\");\n\n      ItemColoredMap.set(groupId, groupId);\n\n      res.forEach((child) => {\n        let BimColors = BimElementsColor.get(child.dbid.get())\n          ? BimElementsColor.get(child.dbid.get())\n          : [];\n\n        BimColors.push({\n          id: groupId, //node.id.get(),\n          color: color,\n        });\n\n        BimElementsColor.set(child.dbid.get(), BimColors);\n\n        let model = window.spinal.BimObjectService.getModelByBimfile(\n          child.bimFileId.get()\n        );\n\n        console.log(\"model\", model);\n\n        model.setThemingColor(\n          child.dbid.get(),\n          new THREE.Vector4(\n            color.r / 255,\n            color.g / 255,\n            color.b / 255,\n            0.7,\n            true\n          )\n        );\n      });\n    });\n  },\n\n  restoreGroup(groupId) {\n    ItemColoredMap.delete(groupId);\n    this.getBimObjects(groupId).then((res) => {\n      res.forEach((child) => {\n        let model = window.spinal.BimObjectService.getModelByBimfile(\n          child.bimFileId.get()\n        );\n\n        model.setThemingColor(\n          child.dbid.get(),\n          // eslint-disable-next-line no-undef\n          new THREE.Vector4(0, 0, 0, 0),\n          true\n        );\n\n        let allColors = BimElementsColor.get(child.dbid.get());\n\n        if (allColors) {\n          //   allColors = allColors.filter(el => el.id !== node.id.get());\n          allColors = allColors.filter((el) => el.id !== groupId);\n          BimElementsColor.set(child.dbid.get(), allColors);\n\n          if (allColors.length > 0) {\n            let color = allColors[0].color;\n            model.setThemingColor(\n              child.dbid.get(),\n              // eslint-disable-next-line no-undef\n              new THREE.Vector4(\n                color.r / 255,\n                color.g / 255,\n                color.b / 255,\n                0.7\n              ),\n              true\n            );\n          }\n        }\n      });\n    });\n  },\n\n  async consumeBatch(promises, batchSize = 2) {\n    let index = 0;\n    const result = { successed: [], failed: [] };\n    while (index < promises.length) {\n      let endIndex = index + batchSize;\n      if (promises.length <= endIndex) endIndex = promises.length;\n      const slice = promises.slice(index, endIndex);\n      // const resProm = await Promise.all(slice.map((e) => e()));\n      // result.push(...resProm);\n      const { successed, failed } = await this.getPromiseResult(\n        slice.map((e) => e())\n      );\n      result.successed.push(...successed);\n      result.failed.push(...failed);\n\n      index = endIndex;\n    }\n    return result;\n  },\n\n  getPromiseResult(liste) {\n    return Promise.allSettled(liste).then((result) => {\n      const obj = { successed: [], failed: [] };\n      for (const { status, value } of result) {\n        if (status === \"fulfilled\") obj.successed.push(value);\n        else obj.failed.push(value);\n      }\n      return obj;\n    });\n  },\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  //                                                    Private                                   //\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n  _isColored(selectedNode) {\n    return this.getGroups(selectedNode).then((res) => {\n      if (res.length === 0) return false;\n\n      for (let index = 0; index < res.length; index++) {\n        const id = res[index].id.get();\n\n        if (typeof ItemColoredMap.get(id) === \"undefined\") {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  },\n\n  _convertHexColorToRGB(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result\n      ? {\n          r: parseInt(result[1], 16),\n          g: parseInt(result[2], 16),\n          b: parseInt(result[3], 16),\n        }\n      : null;\n  },\n\n  ///////////////////////////////////////////////////////////////////////////////////////////\n  //                                    Parcours ascendant                                 //\n  ///////////////////////////////////////////////////////////////////////////////////////////\n\n  async getGeographicTree(endNodeId) {\n    let obj = {\n      id: endNodeId,\n      children: [],\n    };\n\n    let parents = [];\n\n    do {\n      let tempParents = await SpinalGraphService.getParents(\n        id,\n        geographicService.constants.GEOGRAPHIC_RELATIONS\n      );\n\n      parents = tempParents && tempParents.map((el) => el.get());\n\n      // parent && result.push(parent.get());\n\n      // id = (parent && parent.id) && parent.id.get();\n    } while (parents.length);\n\n    // return result;\n  },\n\n  addObjToParent(obj, parentId) {\n    return {\n      id: parentId,\n      children: obj,\n    };\n  },\n};\n\nexport default utilities;\n","const {\n  SPINAL_RELATION_PTR_LST_TYPE,\n  SpinalGraphService\n} = require(\"spinal-env-viewer-graph-service\");\n\nconst {\n  Model\n} = require(\"spinal-core-connectorjs_type\");\n\nconst constants = require(\"./constants\");\n\n\nlet groupService = {\n  constants: constants,\n  createGroupContext(name, type) {\n    const context = SpinalGraphService.getContext(name);\n\n    if (typeof context !== \"undefined\") return Promise.resolve(false);\n\n    return SpinalGraphService.addContext(\n      name,\n      type,\n      new Model({\n        name: name\n      })\n    );\n  },\n  addElement(contextId, elementId, elementType, elementName, iconName,\n    color) {\n    let contextInfo = SpinalGraphService.getInfo(contextId)\n    let contextType = contextInfo && contextInfo.type ? contextInfo.type\n      .get() : undefined;\n\n    let typeAndRelation = this.getTypeAndRelation(elementType, contextType);\n\n\n    let type = typeAndRelation.type;\n    let relationName = typeAndRelation.relation;\n\n    if (typeof type !== \"undefined\" && typeof relationName !== \"undefined\") {\n      let info = {\n        name: elementName,\n        type: type\n      }\n\n      if (iconName) {\n        info[\"icon\"] = iconName;\n      }\n\n      if (color) {\n        info[\"color\"] = color;\n      }\n\n      let childId = SpinalGraphService.createNode(info,\n        new Model({\n          name: elementName\n        })\n      );\n\n\n      return SpinalGraphService.addChildInContext(\n        elementId,\n        childId,\n        contextId,\n        relationName,\n        SPINAL_RELATION_PTR_LST_TYPE\n      );\n    }\n\n    // // let type =\n    // //   contextType === ROOMS_GROUP_CONTEXT ? ROOMS_GROUP : EQUIPMENTS_GROUP;\n\n    // // let relationName =\n    // //   contextType === ROOMS_GROUP_CONTEXT ?\n    // //   ROOMS_GROUP_RELATION :\n    // //   EQUIPMENTS_GROUP_RELATION;\n\n\n\n  },\n  elementIsLinkedToGroup(groupId, elementId) {\n    let realNode = SpinalGraphService.getRealNode(groupId);\n    const type = realNode.getType().get();\n\n    let relationName = constants.GROUP_RELATION_ASSOCIATION.get(type)\n\n    try {\n      let ids = realNode.children[SPINAL_RELATION_PTR_LST_TYPE][relationName]\n        .children.info.ids;\n\n      return Promise.resolve(ids.has((el) => {\n        return el.get() === elementId\n      }))\n    } catch (error) {\n      // let type = SpinalGraphService.getInfo(groupId).type.get();\n      // let relationName = type === ROOMS_GROUP ? ROOMS_TO_ELEMENT_RELATION :\n      //   EQUIPMENTS_TO_ELEMENT_RELATION;\n\n      return SpinalGraphService.getChildren(groupId, [relationName]).then(\n        children => {\n          for (let i = 0; i < children.length; i++) {\n            const element = children[i];\n            if (element.id.get() === elementId) return true;\n\n          }\n          return false;\n        });\n    }\n\n  },\n  linkElementToGroup(groupId, elementId, contextId) {\n\n    let groupInfo = SpinalGraphService.getInfo(groupId);\n\n    let relationName = constants.GROUP_RELATION_ASSOCIATION.get(groupInfo.type\n      .get());\n\n\n    return this.getCategorie(groupInfo).then(category => {\n\n      return this.elementIsInCategorie(category[0].id.get(), elementId)\n        .then(\n          group => {\n            let result = {\n              old_group: undefined,\n              newGroup: groupId\n            }\n\n            if (typeof group !== \"undefined\") {\n              this.removeLink(group.id.get(), elementId);\n              result.old_group = group.id.get();\n            }\n\n            SpinalGraphService.addChildInContext(groupId,\n              elementId, contextId, relationName,\n              SPINAL_RELATION_PTR_LST_TYPE);\n\n\n            return result;\n\n          })\n    })\n\n  },\n  removeLink(groupId, elementId) {\n    let type = SpinalGraphService.getInfo(groupId).type.get();\n    let relationName = constants.GROUP_RELATION_ASSOCIATION.get(type);\n\n    return SpinalGraphService.removeChild(groupId, elementId,\n      relationName,\n      SPINAL_RELATION_PTR_LST_TYPE)\n  },\n  getTypeAndRelation(elementType, contextType) {\n\n    switch (elementType) {\n      case contextType:\n        return {\n          type: constants.CATEGORY_TYPE,\n            relation: constants.CONTEXT_TO_CATEGORY_RELATION\n        };\n\n        // case ROOMS_GROUP:\n        //   return {\n        //     type: \"undefined\",\n        //       relation:\n        //   };\n      case constants.CATEGORY_TYPE:\n        // eslint-disable-next-line no-case-declarations\n        let type = constants.CONTEXT_GROUP_ASSOCIATION.get(contextType);\n        return {\n          type: type,\n            relation: constants.CATEGORY_TO_GROUP_RELATION\n        };\n\n        // case constants.ROOMS_GROUP:\n        // case constants.EQUIPMENTS_GROUP:\n        // case constants.ENDPOINT_GROUP:\n        //   return {\n        //     type: \"\",\n        //       relation: constants.GROUP_RELATION_ASSOCIATION.get(elementType)\n        //   }\n\n      default:\n        return {};\n    }\n  },\n\n  getElementsLinked(groupId) {\n    let type = SpinalGraphService.getInfo(groupId).type.get();\n    let relationName = constants.GROUP_RELATION_ASSOCIATION.get(type);\n\n    return SpinalGraphService.getChildren(groupId, [relationName]);\n  },\n\n  getGroups(selectedNode) {\n\n    // const ROOMS_TYPES = [\n    //   ROOMS_GROUP_CONTEXT,\n    //   ROOMS_CATEGORY,\n    //   ROOMS_GROUP\n    // ]\n\n\n    let type = selectedNode.type.get();\n    let nodeId = selectedNode.id.get();\n\n    if (typeof constants.GROUP_RELATION_ASSOCIATION.get(type) !==\n      \"undefined\") {\n      return Promise.resolve([selectedNode]);\n    }\n\n    let relations = [\n      constants.CONTEXT_TO_CATEGORY_RELATION,\n      constants.CATEGORY_TO_GROUP_RELATION,\n      constants.GROUP_TO_ROOMS_RELATION,\n      constants.GROUP_TO_EQUIPMENTS_RELATION,\n      constants.GROUP_TO_ENDPOINT_RELATION\n    ];\n\n    return SpinalGraphService.findNodes(nodeId, relations, (node) => {\n      let argType = node.getType().get()\n      return typeof constants.GROUP_RELATION_ASSOCIATION.get(argType) !==\n        \"undefined\"\n    }).then(res => {\n      return res.map(el => {\n        SpinalGraphService._addNode(el);\n        return el.info;\n      })\n    })\n  },\n\n  getCategorie(selectedNode) {\n    let type = selectedNode.type.get();\n    let nodeId = selectedNode.id.get();\n\n    if (type === constants.CATEGORY_TYPE) {\n      return Promise.resolve(selectedNode);\n    } else if (constants.CONTEXTS_TYPES.indexOf(type) !== -1) {\n      return SpinalGraphService.getChildren(nodeId, [constants\n        .CONTEXT_TO_CATEGORY_RELATION\n      ]);\n\n    } else {\n      let relationRefPromises = [];\n\n\n      let node = SpinalGraphService.getRealNode(nodeId);\n\n      let relationList = node.parents[constants.CATEGORY_TO_GROUP_RELATION];\n\n      if (relationList) {\n        for (let i = 0; i < relationList.length; i++) {\n          const element = relationList[i];\n          relationRefPromises.push(element.load());\n        }\n\n      }\n\n      return Promise.all(relationRefPromises).then(refs => {\n\n        let promises = refs.map(node => {\n          return node.parent.load();\n        })\n\n\n        return Promise.all(promises).then(parents => {\n          // let p = [];\n          // parents.forEach(el => {\n          //   if (el && !(el instanceof SpinalContext)) {\n          //     p.push(new SpinalCalNode(el));\n          //   }\n          // })\n\n          // return p;\n\n          return parents.map(el => {\n            return el.info;\n          });\n\n        });\n\n      })\n\n\n    }\n  },\n\n  elementIsInCategorie(categoryId, elementId) {\n\n    // let nodeInfo = SpinalGraphService.getInfo(categoryId);\n    // let type = nodeInfo.type.get();\n\n    // let relationName =\n    //   type === ROOMS_CATEGORY ?\n    //   ROOMS_GROUP_RELATION :\n    //   EQUIPMENTS_GROUP_RELATION;\n\n    return SpinalGraphService.getChildren(categoryId, [constants\n        .CATEGORY_TO_GROUP_RELATION\n      ])\n      .then(\n        children => {\n\n          return children.find(child => {\n            return child.childrenIds.find(el => {\n              return el === elementId\n            })\n          })\n\n        })\n\n  }\n\n};\n\nmodule.exports = {\n  // ROOMS_GROUP_CONTEXT,\n  // ROOMS_GROUP,\n  // EQUIPMENTS_GROUP,\n  // ROOMS_GROUP_RELATION,\n  // EQUIPMENTS_GROUP_RELATION,\n  // EQUIPMENTS_GROUP_CONTEXT,\n  // ROOMS_TO_ELEMENT_RELATION,\n  // EQUIPMENTS_TO_ELEMENT_RELATION,\n  // ROOMS_CATEGORY,\n  // ROOMS_CATEGORY_RELATION,\n  // EQUIPMENTS_CATEGORY,\n  // EQUIPMENTS_CATEGORY_RELATION,\n  // typeLst,\n  // TYPE_AND_RELATION,\n\n  groupService\n};","// ////////////////////////////////////////////////////\n// // ROOMS\n// ////////////////////////////////////////////////////\n// const ROOMS_GROUP_CONTEXT = \"RoomsGroupContext\";\n// const ROOMS_GROUP = \"RoomsGroup\";\n// const ROOMS_GROUP_RELATION = \"hasRoomsGroup\";\n// const ROOMS_TO_ELEMENT_RELATION = \"groupHasRooms\";\n// const ROOMS_CATEGORY = \"Rooms_category\";\n// const ROOMS_CATEGORY_RELATION = \"hasRoomsCategory\";\n\n\n\n// ///////////////////////////////////////////////////////\n// // BimObject\n// ///////////////////////////////////////////////////////\n// const EQUIPMENTS_GROUP_CONTEXT = \"EquipmentGroupContext\";\n// const EQUIPMENTS_GROUP = \"EquipmentGroup\";\n// const EQUIPMENTS_GROUP_RELATION = \"hasEquipmentsGroup\";\n// const EQUIPMENTS_TO_ELEMENT_RELATION = \"groupHasEquipments\";\n// const EQUIPMENTS_CATEGORY = \"Equipment_category\";\n// const EQUIPMENTS_CATEGORY_RELATION = \"hasEquipmentsCategory\";\n\n\n\n// const typeLst = [\n//   ROOMS_GROUP_CONTEXT,\n//   ROOMS_GROUP,\n//   ROOMS_CATEGORY,\n//   EQUIPMENTS_GROUP_CONTEXT,\n//   EQUIPMENTS_GROUP,\n//   EQUIPMENTS_CATEGORY\n// ]\n\n\n\n// const TYPE_AND_RELATION = new Map();\n// TYPE_AND_RELATION.set(ROOMS_GROUP_CONTEXT, ROOMS_CATEGORY_RELATION)\n// TYPE_AND_RELATION.set(ROOMS_GROUP, ROOMS_TO_ELEMENT_RELATION)\n// TYPE_AND_RELATION.set(ROOMS_CATEGORY, ROOMS_GROUP_RELATION)\n// TYPE_AND_RELATION.set(EQUIPMENTS_GROUP_CONTEXT, EQUIPMENTS_CATEGORY_RELATION)\n// TYPE_AND_RELATION.set(EQUIPMENTS_GROUP, EQUIPMENTS_TO_ELEMENT_RELATION)\n// TYPE_AND_RELATION.set(EQUIPMENTS_CATEGORY, EQUIPMENTS_GROUP_RELATION)\n\n// const CONTEXT_TYPE = \"groupingContext\";\n// const CATEGORY_TYPE = \"groupingCategory\";\n\n// ///////////////////////////////////////////\n// //            Groups Types               //\n// ///////////////////////////////////////////\n// const ROOMS_GROUP = \"roomsGroup\";\n// const EQUIPMENTS_GROUP = \"equipmentGroup\";\n// const ENDPOINT_GROUP = \"endpointGroup\"\n\n// ///////////////////////////////////////////\n// //            Relations                  //\n// ///////////////////////////////////////////\n\n// const CONTEXT_TO_CATEGORY_RELATION = \"hasCategory\";\n// const CATEGORY_TO_GROUP_RELATION = \"hasGroup\";\n// const GROUP_TO_ROOMS_RELATION = \"groupHasRooms\";\n// const GROUP_TO_EQUIPMENTS_RELATION = \"groupHasEquipments\";\n// const GROUP_TO_ENDPOINT_RELATION = \"groupHasEndpoints\";\n\n\n\nclass GroupServiceConstants {\n  constructor() {\n    ///////////////////////////////////////\n    // CONTEXT\n    ///////////////////////////////////////\n    this.ROOMS_GROUP_CONTEXT = \"RoomsGroupContext\";\n    this.EQUIPMENTS_GROUP_CONTEXT = \"EquipmentGroupContext\";\n    this.ENDPOINTS_GROUP_CONTEXT = \"EndpointGroupContext\";\n\n    this.CONTEXTS_TYPES = [\n      this.ROOMS_GROUP_CONTEXT,\n      this.EQUIPMENTS_GROUP_CONTEXT,\n      this.ENDPOINTS_GROUP_CONTEXT\n    ];\n\n    //Category\n\n    this.CATEGORY_TYPE = \"groupingCategory\";\n\n    ///////////////////////////////////////////\n    //            Groups Types               //\n    ///////////////////////////////////////////\n    this.ROOMS_GROUP = \"roomsGroup\";\n    this.EQUIPMENTS_GROUP = \"equipmentGroup\";\n    this.ENDPOINT_GROUP = \"endpointGroup\";\n\n    this.GROUPS_TYPES = [\n      this.ROOMS_GROUP,\n      this.EQUIPMENTS_GROUP,\n      this.ENDPOINT_GROUP\n    ];\n\n    ///////////////////////////////////////////\n    //            Relations                  //\n    ///////////////////////////////////////////\n\n    this.CONTEXT_TO_CATEGORY_RELATION = \"hasCategory\";\n    this.CATEGORY_TO_GROUP_RELATION = \"hasGroup\";\n    this.GROUP_TO_ROOMS_RELATION = \"groupHasRooms\";\n    this.GROUP_TO_EQUIPMENTS_RELATION = \"groupHasEquipments\";\n    this.GROUP_TO_ENDPOINT_RELATION = \"groupHasEndpoints\";\n\n    ////////////////////////////////////////////\n    // Maps\n    ////////////////////////////////////////////\n\n    this.CONTEXT_GROUP_ASSOCIATION = new Map([\n      [this.ROOMS_GROUP_CONTEXT, this.ROOMS_GROUP],\n      [this.EQUIPMENTS_GROUP_CONTEXT, this.EQUIPMENTS_GROUP],\n      [this.ENDPOINTS_GROUP_CONTEXT, this.ENDPOINT_GROUP]\n    ]);\n\n    this.GROUP_RELATION_ASSOCIATION = new Map([\n      [this.ROOMS_GROUP, this.GROUP_TO_ROOMS_RELATION],\n      [this.EQUIPMENTS_GROUP, this\n        .GROUP_TO_EQUIPMENTS_RELATION\n      ],\n      [this.ENDPOINT_GROUP, this.GROUP_TO_ENDPOINT_RELATION]\n\n    ])\n  }\n\n}\n\nmodule.exports = new GroupServiceConstants();","\"use strict\";\n/*\n * Copyright 2020 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\nexports.__esModule = true;\nexports.REFERENCE_OBJECT_RELATION_TYPE = exports.BIM_OBJECT_RELATION_TYPE = exports.BIM_NODE_RELATION_TYPE = exports.BIM_OBJECT_VERSION_RELATION_TYPE = exports.REFERENCE_OBJECT_RELATION_NAME = exports.BIM_OBJECT_VERSION_RELATION_NAME = exports.BIM_OBJECT_RELATION_NAME = exports.BIM_NODE_RELATION_NAME = exports.BIM_CONTEXT_RELATION_TYPE = exports.BIM_CONTEXT_RELATION_NAME = exports.BIM_OBJECT_TYPE = exports.PART_RELATION_TYPE = exports.SCENE_RELATION_TYPE = exports.PART_RELATION_NAME = exports.SCENE_TYPE = exports.SCENE_RELATION_NAME = void 0;\nvar spinal_env_viewer_graph_service_1 = require(\"spinal-env-viewer-graph-service\");\nvar constants_js_1 = require(\"spinal-env-viewer-context-geographic-service/build/constants.js\");\nexports.SCENE_RELATION_NAME = 'hasScene';\nexports.SCENE_TYPE = \"scene\";\nexports.PART_RELATION_NAME = 'hasParts';\nexports.SCENE_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.PART_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.BIM_OBJECT_TYPE = constants_js_1.EQUIPMENT_TYPE;\nexports.BIM_CONTEXT_RELATION_NAME = \"hasBimContext\";\nexports.BIM_CONTEXT_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.BIM_NODE_RELATION_NAME = \"hasBimNode\";\nexports.BIM_OBJECT_RELATION_NAME = constants_js_1.EQUIPMENT_RELATION;\nexports.BIM_OBJECT_VERSION_RELATION_NAME = \"hasBimVersion\";\nexports.REFERENCE_OBJECT_RELATION_NAME = constants_js_1.REFERENCE_RELATION;\nexports.BIM_OBJECT_VERSION_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.BIM_NODE_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.BIM_OBJECT_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\nexports.REFERENCE_OBJECT_RELATION_TYPE = spinal_env_viewer_graph_service_1.SPINAL_RELATION_PTR_LST_TYPE;\n","import {CONTEXT_TYPE, SITE_TYPE, BUILDING_TYPE, FLOOR_TYPE, ZONE_TYPE, ROOM_TYPE, EQUIPMENT_TYPE } from \"spinal-env-viewer-context-geographic-service/build/constants\";\nimport { SpinalBmsEndpoint, SpinalBmsDevice, SpinalBmsNetwork, SpinalBmsEndpointGroup } from \"spinal-model-bmsnetwork\";\nimport { NOTE_TYPE } from 'spinal-env-viewer-plugin-documentation-service/dist/Models/constants'\nimport { EVENT_TYPE } from \"spinal-env-viewer-task-service\";\nimport { spinalControlPointService } from 'spinal-env-viewer-plugin-control-endpoint-service';\nimport { spinalAnalyticService } from \"spinal-env-viewer-plugin-analytics-service\";\n\nexport default [{\n    name: \"Geographic Context Group\",\n    type: CONTEXT_TYPE\n  },\n  {\n    name: \"Site Group\",\n    type: SITE_TYPE\n  },\n  {\n    name: \"Building Group\",\n    type: BUILDING_TYPE\n  },\n  {\n    name: \"Floor Group\",\n    type: FLOOR_TYPE\n  },\n  {\n    name: \"Zone Group\",\n    type: ZONE_TYPE\n  },\n  {\n    name: \"Rooms Group\",\n    type: ROOM_TYPE,\n  },\n  {\n    name: \"Equipments Group\",\n    type: EQUIPMENT_TYPE,\n  },\n  {\n    name: \"Endpoint Group\",\n    type: SpinalBmsEndpoint.nodeTypeName,\n  },\n  {\n    name: \"Device Group\",\n    type: SpinalBmsDevice.nodeTypeName\n  },\n  {\n    name: \"Network Group\",\n    type: SpinalBmsNetwork.nodeTypeName\n  },\n  {\n    name: \"EndpointGroup Group\",\n    type: SpinalBmsEndpointGroup.nodeTypeName\n  }, \n  {\n    name: \"Note Group\",\n    type: NOTE_TYPE\n  }, \n  {\n    name : \"Agenda Group\",\n    type : EVENT_TYPE\n  }, \n  {\n    name : \"Control Points group\",\n    type : spinalControlPointService.CONTROL_POINT_TYPE\n  }, \n  {\n    name: \"Analytics group\",\n    type: spinalAnalyticService.nodeType\n  }\n];","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title>{{ title | toUpperCase }}</md-dialog-title>\n\n    <md-dialog-content class=\"dialogContainer\">\n      <div>\n        <md-field>\n          <label>Name</label>\n          <md-input v-model=\"inputValue\"></md-input>\n        </md-field>\n\n        <icon-component @selectIcon=\"selectIcon\"\n                        :selected=\"iconSelected\"></icon-component>\n      </div>\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(true)\"\n                 :disabled=\"isDisabled()\">Save</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n<script>\nimport iconComponent from \"./iconsComponents.vue\";\nimport EventBus from \"../../../js/event.js\";\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\n\nexport default {\n  name: \"createCategoryDialog\",\n  props: [\"onFinised\"],\n  components: {\n    \"icon-component\": iconComponent,\n  },\n  data() {\n    this.edit;\n    return {\n      showDialog: true,\n      iconSelected: undefined,\n      title: \"\",\n      inputValue: \"\",\n      selectedNode: undefined,\n      contextId: null,\n      callback: () => {},\n    };\n  },\n  methods: {\n    opened(option) {\n      this.edit = option.edit;\n\n      this.title = option.title;\n      this.contextId = option.contextId;\n\n      this.selectedNode = option.selectedNode.id.get();\n      this.iconSelected = \"3d_rotation\";\n      if (this.edit) {\n        this.inputValue = option.selectedNode.name.get();\n        this.iconSelected = option.iconSelected;\n      }\n\n      if (option.callback) this.callback = option.callback;\n    },\n    removed(closed) {\n      if (closed) {\n        this.createElement().then((result) => {\n          this.sentEvent(result.info.id.get());\n        });\n      }\n      this.showDialog = false;\n    },\n\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised(closeResult);\n      }\n    },\n\n    sentEvent(id) {\n      if (this.callback && typeof this.callback === \"function\")\n        this.callback(id);\n\n      EventBus.$emit(\"itemCreated\", id);\n    },\n\n    selectIcon(icon) {\n      this.iconSelected = icon;\n    },\n\n    createElement() {\n      if (!this.edit) {\n        return groupManagerService.addCategory(\n          this.contextId,\n          this.inputValue.trim(),\n          this.iconSelected\n        );\n      } else {\n        return groupManagerService.updateCategory(this.selectedNode, {\n          name: this.inputValue.trim(),\n          icon: this.iconSelected,\n        });\n      }\n    },\n\n    isDisabled() {\n      return (\n        this.inputValue.trim().length === 0 ||\n        typeof this.iconSelected === \"undefined\"\n      );\n    },\n  },\n  filters: {\n    toUpperCase: function (data) {\n      return data.toUpperCase();\n    },\n  },\n};\n</script>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n\n  <div>\n    <md-autocomplete v-model=\"iconSelected\"\n                     :md-options=\"icons\"\n                     @md-changed=\"getIcons\"\n                     @md-opened=\"getIcons\">\n      <label>Icon</label>\n      <template slot=\"md-autocomplete-item\"\n                slot-scope=\"{ item }\">\n        <div>\n          <md-icon>{{ item }}</md-icon>\n          &nbsp; &nbsp;\n          {{ item }}\n        </div>\n      </template>\n    </md-autocomplete>\n  </div>\n\n  <!-- <div class=\"myiconDiv\">\n    <div class=\"header\">\n      <div class=\"md-subheading\">Select Icon</div>\n      <div class=\"select\">\n        <md-field>\n          <label for=\"category\">Category</label>\n\n          <md-select v-model=\"categorySelected\"\n                     name=\"category\"\n                     id=\"category\"\n                     md-dense>\n            <md-option value=\"none\">All</md-option>\n            <md-option v-for=\"(category, index) in categories\"\n                       :key=\"index\"\n                       :value=\"category\">{{ category }}</md-option>\n          </md-select>\n        </md-field>\n      </div>\n    </div>\n\n    <md-content class=\"_container md-scrollbar\">\n      <div v-for=\"(res, index) in iconsDisplayed\"\n           :key=\"index\"\n           class=\"iconsContainer\">\n        <div class=\"subHeader\">{{ res.name }}</div>\n        <div class=\"icons\">\n          <div class=\"icon\"\n               v-for=\"(icon, index2) in res.icons\"\n               :key=\"index2\"\n               @click=\"selectIcon(icon.id)\"\n               :class=\"{ selectedIcon: isSelected(icon.id) }\">\n            <md-icon>{{ icon.id }}</md-icon>\n          </div>\n        </div>\n      </div>\n    </md-content>\n  </div> -->\n</template>\n\n<script>\nimport allIcons from \"../../../js/icons.json\";\n\nexport default {\n  name: \"iconComponent\",\n  props: {\n    selected: {\n      type: String,\n    },\n  },\n  data() {\n    this.allIcons = Object.values(allIcons);\n    this.categories = this.getAllCategories();\n    return {\n      iconsDisplayed: Object.values(allIcons),\n      iconSelected: null,\n      categorySelected: \"none\",\n      icons: [],\n    };\n  },\n  mounted() {\n    if (typeof this.selected !== \"undefined\") {\n      this.iconSelected = this.selected;\n    }\n  },\n  methods: {\n    filterIcons() {\n      let category =\n        this.categorySelected !== \"none\" ? this.categorySelected : undefined;\n      this.iconsDisplayed = this.getIconsByCategory(category);\n    },\n    getAllCategories() {\n      return this.allIcons.map((el) => el.name);\n    },\n\n    getIconsByCategory(categoryName) {\n      if (typeof categoryName !== \"undefined\") {\n        let category = this.allIcons.find((el) => el.name === categoryName);\n        if (typeof category !== \"undefined\") {\n          return [category];\n        }\n      } else {\n        return this.allIcons;\n      }\n\n      return [];\n    },\n\n    selectIcon(icon) {\n      this.iconSelected = icon;\n      this.$emit(\"selectIcon\", icon);\n    },\n\n    isSelected(icon) {\n      return this.iconSelected === icon;\n    },\n\n    getIcons(searchTerm) {\n      this.icons = new Promise((resolve) => {\n        setTimeout(() => {\n          let icons = this.iconsNames();\n          if (!searchTerm) {\n            resolve(icons);\n          } else {\n            const term = searchTerm.toLowerCase();\n\n            resolve(icons.filter((el) => el.toLowerCase().includes(term)));\n          }\n        }, 500);\n      });\n    },\n\n    iconsNames() {\n      if (!this.allIcons) return [];\n      return this.allIcons.reduce((arr, item) => {\n        arr.push(...item.icons.map((el) => el.id));\n        return arr;\n      }, []);\n    },\n  },\n\n  watch: {\n    categorySelected: function () {\n      this.filterIcons();\n    },\n    selected() {\n      this.iconSelected = this.selected;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.myiconDiv {\n  width: 500px;\n  height: 100%;\n}\n\n.myiconDiv .header {\n  width: 100%;\n  height: 80px;\n}\n\n.myiconDiv ._container {\n  width: 99%;\n  height: calc(100% - 70px);\n  overflow: auto;\n  overflow-x: hidden;\n  display: flex;\n  margin-bottom: 10px;\n  flex-direction: column;\n}\n\n.iconsContainer {\n  /* display: flex; */\n  flex-direction: column;\n}\n\n.subHeader {\n  display: block;\n  margin-bottom: 10px;\n}\n\n.icons {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n}\n\n.icon {\n  padding: 3px;\n  margin: 5px;\n}\n\n.selectedIcon {\n  border: 1px solid blue;\n}\n</style>\n","[\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"3d_rotation\"\r\n      },\r\n      {\r\n        \"id\": \"accessibility\"\r\n      },\r\n      {\r\n        \"id\": \"accessibility_new\"\r\n      },\r\n      {\r\n        \"id\": \"accessible\"\r\n      },\r\n      {\r\n        \"id\": \"accessible_forward\"\r\n      },\r\n      {\r\n        \"id\": \"account_balance\"\r\n      },\r\n      {\r\n        \"id\": \"account_balance_wallet\"\r\n      },\r\n      {\r\n        \"id\": \"account_box\"\r\n      },\r\n      {\r\n        \"id\": \"account_circle\"\r\n      },\r\n      {\r\n        \"id\": \"add_shopping_cart\"\r\n      },\r\n      {\r\n        \"id\": \"alarm\"\r\n      },\r\n      {\r\n        \"id\": \"alarm_add\"\r\n      },\r\n      {\r\n        \"id\": \"alarm_off\"\r\n      },\r\n      {\r\n        \"id\": \"alarm_on\"\r\n      },\r\n      {\r\n        \"id\": \"all_inbox\"\r\n      },\r\n      {\r\n        \"id\": \"all_out\"\r\n      },\r\n      {\r\n        \"id\": \"android\"\r\n      },\r\n      {\r\n        \"id\": \"announcement\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_right_alt\"\r\n      },\r\n      {\r\n        \"id\": \"aspect_ratio\"\r\n      },\r\n      {\r\n        \"id\": \"assessment\"\r\n      },\r\n      {\r\n        \"id\": \"assignment\"\r\n      },\r\n      {\r\n        \"id\": \"assignment_ind\"\r\n      },\r\n      {\r\n        \"id\": \"assignment_late\"\r\n      },\r\n      {\r\n        \"id\": \"assignment_return\"\r\n      },\r\n      {\r\n        \"id\": \"assignment_returned\"\r\n      },\r\n      {\r\n        \"id\": \"assignment_turned_in\"\r\n      },\r\n      {\r\n        \"id\": \"autorenew\"\r\n      },\r\n      {\r\n        \"id\": \"backup\"\r\n      },\r\n      {\r\n        \"id\": \"book\"\r\n      },\r\n      {\r\n        \"id\": \"bookmark\"\r\n      },\r\n      {\r\n        \"id\": \"bookmark_border\"\r\n      },\r\n      {\r\n        \"id\": \"bookmarks\"\r\n      },\r\n      {\r\n        \"id\": \"bug_report\"\r\n      },\r\n      {\r\n        \"id\": \"build\"\r\n      },\r\n      {\r\n        \"id\": \"cached\"\r\n      },\r\n      {\r\n        \"id\": \"calendar_today\"\r\n      },\r\n      {\r\n        \"id\": \"calendar_view_day\"\r\n      },\r\n      {\r\n        \"id\": \"camera_enhance\"\r\n      },\r\n      {\r\n        \"id\": \"card_giftcard\"\r\n      },\r\n      {\r\n        \"id\": \"card_membership\"\r\n      },\r\n      {\r\n        \"id\": \"card_travel\"\r\n      },\r\n      {\r\n        \"id\": \"change_history\"\r\n      },\r\n      {\r\n        \"id\": \"check_circle\"\r\n      },\r\n      {\r\n        \"id\": \"check_circle_outline\"\r\n      },\r\n      {\r\n        \"id\": \"chrome_reader_mode\"\r\n      },\r\n      {\r\n        \"id\": \"class\"\r\n      },\r\n      {\r\n        \"id\": \"code\"\r\n      },\r\n      {\r\n        \"id\": \"commute\"\r\n      },\r\n      {\r\n        \"id\": \"compare_arrows\"\r\n      },\r\n      {\r\n        \"id\": \"contact_support\"\r\n      },\r\n      {\r\n        \"id\": \"copyright\"\r\n      },\r\n      {\r\n        \"id\": \"credit_card\"\r\n      },\r\n      {\r\n        \"id\": \"dashboard\"\r\n      },\r\n      {\r\n        \"id\": \"date_range\"\r\n      },\r\n      {\r\n        \"id\": \"delete\"\r\n      },\r\n      {\r\n        \"id\": \"delete_forever\"\r\n      },\r\n      {\r\n        \"id\": \"delete_outline\"\r\n      },\r\n      {\r\n        \"id\": \"description\"\r\n      },\r\n      {\r\n        \"id\": \"dns\"\r\n      },\r\n      {\r\n        \"id\": \"done\"\r\n      },\r\n      {\r\n        \"id\": \"done_all\"\r\n      },\r\n      {\r\n        \"id\": \"done_outline\"\r\n      },\r\n      {\r\n        \"id\": \"donut_large\"\r\n      },\r\n      {\r\n        \"id\": \"donut_small\"\r\n      },\r\n      {\r\n        \"id\": \"drag_indicator\"\r\n      },\r\n      {\r\n        \"id\": \"eject\"\r\n      },\r\n      {\r\n        \"id\": \"euro_symbol\"\r\n      },\r\n      {\r\n        \"id\": \"event\"\r\n      },\r\n      {\r\n        \"id\": \"event_seat\"\r\n      },\r\n      {\r\n        \"id\": \"exit_to_app\"\r\n      },\r\n      {\r\n        \"id\": \"explore\"\r\n      },\r\n      {\r\n        \"id\": \"explore_off\"\r\n      },\r\n      {\r\n        \"id\": \"extension\"\r\n      },\r\n      {\r\n        \"id\": \"face\"\r\n      },\r\n      {\r\n        \"id\": \"favorite\"\r\n      },\r\n      {\r\n        \"id\": \"favorite_border\"\r\n      },\r\n      {\r\n        \"id\": \"feedback\"\r\n      },\r\n      {\r\n        \"id\": \"find_in_page\"\r\n      },\r\n      {\r\n        \"id\": \"find_replace\"\r\n      },\r\n      {\r\n        \"id\": \"fingerprint\"\r\n      },\r\n      {\r\n        \"id\": \"flight_land\"\r\n      },\r\n      {\r\n        \"id\": \"flight_takeoff\"\r\n      },\r\n      {\r\n        \"id\": \"flip_to_back\"\r\n      },\r\n      {\r\n        \"id\": \"flip_to_front\"\r\n      },\r\n      {\r\n        \"id\": \"g_translate\"\r\n      },\r\n      {\r\n        \"id\": \"gavel\"\r\n      },\r\n      {\r\n        \"id\": \"get_app\"\r\n      },\r\n      {\r\n        \"id\": \"gif\"\r\n      },\r\n      {\r\n        \"id\": \"grade\"\r\n      },\r\n      {\r\n        \"id\": \"group_work\"\r\n      },\r\n      {\r\n        \"id\": \"help\"\r\n      },\r\n      {\r\n        \"id\": \"help_outline\"\r\n      },\r\n      {\r\n        \"id\": \"highlight_off\"\r\n      },\r\n      {\r\n        \"id\": \"history\"\r\n      },\r\n      {\r\n        \"id\": \"home\"\r\n      },\r\n      {\r\n        \"id\": \"horizontal_split\"\r\n      },\r\n      {\r\n        \"id\": \"hourglass_empty\"\r\n      },\r\n      {\r\n        \"id\": \"hourglass_full\"\r\n      },\r\n      {\r\n        \"id\": \"http\"\r\n      },\r\n      {\r\n        \"id\": \"https\"\r\n      },\r\n      {\r\n        \"id\": \"important_devices\"\r\n      },\r\n      {\r\n        \"id\": \"info\"\r\n      },\r\n      {\r\n        \"id\": \"input\"\r\n      },\r\n      {\r\n        \"id\": \"invert_colors\"\r\n      },\r\n      {\r\n        \"id\": \"label\"\r\n      },\r\n      {\r\n        \"id\": \"label_important\"\r\n      },\r\n      {\r\n        \"id\": \"label_off\"\r\n      },\r\n      {\r\n        \"id\": \"language\"\r\n      },\r\n      {\r\n        \"id\": \"launch\"\r\n      },\r\n      {\r\n        \"id\": \"line_style\"\r\n      },\r\n      {\r\n        \"id\": \"line_weight\"\r\n      },\r\n      {\r\n        \"id\": \"list\"\r\n      },\r\n      {\r\n        \"id\": \"lock\"\r\n      },\r\n      {\r\n        \"id\": \"lock_open\"\r\n      },\r\n      {\r\n        \"id\": \"loyalty\"\r\n      },\r\n      {\r\n        \"id\": \"markunread_mailbox\"\r\n      },\r\n      {\r\n        \"id\": \"maximize\"\r\n      },\r\n      {\r\n        \"id\": \"minimize\"\r\n      },\r\n      {\r\n        \"id\": \"motorcycle\"\r\n      },\r\n      {\r\n        \"id\": \"note_add\"\r\n      },\r\n      {\r\n        \"id\": \"offline_bolt\"\r\n      },\r\n      {\r\n        \"id\": \"offline_pin\"\r\n      },\r\n      {\r\n        \"id\": \"opacity\"\r\n      },\r\n      {\r\n        \"id\": \"open_in_browser\"\r\n      },\r\n      {\r\n        \"id\": \"open_in_new\"\r\n      },\r\n      {\r\n        \"id\": \"open_with\"\r\n      },\r\n      {\r\n        \"id\": \"pageview\"\r\n      },\r\n      {\r\n        \"id\": \"pan_tool\"\r\n      },\r\n      {\r\n        \"id\": \"payment\"\r\n      },\r\n      {\r\n        \"id\": \"perm_camera_mic\"\r\n      },\r\n      {\r\n        \"id\": \"perm_contact_calendar\"\r\n      },\r\n      {\r\n        \"id\": \"perm_data_setting\"\r\n      },\r\n      {\r\n        \"id\": \"perm_device_information\"\r\n      },\r\n      {\r\n        \"id\": \"perm_identity\"\r\n      },\r\n      {\r\n        \"id\": \"perm_media\"\r\n      },\r\n      {\r\n        \"id\": \"perm_phone_msg\"\r\n      },\r\n      {\r\n        \"id\": \"perm_scan_wifi\"\r\n      },\r\n      {\r\n        \"id\": \"pets\"\r\n      },\r\n      {\r\n        \"id\": \"picture_in_picture\"\r\n      },\r\n      {\r\n        \"id\": \"picture_in_picture_alt\"\r\n      },\r\n      {\r\n        \"id\": \"play_for_work\"\r\n      },\r\n      {\r\n        \"id\": \"polymer\"\r\n      },\r\n      {\r\n        \"id\": \"power_settings_new\"\r\n      },\r\n      {\r\n        \"id\": \"pregnant_woman\"\r\n      },\r\n      {\r\n        \"id\": \"print\"\r\n      },\r\n      {\r\n        \"id\": \"query_builder\"\r\n      },\r\n      {\r\n        \"id\": \"question_answer\"\r\n      },\r\n      {\r\n        \"id\": \"receipt\"\r\n      },\r\n      {\r\n        \"id\": \"record_voice_over\"\r\n      },\r\n      {\r\n        \"id\": \"redeem\"\r\n      },\r\n      {\r\n        \"id\": \"remove_shopping_cart\"\r\n      },\r\n      {\r\n        \"id\": \"reorder\"\r\n      },\r\n      {\r\n        \"id\": \"report_problem\"\r\n      },\r\n      {\r\n        \"id\": \"restore\"\r\n      },\r\n      {\r\n        \"id\": \"restore_from_trash\"\r\n      },\r\n      {\r\n        \"id\": \"restore_page\"\r\n      },\r\n      {\r\n        \"id\": \"room\"\r\n      },\r\n      {\r\n        \"id\": \"rounded_corner\"\r\n      },\r\n      {\r\n        \"id\": \"rowing\"\r\n      },\r\n      {\r\n        \"id\": \"schedule\"\r\n      },\r\n      {\r\n        \"id\": \"search\"\r\n      },\r\n      {\r\n        \"imageUrls\": {\r\n          \"twotone\": \"twotone-settings-24px.svg\",\r\n          \"sharp\": \"sharp-settings-24px.svg\",\r\n          \"outline\": \"outline-settings-24px.svg\",\r\n          \"round\": \"round-settings-24px.svg\",\r\n          \"baseline\": \"baseline-settings-20px.svg\"\r\n        },\r\n        \"id\": \"settings\"\r\n      },\r\n      {\r\n        \"id\": \"settings_applications\"\r\n      },\r\n      {\r\n        \"id\": \"settings_backup_restore\"\r\n      },\r\n      {\r\n        \"id\": \"settings_bluetooth\"\r\n      },\r\n      {\r\n        \"id\": \"settings_brightness\"\r\n      },\r\n      {\r\n        \"id\": \"settings_cell\"\r\n      },\r\n      {\r\n        \"id\": \"settings_ethernet\"\r\n      },\r\n      {\r\n        \"id\": \"settings_input_antenna\"\r\n      },\r\n      {\r\n        \"id\": \"settings_input_component\"\r\n      },\r\n      {\r\n        \"id\": \"settings_input_composite\"\r\n      },\r\n      {\r\n        \"id\": \"settings_input_hdmi\"\r\n      },\r\n      {\r\n        \"id\": \"settings_input_svideo\"\r\n      },\r\n      {\r\n        \"id\": \"settings_overscan\"\r\n      },\r\n      {\r\n        \"id\": \"settings_phone\"\r\n      },\r\n      {\r\n        \"id\": \"settings_power\"\r\n      },\r\n      {\r\n        \"id\": \"settings_remote\"\r\n      },\r\n      {\r\n        \"id\": \"settings_voice\"\r\n      },\r\n      {\r\n        \"id\": \"shop\"\r\n      },\r\n      {\r\n        \"id\": \"shop_two\"\r\n      },\r\n      {\r\n        \"id\": \"shopping_basket\"\r\n      },\r\n      {\r\n        \"id\": \"shopping_cart\"\r\n      },\r\n      {\r\n        \"id\": \"speaker_notes\"\r\n      },\r\n      {\r\n        \"id\": \"speaker_notes_off\"\r\n      },\r\n      {\r\n        \"id\": \"spellcheck\"\r\n      },\r\n      {\r\n        \"imageUrls\": {\r\n          \"twotone\": \"twotone-star_rate-18px.svg\",\r\n          \"sharp\": \"sharp-star_rate-18px.svg\",\r\n          \"outline\": \"outline-star_rate-18px.svg\",\r\n          \"round\": \"round-star_rate-18px.svg\",\r\n          \"baseline\": \"baseline-star_rate-18px.svg\"\r\n        },\r\n        \"id\": \"star_rate\"\r\n      },\r\n      {\r\n        \"id\": \"stars\"\r\n      },\r\n      {\r\n        \"id\": \"store\"\r\n      },\r\n      {\r\n        \"id\": \"subject\"\r\n      },\r\n      {\r\n        \"id\": \"supervised_user_circle\"\r\n      },\r\n      {\r\n        \"id\": \"supervisor_account\"\r\n      },\r\n      {\r\n        \"id\": \"swap_horiz\"\r\n      },\r\n      {\r\n        \"id\": \"swap_horizontal_circle\"\r\n      },\r\n      {\r\n        \"id\": \"swap_vert\"\r\n      },\r\n      {\r\n        \"id\": \"swap_vertical_circle\"\r\n      },\r\n      {\r\n        \"id\": \"tab\"\r\n      },\r\n      {\r\n        \"id\": \"tab_unselected\"\r\n      },\r\n      {\r\n        \"id\": \"text_rotate_up\"\r\n      },\r\n      {\r\n        \"id\": \"text_rotate_vertical\"\r\n      },\r\n      {\r\n        \"id\": \"text_rotation_down\"\r\n      },\r\n      {\r\n        \"id\": \"text_rotation_none\"\r\n      },\r\n      {\r\n        \"id\": \"theaters\"\r\n      },\r\n      {\r\n        \"id\": \"thumb_down\"\r\n      },\r\n      {\r\n        \"id\": \"thumb_up\"\r\n      },\r\n      {\r\n        \"id\": \"thumbs_up_down\"\r\n      },\r\n      {\r\n        \"id\": \"timeline\"\r\n      },\r\n      {\r\n        \"id\": \"toc\"\r\n      },\r\n      {\r\n        \"id\": \"today\"\r\n      },\r\n      {\r\n        \"id\": \"toll\"\r\n      },\r\n      {\r\n        \"id\": \"touch_app\"\r\n      },\r\n      {\r\n        \"id\": \"track_changes\"\r\n      },\r\n      {\r\n        \"id\": \"translate\"\r\n      },\r\n      {\r\n        \"id\": \"trending_down\"\r\n      },\r\n      {\r\n        \"id\": \"trending_flat\"\r\n      },\r\n      {\r\n        \"id\": \"trending_up\"\r\n      },\r\n      {\r\n        \"id\": \"turned_in\"\r\n      },\r\n      {\r\n        \"id\": \"turned_in_not\"\r\n      },\r\n      {\r\n        \"id\": \"update\"\r\n      },\r\n      {\r\n        \"id\": \"verified_user\"\r\n      },\r\n      {\r\n        \"id\": \"vertical_split\"\r\n      },\r\n      {\r\n        \"id\": \"view_agenda\"\r\n      },\r\n      {\r\n        \"id\": \"view_array\"\r\n      },\r\n      {\r\n        \"id\": \"view_carousel\"\r\n      },\r\n      {\r\n        \"id\": \"view_column\"\r\n      },\r\n      {\r\n        \"id\": \"view_day\"\r\n      },\r\n      {\r\n        \"id\": \"view_headline\"\r\n      },\r\n      {\r\n        \"id\": \"view_list\"\r\n      },\r\n      {\r\n        \"id\": \"view_module\"\r\n      },\r\n      {\r\n        \"id\": \"view_quilt\"\r\n      },\r\n      {\r\n        \"id\": \"view_stream\"\r\n      },\r\n      {\r\n        \"id\": \"view_week\"\r\n      },\r\n      {\r\n        \"id\": \"visibility\"\r\n      },\r\n      {\r\n        \"id\": \"visibility_off\"\r\n      },\r\n      {\r\n        \"id\": \"voice_over_off\"\r\n      },\r\n      {\r\n        \"id\": \"watch_later\"\r\n      },\r\n      {\r\n        \"id\": \"work\"\r\n      },\r\n      {\r\n        \"id\": \"work_off\"\r\n      },\r\n      {\r\n        \"id\": \"work_outline\"\r\n      },\r\n      {\r\n        \"id\": \"youtube_searched_for\"\r\n      },\r\n      {\r\n        \"id\": \"zoom_in\"\r\n      },\r\n      {\r\n        \"id\": \"zoom_out\"\r\n      }\r\n    ],\r\n    \"name\": \"action\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"add_alert\"\r\n      },\r\n      {\r\n        \"id\": \"error\"\r\n      },\r\n      {\r\n        \"id\": \"error_outline\"\r\n      },\r\n      {\r\n        \"id\": \"notification_important\"\r\n      },\r\n      {\r\n        \"id\": \"warning\"\r\n      }\r\n    ],\r\n    \"name\": \"alert\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"4k\"\r\n      },\r\n      {\r\n        \"id\": \"add_to_queue\"\r\n      },\r\n      {\r\n        \"id\": \"airplay\"\r\n      },\r\n      {\r\n        \"id\": \"album\"\r\n      },\r\n      {\r\n        \"id\": \"art_track\"\r\n      },\r\n      {\r\n        \"id\": \"av_timer\"\r\n      },\r\n      {\r\n        \"id\": \"branding_watermark\"\r\n      },\r\n      {\r\n        \"id\": \"call_to_action\"\r\n      },\r\n      {\r\n        \"id\": \"closed_caption\"\r\n      },\r\n      {\r\n        \"id\": \"control_camera\"\r\n      },\r\n      {\r\n        \"id\": \"equalizer\"\r\n      },\r\n      {\r\n        \"id\": \"explicit\"\r\n      },\r\n      {\r\n        \"id\": \"fast_forward\"\r\n      },\r\n      {\r\n        \"id\": \"fast_rewind\"\r\n      },\r\n      {\r\n        \"id\": \"featured_play_list\"\r\n      },\r\n      {\r\n        \"id\": \"featured_video\"\r\n      },\r\n      {\r\n        \"id\": \"fiber_dvr\"\r\n      },\r\n      {\r\n        \"id\": \"fiber_manual_record\"\r\n      },\r\n      {\r\n        \"id\": \"fiber_new\"\r\n      },\r\n      {\r\n        \"id\": \"fiber_pin\"\r\n      },\r\n      {\r\n        \"id\": \"fiber_smart_record\"\r\n      },\r\n      {\r\n        \"id\": \"forward_10\"\r\n      },\r\n      {\r\n        \"id\": \"forward_30\"\r\n      },\r\n      {\r\n        \"id\": \"forward_5\"\r\n      },\r\n      {\r\n        \"id\": \"games\"\r\n      },\r\n      {\r\n        \"id\": \"hd\"\r\n      },\r\n      {\r\n        \"id\": \"hearing\"\r\n      },\r\n      {\r\n        \"id\": \"high_quality\"\r\n      },\r\n      {\r\n        \"id\": \"library_add\"\r\n      },\r\n      {\r\n        \"id\": \"library_books\"\r\n      },\r\n      {\r\n        \"id\": \"library_music\"\r\n      },\r\n      {\r\n        \"id\": \"loop\"\r\n      },\r\n      {\r\n        \"id\": \"mic\"\r\n      },\r\n      {\r\n        \"id\": \"mic_none\"\r\n      },\r\n      {\r\n        \"id\": \"mic_off\"\r\n      },\r\n      {\r\n        \"id\": \"missed_video_call\"\r\n      },\r\n      {\r\n        \"id\": \"movie\"\r\n      },\r\n      {\r\n        \"id\": \"music_video\"\r\n      },\r\n      {\r\n        \"id\": \"new_releases\"\r\n      },\r\n      {\r\n        \"id\": \"not_interested\"\r\n      },\r\n      {\r\n        \"id\": \"note\"\r\n      },\r\n      {\r\n        \"id\": \"pause\"\r\n      },\r\n      {\r\n        \"id\": \"pause_circle_filled\"\r\n      },\r\n      {\r\n        \"id\": \"pause_circle_outline\"\r\n      },\r\n      {\r\n        \"id\": \"play_arrow\"\r\n      },\r\n      {\r\n        \"id\": \"play_circle_filled\"\r\n      },\r\n      {\r\n        \"imageUrls\": {\r\n          \"twotone\": \"twotone-play_circle_filled_white-24px.svg\",\r\n          \"sharp\": \"sharp-play_circle_filled_white-24px.svg\",\r\n          \"outline\": \"outline-play_circle_filled_white-24px.svg\",\r\n          \"round\": \"round-play_circle_filled_white-24px.svg\",\r\n          \"baseline\": \"baseline-play_circle_filled_white-48px.svg\"\r\n        },\r\n        \"id\": \"play_circle_filled_white\"\r\n      },\r\n      {\r\n        \"id\": \"play_circle_outline\"\r\n      },\r\n      {\r\n        \"id\": \"playlist_add\"\r\n      },\r\n      {\r\n        \"id\": \"playlist_add_check\"\r\n      },\r\n      {\r\n        \"id\": \"playlist_play\"\r\n      },\r\n      {\r\n        \"id\": \"queue\"\r\n      },\r\n      {\r\n        \"id\": \"queue_music\"\r\n      },\r\n      {\r\n        \"id\": \"queue_play_next\"\r\n      },\r\n      {\r\n        \"id\": \"radio\"\r\n      },\r\n      {\r\n        \"id\": \"recent_actors\"\r\n      },\r\n      {\r\n        \"id\": \"remove_from_queue\"\r\n      },\r\n      {\r\n        \"id\": \"repeat\"\r\n      },\r\n      {\r\n        \"id\": \"repeat_one\"\r\n      },\r\n      {\r\n        \"id\": \"replay\"\r\n      },\r\n      {\r\n        \"id\": \"replay_10\"\r\n      },\r\n      {\r\n        \"id\": \"replay_30\"\r\n      },\r\n      {\r\n        \"id\": \"replay_5\"\r\n      },\r\n      {\r\n        \"id\": \"shuffle\"\r\n      },\r\n      {\r\n        \"id\": \"skip_next\"\r\n      },\r\n      {\r\n        \"id\": \"skip_previous\"\r\n      },\r\n      {\r\n        \"id\": \"slow_motion_video\"\r\n      },\r\n      {\r\n        \"id\": \"snooze\"\r\n      },\r\n      {\r\n        \"id\": \"sort_by_alpha\"\r\n      },\r\n      {\r\n        \"id\": \"stop\"\r\n      },\r\n      {\r\n        \"id\": \"subscriptions\"\r\n      },\r\n      {\r\n        \"id\": \"subtitles\"\r\n      },\r\n      {\r\n        \"id\": \"surround_sound\"\r\n      },\r\n      {\r\n        \"id\": \"video_call\"\r\n      },\r\n      {\r\n        \"id\": \"video_label\"\r\n      },\r\n      {\r\n        \"id\": \"video_library\"\r\n      },\r\n      {\r\n        \"id\": \"videocam\"\r\n      },\r\n      {\r\n        \"id\": \"videocam_off\"\r\n      },\r\n      {\r\n        \"id\": \"volume_down\"\r\n      },\r\n      {\r\n        \"id\": \"volume_mute\"\r\n      },\r\n      {\r\n        \"id\": \"volume_off\"\r\n      },\r\n      {\r\n        \"id\": \"volume_up\"\r\n      },\r\n      {\r\n        \"id\": \"web\"\r\n      },\r\n      {\r\n        \"id\": \"web_asset\"\r\n      }\r\n    ],\r\n    \"name\": \"av\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"alternate_email\"\r\n      },\r\n      {\r\n        \"id\": \"business\"\r\n      },\r\n      {\r\n        \"id\": \"call\"\r\n      },\r\n      {\r\n        \"id\": \"call_end\"\r\n      },\r\n      {\r\n        \"id\": \"call_made\"\r\n      },\r\n      {\r\n        \"id\": \"call_merge\"\r\n      },\r\n      {\r\n        \"id\": \"call_missed\"\r\n      },\r\n      {\r\n        \"id\": \"call_missed_outgoing\"\r\n      },\r\n      {\r\n        \"id\": \"call_received\"\r\n      },\r\n      {\r\n        \"id\": \"call_split\"\r\n      },\r\n      {\r\n        \"id\": \"cancel_presentation\"\r\n      },\r\n      {\r\n        \"id\": \"cell_wifi\"\r\n      },\r\n      {\r\n        \"id\": \"chat\"\r\n      },\r\n      {\r\n        \"id\": \"chat_bubble\"\r\n      },\r\n      {\r\n        \"id\": \"chat_bubble_outline\"\r\n      },\r\n      {\r\n        \"id\": \"clear_all\"\r\n      },\r\n      {\r\n        \"id\": \"comment\"\r\n      },\r\n      {\r\n        \"id\": \"contact_mail\"\r\n      },\r\n      {\r\n        \"id\": \"contact_phone\"\r\n      },\r\n      {\r\n        \"id\": \"contacts\"\r\n      },\r\n      {\r\n        \"id\": \"desktop_access_disabled\"\r\n      },\r\n      {\r\n        \"id\": \"dialer_sip\"\r\n      },\r\n      {\r\n        \"id\": \"dialpad\"\r\n      },\r\n      {\r\n        \"id\": \"domain_disabled\"\r\n      },\r\n      {\r\n        \"id\": \"duo\"\r\n      },\r\n      {\r\n        \"id\": \"email\"\r\n      },\r\n      {\r\n        \"id\": \"forum\"\r\n      },\r\n      {\r\n        \"id\": \"import_contacts\"\r\n      },\r\n      {\r\n        \"id\": \"import_export\"\r\n      },\r\n      {\r\n        \"id\": \"invert_colors_off\"\r\n      },\r\n      {\r\n        \"id\": \"list_alt\"\r\n      },\r\n      {\r\n        \"id\": \"live_help\"\r\n      },\r\n      {\r\n        \"id\": \"location_off\"\r\n      },\r\n      {\r\n        \"id\": \"location_on\"\r\n      },\r\n      {\r\n        \"id\": \"mail_outline\"\r\n      },\r\n      {\r\n        \"id\": \"message\"\r\n      },\r\n      {\r\n        \"id\": \"mobile_screen_share\"\r\n      },\r\n      {\r\n        \"id\": \"no_sim\"\r\n      },\r\n      {\r\n        \"id\": \"pause_presentation\"\r\n      },\r\n      {\r\n        \"id\": \"person_add_disabled\"\r\n      },\r\n      {\r\n        \"id\": \"phone\"\r\n      },\r\n      {\r\n        \"id\": \"phonelink_erase\"\r\n      },\r\n      {\r\n        \"id\": \"phonelink_lock\"\r\n      },\r\n      {\r\n        \"id\": \"phonelink_ring\"\r\n      },\r\n      {\r\n        \"id\": \"phonelink_setup\"\r\n      },\r\n      {\r\n        \"id\": \"portable_wifi_off\"\r\n      },\r\n      {\r\n        \"id\": \"present_to_all\"\r\n      },\r\n      {\r\n        \"id\": \"print_disabled\"\r\n      },\r\n      {\r\n        \"id\": \"ring_volume\"\r\n      },\r\n      {\r\n        \"id\": \"rss_feed\"\r\n      },\r\n      {\r\n        \"id\": \"screen_share\"\r\n      },\r\n      {\r\n        \"id\": \"sentiment_satisfied_alt\"\r\n      },\r\n      {\r\n        \"id\": \"speaker_phone\"\r\n      },\r\n      {\r\n        \"id\": \"stay_current_landscape\"\r\n      },\r\n      {\r\n        \"id\": \"stay_current_portrait\"\r\n      },\r\n      {\r\n        \"id\": \"stay_primary_landscape\"\r\n      },\r\n      {\r\n        \"id\": \"stay_primary_portrait\"\r\n      },\r\n      {\r\n        \"id\": \"stop_screen_share\"\r\n      },\r\n      {\r\n        \"id\": \"swap_calls\"\r\n      },\r\n      {\r\n        \"id\": \"textsms\"\r\n      },\r\n      {\r\n        \"id\": \"unsubscribe\"\r\n      },\r\n      {\r\n        \"id\": \"voicemail\"\r\n      },\r\n      {\r\n        \"id\": \"vpn_key\"\r\n      }\r\n    ],\r\n    \"name\": \"communication\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"add\"\r\n      },\r\n      {\r\n        \"id\": \"add_box\"\r\n      },\r\n      {\r\n        \"id\": \"add_circle\"\r\n      },\r\n      {\r\n        \"id\": \"add_circle_outline\"\r\n      },\r\n      {\r\n        \"id\": \"archive\"\r\n      },\r\n      {\r\n        \"id\": \"backspace\"\r\n      },\r\n      {\r\n        \"id\": \"ballot\"\r\n      },\r\n      {\r\n        \"id\": \"block\"\r\n      },\r\n      {\r\n        \"id\": \"clear\"\r\n      },\r\n      {\r\n        \"id\": \"create\"\r\n      },\r\n      {\r\n        \"id\": \"delete_sweep\"\r\n      },\r\n      {\r\n        \"id\": \"drafts\"\r\n      },\r\n      {\r\n        \"id\": \"file_copy\"\r\n      },\r\n      {\r\n        \"id\": \"filter_list\"\r\n      },\r\n      {\r\n        \"id\": \"flag\"\r\n      },\r\n      {\r\n        \"id\": \"font_download\"\r\n      },\r\n      {\r\n        \"id\": \"forward\"\r\n      },\r\n      {\r\n        \"id\": \"gesture\"\r\n      },\r\n      {\r\n        \"id\": \"how_to_reg\"\r\n      },\r\n      {\r\n        \"id\": \"how_to_vote\"\r\n      },\r\n      {\r\n        \"id\": \"inbox\"\r\n      },\r\n      {\r\n        \"id\": \"link\"\r\n      },\r\n      {\r\n        \"id\": \"link_off\"\r\n      },\r\n      {\r\n        \"id\": \"low_priority\"\r\n      },\r\n      {\r\n        \"id\": \"mail\"\r\n      },\r\n      {\r\n        \"id\": \"markunread\"\r\n      },\r\n      {\r\n        \"id\": \"move_to_inbox\"\r\n      },\r\n      {\r\n        \"id\": \"next_week\"\r\n      },\r\n      {\r\n        \"id\": \"outlined_flag\"\r\n      },\r\n      {\r\n        \"id\": \"redo\"\r\n      },\r\n      {\r\n        \"id\": \"remove\"\r\n      },\r\n      {\r\n        \"id\": \"remove_circle\"\r\n      },\r\n      {\r\n        \"id\": \"remove_circle_outline\"\r\n      },\r\n      {\r\n        \"id\": \"reply\"\r\n      },\r\n      {\r\n        \"id\": \"reply_all\"\r\n      },\r\n      {\r\n        \"id\": \"report\"\r\n      },\r\n      {\r\n        \"id\": \"report_off\"\r\n      },\r\n      {\r\n        \"id\": \"save\"\r\n      },\r\n      {\r\n        \"id\": \"save_alt\"\r\n      },\r\n      {\r\n        \"id\": \"select_all\"\r\n      },\r\n      {\r\n        \"id\": \"send\"\r\n      },\r\n      {\r\n        \"id\": \"sort\"\r\n      },\r\n      {\r\n        \"id\": \"text_format\"\r\n      },\r\n      {\r\n        \"id\": \"unarchive\"\r\n      },\r\n      {\r\n        \"id\": \"undo\"\r\n      },\r\n      {\r\n        \"id\": \"waves\"\r\n      },\r\n      {\r\n        \"imageUrls\": {\r\n          \"twotone\": \"twotone-weekend-24px.svg\",\r\n          \"sharp\": \"sharp-weekend-24px.svg\",\r\n          \"outline\": \"outline-weekend-24px.svg\",\r\n          \"round\": \"round-weekend-24px.svg\",\r\n          \"baseline\": \"baseline-weekend-48px.svg\"\r\n        },\r\n        \"id\": \"weekend\"\r\n      },\r\n      {\r\n        \"id\": \"where_to_vote\"\r\n      }\r\n    ],\r\n    \"name\": \"content\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"access_alarm\"\r\n      },\r\n      {\r\n        \"id\": \"access_alarms\"\r\n      },\r\n      {\r\n        \"id\": \"access_time\"\r\n      },\r\n      {\r\n        \"id\": \"add_alarm\"\r\n      },\r\n      {\r\n        \"id\": \"add_to_home_screen\"\r\n      },\r\n      {\r\n        \"id\": \"airplanemode_active\"\r\n      },\r\n      {\r\n        \"id\": \"airplanemode_inactive\"\r\n      },\r\n      {\r\n        \"id\": \"battery_20\"\r\n      },\r\n      {\r\n        \"id\": \"battery_30\"\r\n      },\r\n      {\r\n        \"id\": \"battery_50\"\r\n      },\r\n      {\r\n        \"id\": \"battery_60\"\r\n      },\r\n      {\r\n        \"id\": \"battery_80\"\r\n      },\r\n      {\r\n        \"id\": \"battery_90\"\r\n      },\r\n      {\r\n        \"id\": \"battery_alert\"\r\n      },\r\n      {\r\n        \"id\": \"battery_charging_20\"\r\n      },\r\n      {\r\n        \"id\": \"battery_charging_30\"\r\n      },\r\n      {\r\n        \"id\": \"battery_charging_50\"\r\n      },\r\n      {\r\n        \"id\": \"battery_charging_60\"\r\n      },\r\n      {\r\n        \"id\": \"battery_charging_80\"\r\n      },\r\n      {\r\n        \"id\": \"battery_charging_90\"\r\n      },\r\n      {\r\n        \"id\": \"battery_charging_full\"\r\n      },\r\n      {\r\n        \"id\": \"battery_full\"\r\n      },\r\n      {\r\n        \"id\": \"battery_std\"\r\n      },\r\n      {\r\n        \"id\": \"battery_unknown\"\r\n      },\r\n      {\r\n        \"id\": \"bluetooth\"\r\n      },\r\n      {\r\n        \"id\": \"bluetooth_connected\"\r\n      },\r\n      {\r\n        \"id\": \"bluetooth_disabled\"\r\n      },\r\n      {\r\n        \"id\": \"bluetooth_searching\"\r\n      },\r\n      {\r\n        \"id\": \"brightness_auto\"\r\n      },\r\n      {\r\n        \"id\": \"brightness_high\"\r\n      },\r\n      {\r\n        \"id\": \"brightness_low\"\r\n      },\r\n      {\r\n        \"id\": \"brightness_medium\"\r\n      },\r\n      {\r\n        \"id\": \"data_usage\"\r\n      },\r\n      {\r\n        \"id\": \"developer_mode\"\r\n      },\r\n      {\r\n        \"id\": \"devices\"\r\n      },\r\n      {\r\n        \"id\": \"dvr\"\r\n      },\r\n      {\r\n        \"id\": \"gps_fixed\"\r\n      },\r\n      {\r\n        \"id\": \"gps_not_fixed\"\r\n      },\r\n      {\r\n        \"id\": \"gps_off\"\r\n      },\r\n      {\r\n        \"id\": \"graphic_eq\"\r\n      },\r\n      {\r\n        \"id\": \"location_disabled\"\r\n      },\r\n      {\r\n        \"id\": \"location_searching\"\r\n      },\r\n      {\r\n        \"id\": \"mobile_friendly\"\r\n      },\r\n      {\r\n        \"id\": \"mobile_off\"\r\n      },\r\n      {\r\n        \"id\": \"network_cell\"\r\n      },\r\n      {\r\n        \"id\": \"network_wifi\"\r\n      },\r\n      {\r\n        \"id\": \"nfc\"\r\n      },\r\n      {\r\n        \"id\": \"screen_lock_landscape\"\r\n      },\r\n      {\r\n        \"id\": \"screen_lock_portrait\"\r\n      },\r\n      {\r\n        \"id\": \"screen_lock_rotation\"\r\n      },\r\n      {\r\n        \"id\": \"screen_rotation\"\r\n      },\r\n      {\r\n        \"id\": \"sd_storage\"\r\n      },\r\n      {\r\n        \"id\": \"settings_system_daydream\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_0_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_1_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_2_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_3_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_4_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_alt\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_connected_no_internet_0_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_connected_no_internet_1_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_connected_no_internet_2_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_connected_no_internet_3_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_connected_no_internet_4_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_no_sim\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_null\"\r\n      },\r\n      {\r\n        \"id\": \"signal_cellular_off\"\r\n      },\r\n      {\r\n        \"id\": \"signal_wifi_0_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_wifi_1_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_wifi_1_bar_lock\"\r\n      },\r\n      {\r\n        \"id\": \"signal_wifi_2_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_wifi_2_bar_lock\"\r\n      },\r\n      {\r\n        \"id\": \"signal_wifi_3_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_wifi_3_bar_lock\"\r\n      },\r\n      {\r\n        \"id\": \"signal_wifi_4_bar\"\r\n      },\r\n      {\r\n        \"id\": \"signal_wifi_4_bar_lock\"\r\n      },\r\n      {\r\n        \"id\": \"signal_wifi_off\"\r\n      },\r\n      {\r\n        \"id\": \"storage\"\r\n      },\r\n      {\r\n        \"id\": \"usb\"\r\n      },\r\n      {\r\n        \"id\": \"wallpaper\"\r\n      },\r\n      {\r\n        \"id\": \"widgets\"\r\n      },\r\n      {\r\n        \"id\": \"wifi_lock\"\r\n      },\r\n      {\r\n        \"id\": \"wifi_tethering\"\r\n      }\r\n    ],\r\n    \"name\": \"device\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"add_comment\"\r\n      },\r\n      {\r\n        \"id\": \"attach_file\"\r\n      },\r\n      {\r\n        \"id\": \"attach_money\"\r\n      },\r\n      {\r\n        \"id\": \"bar_chart\"\r\n      },\r\n      {\r\n        \"id\": \"border_all\"\r\n      },\r\n      {\r\n        \"id\": \"border_bottom\"\r\n      },\r\n      {\r\n        \"id\": \"border_clear\"\r\n      },\r\n      {\r\n        \"id\": \"border_color\"\r\n      },\r\n      {\r\n        \"id\": \"border_horizontal\"\r\n      },\r\n      {\r\n        \"id\": \"border_inner\"\r\n      },\r\n      {\r\n        \"id\": \"border_left\"\r\n      },\r\n      {\r\n        \"id\": \"border_outer\"\r\n      },\r\n      {\r\n        \"id\": \"border_right\"\r\n      },\r\n      {\r\n        \"id\": \"border_style\"\r\n      },\r\n      {\r\n        \"id\": \"border_top\"\r\n      },\r\n      {\r\n        \"id\": \"border_vertical\"\r\n      },\r\n      {\r\n        \"id\": \"bubble_chart\"\r\n      },\r\n      {\r\n        \"id\": \"drag_handle\"\r\n      },\r\n      {\r\n        \"id\": \"format_align_center\"\r\n      },\r\n      {\r\n        \"id\": \"format_align_justify\"\r\n      },\r\n      {\r\n        \"id\": \"format_align_left\"\r\n      },\r\n      {\r\n        \"id\": \"format_align_right\"\r\n      },\r\n      {\r\n        \"id\": \"format_bold\"\r\n      },\r\n      {\r\n        \"id\": \"format_clear\"\r\n      },\r\n      {\r\n        \"id\": \"format_color_fill\"\r\n      },\r\n      {\r\n        \"id\": \"format_color_reset\"\r\n      },\r\n      {\r\n        \"id\": \"format_color_text\"\r\n      },\r\n      {\r\n        \"id\": \"format_indent_decrease\"\r\n      },\r\n      {\r\n        \"id\": \"format_indent_increase\"\r\n      },\r\n      {\r\n        \"id\": \"format_italic\"\r\n      },\r\n      {\r\n        \"id\": \"format_line_spacing\"\r\n      },\r\n      {\r\n        \"id\": \"format_list_bulleted\"\r\n      },\r\n      {\r\n        \"id\": \"format_list_numbered\"\r\n      },\r\n      {\r\n        \"id\": \"format_list_numbered_rtl\"\r\n      },\r\n      {\r\n        \"id\": \"format_paint\"\r\n      },\r\n      {\r\n        \"id\": \"format_quote\"\r\n      },\r\n      {\r\n        \"id\": \"format_shapes\"\r\n      },\r\n      {\r\n        \"id\": \"format_size\"\r\n      },\r\n      {\r\n        \"id\": \"format_strikethrough\"\r\n      },\r\n      {\r\n        \"id\": \"format_textdirection_l_to_r\"\r\n      },\r\n      {\r\n        \"id\": \"format_textdirection_r_to_l\"\r\n      },\r\n      {\r\n        \"id\": \"format_underlined\"\r\n      },\r\n      {\r\n        \"id\": \"functions\"\r\n      },\r\n      {\r\n        \"id\": \"highlight\"\r\n      },\r\n      {\r\n        \"id\": \"insert_chart\"\r\n      },\r\n      {\r\n        \"id\": \"insert_chart_outlined\"\r\n      },\r\n      {\r\n        \"id\": \"insert_comment\"\r\n      },\r\n      {\r\n        \"id\": \"insert_drive_file\"\r\n      },\r\n      {\r\n        \"id\": \"insert_emoticon\"\r\n      },\r\n      {\r\n        \"id\": \"insert_invitation\"\r\n      },\r\n      {\r\n        \"id\": \"insert_link\"\r\n      },\r\n      {\r\n        \"id\": \"insert_photo\"\r\n      },\r\n      {\r\n        \"id\": \"linear_scale\"\r\n      },\r\n      {\r\n        \"id\": \"merge_type\"\r\n      },\r\n      {\r\n        \"id\": \"mode_comment\"\r\n      },\r\n      {\r\n        \"id\": \"monetization_on\"\r\n      },\r\n      {\r\n        \"id\": \"money_off\"\r\n      },\r\n      {\r\n        \"id\": \"multiline_chart\"\r\n      },\r\n      {\r\n        \"id\": \"notes\"\r\n      },\r\n      {\r\n        \"id\": \"pie_chart\"\r\n      },\r\n      {\r\n        \"id\": \"publish\"\r\n      },\r\n      {\r\n        \"id\": \"scatter_plot\"\r\n      },\r\n      {\r\n        \"id\": \"score\"\r\n      },\r\n      {\r\n        \"id\": \"short_text\"\r\n      },\r\n      {\r\n        \"id\": \"show_chart\"\r\n      },\r\n      {\r\n        \"id\": \"space_bar\"\r\n      },\r\n      {\r\n        \"id\": \"strikethrough_s\"\r\n      },\r\n      {\r\n        \"id\": \"table_chart\"\r\n      },\r\n      {\r\n        \"id\": \"text_fields\"\r\n      },\r\n      {\r\n        \"id\": \"title\"\r\n      },\r\n      {\r\n        \"id\": \"vertical_align_bottom\"\r\n      },\r\n      {\r\n        \"id\": \"vertical_align_center\"\r\n      },\r\n      {\r\n        \"id\": \"vertical_align_top\"\r\n      },\r\n      {\r\n        \"id\": \"wrap_text\"\r\n      }\r\n    ],\r\n    \"name\": \"editor\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"attachment\"\r\n      },\r\n      {\r\n        \"id\": \"cloud\"\r\n      },\r\n      {\r\n        \"id\": \"cloud_circle\"\r\n      },\r\n      {\r\n        \"id\": \"cloud_done\"\r\n      },\r\n      {\r\n        \"id\": \"cloud_download\"\r\n      },\r\n      {\r\n        \"id\": \"cloud_off\"\r\n      },\r\n      {\r\n        \"id\": \"cloud_queue\"\r\n      },\r\n      {\r\n        \"id\": \"cloud_upload\"\r\n      },\r\n      {\r\n        \"id\": \"create_new_folder\"\r\n      },\r\n      {\r\n        \"id\": \"folder\"\r\n      },\r\n      {\r\n        \"id\": \"folder_open\"\r\n      },\r\n      {\r\n        \"id\": \"folder_shared\"\r\n      }\r\n    ],\r\n    \"name\": \"file\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"cast\"\r\n      },\r\n      {\r\n        \"id\": \"cast_connected\"\r\n      },\r\n      {\r\n        \"imageUrls\": {\r\n          \"twotone\": \"twotone-cast_for_education-24px.svg\",\r\n          \"sharp\": \"sharp-cast_for_education-24px.svg\",\r\n          \"outline\": \"outline-cast_for_education-24px.svg\",\r\n          \"round\": \"round-cast_for_education-24px.svg\",\r\n          \"baseline\": \"baseline-cast_for_education-48px.svg\"\r\n        },\r\n        \"id\": \"cast_for_education\"\r\n      },\r\n      {\r\n        \"id\": \"computer\"\r\n      },\r\n      {\r\n        \"id\": \"desktop_mac\"\r\n      },\r\n      {\r\n        \"id\": \"desktop_windows\"\r\n      },\r\n      {\r\n        \"id\": \"developer_board\"\r\n      },\r\n      {\r\n        \"id\": \"device_hub\"\r\n      },\r\n      {\r\n        \"id\": \"device_unknown\"\r\n      },\r\n      {\r\n        \"id\": \"devices_other\"\r\n      },\r\n      {\r\n        \"id\": \"dock\"\r\n      },\r\n      {\r\n        \"id\": \"gamepad\"\r\n      },\r\n      {\r\n        \"id\": \"headset\"\r\n      },\r\n      {\r\n        \"id\": \"headset_mic\"\r\n      },\r\n      {\r\n        \"id\": \"keyboard\"\r\n      },\r\n      {\r\n        \"id\": \"keyboard_arrow_down\"\r\n      },\r\n      {\r\n        \"id\": \"keyboard_arrow_left\"\r\n      },\r\n      {\r\n        \"id\": \"keyboard_arrow_right\"\r\n      },\r\n      {\r\n        \"id\": \"keyboard_arrow_up\"\r\n      },\r\n      {\r\n        \"id\": \"keyboard_backspace\"\r\n      },\r\n      {\r\n        \"id\": \"keyboard_capslock\"\r\n      },\r\n      {\r\n        \"id\": \"keyboard_hide\"\r\n      },\r\n      {\r\n        \"id\": \"keyboard_return\"\r\n      },\r\n      {\r\n        \"id\": \"keyboard_tab\"\r\n      },\r\n      {\r\n        \"id\": \"keyboard_voice\"\r\n      },\r\n      {\r\n        \"id\": \"laptop\"\r\n      },\r\n      {\r\n        \"id\": \"laptop_chromebook\"\r\n      },\r\n      {\r\n        \"id\": \"laptop_mac\"\r\n      },\r\n      {\r\n        \"id\": \"laptop_windows\"\r\n      },\r\n      {\r\n        \"id\": \"memory\"\r\n      },\r\n      {\r\n        \"id\": \"mouse\"\r\n      },\r\n      {\r\n        \"id\": \"phone_android\"\r\n      },\r\n      {\r\n        \"id\": \"phone_iphone\"\r\n      },\r\n      {\r\n        \"id\": \"phonelink\"\r\n      },\r\n      {\r\n        \"id\": \"phonelink_off\"\r\n      },\r\n      {\r\n        \"id\": \"power_input\"\r\n      },\r\n      {\r\n        \"id\": \"router\"\r\n      },\r\n      {\r\n        \"id\": \"scanner\"\r\n      },\r\n      {\r\n        \"id\": \"security\"\r\n      },\r\n      {\r\n        \"id\": \"sim_card\"\r\n      },\r\n      {\r\n        \"id\": \"smartphone\"\r\n      },\r\n      {\r\n        \"id\": \"speaker\"\r\n      },\r\n      {\r\n        \"id\": \"speaker_group\"\r\n      },\r\n      {\r\n        \"id\": \"tablet\"\r\n      },\r\n      {\r\n        \"id\": \"tablet_android\"\r\n      },\r\n      {\r\n        \"id\": \"tablet_mac\"\r\n      },\r\n      {\r\n        \"id\": \"toys\"\r\n      },\r\n      {\r\n        \"id\": \"tv\"\r\n      },\r\n      {\r\n        \"id\": \"videogame_asset\"\r\n      },\r\n      {\r\n        \"id\": \"watch\"\r\n      }\r\n    ],\r\n    \"name\": \"hardware\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"add_a_photo\"\r\n      },\r\n      {\r\n        \"id\": \"add_photo_alternate\"\r\n      },\r\n      {\r\n        \"id\": \"add_to_photos\"\r\n      },\r\n      {\r\n        \"id\": \"adjust\"\r\n      },\r\n      {\r\n        \"id\": \"assistant\"\r\n      },\r\n      {\r\n        \"id\": \"assistant_photo\"\r\n      },\r\n      {\r\n        \"id\": \"audiotrack\"\r\n      },\r\n      {\r\n        \"id\": \"blur_circular\"\r\n      },\r\n      {\r\n        \"id\": \"blur_linear\"\r\n      },\r\n      {\r\n        \"id\": \"blur_off\"\r\n      },\r\n      {\r\n        \"id\": \"blur_on\"\r\n      },\r\n      {\r\n        \"id\": \"brightness_1\"\r\n      },\r\n      {\r\n        \"id\": \"brightness_2\"\r\n      },\r\n      {\r\n        \"id\": \"brightness_3\"\r\n      },\r\n      {\r\n        \"id\": \"brightness_4\"\r\n      },\r\n      {\r\n        \"id\": \"brightness_5\"\r\n      },\r\n      {\r\n        \"id\": \"brightness_6\"\r\n      },\r\n      {\r\n        \"id\": \"brightness_7\"\r\n      },\r\n      {\r\n        \"id\": \"broken_image\"\r\n      },\r\n      {\r\n        \"id\": \"brush\"\r\n      },\r\n      {\r\n        \"id\": \"burst_mode\"\r\n      },\r\n      {\r\n        \"id\": \"camera\"\r\n      },\r\n      {\r\n        \"id\": \"camera_alt\"\r\n      },\r\n      {\r\n        \"id\": \"camera_front\"\r\n      },\r\n      {\r\n        \"id\": \"camera_rear\"\r\n      },\r\n      {\r\n        \"id\": \"camera_roll\"\r\n      },\r\n      {\r\n        \"id\": \"center_focus_strong\"\r\n      },\r\n      {\r\n        \"id\": \"center_focus_weak\"\r\n      },\r\n      {\r\n        \"id\": \"collections\"\r\n      },\r\n      {\r\n        \"id\": \"collections_bookmark\"\r\n      },\r\n      {\r\n        \"id\": \"color_lens\"\r\n      },\r\n      {\r\n        \"id\": \"colorize\"\r\n      },\r\n      {\r\n        \"id\": \"compare\"\r\n      },\r\n      {\r\n        \"id\": \"control_point\"\r\n      },\r\n      {\r\n        \"id\": \"control_point_duplicate\"\r\n      },\r\n      {\r\n        \"id\": \"crop\"\r\n      },\r\n      {\r\n        \"id\": \"crop_16_9\"\r\n      },\r\n      {\r\n        \"id\": \"crop_3_2\"\r\n      },\r\n      {\r\n        \"id\": \"crop_5_4\"\r\n      },\r\n      {\r\n        \"id\": \"crop_7_5\"\r\n      },\r\n      {\r\n        \"id\": \"crop_din\"\r\n      },\r\n      {\r\n        \"id\": \"crop_free\"\r\n      },\r\n      {\r\n        \"id\": \"crop_landscape\"\r\n      },\r\n      {\r\n        \"id\": \"crop_original\"\r\n      },\r\n      {\r\n        \"id\": \"crop_portrait\"\r\n      },\r\n      {\r\n        \"id\": \"crop_rotate\"\r\n      },\r\n      {\r\n        \"id\": \"crop_square\"\r\n      },\r\n      {\r\n        \"id\": \"dehaze\"\r\n      },\r\n      {\r\n        \"id\": \"details\"\r\n      },\r\n      {\r\n        \"id\": \"edit\"\r\n      },\r\n      {\r\n        \"id\": \"exposure\"\r\n      },\r\n      {\r\n        \"id\": \"exposure_neg_1\"\r\n      },\r\n      {\r\n        \"id\": \"exposure_neg_2\"\r\n      },\r\n      {\r\n        \"id\": \"exposure_plus_1\"\r\n      },\r\n      {\r\n        \"id\": \"exposure_plus_2\"\r\n      },\r\n      {\r\n        \"id\": \"exposure_zero\"\r\n      },\r\n      {\r\n        \"id\": \"filter\"\r\n      },\r\n      {\r\n        \"id\": \"filter_1\"\r\n      },\r\n      {\r\n        \"id\": \"filter_2\"\r\n      },\r\n      {\r\n        \"id\": \"filter_3\"\r\n      },\r\n      {\r\n        \"id\": \"filter_4\"\r\n      },\r\n      {\r\n        \"id\": \"filter_5\"\r\n      },\r\n      {\r\n        \"id\": \"filter_6\"\r\n      },\r\n      {\r\n        \"id\": \"filter_7\"\r\n      },\r\n      {\r\n        \"id\": \"filter_8\"\r\n      },\r\n      {\r\n        \"id\": \"filter_9\"\r\n      },\r\n      {\r\n        \"id\": \"filter_9_plus\"\r\n      },\r\n      {\r\n        \"id\": \"filter_b_and_w\"\r\n      },\r\n      {\r\n        \"id\": \"filter_center_focus\"\r\n      },\r\n      {\r\n        \"id\": \"filter_drama\"\r\n      },\r\n      {\r\n        \"id\": \"filter_frames\"\r\n      },\r\n      {\r\n        \"id\": \"filter_hdr\"\r\n      },\r\n      {\r\n        \"id\": \"filter_none\"\r\n      },\r\n      {\r\n        \"id\": \"filter_tilt_shift\"\r\n      },\r\n      {\r\n        \"id\": \"filter_vintage\"\r\n      },\r\n      {\r\n        \"id\": \"flare\"\r\n      },\r\n      {\r\n        \"id\": \"flash_auto\"\r\n      },\r\n      {\r\n        \"id\": \"flash_off\"\r\n      },\r\n      {\r\n        \"id\": \"flash_on\"\r\n      },\r\n      {\r\n        \"id\": \"flip\"\r\n      },\r\n      {\r\n        \"id\": \"gradient\"\r\n      },\r\n      {\r\n        \"id\": \"grain\"\r\n      },\r\n      {\r\n        \"id\": \"grid_off\"\r\n      },\r\n      {\r\n        \"id\": \"grid_on\"\r\n      },\r\n      {\r\n        \"id\": \"hdr_off\"\r\n      },\r\n      {\r\n        \"id\": \"hdr_on\"\r\n      },\r\n      {\r\n        \"id\": \"hdr_strong\"\r\n      },\r\n      {\r\n        \"id\": \"hdr_weak\"\r\n      },\r\n      {\r\n        \"id\": \"healing\"\r\n      },\r\n      {\r\n        \"id\": \"image\"\r\n      },\r\n      {\r\n        \"id\": \"image_aspect_ratio\"\r\n      },\r\n      {\r\n        \"id\": \"image_search\"\r\n      },\r\n      {\r\n        \"id\": \"iso\"\r\n      },\r\n      {\r\n        \"id\": \"landscape\"\r\n      },\r\n      {\r\n        \"id\": \"leak_add\"\r\n      },\r\n      {\r\n        \"id\": \"leak_remove\"\r\n      },\r\n      {\r\n        \"id\": \"lens\"\r\n      },\r\n      {\r\n        \"id\": \"linked_camera\"\r\n      },\r\n      {\r\n        \"id\": \"looks\"\r\n      },\r\n      {\r\n        \"id\": \"looks_3\"\r\n      },\r\n      {\r\n        \"id\": \"looks_4\"\r\n      },\r\n      {\r\n        \"id\": \"looks_5\"\r\n      },\r\n      {\r\n        \"id\": \"looks_6\"\r\n      },\r\n      {\r\n        \"id\": \"looks_one\"\r\n      },\r\n      {\r\n        \"id\": \"looks_two\"\r\n      },\r\n      {\r\n        \"id\": \"loupe\"\r\n      },\r\n      {\r\n        \"id\": \"monochrome_photos\"\r\n      },\r\n      {\r\n        \"id\": \"movie_creation\"\r\n      },\r\n      {\r\n        \"id\": \"movie_filter\"\r\n      },\r\n      {\r\n        \"id\": \"music_note\"\r\n      },\r\n      {\r\n        \"id\": \"music_off\"\r\n      },\r\n      {\r\n        \"id\": \"nature\"\r\n      },\r\n      {\r\n        \"id\": \"nature_people\"\r\n      },\r\n      {\r\n        \"id\": \"navigate_before\"\r\n      },\r\n      {\r\n        \"id\": \"navigate_next\"\r\n      },\r\n      {\r\n        \"id\": \"palette\"\r\n      },\r\n      {\r\n        \"id\": \"panorama\"\r\n      },\r\n      {\r\n        \"id\": \"panorama_fish_eye\"\r\n      },\r\n      {\r\n        \"id\": \"panorama_horizontal\"\r\n      },\r\n      {\r\n        \"id\": \"panorama_vertical\"\r\n      },\r\n      {\r\n        \"id\": \"panorama_wide_angle\"\r\n      },\r\n      {\r\n        \"id\": \"photo\"\r\n      },\r\n      {\r\n        \"id\": \"photo_album\"\r\n      },\r\n      {\r\n        \"id\": \"photo_camera\"\r\n      },\r\n      {\r\n        \"id\": \"photo_filter\"\r\n      },\r\n      {\r\n        \"id\": \"photo_library\"\r\n      },\r\n      {\r\n        \"id\": \"photo_size_select_actual\"\r\n      },\r\n      {\r\n        \"id\": \"photo_size_select_large\"\r\n      },\r\n      {\r\n        \"id\": \"photo_size_select_small\"\r\n      },\r\n      {\r\n        \"id\": \"picture_as_pdf\"\r\n      },\r\n      {\r\n        \"id\": \"portrait\"\r\n      },\r\n      {\r\n        \"id\": \"remove_red_eye\"\r\n      },\r\n      {\r\n        \"id\": \"rotate_90_degrees_ccw\"\r\n      },\r\n      {\r\n        \"id\": \"rotate_left\"\r\n      },\r\n      {\r\n        \"id\": \"rotate_right\"\r\n      },\r\n      {\r\n        \"id\": \"shutter_speed\"\r\n      },\r\n      {\r\n        \"id\": \"slideshow\"\r\n      },\r\n      {\r\n        \"id\": \"straighten\"\r\n      },\r\n      {\r\n        \"id\": \"style\"\r\n      },\r\n      {\r\n        \"id\": \"switch_camera\"\r\n      },\r\n      {\r\n        \"id\": \"switch_video\"\r\n      },\r\n      {\r\n        \"id\": \"tag_faces\"\r\n      },\r\n      {\r\n        \"id\": \"texture\"\r\n      },\r\n      {\r\n        \"id\": \"timelapse\"\r\n      },\r\n      {\r\n        \"id\": \"timer\"\r\n      },\r\n      {\r\n        \"id\": \"timer_10\"\r\n      },\r\n      {\r\n        \"id\": \"timer_3\"\r\n      },\r\n      {\r\n        \"id\": \"timer_off\"\r\n      },\r\n      {\r\n        \"id\": \"tonality\"\r\n      },\r\n      {\r\n        \"id\": \"transform\"\r\n      },\r\n      {\r\n        \"id\": \"tune\"\r\n      },\r\n      {\r\n        \"id\": \"view_comfy\"\r\n      },\r\n      {\r\n        \"id\": \"view_compact\"\r\n      },\r\n      {\r\n        \"id\": \"vignette\"\r\n      },\r\n      {\r\n        \"id\": \"wb_auto\"\r\n      },\r\n      {\r\n        \"id\": \"wb_cloudy\"\r\n      },\r\n      {\r\n        \"id\": \"wb_incandescent\"\r\n      },\r\n      {\r\n        \"id\": \"wb_iridescent\"\r\n      },\r\n      {\r\n        \"id\": \"wb_sunny\"\r\n      }\r\n    ],\r\n    \"name\": \"image\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"360\"\r\n      },\r\n      {\r\n        \"id\": \"add_location\"\r\n      },\r\n      {\r\n        \"id\": \"atm\"\r\n      },\r\n      {\r\n        \"id\": \"beenhere\"\r\n      },\r\n      {\r\n        \"id\": \"category\"\r\n      },\r\n      {\r\n        \"id\": \"compass_calibration\"\r\n      },\r\n      {\r\n        \"id\": \"departure_board\"\r\n      },\r\n      {\r\n        \"id\": \"directions\"\r\n      },\r\n      {\r\n        \"id\": \"directions_bike\"\r\n      },\r\n      {\r\n        \"id\": \"directions_boat\"\r\n      },\r\n      {\r\n        \"id\": \"directions_bus\"\r\n      },\r\n      {\r\n        \"id\": \"directions_car\"\r\n      },\r\n      {\r\n        \"id\": \"directions_railway\"\r\n      },\r\n      {\r\n        \"id\": \"directions_run\"\r\n      },\r\n      {\r\n        \"id\": \"directions_subway\"\r\n      },\r\n      {\r\n        \"id\": \"directions_transit\"\r\n      },\r\n      {\r\n        \"id\": \"directions_walk\"\r\n      },\r\n      {\r\n        \"id\": \"edit_attributes\"\r\n      },\r\n      {\r\n        \"id\": \"edit_location\"\r\n      },\r\n      {\r\n        \"id\": \"ev_station\"\r\n      },\r\n      {\r\n        \"id\": \"fastfood\"\r\n      },\r\n      {\r\n        \"id\": \"flight\"\r\n      },\r\n      {\r\n        \"id\": \"hotel\"\r\n      },\r\n      {\r\n        \"id\": \"layers\"\r\n      },\r\n      {\r\n        \"id\": \"layers_clear\"\r\n      },\r\n      {\r\n        \"id\": \"local_activity\"\r\n      },\r\n      {\r\n        \"id\": \"local_airport\"\r\n      },\r\n      {\r\n        \"id\": \"local_atm\"\r\n      },\r\n      {\r\n        \"id\": \"local_bar\"\r\n      },\r\n      {\r\n        \"id\": \"local_cafe\"\r\n      },\r\n      {\r\n        \"id\": \"local_car_wash\"\r\n      },\r\n      {\r\n        \"id\": \"local_convenience_store\"\r\n      },\r\n      {\r\n        \"id\": \"local_dining\"\r\n      },\r\n      {\r\n        \"id\": \"local_drink\"\r\n      },\r\n      {\r\n        \"id\": \"local_florist\"\r\n      },\r\n      {\r\n        \"id\": \"local_gas_station\"\r\n      },\r\n      {\r\n        \"id\": \"local_grocery_store\"\r\n      },\r\n      {\r\n        \"id\": \"local_hospital\"\r\n      },\r\n      {\r\n        \"id\": \"local_hotel\"\r\n      },\r\n      {\r\n        \"id\": \"local_laundry_service\"\r\n      },\r\n      {\r\n        \"id\": \"local_library\"\r\n      },\r\n      {\r\n        \"id\": \"local_mall\"\r\n      },\r\n      {\r\n        \"id\": \"local_movies\"\r\n      },\r\n      {\r\n        \"id\": \"local_offer\"\r\n      },\r\n      {\r\n        \"id\": \"local_parking\"\r\n      },\r\n      {\r\n        \"id\": \"local_pharmacy\"\r\n      },\r\n      {\r\n        \"id\": \"local_phone\"\r\n      },\r\n      {\r\n        \"id\": \"local_pizza\"\r\n      },\r\n      {\r\n        \"id\": \"local_play\"\r\n      },\r\n      {\r\n        \"id\": \"local_post_office\"\r\n      },\r\n      {\r\n        \"id\": \"local_printshop\"\r\n      },\r\n      {\r\n        \"id\": \"local_see\"\r\n      },\r\n      {\r\n        \"id\": \"local_shipping\"\r\n      },\r\n      {\r\n        \"id\": \"local_taxi\"\r\n      },\r\n      {\r\n        \"id\": \"map\"\r\n      },\r\n      {\r\n        \"id\": \"money\"\r\n      },\r\n      {\r\n        \"id\": \"my_location\"\r\n      },\r\n      {\r\n        \"id\": \"navigation\"\r\n      },\r\n      {\r\n        \"id\": \"near_me\"\r\n      },\r\n      {\r\n        \"id\": \"not_listed_location\"\r\n      },\r\n      {\r\n        \"id\": \"person_pin\"\r\n      },\r\n      {\r\n        \"id\": \"person_pin_circle\"\r\n      },\r\n      {\r\n        \"id\": \"pin_drop\"\r\n      },\r\n      {\r\n        \"id\": \"place\"\r\n      },\r\n      {\r\n        \"id\": \"rate_review\"\r\n      },\r\n      {\r\n        \"id\": \"restaurant\"\r\n      },\r\n      {\r\n        \"id\": \"restaurant_menu\"\r\n      },\r\n      {\r\n        \"id\": \"satellite\"\r\n      },\r\n      {\r\n        \"id\": \"store_mall_directory\"\r\n      },\r\n      {\r\n        \"id\": \"streetview\"\r\n      },\r\n      {\r\n        \"id\": \"subway\"\r\n      },\r\n      {\r\n        \"id\": \"terrain\"\r\n      },\r\n      {\r\n        \"id\": \"traffic\"\r\n      },\r\n      {\r\n        \"id\": \"train\"\r\n      },\r\n      {\r\n        \"id\": \"tram\"\r\n      },\r\n      {\r\n        \"id\": \"transfer_within_a_station\"\r\n      },\r\n      {\r\n        \"id\": \"transit_enterexit\"\r\n      },\r\n      {\r\n        \"id\": \"trip_origin\"\r\n      },\r\n      {\r\n        \"id\": \"zoom_out_map\"\r\n      }\r\n    ],\r\n    \"name\": \"maps\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"apps\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_back\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_back_ios\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_downward\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_drop_down\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_drop_down_circle\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_drop_up\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_forward\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_forward_ios\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_left\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_right\"\r\n      },\r\n      {\r\n        \"id\": \"arrow_upward\"\r\n      },\r\n      {\r\n        \"id\": \"cancel\"\r\n      },\r\n      {\r\n        \"id\": \"check\"\r\n      },\r\n      {\r\n        \"id\": \"chevron_left\"\r\n      },\r\n      {\r\n        \"id\": \"chevron_right\"\r\n      },\r\n      {\r\n        \"id\": \"close\"\r\n      },\r\n      {\r\n        \"id\": \"expand_less\"\r\n      },\r\n      {\r\n        \"id\": \"expand_more\"\r\n      },\r\n      {\r\n        \"id\": \"first_page\"\r\n      },\r\n      {\r\n        \"id\": \"fullscreen\"\r\n      },\r\n      {\r\n        \"id\": \"fullscreen_exit\"\r\n      },\r\n      {\r\n        \"id\": \"last_page\"\r\n      },\r\n      {\r\n        \"id\": \"menu\"\r\n      },\r\n      {\r\n        \"id\": \"more_horiz\"\r\n      },\r\n      {\r\n        \"id\": \"more_vert\"\r\n      },\r\n      {\r\n        \"id\": \"refresh\"\r\n      },\r\n      {\r\n        \"id\": \"subdirectory_arrow_left\"\r\n      },\r\n      {\r\n        \"id\": \"subdirectory_arrow_right\"\r\n      },\r\n      {\r\n        \"id\": \"unfold_less\"\r\n      },\r\n      {\r\n        \"id\": \"unfold_more\"\r\n      }\r\n    ],\r\n    \"name\": \"navigation\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"adb\"\r\n      },\r\n      {\r\n        \"id\": \"airline_seat_flat\"\r\n      },\r\n      {\r\n        \"id\": \"airline_seat_flat_angled\"\r\n      },\r\n      {\r\n        \"id\": \"airline_seat_individual_suite\"\r\n      },\r\n      {\r\n        \"id\": \"airline_seat_legroom_extra\"\r\n      },\r\n      {\r\n        \"id\": \"airline_seat_legroom_normal\"\r\n      },\r\n      {\r\n        \"id\": \"airline_seat_legroom_reduced\"\r\n      },\r\n      {\r\n        \"id\": \"airline_seat_recline_extra\"\r\n      },\r\n      {\r\n        \"id\": \"airline_seat_recline_normal\"\r\n      },\r\n      {\r\n        \"id\": \"bluetooth_audio\"\r\n      },\r\n      {\r\n        \"id\": \"confirmation_number\"\r\n      },\r\n      {\r\n        \"id\": \"disc_full\"\r\n      },\r\n      {\r\n        \"id\": \"drive_eta\"\r\n      },\r\n      {\r\n        \"id\": \"enhanced_encryption\"\r\n      },\r\n      {\r\n        \"id\": \"event_available\"\r\n      },\r\n      {\r\n        \"id\": \"event_busy\"\r\n      },\r\n      {\r\n        \"id\": \"event_note\"\r\n      },\r\n      {\r\n        \"id\": \"folder_special\"\r\n      },\r\n      {\r\n        \"id\": \"live_tv\"\r\n      },\r\n      {\r\n        \"id\": \"mms\"\r\n      },\r\n      {\r\n        \"id\": \"more\"\r\n      },\r\n      {\r\n        \"id\": \"network_check\"\r\n      },\r\n      {\r\n        \"id\": \"network_locked\"\r\n      },\r\n      {\r\n        \"id\": \"no_encryption\"\r\n      },\r\n      {\r\n        \"id\": \"ondemand_video\"\r\n      },\r\n      {\r\n        \"id\": \"personal_video\"\r\n      },\r\n      {\r\n        \"id\": \"phone_bluetooth_speaker\"\r\n      },\r\n      {\r\n        \"id\": \"phone_callback\"\r\n      },\r\n      {\r\n        \"id\": \"phone_forwarded\"\r\n      },\r\n      {\r\n        \"id\": \"phone_in_talk\"\r\n      },\r\n      {\r\n        \"id\": \"phone_locked\"\r\n      },\r\n      {\r\n        \"id\": \"phone_missed\"\r\n      },\r\n      {\r\n        \"id\": \"phone_paused\"\r\n      },\r\n      {\r\n        \"id\": \"power\"\r\n      },\r\n      {\r\n        \"id\": \"power_off\"\r\n      },\r\n      {\r\n        \"id\": \"priority_high\"\r\n      },\r\n      {\r\n        \"id\": \"sd_card\"\r\n      },\r\n      {\r\n        \"id\": \"sms\"\r\n      },\r\n      {\r\n        \"id\": \"sms_failed\"\r\n      },\r\n      {\r\n        \"id\": \"sync\"\r\n      },\r\n      {\r\n        \"id\": \"sync_disabled\"\r\n      },\r\n      {\r\n        \"id\": \"sync_problem\"\r\n      },\r\n      {\r\n        \"id\": \"system_update\"\r\n      },\r\n      {\r\n        \"id\": \"tap_and_play\"\r\n      },\r\n      {\r\n        \"id\": \"time_to_leave\"\r\n      },\r\n      {\r\n        \"id\": \"tv_off\"\r\n      },\r\n      {\r\n        \"id\": \"vibration\"\r\n      },\r\n      {\r\n        \"id\": \"voice_chat\"\r\n      },\r\n      {\r\n        \"id\": \"vpn_lock\"\r\n      },\r\n      {\r\n        \"id\": \"wc\"\r\n      },\r\n      {\r\n        \"id\": \"wifi\"\r\n      },\r\n      {\r\n        \"id\": \"wifi_off\"\r\n      }\r\n    ],\r\n    \"name\": \"notification\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"ac_unit\"\r\n      },\r\n      {\r\n        \"id\": \"airport_shuttle\"\r\n      },\r\n      {\r\n        \"id\": \"all_inclusive\"\r\n      },\r\n      {\r\n        \"id\": \"beach_access\"\r\n      },\r\n      {\r\n        \"id\": \"business_center\"\r\n      },\r\n      {\r\n        \"id\": \"casino\"\r\n      },\r\n      {\r\n        \"id\": \"child_care\"\r\n      },\r\n      {\r\n        \"id\": \"child_friendly\"\r\n      },\r\n      {\r\n        \"id\": \"fitness_center\"\r\n      },\r\n      {\r\n        \"id\": \"free_breakfast\"\r\n      },\r\n      {\r\n        \"id\": \"golf_course\"\r\n      },\r\n      {\r\n        \"id\": \"hot_tub\"\r\n      },\r\n      {\r\n        \"id\": \"kitchen\"\r\n      },\r\n      {\r\n        \"id\": \"meeting_room\"\r\n      },\r\n      {\r\n        \"id\": \"no_meeting_room\"\r\n      },\r\n      {\r\n        \"id\": \"pool\"\r\n      },\r\n      {\r\n        \"id\": \"room_service\"\r\n      },\r\n      {\r\n        \"id\": \"rv_hookup\"\r\n      },\r\n      {\r\n        \"id\": \"smoke_free\"\r\n      },\r\n      {\r\n        \"id\": \"smoking_rooms\"\r\n      },\r\n      {\r\n        \"id\": \"spa\"\r\n      }\r\n    ],\r\n    \"name\": \"places\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"cake\"\r\n      },\r\n      {\r\n        \"imageUrls\": {\r\n          \"twotone\": \"twotone-domain-24px.svg\",\r\n          \"sharp\": \"sharp-domain-24px.svg\",\r\n          \"outline\": \"outline-domain-24px.svg\",\r\n          \"round\": \"round-domain-24px.svg\",\r\n          \"baseline\": \"baseline-domain-48px.svg\"\r\n        },\r\n        \"id\": \"domain\"\r\n      },\r\n      {\r\n        \"id\": \"group\"\r\n      },\r\n      {\r\n        \"id\": \"group_add\"\r\n      },\r\n      {\r\n        \"id\": \"location_city\"\r\n      },\r\n      {\r\n        \"id\": \"mood\"\r\n      },\r\n      {\r\n        \"id\": \"mood_bad\"\r\n      },\r\n      {\r\n        \"id\": \"notifications\"\r\n      },\r\n      {\r\n        \"id\": \"notifications_active\"\r\n      },\r\n      {\r\n        \"id\": \"notifications_none\"\r\n      },\r\n      {\r\n        \"id\": \"notifications_off\"\r\n      },\r\n      {\r\n        \"id\": \"notifications_paused\"\r\n      },\r\n      {\r\n        \"id\": \"pages\"\r\n      },\r\n      {\r\n        \"id\": \"party_mode\"\r\n      },\r\n      {\r\n        \"id\": \"people\"\r\n      },\r\n      {\r\n        \"id\": \"people_outline\"\r\n      },\r\n      {\r\n        \"id\": \"person\"\r\n      },\r\n      {\r\n        \"id\": \"person_add\"\r\n      },\r\n      {\r\n        \"id\": \"person_outline\"\r\n      },\r\n      {\r\n        \"id\": \"plus_one\"\r\n      },\r\n      {\r\n        \"id\": \"poll\"\r\n      },\r\n      {\r\n        \"id\": \"public\"\r\n      },\r\n      {\r\n        \"id\": \"school\"\r\n      },\r\n      {\r\n        \"id\": \"sentiment_dissatisfied\"\r\n      },\r\n      {\r\n        \"id\": \"sentiment_satisfied\"\r\n      },\r\n      {\r\n        \"id\": \"sentiment_very_dissatisfied\"\r\n      },\r\n      {\r\n        \"id\": \"sentiment_very_satisfied\"\r\n      },\r\n      {\r\n        \"id\": \"share\"\r\n      },\r\n      {\r\n        \"id\": \"thumb_down_alt\"\r\n      },\r\n      {\r\n        \"id\": \"thumb_up_alt\"\r\n      },\r\n      {\r\n        \"id\": \"whatshot\"\r\n      }\r\n    ],\r\n    \"name\": \"social\"\r\n  },\r\n  {\r\n    \"icons\": [\r\n      {\r\n        \"id\": \"check_box\"\r\n      },\r\n      {\r\n        \"id\": \"check_box_outline_blank\"\r\n      },\r\n      {\r\n        \"id\": \"indeterminate_check_box\"\r\n      },\r\n      {\r\n        \"id\": \"radio_button_checked\"\r\n      },\r\n      {\r\n        \"id\": \"radio_button_unchecked\"\r\n      },\r\n      {\r\n        \"id\": \"star\"\r\n      },\r\n      {\r\n        \"id\": \"star_border\"\r\n      },\r\n      {\r\n        \"id\": \"star_half\"\r\n      },\r\n      {\r\n        \"id\": \"toggle_off\"\r\n      },\r\n      {\r\n        \"id\": \"toggle_on\"\r\n      }\r\n    ],\r\n    \"name\": \"toggle\"\r\n  }\r\n]","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title>{{ title | toUpperCase }}</md-dialog-title>\n\n    <md-dialog-content class=\"dialogContainer\">\n\n      <md-field>\n        <label>Group name</label>\n        <md-input v-model=\"inputValue\"></md-input>\n      </md-field>\n\n      <div class=\"iconComponent\">\n        <icon-component @selectIcon=\"selectIcon\"\n                        :selected=\"iconSelected\"></icon-component>\n      </div>\n\n      <div class=\"colorDiv\">\n        <chrome-picker v-model=\"color\" />\n      </div>\n\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(true)\"\n                 :disabled=\"isDisabled()\">Save</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n<script>\nimport iconComponent from \"./iconsComponents.vue\";\nimport { Chrome, Photoshop } from \"vue-color\";\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\nimport EventBus from \"../../../js/event.js\";\n\nexport default {\n  name: \"createGroupDialog\",\n  props: [\"onFinised\"],\n  components: {\n    \"chrome-picker\": Chrome,\n    \"icon-component\": iconComponent,\n    \"photoshop-picker\": Photoshop,\n  },\n  data() {\n    this.edit;\n    return {\n      showDialog: true,\n      title: \"\",\n      contextId: null,\n      color: \"#000000\",\n      inputValue: \"\",\n      selectedNode: undefined,\n      iconSelected: undefined,\n      callback: () => {},\n    };\n  },\n  methods: {\n    opened(option) {\n      this.edit = option.edit;\n      this.title = option.title;\n      this.contextId = option.contextId;\n      this.selectedNode = option.selectedNode.id.get();\n      this.iconSelected = \"3d_rotation\";\n      console.log(\"option\", option);\n      if (this.edit) {\n        this.inputValue = option.selectedNode.name.get();\n        this.color = option.color;\n        this.iconSelected =\n          (option.selectedNode.icon && option.selectedNode.icon.get()) ||\n          \"3d_rotation\";\n      }\n\n      if (option.callback) this.callback = option.callback;\n    },\n\n    removed(closed) {\n      if (closed) {\n        this.createElement().then((result) => {\n          const id = result.info ? result.info.id.get() : result.id.get();\n          this.sentEvent(id);\n        });\n      }\n      this.showDialog = false;\n    },\n\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised(closeResult);\n      }\n    },\n\n    sentEvent(id) {\n      if (this.callback && typeof this.callback === \"function\")\n        this.callback(id);\n\n      EventBus.$emit(\"itemCreated\", id);\n    },\n\n    isDisabled() {\n      return this.inputValue.trim().length === 0;\n    },\n\n    selectIcon(icon) {\n      this.iconSelected = icon;\n    },\n\n    createElement() {\n      const color =\n        typeof this.color === \"string\" ? this.color : this.color.hex;\n\n      if (!this.edit) {\n        return groupManagerService.addGroup(\n          this.contextId,\n          this.selectedNode,\n          this.inputValue.trim(),\n          color,\n          this.iconSelected\n        );\n      } else {\n        return groupManagerService.updateGroup(this.selectedNode, {\n          name: this.inputValue.trim(),\n          color: color,\n          icon: this.iconSelected,\n        });\n      }\n    },\n  },\n  filters: {\n    toUpperCase: function (data) {\n      return data.toUpperCase();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.dialogContainer {\n  /* width: 500px !important; */\n  /* height: 100% !important; */\n}\n.dialogContainer .iconComponent {\n  /* height: 50%; */\n  margin-bottom: 15px;\n}\n\n.dialogContainer .colorDiv {\n  /* height: 50%; */\n}\n\n/* .dialogContainer .colorDiv > * {\n  width: 100%;\n  height: 100%;\n} */\n</style>\n","\n<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title>{{title}}</md-dialog-title>\n    <md-dialog-content>\n\n      <md-field>\n        <label>Name</label>\n        <md-input v-model=\"inputValue\"></md-input>\n      </md-field>\n\n      <chrome-picker v-model=\"color\" />\n    </md-dialog-content>\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(true)\"\n                 :disabled=\"inputValue.trim().length === 0\">Save</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n<script>\nimport { Chrome } from \"vue-color\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\nexport default {\n  name: \"colorConfigDialog\",\n  props: [\"onFinised\"],\n  components: {\n    \"chrome-picker\": Chrome\n  },\n  data() {\n    return {\n      showDialog: true,\n      title: \"\",\n      color: \"#000000\",\n      node: null,\n      inputValue: \"\"\n    };\n  },\n  methods: {\n    opened(option) {\n      this.title = `Edit ${option.title}`;\n      this.inputValue = option.title;\n      this.color = option.color;\n      this.node = option.selectedNode;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised(closeResult);\n      }\n    },\n    removed(closed) {\n      if (closed) {\n        let realNode = SpinalGraphService.getRealNode(this.node.id.get());\n\n        realNode.info.name.set(this.inputValue.trim());\n\n        if (!realNode.info.color) {\n          realNode.info.add_attr(\"color\", this.color.hex);\n        } else {\n          realNode.info.color.set(this.color.hex);\n        }\n      }\n      this.showDialog = false;\n    }\n  }\n};\n</script>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n\t<md-dialog\n\t\tclass=\"mdDialogContainer\"\n\t\t:md-active.sync=\"showDialog\"\n\t\t@md-closed=\"closeDialog(false)\"\n\t>\n\t\t<md-dialog-title class=\"dialogTitle\"\n\t\t\t>Manage {{ type }} Group</md-dialog-title\n\t\t>\n\t\t<md-dialog-content class=\"content\">\n\t\t\t<div class=\"section\">\n\t\t\t\t<link-template\n\t\t\t\t\t:title=\"'Contexts'\"\n\t\t\t\t\t:data=\"data\"\n\t\t\t\t\t:itemSelected=\"contextSelected\"\n\t\t\t\t\t@create=\"createContext\"\n\t\t\t\t\t@select=\"selectContext\"\n\t\t\t\t></link-template>\n\t\t\t</div>\n\n\t\t\t<div class=\"section\">\n\t\t\t\t<link-template\n\t\t\t\t\t:title=\"'Categories'\"\n\t\t\t\t\t:data=\"categories\"\n\t\t\t\t\t:itemSelected=\"categorySelected\"\n\t\t\t\t\t@create=\"createCategory\"\n\t\t\t\t\t@select=\"selectCategory\"\n\t\t\t\t\t:disableBtn=\"!contextSelected\"\n\t\t\t\t></link-template>\n\t\t\t</div>\n\n\t\t\t<div class=\"section\">\n\t\t\t\t<link-template\n\t\t\t\t\t:title=\"'Groups'\"\n\t\t\t\t\t:data=\"groups\"\n\t\t\t\t\t:itemSelected=\"groupSelected\"\n\t\t\t\t\t@create=\"createGroup\"\n\t\t\t\t\t@select=\"selectGroup\"\n\t\t\t\t\t:disableBtn=\"!categorySelected\"\n\t\t\t\t></link-template>\n\t\t\t</div>\n\t\t</md-dialog-content>\n\t\t<md-dialog-actions>\n\t\t\t<md-button class=\"md-primary\" @click=\"closeDialog(false)\"\n\t\t\t\t>Close</md-button\n\t\t\t>\n\t\t\t<md-button\n\t\t\t\tclass=\"md-primary\"\n\t\t\t\t:disabled=\"disabled()\"\n\t\t\t\t@click=\"closeDialog(true)\"\n\t\t\t\t>Save</md-button\n\t\t\t>\n\t\t</md-dialog-actions>\n\t</md-dialog>\n</template>\n\n<script>\n\timport attributeService from \"spinal-env-viewer-plugin-attribute-manager/src/services/index\";\n\n\timport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\n\timport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\timport LinkToGroupTemplate from \"./linkToGroupTemplate.vue\";\n\n\texport default {\n\t\tname: \"dialogComponent\",\n\t\tcomponents: {\n\t\t\t\"link-template\": LinkToGroupTemplate,\n\t\t},\n\t\tprops: [\"onFinised\"],\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tshowDialog: true,\n\t\t\t\tdata: [],\n\t\t\t\tgroups: [],\n\t\t\t\tcategories: [],\n\t\t\t\tcontextSelected: undefined,\n\t\t\t\tcategorySelected: undefined,\n\t\t\t\tgroupSelected: undefined,\n\t\t\t\titems: [],\n\t\t\t\ttype: undefined,\n\t\t\t\tcallback: undefined,\n\t\t\t};\n\t\t},\n\n\t\tmounted() {\n\t\t\t// EventBus.$on(\"itemCreated\", (id) => {\n\t\t\t//    console.log(\"hello world\", id);\n\t\t\t//    this.getAllData();\n\t\t\t// });\n\t\t},\n\n\t\tmethods: {\n\t\t\topened(option) {\n\t\t\t\tthis.items = option.itemSelected;\n\t\t\t\tthis.type = option.type;\n\t\t\t\tthis.callback = option.callback;\n\n\t\t\t\tthis.getAllData();\n\t\t\t},\n\n\t\t\tremoved(option) {\n\t\t\t\tif (option) {\n\t\t\t\t\tthis.items.forEach((el) => {\n\t\t\t\t\t\tattributeService.linkItem(\n\t\t\t\t\t\t\tthis.contextSelected,\n\t\t\t\t\t\t\tthis.groupSelected,\n\t\t\t\t\t\t\tel.id\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (typeof this.callback !== \"undefined\") {\n\t\t\t\t\t\tconst context = this.data.find(\n\t\t\t\t\t\t\t(el) => el.id === this.contextSelected\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst category = this.categories.find(\n\t\t\t\t\t\t\t(el) => el.id === this.categorySelected\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst group = this.groups.find(\n\t\t\t\t\t\t\t(el) => el.id === this.groupSelected\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.callback(context, category, group);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.showDialog = false;\n\t\t\t},\n\n\t\t\tcloseDialog(closeResult) {\n\t\t\t\tif (typeof this.onFinised === \"function\") {\n\t\t\t\t\tthis.onFinised(closeResult);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tgetAllData() {\n\t\t\t\tattributeService.getAllGroupContext(this.type).then((res) => {\n\t\t\t\t\tthis.data = res;\n\t\t\t\t\tthis.updateCategory();\n\t\t\t\t\tthis.updateGroups();\n\t\t\t\t});\n\t\t\t},\n\t\t\t// getCategories() {\n\t\t\t//   this.categorySelected = undefined;\n\n\t\t\t//   if (this.contextSelected) {\n\t\t\t//     let val = this.data.find(el => el.id === this.contextSelected);\n\t\t\t//     if (val) return val.category;\n\t\t\t//   }\n\t\t\t//   return [];\n\t\t\t// },\n\t\t\tgetGroups() {\n\t\t\t\tthis.groupSelected = undefined;\n\n\t\t\t\tif (this.contextSelected && this.categorySelected) {\n\t\t\t\t\tlet context = this.data.find(\n\t\t\t\t\t\t(el) => el.id === this.contextSelected\n\t\t\t\t\t);\n\t\t\t\t\tif (context) {\n\t\t\t\t\t\tlet category = context.category.find(\n\t\t\t\t\t\t\t(el) => el.id == this.categorySelected\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (category) return category.groups;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t},\n\n\t\t\tdisabled() {\n\t\t\t\treturn !(\n\t\t\t\t\tthis.contextSelected &&\n\t\t\t\t\tthis.categorySelected &&\n\t\t\t\t\tthis.groupSelected\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tcreateContext() {\n\t\t\t\tspinalPanelManagerService.openPanel(\"createGroupContextDialog\", {\n\t\t\t\t\ttitle: \"Create a Grouping Context\",\n\t\t\t\t\ttypePreselected: this.type,\n\t\t\t\t\tcallback: (id) => {\n\t\t\t\t\t\tconst infoModel = SpinalGraphService.getInfo(id);\n\t\t\t\t\t\tif (infoModel) {\n\t\t\t\t\t\t\tconst info = infoModel.get();\n\t\t\t\t\t\t\tinfo.category = [];\n\n\t\t\t\t\t\t\tthis.data = [...this.data, info];\n\t\t\t\t\t\t\tthis.contextSelected = id;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tcreateCategory() {\n\t\t\t\tspinalPanelManagerService.openPanel(\"createCategoryDialog\", {\n\t\t\t\t\ttitle: \"add Category\",\n\t\t\t\t\tcontextId: this.contextSelected,\n\t\t\t\t\tselectedNode: SpinalGraphService.getInfo(this.contextSelected),\n\t\t\t\t\tcallback: (id) => {\n\t\t\t\t\t\tconst infoModel = SpinalGraphService.getInfo(id);\n\t\t\t\t\t\tif (infoModel) {\n\t\t\t\t\t\t\tconst info = infoModel.get();\n\t\t\t\t\t\t\tinfo.groups = [];\n\t\t\t\t\t\t\tthis._addToCategory(info);\n\t\t\t\t\t\t\t// this.categories = [...this.categories, info];\n\t\t\t\t\t\t\tthis.categorySelected = id;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tcreateGroup() {\n\t\t\t\tspinalPanelManagerService.openPanel(\"createGroupDialog\", {\n\t\t\t\t\ttitle: \"add Group\",\n\t\t\t\t\tcontextId: this.contextSelected,\n\t\t\t\t\tselectedNode: SpinalGraphService.getInfo(this.categorySelected),\n\t\t\t\t\tcallback: (id) => {\n\t\t\t\t\t\tconst infoModel = SpinalGraphService.getInfo(id);\n\t\t\t\t\t\tif (infoModel) {\n\t\t\t\t\t\t\tconst info = infoModel.get();\n\t\t\t\t\t\t\tthis._addToGroups(info);\n\t\t\t\t\t\t\t// this.groups = [...this.groups, info];\n\t\t\t\t\t\t\tthis.groupSelected = id;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t//////////////////////////////////////////////////////////////////\n\t\t\t// Modify\n\t\t\t//////////////////////////////////////////////////////////////////\n\n\t\t\tupdateCategory() {\n\t\t\t\t// this.categorySelected = undefined;\n\t\t\t\tthis.categories = [];\n\t\t\t\tif (this.contextSelected) {\n\t\t\t\t\tlet val = this.data.find((el) => el.id === this.contextSelected);\n\t\t\t\t\tif (val) this.categories = val.category;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdateGroups() {\n\t\t\t\t// this.groupSelected = undefined;\n\t\t\t\tthis.groups = [];\n\t\t\t\tif (this.contextSelected && this.categorySelected) {\n\t\t\t\t\tlet context = this.data.find(\n\t\t\t\t\t\t(el) => el.id === this.contextSelected\n\t\t\t\t\t);\n\t\t\t\t\tif (context) {\n\t\t\t\t\t\tlet category = context.category.find(\n\t\t\t\t\t\t\t(el) => el.id == this.categorySelected\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (category) this.groups = category.groups;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tselectContext(id) {\n\t\t\t\tif (this.contextSelected === id) {\n\t\t\t\t\tthis.contextSelected = undefined;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.contextSelected = id;\n\t\t\t},\n\n\t\t\tselectCategory(id) {\n\t\t\t\tif (this.categorySelected === id) {\n\t\t\t\t\tthis.categorySelected = undefined;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.categorySelected = id;\n\t\t\t},\n\n\t\t\tselectGroup(id) {\n\t\t\t\tif (this.groupSelected === id) {\n\t\t\t\t\tthis.groupSelected = undefined;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.groupSelected = id;\n\t\t\t},\n\n\t\t\t_addToCategory(obj) {\n\t\t\t\tif (this.contextSelected) {\n\t\t\t\t\tlet val = this.data.find((el) => el.id === this.contextSelected);\n\t\t\t\t\tif (val) val.category.push(obj);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_addToGroups(obj) {\n\t\t\t\tif (this.contextSelected && this.categorySelected) {\n\t\t\t\t\tlet context = this.data.find(\n\t\t\t\t\t\t(el) => el.id === this.contextSelected\n\t\t\t\t\t);\n\t\t\t\t\tif (context) {\n\t\t\t\t\t\tlet category = context.category.find(\n\t\t\t\t\t\t\t(el) => el.id == this.categorySelected\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (category) category.groups.push(obj);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\twatch: {\n\t\t\tcontextSelected() {\n\t\t\t\tthis.categorySelected = undefined;\n\t\t\t\tthis.groupSelected = undefined;\n\n\t\t\t\tthis.updateCategory();\n\t\t\t\tthis.updateGroups();\n\t\t\t},\n\n\t\t\tcategorySelected() {\n\t\t\t\tthis.groupSelected = undefined;\n\n\t\t\t\tthis.updateGroups();\n\t\t\t},\n\t\t},\n\t};\n</script>\n\n<style scoped>\n\t.mdDialogContainer {\n\t\twidth: 60%;\n\t\theight: 600px;\n\t}\n\n\t.mdDialogContainer .dialogTitle {\n\t\ttext-align: center;\n\t}\n\n\t.mdDialogContainer .content {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: stretch;\n\t}\n\n\t.mdDialogContainer .content .section {\n\t\twidth: 33%;\n\t\tborder: 1px solid grey;\n\t\tborder-radius: 4% 4% 0 0;\n\t\tpadding: 15px;\n\t}\n\n\t/* .mdIcon {\n  display: flex;\n  align-items: center;\n} */\n</style>\n\n<style>\n\t.mdDialogContainer .md-dialog-container {\n\t\tmax-width: 100%;\n\t\tmax-height: 100%;\n\t}\n</style>\n","import SpinalAttributeService from './classes/spinalAttributeService';\nimport SpinalConfigurationService from './classes/spinalConfigurationService';\n\nconst spinalAttributeService = new SpinalAttributeService();\nconst spinalConfigurationService = new SpinalConfigurationService()\n\nexport default spinalAttributeService;\n\nexport {\n  spinalAttributeService,\n  spinalConfigurationService\n}","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport {SpinalGraphService} from 'spinal-env-viewer-graph-service';\n\nimport {serviceDocumentation} from 'spinal-env-viewer-plugin-documentation-service';\n\nimport {BIM_OBJECT_TYPE} from 'spinal-env-viewer-plugin-forge/dist/Constants';\n\nimport {bimObjectManagerService} from 'spinal-env-viewer-bim-manager-service';\n\nimport {groupManagerService} from 'spinal-env-viewer-plugin-group-manager-service';\n\n// import {\n//   groupService\n// } from \"spinal-env-viewer-room-manager/services/service.js\";\n\nexport default class SpinalAttributeService {\n  constructor() {}\n\n  getAllAttributes(nodeId, liste) {\n    let realNode = SpinalGraphService.getRealNode(nodeId);\n\n    if (realNode) {\n      // return serviceDocumentation.getAllAttributes(realNode).then(\n      //   argAttributes => {\n      //     return argAttributes.map(el => {\n      //       let info = el.get();\n      //       if (liste && liste.indexOf(info.label) === -1) liste.push(info\n      //         .label);\n      //       return info;\n      //     })\n      //   });\n\n      return serviceDocumentation.getCategory(realNode).then((res) => {\n        return res\n          .map((el) => {\n            let attrs = el.element.get();\n            return attrs.map((attr) => {\n              if (liste && liste.indexOf(attr.label) === -1)\n                liste.push(attr.label);\n              attr['category'] = el.nameCat;\n              return attr;\n            });\n          })\n          .flat();\n      });\n    } else {\n      return Promise.resolve([]);\n    }\n  }\n\n  async getAllData(contextId, nodeId) {\n    let context = SpinalGraphService.getRealNode(contextId);\n    let realNode = SpinalGraphService.getRealNode(nodeId);\n    let res = {\n      types: [],\n      attributes: [],\n      data: {},\n    };\n\n    if (context && realNode) {\n      await realNode.findInContext(context, async (node) => {\n        SpinalGraphService._addNode(node);\n        let type = node.getType().get();\n        let info = node.info.get();\n\n        if (res.types.indexOf(type) === -1) {\n          res.types.push(type);\n        }\n\n        if (typeof res.data[type] === 'undefined') res.data[type] = [];\n\n        info['attributes'] = await this.getAllAttributes(\n          info.id,\n          res.attributes\n        );\n\n        res.data[type].push(info);\n      });\n    }\n\n    return res;\n  }\n\n  getBimObjectAttribute(bimObjectInfo, attributeName) {\n    let value = attributeName.toLowerCase();\n\n    let model =\n      window.spinal.BimObjectService.getModelByBimfile(\n        bimObjectInfo.bimFileId\n      ) || window.NOP_VIEWER.model;\n\n    const dbId = bimObjectInfo.dbid || bimObjectInfo.dbId;\n\n    if (model) {\n      return bimObjectManagerService\n        .getBimObjectProperties({\n          model: model,\n          selection: [dbId],\n        })\n        .then((res) => {\n          let properties = res[0].properties[0].properties;\n\n          let found = properties.find((el) => {\n            let attrName = el.attributeName.toLowerCase();\n            let displayName = el.displayName.toLowerCase();\n\n            return attrName === value || displayName === value;\n          });\n\n          if (found) {\n            return found.displayValue;\n          } else {\n            return '-';\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    } else {\n      return '-';\n    }\n  }\n\n  async createAttribute(nodeId, categoryName, attributeName) {\n    let realNode = SpinalGraphService.getRealNode(nodeId);\n\n    let category;\n\n    category = await serviceDocumentation.getCategoryByName(\n      realNode,\n      categoryName\n    );\n\n    if (typeof category === 'undefined') {\n      category = await serviceDocumentation.addCategoryAttribute(\n        realNode,\n        categoryName\n      );\n    }\n\n    let attr = {\n      label: attributeName,\n      value: '-',\n    };\n    if (realNode.getType().get() === BIM_OBJECT_TYPE) {\n      attr.value = await this.getBimObjectAttribute(\n        realNode.info.get(),\n        attributeName\n      );\n    }\n\n    await serviceDocumentation.addAttributeByCategory(\n      realNode,\n      category,\n      attr.label,\n      attr.value\n    );\n  }\n\n  async updateAttributeValue(\n    nodeId,\n    categoryName,\n    attributeName,\n    attributeValue\n  ) {\n    let attr = await this.getOrCreateAttribute(\n      nodeId,\n      categoryName,\n      attributeName\n    );\n\n    if (attr && attr.value) {\n      attr.value.set(attributeValue);\n    }\n  }\n\n  getBimObjects(nodeId) {\n    // console.log(SpinalGraphService.getInfo(nodeId));\n    // return SpinalGraphService.findNodes(nodeId,)\n  }\n\n  async getOrCreateAttribute(nodeId, categoryName, attributeName) {\n    let realNode = SpinalGraphService.getRealNode(nodeId);\n    if (realNode) {\n      let category = await serviceDocumentation.getCategoryByName(\n        realNode,\n        categoryName\n      );\n\n      if (typeof category === 'undefined') {\n        category = await serviceDocumentation.addCategoryAttribute(\n          realNode,\n          categoryName\n        );\n      }\n\n      let attributes = await serviceDocumentation.getAttributesByCategory(\n        realNode,\n        categoryName\n      );\n\n      let attr = attributes.find((el) => {\n        return el.label.get() === attributeName;\n      });\n\n      if (attr) return attr;\n\n      await serviceDocumentation.addAttributeByCategory(\n        realNode,\n        category,\n        attributeName,\n        '-'\n      );\n\n      attributes = await serviceDocumentation.getAttributesByCategory(\n        realNode,\n        categoryName\n      );\n\n      return attributes.find((el) => {\n        return el.label.get() === attributeName;\n      });\n    }\n  }\n\n  getAllGroupContext(type) {\n    // return Promise.all([SpinalGraphService.getContextWithType(\n    //     groupService.constants.ROOMS_GROUP_CONTEXT),\n    //   SpinalGraphService.getContextWithType(\n    //     groupService.constants.EQUIPMENTS_GROUP_CONTEXT),\n    //   SpinalGraphService.getContextWithType(\n    //     groupService.constants.ENDPOINTS_GROUP_CONTEXT)\n    // ]).then(values => {\n    //   let contexts = values.flat();\n\n    //   let promises = contexts.map(async context => {\n    //     let res = context.info.get();\n    //     res[\"category\"] = await this.getCategory(res.id, res\n    //       .type);\n    //     return res;\n    //   })\n\n    //   return Promise.all(promises);\n\n    // })\n\n    // console.log(\"service type\", type);\n\n    return groupManagerService.getGroupContexts(type).then((contexts) => {\n      const promises = contexts.map(async (context) => {\n        context['category'] = await this.getCategory(context.id);\n        return context;\n      });\n\n      return Promise.all(promises);\n    });\n  }\n\n  async getCategory(contextId) {\n    // let relationName = groupService.constants\n    //   .CONTEXT_TO_CATEGORY_RELATION;\n\n    // return SpinalGraphService.getChildren(contextId, [relationName]).then(\n    //   children => {\n    //     let promises = children.map(async child => {\n    //       let info = child.get();\n    //       info[\"groups\"] = await this.getGroup(child.id, child\n    //         .type);\n    //       return info;\n    //     })\n\n    //     return Promise.all(promises);\n\n    //   })\n\n    const categories = await groupManagerService.getCategories(contextId);\n\n    const promises = categories.map(async (category) => {\n      let info = category.get();\n      info['groups'] = await this.getGroup(category.id);\n      return info;\n    });\n\n    return Promise.all(promises);\n  }\n\n  async getGroup(categoryId) {\n    // let relationName = groupService.constants.CATEGORY_TO_GROUP_RELATION;\n\n    // return SpinalGraphService.getChildren(categoryId, [relationName])\n    //   .then(\n    //     children => {\n    //       return children.map(el => el.get());\n    //     })\n\n    const groups = await groupManagerService.getGroups(categoryId);\n\n    return groups.map((el) => el.get());\n  }\n\n  linkItem(contextId, parentId, itemId) {\n    // groupService.linkElementToGroup(parentId, itemId, contextId)\n    return groupManagerService.linkElementToGroup(contextId, parentId, itemId);\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bimService_1 = require(\"./bimObjects/bimService\");\nexports.bimObjectManagerService = bimService_1.default;\n//# sourceMappingURL=index.js.map",null,"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BimObjectManagerService {\n    constructor() { }\n    getAllBimObjectsProperties(model) {\n        return this.getBimObjectProperties([\n            {\n                model: model,\n                selection: this.getLeafDbIds(model).selection\n            }\n        ]);\n    }\n    getBimObjectProperties(argBimObjects) {\n        // let properties = [];\n        let bimOjects = Array.isArray(argBimObjects)\n            ? argBimObjects\n            : [argBimObjects];\n        let promises = bimOjects.map(el => {\n            return this._getProperties(el.model, el.selection);\n        });\n        return Promise.all(promises).then(res => {\n            return res;\n        });\n    }\n    getLeafDbIds(model, rootId) {\n        const tree = model.getInstanceTree();\n        const dbIds = [];\n        if (typeof rootId === \"undefined\") {\n            rootId = [tree.nodeAccess.rootId];\n        }\n        else {\n            rootId = Array.isArray(rootId) ? rootId : [rootId];\n        }\n        rootId.forEach(el => {\n            const queue = [el];\n            let hasChildren;\n            while (queue.length) {\n                let id = queue.pop();\n                hasChildren = false;\n                tree.enumNodeChildren(id, childId => {\n                    hasChildren = true;\n                    queue.push(childId);\n                });\n                if (!hasChildren) {\n                    dbIds.push(id);\n                }\n            }\n        });\n        return { model: model, selection: dbIds };\n    }\n    getBimObjectsByPropertiesName(model, properties) {\n        return this.getAllBimObjectsProperties(model).then(res => {\n            let result = [];\n            for (let i = 0; i < res.length; i++) {\n                const element = res[i];\n                for (let j = 0; j < element.properties.length; j++) {\n                    const property = element.properties[j];\n                    if (typeof this._getLabel(property, properties) !== \"undefined\") {\n                        result.push(property);\n                    }\n                    // }\n                }\n                return result;\n            }\n        });\n    }\n    getBimObjectsValidated(referential, regEx) {\n        return this.getBimObjectProperties(referential).then(res => {\n            return res.map(element => {\n                return {\n                    model: element.model,\n                    properties: element.properties.filter(el => {\n                        return this._isValid(el, regEx);\n                    })\n                };\n            });\n        });\n    }\n    getBimObjectsByName(model, bimObjectName, labelName) {\n        return new Promise(resolve => {\n            model.search(bimObjectName.trim(), (res) => __awaiter(this, void 0, void 0, function* () {\n                let properties = yield this.getBimObjectProperties([\n                    { model: model, selection: res }\n                ]);\n                resolve(properties);\n            }), () => {\n                resolve([]);\n            }, labelName);\n        });\n    }\n    ////////////////////////////////////////////////////////////////////////\n    //                             PRIVATES                               //\n    ////////////////////////////////////////////////////////////////////////\n    _getProperties(model, selection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let properties = selection.map(el => {\n                return new Promise(resolve => {\n                    model.getProperties(el, res => {\n                        // properties.push(res);\n                        resolve(res);\n                    }, err => {\n                        resolve(undefined);\n                    });\n                });\n            });\n            return {\n                model: model,\n                properties: yield Promise.all(properties)\n            };\n        });\n    }\n    _getAllDbIds(model) {\n        var instanceTree = model.getData().instanceTree;\n        var allDbIdsStr = Object.keys(instanceTree.nodeAccess.dbIdToIndex);\n        return allDbIdsStr.map(function (id) {\n            return parseInt(id);\n        });\n    }\n    _getLabel(bim, properties) {\n        for (let i = 0; i < properties.length; i++) {\n            const propertieValue = properties[i].value;\n            const propertyName = properties[i].name;\n            const found = bim.properties.find(el => {\n                return typeof propertieValue === \"undefined\" ||\n                    propertieValue.length === 0\n                    ? el.displayName.toLowerCase() ===\n                        propertyName.trim().toLocaleLowerCase()\n                    : el.displayName.toLowerCase() ===\n                        propertyName.trim().toLocaleLowerCase() &&\n                        propertieValue == el.displayValue;\n            });\n            if (typeof found === \"undefined\") {\n                return undefined;\n            }\n        }\n        return true;\n    }\n    _isValid(el, regEx) {\n        for (let i = 0; i < regEx.length; i++) {\n            let nameRegex = regEx[i].nameRegex;\n            let valueRegex = regEx[i].valueRegex;\n            let found = el.properties.find(res => {\n                if (typeof valueRegex === \"undefined\") {\n                    return nameRegex.test(res.displayName);\n                }\n                return (nameRegex.test(res.displayName) && valueRegex.test(res.displayValue));\n            });\n            if (typeof found === \"undefined\") {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.default = new BimObjectManagerService();\n//# sourceMappingURL=bimService.js.map",null,"import {\n  groupManagerService\n} from \"spinal-env-viewer-plugin-group-manager-service\";\n\n\nimport {\n  SpinalGraphService\n} from \"spinal-env-viewer-graph-service\";\n\nexport default class SpinalConfigurationService {\n  constructor() {\n    this.CONTEXT_NAME = \"NomenclatureConfiguration\";\n    this.CONFIGURATION_PROFIL_TYPE = \"AttributeConfiguration\";\n    this.ATTRIBUTE_TYPE = \"configurationAttribute\";\n  }\n\n  async createOrGetContext() {\n    const context = await groupManagerService.createGroupContext(\n      this.CONTEXT_NAME,\n      this.CONFIGURATION_PROFIL_TYPE\n    );\n\n    return context;\n  }\n\n  async createCategory(categoryName, iconName) {\n    const context = await this.createOrGetContext();\n    const contextId = context ? context.info.id.get() : undefined;\n\n    return groupManagerService.addCategory(contextId, categoryName, iconName);\n  }\n\n  async createGroup(categoryId, groupName, groupColor) {\n    const context = await this.createOrGetContext();\n    const contextId = context ? context.info.id.get() : undefined;\n\n    return groupManagerService.addGroup(\n      contextId,\n      categoryId,\n      groupName,\n      groupColor\n    );\n  }\n\n  async createConfiguration(\n    groupId,\n    configurationName,\n    configurationCategories = []\n  ) {\n    const context = await this.createOrGetContext();\n    const contextId = context ? context.info.id.get() : undefined;\n\n    const configurationNodeId = SpinalGraphService.createNode({\n        name: configurationName,\n        type: this.CONFIGURATION_PROFIL_TYPE,\n      },\n      new Model({\n        name: configurationName,\n        categories: configurationCategories,\n      })\n    );\n\n    await groupManagerService.linkElementToGroup(\n      contextId,\n      groupId,\n      configurationNodeId\n    );\n\n    return SpinalGraphService.getRealNode(configurationNodeId);\n  }\n\n  setAsCurrentConfiguration(nodeId) {\n    this.createOrGetContext().then((context) => {\n      let realNode = SpinalGraphService.getRealNode(nodeId);\n\n      if (realNode) {\n        if (context.info.currentConfiguration) {\n          context.info.rem_attr(\"currentConfiguration\");\n        }\n\n        context.info.add_attr({\n          currentConfiguration: new Ptr(realNode),\n        });\n      }\n    });\n  }\n\n  async deleteCurrentConf() {\n    const context = await this.createOrGetContext();\n    if (context && context.info.currentConfiguration)\n      context.info.rem_attr(\"currentConfiguration\");\n  }\n\n  getCurrentConfiguration() {\n    return this.createOrGetContext().then((context) => {\n      let confPtr = context.info.currentConfiguration;\n\n      if (typeof confPtr !== \"undefined\") {\n        return new Promise((resolve) => {\n          confPtr.load((realNode) => {\n            SpinalGraphService._addNode(realNode);\n            return realNode.getElement().then((el) => {\n              let element = el.get();\n              element[\"id\"] = realNode.info.id.get();\n              resolve(element);\n            });\n          });\n        });\n      }\n\n      return {\n        name: \"\",\n        categories: [],\n      };\n    });\n  }\n\n  editConfiguration(configurationId, configurationElement) {\n    let realNode = SpinalGraphService.getRealNode(configurationId);\n\n    if (realNode) {\n      realNode.getElement().then((element) => {\n        element.set(configurationElement);\n      });\n    }\n  }\n\n  async getConfigurationById(configId) {\n    const realNode = SpinalGraphService.getRealNode(configId);\n\n    if (realNode) {\n      const elementModel = await realNode.getElement();\n\n      if (elementModel) {\n        let element = elementModel.get();\n        element[\"id\"] = configId;\n        return element;\n      }\n    }\n\n  }\n\n  async getCategories() {\n    const context = await this.createOrGetContext();\n    return groupManagerService.getCategories(context.info.id.get());\n  }\n\n  getGroups(nodeId) {\n    // const context = await this.createOrGetContext();\n    return groupManagerService.getGroups(nodeId);\n  }\n\n  getConfigurations(groupId) {\n    return groupManagerService.getElementsLinkedToGroup(groupId);\n  }\n\n\n  isGroup(type) {\n    return groupManagerService.isGroup(type);\n  }\n\n  isCategory(type) {\n    return groupManagerService.isCategory(type);\n  }\n\n  async getElementGroup(id) {\n    const parents = await SpinalGraphService.getParents(id, []);\n\n    return parents[0];\n  }\n\n  async getTree(info) {\n    const obj = {\n      categoryId: undefined,\n      groupId: undefined,\n      configId: undefined\n    }\n\n    if (this.isCategory(info.type)) {\n\n      obj.categoryId = info.id;\n\n    } else if (this.isGroup(info.type)) {\n\n      const category = await groupManagerService.getGroupCategory(info.id);\n      if (category) obj.categoryId = category.id.get();\n\n      obj.groupId = info.id;\n\n    } else if (info.type === this.CONFIGURATION_PROFIL_TYPE) {\n\n      obj.configId = info.id;\n      const group = await this.getElementGroup(info.id);\n\n      if (group) {\n        obj.groupId = group.id.get();\n        const category = await groupManagerService.getGroupCategory(group.id\n          .get());\n\n        if (category) obj.categoryId = category.id.get();\n\n      }\n\n    }\n\n    return obj;\n\n  }\n\n}","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n\n<template>\n   <div class=\"subContent\">\n      <div class=\"title\">\n         <div>{{title}}</div>\n         <div class=\"md-layout-item md-size-10 mdIcon\">\n            <md-button\n               class=\"md-icon-button\"\n               @click=\"createEvent\"\n               :disabled=\"disableBtn\"\n            >\n               <md-icon>control_point</md-icon>\n            </md-button>\n         </div>\n      </div>\n\n      <md-content class=\"container md-scrollbar\">\n         <md-list>\n            <md-list-item\n               class=\"list-item\"\n               v-for=\"(item,index) in data\"\n               :key=\"index\"\n               @click=\"selectItem(item.id)\"\n               :class=\"{'selected' : item.id === itemSelected}\"\n               v-tooltip=\"item.name\"\n            >\n\n               <span class=\"md-list-item-text\">{{item.name}}</span>\n\n            </md-list-item>\n         </md-list>\n      </md-content>\n\n   </div>\n</template>\n\n<script>\nexport default {\n   name: \"linkToGroupTemplate\",\n   props: [\"data\", \"title\", \"itemSelected\", \"disableBtn\"],\n   methods: {\n      createEvent() {\n         this.$emit(\"create\");\n      },\n      selectItem(id) {\n         this.$emit(\"select\", id);\n      },\n   },\n};\n</script>\n\n<style scoped>\n.subContent {\n   width: 100%;\n   height: 100%;\n}\n\n.subContent .title {\n   width: 100%;\n   height: 10%;\n   /* text-align: center; */\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n   padding: 0 15px 0 15px;\n   border-bottom: 1px dashed grey;\n}\n\n.subContent .container {\n   width: 100%;\n   height: 90%;\n   padding: 0px !important;\n   /* border: 1px solid red; */\n   overflow: hidden;\n   overflow-y: auto;\n}\n\n.subContent .container .list-item {\n   border-bottom: 1px solid grey;\n}\n\n.subContent .container .list-item .md-list-item-text {\n   width: 100%;\n   display: block;\n   overflow: hidden;\n   white-space: nowrap;\n   text-overflow: ellipsis;\n}\n\n.subContent .container .list-item.selected {\n   background-color: #448aff;\n}\n</style>","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n\t<md-dialog :md-active.sync=\"showDialog\" @md-closed=\"closeDialog(false)\">\n\t\t<md-dialog-title>{{ \"Select type\".toUpperCase() }}</md-dialog-title>\n\n\t\t<md-dialog-content class=\"dialogContainer\">\n\t\t\t<div>\n\t\t\t\t<md-field>\n\t\t\t\t\t<label for=\"movie\">Select Group</label>\n\t\t\t\t\t<md-select\n\t\t\t\t\t\tv-model=\"typeSelected\"\n\t\t\t\t\t\tname=\"groupType\"\n\t\t\t\t\t\tid=\"groupType\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<md-option\n\t\t\t\t\t\t\tv-for=\"(type, index) in types\"\n\t\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t\t:value=\"type.type\"\n\t\t\t\t\t\t\t>{{ type.name }}</md-option\n\t\t\t\t\t\t>\n\t\t\t\t\t</md-select>\n\t\t\t\t</md-field>\n\t\t\t</div>\n\t\t</md-dialog-content>\n\n\t\t<md-dialog-actions>\n\t\t\t<md-button class=\"md-primary\" @click=\"closeDialog(false)\"\n\t\t\t\t>Close</md-button\n\t\t\t>\n\t\t\t<md-button\n\t\t\t\tclass=\"md-primary\"\n\t\t\t\t@click=\"closeDialog(true)\"\n\t\t\t\t:disabled=\"isDisabled()\"\n\t\t\t\t>Save</md-button\n\t\t\t>\n\t\t</md-dialog-actions>\n\t</md-dialog>\n</template>\n\n<script>\n\timport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\n\timport groupTypes from \"../../js/types\";\n\n\texport default {\n\t\tname: \"selectTypeDialog\",\n\t\tprops: [\"onFinised\"],\n\t\tdata() {\n\t\t\tthis.types = groupTypes;\n\t\t\treturn {\n\t\t\t\tshowDialog: true,\n\t\t\t\ttypeSelected: undefined,\n\t\t\t};\n\t\t},\n\t\tmethods: {\n\t\t\topened(option) {},\n\t\t\tremoved(closed) {\n\t\t\t\tif (closed) {\n\t\t\t\t\tspinalPanelManagerService.openPanel(\"linkToGroupDialog\", {\n\t\t\t\t\t\ttype: this.typeSelected,\n\t\t\t\t\t\titemSelected: [],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.showDialog = false;\n\t\t\t},\n\n\t\t\tcloseDialog(closeResult) {\n\t\t\t\tif (typeof this.onFinised === \"function\") {\n\t\t\t\t\tthis.onFinised(closeResult);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tisDisabled() {\n\t\t\t\treturn this.typeSelected ? false : true;\n\t\t\t},\n\t\t},\n\t};\n</script>\n","<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog class=\"mdDialogContainer\"\n             :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title class=\"dialogTitle\">Add bimObject(s) selected to\n      group</md-dialog-title>\n\n    <md-dialog-content class=\"content\">\n      <div v-show=\"state === states.normal\">\n        Do you really want to link {{ selections |  length}} bimObject(s) to the\n        group ?\n      </div>\n\n      <div v-show=\"state === states.loading\">\n        <md-progress-spinner md-mode=\"indeterminate\"></md-progress-spinner>\n      </div>\n\n      <div v-show=\"state === states.result\"\n           class=\"result\">\n        <div>linked with success: <span class=\"success\"> {{ linked }}</span>\n        </div>\n        <div>link failed : <span class=\"error\">{{ notLinked }}</span></div>\n      </div>\n\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 :disabled=\"cancelDisabled()\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      <md-button class=\"md-primary\"\n                 :disabled=\"yesDisabled()\"\n                 @click=\"addBimObject\">Yes</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n\n<script>\nimport { bimObjectManagerService } from \"spinal-env-viewer-bim-manager-service\";\nimport utilities from \"../../../js/utilities\";\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\n\nexport default {\n  name: \"addBimObjectToGroupDialog\",\n  props: [\"onFinised\"],\n\n  data() {\n    this.states = {\n      normal: 0,\n      loading: 1,\n      result: 2,\n    };\n    return {\n      showDialog: false,\n      selections: [],\n      state: this.states.loading,\n      contextId: null,\n      nodeId: null,\n      linked: 0,\n      notLinked: 0,\n    };\n  },\n\n  mounted() {\n    // EventBus.$on(\"itemCreated\", (id) => {\n    //    console.log(\"hello world\", id);\n    //    this.getAllData();\n    // });\n  },\n  filters: {\n    length(items) {\n      return items.reduce((count, { selection }) => {\n        count += selection.length;\n        return count;\n      }, 0);\n    },\n  },\n\n  methods: {\n    async opened({ contextId, nodeId }) {\n      this.contextId = contextId;\n      this.nodeId = nodeId;\n\n      const selections = this.getObjectSelected();\n      if (!selections) return alert(\"No BimObject selected\");\n\n      this.state = this.states.loading;\n      this.showDialog = true;\n\n      this.selections = await this.getLeaftSelections(selections);\n      this.state = this.states.normal;\n    },\n\n    async removed(option) {\n      this.showDialog = false;\n    },\n\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised(closeResult);\n      }\n    },\n\n    cancelDisabled() {\n      return this.state === this.states.loading;\n    },\n\n    yesDisabled() {\n      return this.state !== this.states.normal;\n    },\n\n    getObjectSelected() {\n      let selections = window.spinal.ForgeViewer.viewer.getAggregateSelection();\n      if (selections.length === 0) return;\n\n      return selections;\n    },\n\n    getLeaftSelections(selections) {\n      const promises = selections.map((el) => {\n        return bimObjectManagerService.getLeafDbIds(el.model, el.selection);\n      });\n\n      return Promise.all(promises);\n    },\n\n    async addBimObject() {\n      try {\n        this.state = this.states.loading;\n\n        const arr = this.convertSelectionsToFuncList(\n          this.contextId,\n          this.nodeId,\n          this.selections\n        );\n        const { successed, failed } = await utilities.consumeBatch(arr);\n\n        this.linked = successed.length;\n        this.notLinked = failed.length;\n\n        this.state = this.states.result;\n      } catch (error) {\n        console.error(error);\n        throw error;\n      }\n\n      //   Promise.all(selections).then((selected) => {\n      //     for (let idx = 0; idx < selected.length; idx++) {\n      //       const { model, selection } = selected[idx];\n\n      //       model.getBulkProperties(\n      //         selection,\n      //         {\n      //           propFilter: [\"name\"],\n      //         },\n      //         (el) => {\n      //           el.forEach((element) => {\n      //             window.spinal.BimObjectService.createBIMObject(\n      //               element.dbId,\n      //               element.name,\n      //               model\n      //             ).then(() => {\n      //               window.spinal.BimObjectService.getBIMObject(\n      //                 element.dbId,\n      //                 model\n      //               ).then((bimObject) => {\n      //                 if (bimObject) {\n      //                   const bimId = bimObject.id\n      //                     ? bimObject.id.get()\n      //                     : bimObject.info.id.get();\n\n      //                   groupManagerService.linkElementToGroup(\n      //                     contextId,\n      //                     groupId,\n      //                     bimId\n      //                   );\n      //                 }\n      //               });\n      //             });\n      //           });\n      //         }\n      //       );\n      //     }\n      //   });\n    },\n\n    async getBimObjectNode(model, dbId) {\n      try {\n        const name = await this.getObjectName(model, dbId);\n        return spinal.BimObjectService.createBIMObject(dbId, name, model);\n      } catch (error) {\n        console.error(\"error\", model.id, dbId);\n        throw error;\n      }\n    },\n\n    async addNodeToGroup(contextId, groupId, model, dbId) {\n      const node = await this.getBimObjectNode(model, dbId);\n\n      return groupManagerService.linkElementToGroup(\n        contextId,\n        groupId,\n        node.id.get()\n      );\n    },\n\n    getObjectName(model, dbId) {\n      return new Promise((resolve, reject) => {\n        model.getBulkProperties([dbId], { propFilter: [\"name\"] }, (el) => {\n          resolve(el[0].name);\n        });\n      });\n    },\n\n    convertSelectionsToFuncList(contextId, groupId, liste) {\n      return liste.reduce((arr, { model, selection }) => {\n        for (const id of selection) {\n          arr.push(() => this.addNodeToGroup(contextId, groupId, model, id));\n        }\n        return arr;\n      }, []);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.mdDialogContainer {\n  width: 400px;\n  height: 300px;\n}\n\n.mdDialogContainer .dialogTitle {\n  text-align: center;\n}\n\n.mdDialogContainer .content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.mdDialogContainer .content .result {\n  font-size: 1.4em !important;\n  height: 80px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.mdDialogContainer .content .result .success {\n  color: green;\n}\n\n.mdDialogContainer .content .result .error {\n  color: red;\n}\n\n.mdDialogContainer .content .section {\n  width: 33%;\n  border: 1px solid grey;\n  border-radius: 4% 4% 0 0;\n  padding: 15px;\n}\n\n/* .mdIcon {\n  display: flex;\n  align-items: center;\n} */\n</style>\n\n","import vue from \"vue\";\n\nconst { SpinalForgeExtention } = require(\"spinal-env-viewer-panel-manager-service_spinalforgeextention\");\n\nimport linkRoomPanel from \"./linkerDialog.vue\";\nimport GlobalLinkerPanel from \"./globalLinkerPanel.vue\";\n\n\n\nlet panels = [\n   {\n      name: \"linkRoomPanel\",\n      vueMountComponent: vue.extend(linkRoomPanel),\n      panel: {\n      title: \"Link Rooms Panel\",\n      closeBehaviour: \"hide\",\n      },\n      style: {\n      height: \"475px\",\n      left: \"400px\",\n      },\n   },\n   {\n      name: \"globalLinkRoomPanel\",\n      vueMountComponent: vue.extend(GlobalLinkerPanel),\n      panel: {\n      title: \"Link\",\n      closeBehaviour: \"hide\",\n      },\n      style: {\n      height: \"475px\",\n      left: \"400px\",\n      },\n   },\n];\n\nfor (let index = 0; index < panels.length; index++) {\n const element = panels[index];\n const panelExtension = SpinalForgeExtention.createExtention(element);\n SpinalForgeExtention.registerExtention(element.name, panelExtension);\n}","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst {\n  spinalPanelManagerService,\n  SpinalPanelApp\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst SpinalForgeExtention = require(\"./SpinalForgeExtention.js\")(\n  spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  SpinalForgeExtention\n};\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (typeof option.toolbar !== \"undefined\") {\n    cfg.toolbar = {\n      icon: option.toolbar.icon || \"done\",\n      label: option.toolbar.label || \"label\",\n      subToolbarName: option.toolbar.subToolbarName || \"spinalcom\",\n      styleBtn: {},\n      styleIcon: {}\n    };\n    Object.assign(cfg.toolbar.styleBtn, option.toolbar.styleBtn);\n    Object.assign(cfg.toolbar.styleIcon, option.toolbar.styleIcon);\n  }\n  if (typeof option.panel !== \"undefined\") {\n    cfg.panel = {\n      title: option.panel.title || \"Spinalcom Panel\",\n      classname: option.panel.classname || \"spinal-pannel\",\n      closeBehaviour: option.panel.closeBehaviour || \"hide\"\n    };\n    if (typeof option.style !== \"undefined\") {\n      cfg.style = {};\n      Object.assign(cfg.style, option.style);\n    }\n  }\n  cfg.name = option.name || \"spinalExtention\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.onLoad = option.onLoad;\n  cfg.onUnLoad = option.onUnLoad;\n  return cfg;\n}\n\nfunction onToolbarCreated() {\n  this.viewer.removeEventListener(\n    window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n    this.onToolbarCreatedBinded\n  );\n  this.onToolbarCreatedBinded = null;\n  createToolbar.call(this);\n}\n\nfunction createToolbar() {\n  this.toolbarButton = new window.Autodesk.Viewing.UI.Button(\n    this.cfg.toolbar.label\n  );\n  this.toolbarButton.onClick = () => {\n    this.tooglePanel(this.cfg);\n  };\n  var icon = this.toolbarButton.container.firstChild;\n  icon.className = \"adsk-button-icon md-icon md-icon-font md-theme-default\";\n  icon.innerHTML = this.cfg.toolbar.icon;\n\n  for (var key in this.cfg.toolbar.styleIcon) {\n    if (this.cfg.toolbar.styleIcon.hasOwnProperty(key)) {\n      icon.style[key] = this.cfg.toolbar.styleIcon[key];\n    }\n  }\n  for (var key in this.cfg.toolbar.styleBtn) {\n    if (this.cfg.toolbar.styleBtn.hasOwnProperty(key)) {\n      this.toolbarButton.container.style[key] = this.cfg.toolbar.styleBtn[key];\n    }\n  }\n\n  this.toolbarButton.setToolTip(this.cfg.toolbar.label);\n  this.subToolbar = this.viewer.toolbar.getControl(\n    this.cfg.toolbar.subToolbarName\n  );\n  if (!this.subToolbar) {\n    this.subToolbar = new window.Autodesk.Viewing.UI.ControlGroup(\n      this.cfg.toolbar.subToolbarName\n    );\n    this.viewer.toolbar.addControl(this.subToolbar);\n  }\n  this.subToolbar.addControl(this.toolbarButton);\n}\n\nfunction closeComponent() {\n  if (this.cfg.panel.closeBehaviour !== \"hide\") {\n    try {\n      this.component.removed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n    this.panel.container.remove();\n    this.panel = null;\n  } else {\n    try {\n      this.component.closed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction getPanel() {\n  if (this.panel === null) {\n    this.panel = new window.PanelClass(this.viewer, this.cfg.panel.title);\n    var _container = document.createElement(\"div\");\n    var _scrollContainer = this.panel.createScrollContainer();\n\n    _container.className +=\n      this.panel.container.id + \"-panelcontainer \" + this.cfg.panel.classname;\n    for (var key in this.cfg.style) {\n      if (this.cfg.style.hasOwnProperty(key)) {\n        this.panel.container.style[key] = this.cfg.style[key];\n      }\n    }\n\n    if (this.panel.container.style.left) {\n      this.panel.container.style.left = \"0\";\n    }\n\n    this.panel.container.appendChild(_scrollContainer);\n    _scrollContainer.style.height = \"calc(100% - 52px)\";\n    _scrollContainer.appendChild(_container);\n\n    var _footer = this.panel.createFooter();\n    this.panel.container.appendChild(_footer);\n\n    if (this.cfg.vueMountComponent) {\n      this.component = new this.cfg.vueMountComponent().$mount(_container);\n    }\n\n    const _this = this;\n    this.panel.addVisibilityListener(open => {\n      if (!open) {\n        closeComponent.call(_this);\n      }\n    });\n  }\n  return this.panel;\n}\n\n/**\n *\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { createExtention, registerExtention }\n */\nmodule.exports = function (spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n     * factory function to create a dynamic class that extends the `SpinalPanelApp` class\n     *```js\n{\n  name: \"extention_name\",\n  vueMountComponent: Vue.extend(aVueCompoment),\n  onLoad: () => {console.log(\"onLoad\");},\n  onUnLoad: () => {console.log(\"onUnLoad\");},\n  toolbar: {\n    icon: \"done\",\n    label: \"testLabel\",\n    subToolbarName: \"spinalcom\"\n  },\n  panel: {\n    title: \"Spinalcom Panel\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"hide\"\n  },\n  style: {}\n}\n```\n     * @param {object} option see description\n     * @returns SpinalForgeExtention\n     */\n    createExtention(option) {\n      const cfg = configInit(option);\n      /**\n       * class returned by createExtention\n       * this extention is also registered in autodesk viweer\n       * @extends SpinalPanelApp\n       * @property {AutodeskViewer} viewer the autodesk view\n       * @property {AutodeskPanel} panel the panel\n       * @property {Vue.component} component the component mounted\n       * @property {Object} cfg the option given on creation\n       */\n      const SpinalForgeExtention = class extends SpinalPanelApp {\n        constructor(viewer, options) {\n          super();\n          window.Autodesk.Viewing.Extension.call(this, viewer, options);\n          this.viewer = viewer;\n          this.panel = null;\n          this.cfg = cfg;\n          spinalPanelManagerService.registerPanel(cfg.name, this);\n        }\n        /**\n         * method called on load of the extention (managed by the autodesk viewer)\n         * the method create a button in the toolbar if put in the option of `createExtention`.\n         */\n        load() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            // add toolbar\n            if (this.viewer.toolbar) {\n              createToolbar.call(this);\n            } else {\n              this.onToolbarCreatedBinded = onToolbarCreated.bind(this);\n              this.viewer.addEventListener(\n                window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n                this.onToolbarCreatedBinded\n              );\n            }\n          }\n          if (typeof cfg.onLoad !== \"undefined\") cfg.onLoad.call(this);\n          return true;\n        }\n        /**\n         * method called when the viewer unload of the extention\n         * (managed by the autodesk viewer)\n         */\n        unload() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            this.viewer.subToolbar.removeControl(this.toolbarButton);\n          }\n          if (typeof cfg.onUnLoad !== \"undefined\") cfg.onUnLoad.call(this);\n          return true;\n        }\n\n        activate() {\n          return this.load();\n        }\n\n        deactivate() {\n          return this.unload();\n        }\n\n        /**\n         *\n         * @param {*} option\n         */\n        openPanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(true);\n          try {\n            this.component.opened.call(this.component, option, this.viewer);\n          } catch (e) {\n            console.error(e);\n          }\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        closePanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(false);\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        tooglePanel(option) {\n          if (this.panel === null || this.panel.isVisible() === false) {\n            this.openPanel.call(this, option);\n          } else { this.closePanel.call(this, option); }\n        }\n      };\n      return SpinalForgeExtention;\n    },\n\n    /**\n     * Method to register an extention to the viewer and the forge viewer\n     * @param {string} name name of the extention\n     * @param {*} classExtention an extention created by `createExtention`\n     */\n    registerExtention(name, classExtention) {\n      // register to forge\n      window.Autodesk.Viewing.theExtensionManager.registerExtension(\n        name,\n        classExtention\n      );\n      // register to viewer\n      window.spinal.ForgeExtentionManager.addExtention(name);\n    }\n  };\n};\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n\t<md-content class=\"mdContent\">\n\t\t<div class=\"header\">\n\t\t\t<div class=\"buscar-caja\" :class=\"{ isOpened: isOpened }\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"\"\n\t\t\t\t\tclass=\"buscar-txt\"\n\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t:class=\"{ isOpened: isOpened }\"\n\t\t\t\t\tv-model=\"search\"\n\t\t\t\t/>\n\t\t\t\t<a class=\"md-icon-button buscar-btn\" @click=\"openSearchBar\">\n\t\t\t\t\t<md-icon>search</md-icon>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div\n\t\t\tv-if=\"tempList.length > 0 && appState === STATES.normal\"\n\t\t\tclass=\"_container\"\n\t\t>\n\t\t\t<!-- <md-content class=\"listItem md-scrollbar\">\n        <md-list class=\"listcontent\">\n          <md-list-item class=\"listContainer\"\n                        v-for=\"(item, index) in tempList\"\n                        :key=\"index\"\n                        @mouseover=\"eventMethod('mouseover',item)\"\n                        @mouseleave=\"eventMethod('mouseleave',item)\">\n            <span class=\"md-list-item-text\">{{item.name}}</span>\n\n            <div v-if=\"elementExistInCategory(item)\"\n                 class=\"groupColor\"\n                 :style=\"{backgroundColor : item.groupColor}\"\n                 :title=\"'Linked to ' + item.groupName\"></div>\n\n            <md-button class=\"md-icon-button panel_link_button\"\n                       @click=\"linkUnlink(item)\">\n              <md-icon>{{getIcon(item)}}</md-icon>\n            </md-button>\n          </md-list-item>\n        </md-list>\n      </md-content> -->\n\n\t\t\t<md-content class=\"listItem md-scrollbar\">\n\t\t\t\t<RecycleScroller\n\t\t\t\t\t:items=\"tempList\"\n\t\t\t\t\t:item-size=\"60\"\n\t\t\t\t\tkey-field=\"id\"\n\t\t\t\t\tv-slot=\"{ item }\"\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"listContainer\"\n\t\t\t\t\t\t@mouseover=\"eventMethod('mouseover', item)\"\n\t\t\t\t\t\t@mouseleave=\"eventMethod('mouseleave', item)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"md-list-item-text\">{{ item.name }}</span>\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tv-if=\"elementExistInCategory(item)\"\n\t\t\t\t\t\t\tclass=\"groupColor\"\n\t\t\t\t\t\t\t:style=\"{ backgroundColor: item.groupColor }\"\n\t\t\t\t\t\t\t:title=\"'Linked to ' + item.groupName\"\n\t\t\t\t\t\t></div>\n\n\t\t\t\t\t\t<md-button\n\t\t\t\t\t\t\tclass=\"md-icon-button panel_link_button\"\n\t\t\t\t\t\t\t@click=\"linkUnlink(item)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<md-icon>{{ getIcon(item) }}</md-icon>\n\t\t\t\t\t\t</md-button>\n\t\t\t\t\t</div>\n\t\t\t\t</RecycleScroller>\n\t\t\t</md-content>\n\t\t</div>\n\n\t\t<div\n\t\t\tclass=\"_container empty\"\n\t\t\tv-if=\"tempList.length === 0 && appState === STATES.normal\"\n\t\t>\n\t\t\tNo Data found !\n\t\t</div>\n\n\t\t<div class=\"_container empty\" v-if=\"appState === STATES.loading\">\n\t\t\t<md-progress-spinner\n\t\t\t\tclass=\"spiner\"\n\t\t\t\tmd-mode=\"indeterminate\"\n\t\t\t></md-progress-spinner>\n\t\t</div>\n\n\t\t<div class=\"_container empty\" v-if=\"appState === STATES.error\">\n\t\t\tSorry, Something was wrong. Please retry !!\n\t\t</div>\n\t</md-content>\n</template>\n\n<script>\n\timport Vue from \"vue\";\n\timport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\n\timport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\n\n\tconst {\n\t\tspinalPanelManagerService,\n\t} = require(\"spinal-env-viewer-panel-manager-service\");\n\n\timport { RecycleScroller } from \"vue-virtual-scroller\";\n\n\tVue.component(\"RecycleScroller\", RecycleScroller);\n\n\timport EventBus from \"../../js/event\";\n\n\texport default {\n\t\tname: \"linkPanelContent\",\n\t\tcomponents: {\n\t\t\t// \"pagination-component\": paginationComponent,\n\t\t\t// \"filter-menu\": filterMenu,\n\t\t\t// \"virtual-scroller\": VueVirtualScroller,\n\t\t},\n\t\tdata() {\n\t\t\tthis.STATES = {\n\t\t\t\tnormal: 1,\n\t\t\t\tloading: 2,\n\t\t\t\terror: 3,\n\t\t\t};\n\t\t\tthis.data = [];\n\t\t\tthis.contextId;\n\t\t\tthis.groupId;\n\t\t\tthis.countPerPage = 10;\n\n\t\t\treturn {\n\t\t\t\tsearch: \"\",\n\t\t\t\tisOpened: false,\n\t\t\t\ttitle: \"Link Rooms\",\n\t\t\t\ttempList: [],\n\t\t\t\tdataLinked: [],\n\t\t\t\tcurrentPage: 1,\n\t\t\t\tappState: this.STATES.normal,\n\t\t\t\tcategorySumary: [],\n\t\t\t};\n\t\t},\n\t\tmethods: {\n\t\t\topened(option) {\n\t\t\t\tthis.appState = this.STATES.loading;\n\n\t\t\t\tthis.contextId = option.contextId;\n\t\t\t\tthis.groupId = option.nodeId;\n\n\t\t\t\t// this.title =\n\t\t\t\t//   \"Link \" +\n\t\t\t\t//   (option.type === groupService.constants.ROOMS_GROUP\n\t\t\t\t//     ? \"Rooms\"\n\t\t\t\t//     : \"BimObject\");\n\t\t\t\tthis.setTitle(this.title);\n\t\t\t\tlet refContext = SpinalGraphService.getContext(\n\t\t\t\t\toption.reference.context\n\t\t\t\t);\n\n\t\t\t\tif (typeof refContext === \"undefined\") {\n\t\t\t\t\tthis.tempList = [];\n\t\t\t\t\tthis.data = [];\n\t\t\t\t\tthis.dataLinked = [];\n\t\t\t\t\tthis.appState = this.STATES.normal;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet refContextId = refContext.info.id.get();\n\n\t\t\t\tPromise.all([\n\t\t\t\t\tthis.getData(refContextId, option.reference.relation),\n\t\t\t\t\tthis.getDataLinked(option.nodeId),\n\t\t\t\t\tthis.getOtherGroupData(option.nodeId),\n\t\t\t\t])\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tconsole.log(\"res\", res);\n\n\t\t\t\t\t\tthis.data = res[0];\n\t\t\t\t\t\tthis.tempList = res[0];\n\t\t\t\t\t\tthis.dataLinked = res[1];\n\t\t\t\t\t\tthis.categorySumary = res[2];\n\n\t\t\t\t\t\tthis.appState = this.STATES.normal;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tthis.appState = this.STATES.error;\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t});\n\t\t\t},\n\n\t\t\tgetData(parentId, relationName) {\n\t\t\t\treturn SpinalGraphService.getChildren(parentId, relationName).then(\n\t\t\t\t\t(res) => {\n\t\t\t\t\t\treturn res.map((el) => el.get());\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tgetDataLinked(id) {\n\t\t\t\t// return groupService.getElementsLinked(id).then(res => {\n\t\t\t\t//   return res.map(el => el.get());\n\t\t\t\t// });\n\n\t\t\t\treturn groupManagerService\n\t\t\t\t\t.getElementsLinkedToGroup(id)\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\treturn result.map((el) => el.get());\n\t\t\t\t\t});\n\t\t\t},\n\n\t\t\tasync getOtherGroupData(nodeId) {\n\t\t\t\tlet category = await groupManagerService.getGroupCategory(nodeId);\n\n\t\t\t\tif (category) {\n\t\t\t\t\tlet groups = await groupManagerService.getGroups(\n\t\t\t\t\t\tcategory.id.get()\n\t\t\t\t\t);\n\t\t\t\t\tlet groupFiltered = groups.filter((child) => {\n\t\t\t\t\t\treturn child.id.get() !== nodeId;\n\t\t\t\t\t});\n\n\t\t\t\t\treturn groupFiltered.map((el) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: el.id.get(),\n\t\t\t\t\t\t\tname: el.name.get(),\n\t\t\t\t\t\t\tcolor: el.color ? el.color.get() : \"#000000\",\n\t\t\t\t\t\t\tchildren: SpinalGraphService.getChildrenIds(el.id.get()),\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t},\n\n\t\t\tsetTitle(title) {\n\t\t\t\tspinalPanelManagerService.panels.linkRoomPanel.panel.setTitle(\n\t\t\t\t\ttitle\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tisLinked(item) {\n\t\t\t\treturn this.dataLinked.find((el) => {\n\t\t\t\t\treturn item.id === el.id;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tgetIcon(item) {\n\t\t\t\treturn typeof this.isLinked(item) === \"undefined\"\n\t\t\t\t\t? \"link\"\n\t\t\t\t\t: \"link_off\";\n\t\t\t},\n\n\t\t\tdeleteItem(item) {\n\t\t\t\tfor (let i = 0; i < this.dataLinked.length; i++) {\n\t\t\t\t\tconst element = this.dataLinked[i];\n\t\t\t\t\tif (element.id === item.id) {\n\t\t\t\t\t\tthis.dataLinked.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tasync linkUnlink(item) {\n\t\t\t\tif (this.isLinked(item)) {\n\t\t\t\t\tawait groupManagerService.unLinkElementToGroup(\n\t\t\t\t\t\tthis.groupId,\n\t\t\t\t\t\titem.id\n\t\t\t\t\t);\n\t\t\t\t\tthis.deleteItem(item);\n\t\t\t\t} else {\n\t\t\t\t\tconst res = await groupManagerService.linkElementToGroup(\n\t\t\t\t\t\tthis.contextId,\n\t\t\t\t\t\tthis.groupId,\n\t\t\t\t\t\titem.id\n\t\t\t\t\t);\n\n\t\t\t\t\tif (typeof res.old_group !== \"undefined\") {\n\t\t\t\t\t\tlet group = this.categorySumary.find((el) => {\n\t\t\t\t\t\t\treturn el.id === res.old_group;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (typeof group !== \"undefined\") {\n\t\t\t\t\t\t\tgroup.children = group.children.filter((el) => {\n\t\t\t\t\t\t\t\treturn el !== item.id;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dataLinked.push(item);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teventMethod(eventName, item) {\n\t\t\t\tEventBus.$emit(eventName, item);\n\t\t\t},\n\n\t\t\topenSearchBar() {\n\t\t\t\tthis.isOpened = !this.isOpened;\n\t\t\t},\n\n\t\t\telementExistInCategory(item) {\n\t\t\t\tlet id = item.id;\n\n\t\t\t\tlet parent = this.categorySumary.find((el) => {\n\t\t\t\t\treturn el.children.indexOf(id) !== -1;\n\t\t\t\t});\n\n\t\t\t\tif (typeof parent !== \"undefined\") {\n\t\t\t\t\titem[\"groupName\"] = parent.name;\n\t\t\t\t\titem[\"groupColor\"] = parent.color;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t},\n\t\t},\n\t\twatch: {\n\t\t\tsearch: function (newValue) {\n\t\t\t\tnewValue = newValue.trim();\n\t\t\t\t// console.log(\"newValue\", newValue);\n\t\t\t\tif (newValue.length === 0) {\n\t\t\t\t\tthis.tempList = this.data;\n\t\t\t\t} else {\n\t\t\t\t\tthis.tempList = this.data.filter((el) => {\n\t\t\t\t\t\treturn el.name.toLowerCase().includes(newValue.toLowerCase());\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t// computed: {\n\t\t//   isOpened: function() {\n\t\t//     return this.search.trim().length > 0;\n\t\t//   }\n\t\t// }\n\t};\n</script>\n\n<style scoped>\n\t.mdContent {\n\t\twidth: 100%;\n\t\theight: calc(100% - 15px);\n\t}\n\n\t.header {\n\t\t/* text-align: center;\n  font-size: 16px; */\n\t\twidth: 100%;\n\t\theight: 40px;\n\t\tdisplay: flex;\n\t\tflex-direction: row-reverse;\n\t\tmargin-bottom: 10px;\n\t}\n\n\t/* .header .searchDiv {\n  width: 60%;\n  height: 100%;\n  padding-top: 10px;\n} */\n\n\t._container {\n\t\twidth: 100%;\n\t\theight: calc(100% - 50px);\n\t\toverflow: hidden;\n\t}\n\n\t._container .listItem {\n\t\twidth: 98%;\n\t\theight: calc(100% - 10px);\n\t\toverflow: hidden;\n\t\toverflow-y: auto;\n\t\tmargin: auto;\n\t}\n\n\t._container .listItem .listcontent {\n\t\twidth: 95%;\n\t\tmargin: auto;\n\t}\n\n\t.empty {\n\t\t/* width: 100%;\n  height: 200px; */\n\t\twidth: 40%;\n\t\ttext-align: center;\n\t\tfont-size: 20px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\ttext-align: center;\n\t\tmargin: auto;\n\t}\n\n\t.listContainer {\n\t\twidth: 95%;\n\t\theight: 60px;\n\t\tfont-size: 1.2em;\n\t\tpadding: 0 5px 0 5px;\n\t\tborder-bottom: 1px solid white;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t}\n\n\t.listContainer:hover {\n\t\tcursor: pointer;\n\t\tbackground-color: gray;\n\t}\n\n\t.paginationContent {\n\t\twidth: 40%;\n\t\tmargin: auto;\n\t\theight: 40px;\n\t}\n\n\t.paginationContent {\n\t\twidth: 100%;\n\t\theight: 40px;\n\t}\n\n\t.groupColor {\n\t\twidth: 24px;\n\t\theight: 24px;\n\t\tborder: 1px solid white;\n\t}\n\n\t.spiner {\n\t\tposition: absolute;\n\t\ttop: calc(50% - 30px);\n\t\tright: calc(50% - 30px);\n\t}\n</style>\n\n<style>\n\t.listContainer .md-list-item-content {\n\t\tpadding-left: 5px;\n\t\t/* padding-top: 4px;\n  padding-bottom: 4px; */\n\t}\n\n\t.listContainer .panel_link_button .md-ripple {\n\t\tpadding: unset !important;\n\t}\n\n\t/*\n//////////////////////////////////////////////////////////////////\n*/\n\n\t.buscar-caja {\n\t\t/* position: absolute; */\n\t\t/* top: 50%;\n  left: 50%; */\n\t\t/* right: 0; */\n\t\t/* transform: translate(-50%, -50%); */\n\t\t/* background: #2f3640; */\n\t\theight: 35px;\n\t\tborder-radius: 40px;\n\t\tmargin-top: 5px;\n\t\t/* padding: 10px; */\n\t}\n\n\t.buscar-caja.isOpened {\n\t\tbackground: #2f3640;\n\t}\n\n\t/* .buscar-caja:hover > .buscar-txt, */\n\t.buscar-caja > .buscar-txt.isOpened {\n\t\twidth: 240px;\n\t\tpadding: 0 6px;\n\t}\n\n\t/* .buscar-caja:hover > .buscar-btn {\n  background: white;\n  color: black;\n} */\n\n\t.buscar-btn {\n\t\tcolor: #e84118;\n\t\tfloat: right;\n\t\twidth: 40px;\n\t\theight: 35px;\n\t\tborder-radius: 50%;\n\t\t/* background: #2f3640; */\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttransition: 0.4s;\n\t\tcolor: white;\n\t\tcursor: pointer;\n\t}\n\n\t.buscar-btn > i {\n\t\tfont-size: 30px;\n\t}\n\n\t.buscar-txt {\n\t\tborder: none;\n\t\tbackground: none;\n\t\toutline: none;\n\t\tfloat: left;\n\t\tpadding: 0;\n\t\tcolor: white;\n\t\tfont-size: 16px;\n\t\ttransition: 0.4s;\n\t\tline-height: 40px;\n\t\twidth: 0px;\n\t\t/* font-weight: bold; */\n\t}\n\n\t/*\n//////////////////////////////////////////////////////////\n//                VUe scroll\n//////////////////////////////////////////////////////////\n*/\n\t.vue-recycle-scroller {\n\t\tposition: relative;\n\t}\n\t.vue-recycle-scroller.direction-vertical:not(.page-mode) {\n\t\toverflow-y: auto;\n\t}\n\t.vue-recycle-scroller.direction-horizontal:not(.page-mode) {\n\t\toverflow-x: auto;\n\t}\n\t.vue-recycle-scroller.direction-horizontal {\n\t\tdisplay: -webkit-box;\n\t\tdisplay: -ms-flexbox;\n\t\tdisplay: flex;\n\t}\n\t.vue-recycle-scroller__slot {\n\t\t-webkit-box-flex: 1;\n\t\t-ms-flex: auto 0 0px;\n\t\tflex: auto 0 0;\n\t}\n\t.vue-recycle-scroller__item-wrapper {\n\t\t-webkit-box-flex: 1;\n\t\t-ms-flex: 1;\n\t\tflex: 1;\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\toverflow: hidden;\n\t\tposition: relative;\n\t}\n\t.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twill-change: transform;\n\t}\n\t.vue-recycle-scroller.direction-vertical\n\t\t.vue-recycle-scroller__item-wrapper {\n\t\twidth: 100%;\n\t}\n\t.vue-recycle-scroller.direction-horizontal\n\t\t.vue-recycle-scroller__item-wrapper {\n\t\theight: 100%;\n\t}\n\t.vue-recycle-scroller.ready.direction-vertical\n\t\t.vue-recycle-scroller__item-view {\n\t\twidth: 100%;\n\t}\n\t.vue-recycle-scroller.ready.direction-horizontal\n\t\t.vue-recycle-scroller__item-view {\n\t\theight: 100%;\n\t}\n\t.resize-observer[data-v-b329ee4c] {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: -1;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tborder: none;\n\t\tbackground-color: transparent;\n\t\tpointer-events: none;\n\t\tdisplay: block;\n\t\toverflow: hidden;\n\t\topacity: 0;\n\t}\n\t.resize-observer[data-v-b329ee4c] object {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\toverflow: hidden;\n\t\tpointer-events: none;\n\t\tz-index: -1;\n\t}\n</style>\n","<!--\nCopyright 2020 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <!-- <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\"\n             class=\"dialog\">\n    <md-dialog-title class=\"title\">Link</md-dialog-title> -->\n\n  <!-- <md-dialog-content class=\"dialogContainer\"> -->\n  <table-component @filter=\"searchOnTable\"\n                   :searched=\"searched\"\n                   :groups=\"groups\"\n                   :contextId=\"contextId\"></table-component>\n\n  <!-- </md-dialog-content> -->\n\n  <!-- <md-dialog-actions>\n    <md-button class=\"md-primary\"\n               @click=\"closeDialog(false)\">Close</md-button>\n  </md-dialog-actions>\n  </md-dialog> -->\n\n</template>\n\n<script>\nimport { groupService } from \"../../services/service\";\n\nimport tableComponent from \"../others/tableComponent.vue\";\nimport { Lst } from \"spinal-core-connectorjs_type\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport geographicService from \"spinal-env-viewer-context-geographic-service\";\nimport bimobjectservice from \"spinal-env-viewer-plugin-bimobjectservice\";\n\nexport default {\n  name: \"GlobalLinkerPanel\",\n  props: [\"onFinised\"],\n  components: {\n    \"table-component\": tableComponent\n  },\n  data() {\n    this.contextId = null;\n    return {\n      showDialog: true,\n      inputValue: \"\",\n      // search: null,\n      searched: [],\n      groups: [],\n      elements: [],\n      allData: []\n    };\n  },\n  methods: {\n    opened(option) {\n      this.getData(option.nodeId, option.contextId).then(res => {\n        if (res) {\n          // console.log(\"res\", res);\n\n          this.groups = res.groups;\n          this.elements = res.elements.slice(0, 10);\n          this.searched = res.elements.slice(0, 10);\n          // this.elements = res.elements;\n          // this.searched = res.elements;\n          this.contextId = res.contextId;\n          // console.log(\"start\");\n          // this.allData = await this.getList(this.groups, this.elements);\n          // console.log(\"end\", this.allData);\n        }\n      });\n    },\n\n    // removed() {\n    //   this.showDialog = false;\n    // },\n    // closeDialog(closeResult) {\n    //   if (typeof this.onFinised === \"function\") {\n    //     this.onFinised(closeResult);\n    //   }\n    // },\n    searchOnTable(params) {\n      this.filterByFloor(params.floorsSelected).then(res => {\n        if (params.search && params.search.trim().length > 0) {\n          this.searched = res.filter(el => {\n            return el.name.toLowerCase().includes(params.search.toLowerCase());\n          });\n        } else {\n          this.searched = res;\n        }\n      });\n    },\n\n    filterByFloor(floorsIds) {\n      if (floorsIds.length === 0) {\n        return Promise.resolve(this.elements);\n      } else {\n        let promises = [];\n        let contextType = SpinalGraphService.getInfo(this.contextId).type.get();\n\n        let type =\n          contextType === groupService.constants.ROOMS_GROUP_CONTEXT\n            ? geographicService.constants.ROOM_TYPE\n            : geographicService.constants.EQUIPMENT_TYPE;\n\n        for (let index = 0; index < floorsIds.length; index++) {\n          const id = floorsIds[index];\n          promises.push(\n            SpinalGraphService.findNodes(\n              id,\n              geographicService.constants.GEOGRAPHIC_RELATIONS,\n              node => {\n                return node.info.type.get() === type;\n              }\n            )\n          );\n        }\n\n        return Promise.all(promises).then(el => {\n          let res = [];\n          for (let found of el) {\n            let foundInfo = found.map(x => x.info);\n            res.push(...foundInfo);\n          }\n          return new Lst(res).get();\n        });\n      }\n    },\n\n    // getList(groups, elements) {\n    //   let res = elements.map(element => {\n    //     let obj = [Promise.resolve(element.name)];\n\n    //     const l = groups.map(group => {\n    //       return groupService.elementIsLinkedToGroup(group.id, element.id);\n    //     });\n\n    //     return Promise.all(obj.concat(l));\n    //   });\n    //   return Promise.all(res);\n    // },\n\n    getData(nodeId, contextId) {\n      const contextType = SpinalGraphService.getInfo(contextId).type.get();\n\n      let selectedContextRelation = [\n        groupService.constants.CATEGORY_TO_GROUP_RELATION,\n        groupService.constants\n      ];\n\n      let refContextName =\n        contextType === groupService.constants.ROOMS_GROUP_CONTEXT\n          ? geographicService.constants.ROOM_REFERENCE_CONTEXT\n          : bimobjectservice.constants.BIM_OBJECT_CONTEXT_TYPE;\n\n      let refContextRelation =\n        contextType === groupService.constants.ROOMS_GROUP_CONTEXT\n          ? geographicService.constants.ROOM_RELATION\n          : bimobjectservice.constants.BIM_OBJECT_RELATION_NAME;\n\n      let context = SpinalGraphService.getContext(refContextName);\n\n      return SpinalGraphService.findNodes(\n        nodeId,\n        selectedContextRelation,\n        node => {\n          let type = node.getType().get();\n          return (\n            type === groupService.constants.ROOMS_GROUP ||\n            type === groupService.constants.EQUIPMENTS_GROUP\n          );\n        }\n      ).then(async res => {\n        return {\n          contextId: contextId,\n          groups: res.map(el => el.info.get()),\n          elements: context\n            ? await SpinalGraphService.getChildren(context.info.id.get(), [\n                refContextRelation\n              ]).then(el => {\n                return el.map(x => x.get());\n              })\n            : []\n        };\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.dialog {\n  width: calc(80%);\n  height: 60%;\n}\n\n.dialog .title {\n  text-align: center;\n  font-size: 18px;\n}\n\n.dialog .table {\n  width: 100%;\n  height: 100%;\n}\n</style>\n","\n<template>\n  <!-- v-model=\"searched\" md-sort=\"name\"\n            md-sort-order=\"asc\"\n            md-fixed-header -->\n  <md-table class=\"table\"\n            v-model=\"searched\"\n            md-sort=\"name\"\n            md-sort-order=\"asc\"\n            md-fixed-header>\n\n    <md-table-toolbar class=\"md-layout md-gutter\">\n      <div class=\"md-layout-item md-size-50\">\n\n        <md-field>\n          <label for=\"floors\">Filter By Floor</label>\n          <md-select v-model=\"filterParams.floorsSelected\"\n                     name=\"floors\"\n                     id=\"floors\"\n                     @md-closed=\"searchOnTable\"\n                     multiple>\n            <md-option v-for=\"floor in allFloors\"\n                       :key=\"floor.id\"\n                       :value=\"floor.id\">{{floor.name}}</md-option>\n\n          </md-select>\n        </md-field>\n\n      </div>\n\n      <div class=\"md-layout-item md-size-50\">\n\n        <md-field md-clearable>\n          <md-input placeholder=\"Search by name...\"\n                    v-model=\"filterParams.search\"\n                    @input=\"searchOnTable\" />\n        </md-field>\n\n      </div>\n    </md-table-toolbar>\n\n    <md-table-empty-state md-label=\"No Items found\"></md-table-empty-state>\n\n    <md-table-row slot=\"md-table-row\"\n                  slot-scope=\"{item}\">\n      <!-- <md-table-row slot=\"md-table-row\"\n                  v-for=\"item in searched\"> -->\n      <md-table-cell md-label=\"Name\"\n                     md-sort-by=\"name\">{{item.name}}</md-table-cell>\n\n      <md-table-cell v-for=\"group in groups\"\n                     :key=\"group.id\"\n                     :md-label=\"group.name\">\n\n        <checkbox-component :groupId=\"group.id\"\n                            :elementId=\"item.id\"\n                            :contextId=\"contextId\"></checkbox-component>\n\n      </md-table-cell>\n\n    </md-table-row>\n\n  </md-table>\n</template>\n\n\n<script>\nimport checkboxComponent from \"./checkBoxComponent.vue\";\nimport geographicService from \"spinal-env-viewer-context-geographic-service\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport { Lst } from \"spinal-core-connectorjs_type\";\n\nexport default {\n  name: \"tableComponent\",\n  components: {\n    \"checkbox-component\": checkboxComponent\n  },\n  props: [\"searched\", \"groups\", \"contextId\"],\n  data() {\n    this.allFloors = [];\n    return {\n      filterParams: {\n        search: null,\n        floorsSelected: []\n      }\n    };\n  },\n  mounted() {\n    let context = SpinalGraphService.getContext(\n      geographicService.constants.FLOOR_REFERENCE_CONTEXT\n    );\n\n    if (context) {\n      SpinalGraphService.getChildren(context.info.id.get(), [\n        geographicService.constants.FLOOR_RELATION\n      ]).then(res => {\n        this.allFloors = new Lst(res).get();\n      });\n    }\n  },\n  methods: {\n    searchOnTable() {\n      this.$emit(\"filter\", this.filterParams);\n    }\n  },\n  watch: {\n    filterParams(newValue) {\n      this.$emit(\"filter\", newValue);\n    }\n  }\n};\n</script>","<template>\n  <md-checkbox v-model=\"value\"\n               class=\"md-primary\"\n               @change=\"linkElement\"></md-checkbox>\n</template>\n\n\n<script>\nimport { groupService } from \"../../services/service\";\n\nexport default {\n  name: \"checkboxComponent\",\n  props: [\"groupId\", \"elementId\", \"contextId\"],\n  data() {\n    return {\n      value: false\n    };\n  },\n  mounted() {\n    groupService\n      .elementIsLinkedToGroup(this.groupId, this.elementId)\n      .then(el => {\n        // console.log(\"isLinked\", el);\n\n        this.value = el;\n      });\n  },\n  methods: {\n    linkElement() {\n      groupService\n        .elementIsLinkedToGroup(this.groupId, this.elementId)\n        .then(el => {\n          if (!el) {\n            groupService.linkElementToGroup(\n              this.groupId,\n              this.elementId,\n              this.contextId\n            );\n          } else {\n            groupService.removeLink(this.groupId, this.elementId);\n          }\n        });\n    }\n  }\n};\n</script>","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nlet createGraph = (() => {\n  var _ref = _asyncToGenerator(function* () {\n    const forgeFile = yield window.spinal.spinalSystem.getModel();\n\n    if (!forgeFile.hasOwnProperty(\"graph\")) {\n      forgeFile.add_attr({\n        graph: new _spinalModelGraph.SpinalGraph()\n      });\n    }\n\n    return forgeFile.graph;\n  });\n\n  return function createGraph() {\n    return _ref.apply(this, arguments);\n  };\n})();\n\nlet createContext = (() => {\n  var _ref2 = _asyncToGenerator(function* () {\n    const graph = yield this.getGraph();\n    let context = yield graph.getContext(BIM_OBJECT_CONTEXT_TYPE);\n\n    if (context === undefined) {\n      context = new _spinalModelGraph.SpinalContext(BIM_OBJECT_CONTEXT_TYPE);\n      yield graph.addContext(context);\n    }\n\n    return context;\n  });\n\n  return function createContext() {\n    return _ref2.apply(this, arguments);\n  };\n})();\n\nvar _spinalModelGraph = require(\"spinal-model-graph\");\n\nvar _spinalModelsBimobject = require(\"spinal-models-bimobject\");\n\nvar _spinalModelsBimobject2 = _interopRequireDefault(_spinalModelsBimobject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst BIM_OBJECT_CONTEXT_TYPE = \"BIMObjectContext\";\nconst BIM_OBJECT_NODE_TYPE = \"BIMObject\";\nconst BIM_OBJECT_RELATION_NAME = \"hasBIMObject\";\nconst REFERENCE_OBJECT_RELATION_NAME = \"hasReferenceObject\";\nconst BIM_OBJECT_RELATION_TYPE = _spinalModelGraph.SPINAL_RELATION_PTR_LST_TYPE;\n\nconst bimObjectService = {\n  graph: null,\n  context: null,\n  getGraph() {\n    if (this.graph === null) {\n      this.graph = createGraph();\n    }\n\n    return this.graph;\n  },\n  getContext() {\n    if (this.context === null) {\n      this.context = createContext.call(this);\n    }\n\n    return this.context;\n  },\n  createBIMObject(dbid, name) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let BIMObjNode = yield _this.getBIMObject(dbid);\n\n      if (BIMObjNode === undefined) {\n        const BIMObject = new _spinalModelsBimobject2.default(dbid, name);\n\n        BIMObjNode = new _spinalModelGraph.SpinalNode(name, BIM_OBJECT_NODE_TYPE, BIMObject);\n        BIMObjNode.info.add_attr({\n          dbid: dbid\n        });\n\n        const BIMObjectContext = yield _this.getContext();\n\n        yield BIMObjectContext.addChildInContext(BIMObjNode, BIM_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE, BIMObjectContext);\n      }\n\n      return BIMObjNode;\n    })();\n  },\n  getBIMObject(dbid) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const BIMObjectContext = yield _this2.getContext(BIM_OBJECT_CONTEXT_TYPE);\n      const BIMObjectArray = yield BIMObjectContext.getChildren([BIM_OBJECT_RELATION_NAME]);\n\n      for (let BIMObject of BIMObjectArray) {\n        if (BIMObject.info.dbid.get() === dbid) {\n          return BIMObject;\n        }\n      }\n    })();\n  },\n  addBIMObject(context, parent, dbId, name) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let node;\n\n      if (dbId instanceof _spinalModelGraph.SpinalNode) {\n        node = dbId;\n      } else {\n        node = yield _this3.getBIMObject(dbId);\n\n        if (node === undefined) {\n          node = yield _this3.createBIMObject(dbId, name);\n        }\n      }\n\n      yield parent.addChildInContext(node, BIM_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE, context);\n\n      return node;\n    })();\n  },\n  removeBIMObject(parent, child) {\n    return parent.removeChild(child, BIM_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE);\n  },\n  deleteBIMObject(dbId) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const context = yield _this4.getContext();\n      const children = yield context.getChildrenInContext();\n      const child = children.find(function (node) {\n        return node.info.dbId === dbId;\n      });\n\n      if (child === undefined) {\n        throw Error(\"The dbId has no BIM object\");\n      }\n\n      return child.removeFromGraph();\n    })();\n  },\n  addReferenceObject(parent, dbId, name) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      let node;\n\n      if (dbId instanceof _spinalModelGraph.SpinalNode) {\n        node = dbId;\n      } else {\n        node = yield _this5.getBIMObject(dbId);\n\n        if (node === undefined) {\n          node = yield _this5.createBIMObject(dbId, name);\n        }\n      }\n\n      yield parent.addChild(node, REFERENCE_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE);\n\n      return node;\n    })();\n  },\n  removeReferenceObject(parent, child) {\n    return parent.removeChild(child, REFERENCE_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE);\n  }\n};\n\nbimObjectService.constants = {\n  BIM_OBJECT_CONTEXT_TYPE,\n  BIM_OBJECT_NODE_TYPE,\n  BIM_OBJECT_RELATION_NAME,\n  REFERENCE_OBJECT_RELATION_NAME,\n  BIM_OBJECT_RELATION_TYPE\n};\n\nexports.default = bimObjectService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import {\n  SpinalGraph,\n  SpinalContext,\n  SpinalNode,\n  SPINAL_RELATION_PTR_LST_TYPE\n} from \"spinal-model-graph\";\nimport SpinalBIMObject from \"spinal-models-bimobject\";\n\nconst BIM_OBJECT_CONTEXT_TYPE = \"BIMObjectContext\";\nconst BIM_OBJECT_NODE_TYPE = \"BIMObject\";\nconst BIM_OBJECT_RELATION_NAME = \"hasBIMObject\";\nconst REFERENCE_OBJECT_RELATION_NAME = \"hasReferenceObject\";\nconst BIM_OBJECT_RELATION_TYPE = SPINAL_RELATION_PTR_LST_TYPE;\n\nasync function createGraph() {\n  const forgeFile = await window.spinal.spinalSystem.getModel();\n\n  if (!forgeFile.hasOwnProperty(\"graph\")) {\n    forgeFile.add_attr({\n      graph: new SpinalGraph()\n    });\n  }\n\n  return forgeFile.graph;\n}\n\nasync function createContext() {\n  const graph = await this.getGraph();\n  let context = await graph.getContext(BIM_OBJECT_CONTEXT_TYPE);\n\n  if (context === undefined) {\n    context = new SpinalContext(BIM_OBJECT_CONTEXT_TYPE);\n    await graph.addContext(context);\n  }\n\n  return context;\n}\n\nconst bimObjectService = {\n  graph: null,\n  context: null,\n  getGraph() {\n    if (this.graph === null) {\n      this.graph = createGraph();\n    }\n\n    return this.graph;\n  },\n  getContext() {\n    if (this.context === null) {\n      this.context = createContext.call(this);\n    }\n\n    return this.context;\n  },\n  async createBIMObject(dbid, name) {\n    let BIMObjNode = await this.getBIMObject(dbid);\n\n    if (BIMObjNode === undefined) {\n      const BIMObject = new SpinalBIMObject(dbid, name);\n\n      BIMObjNode = new SpinalNode(name, BIM_OBJECT_NODE_TYPE, BIMObject);\n      BIMObjNode.info.add_attr({\n        dbid: dbid\n      });\n\n      const BIMObjectContext = await this.getContext();\n\n      await BIMObjectContext.addChildInContext(\n        BIMObjNode,\n        BIM_OBJECT_RELATION_NAME,\n        BIM_OBJECT_RELATION_TYPE,\n        BIMObjectContext\n      );\n    }\n\n    return BIMObjNode;\n  },\n  async getBIMObject(dbid) {\n    const BIMObjectContext = await this.getContext(BIM_OBJECT_CONTEXT_TYPE);\n    const BIMObjectArray = await BIMObjectContext.getChildren([\n      BIM_OBJECT_RELATION_NAME\n    ]);\n\n    for (let BIMObject of BIMObjectArray) {\n      if (BIMObject.info.dbid.get() === dbid) {\n        return BIMObject;\n      }\n    }\n  },\n  async addBIMObject(context, parent, dbId, name) {\n    let node;\n\n    if (dbId instanceof SpinalNode) {\n      node = dbId;\n    } else {\n      node = await this.getBIMObject(dbId);\n\n      if (node === undefined) {\n        node = await this.createBIMObject(dbId, name);\n      }\n    }\n\n    await parent.addChildInContext(\n      node,\n      BIM_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE,\n      context\n    );\n\n    return node;\n  },\n  removeBIMObject(parent, child) {\n    return parent.removeChild(\n      child,\n      BIM_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE\n    );\n  },\n  async deleteBIMObject(dbId) {\n    const context = await this.getContext();\n    const children = await context.getChildrenInContext();\n    const child = children.find(node => node.info.dbId === dbId);\n\n    if (child === undefined) {\n      throw Error(\"The dbId has no BIM object\");\n    }\n\n    return child.removeFromGraph();\n  },\n  async addReferenceObject(parent, dbId, name) {\n    let node;\n\n    if (dbId instanceof SpinalNode) {\n      node = dbId;\n    } else {\n      node = await this.getBIMObject(dbId);\n\n      if (node === undefined) {\n        node = await this.createBIMObject(dbId, name);\n      }\n    }\n\n    await parent.addChild(\n      node,\n      REFERENCE_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE\n    );\n\n    return node;\n  },\n  removeReferenceObject(parent, child) {\n    return parent.removeChild(\n      child,\n      REFERENCE_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE\n    );\n  }\n};\n\nbimObjectService.constants = {\n  BIM_OBJECT_CONTEXT_TYPE,\n  BIM_OBJECT_NODE_TYPE,\n  BIM_OBJECT_RELATION_NAME,\n  REFERENCE_OBJECT_RELATION_NAME,\n  BIM_OBJECT_RELATION_TYPE\n};\n\nexport default bimObjectService;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\nexports.default = SpinalBIMObject;\n\nspinalCore.register_models([SpinalBIMObject]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL0JJTU9iamVjdC5qcyJdLCJuYW1lcyI6WyJzcGluYWxDb3JlIiwicmVxdWlyZSIsImdsb2JhbFR5cGUiLCJ3aW5kb3ciLCJnbG9iYWwiLCJTcGluYWxCSU1PYmplY3QiLCJNb2RlbCIsImNvbnN0cnVjdG9yIiwiX2lkIiwiX25hbWUiLCJGaWxlU3lzdGVtIiwiX3NpZ19zZXJ2ZXIiLCJhZGRfYXR0ciIsImlkIiwibmFtZSIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxhQUFhQyxRQUFRLHlCQUFSLENBQW5CO0FBQ0EsTUFBTUMsYUFBYSxPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLEdBQWdDQyxNQUFoQyxHQUF5Q0QsTUFBNUQ7O0FBS0EsTUFBTUUsZUFBTixTQUE4QkgsV0FBV0ksS0FBekMsQ0FBK0M7QUFDN0NDLGNBQVlDLEdBQVosRUFBaUJDLEtBQWpCLEVBQXdCO0FBQ3RCO0FBQ0EsUUFBSUMsV0FBV0MsV0FBZixFQUE0QjtBQUMxQixXQUFLQyxRQUFMLENBQWM7QUFDWkMsWUFBSUwsR0FEUTtBQUVaTSxjQUFNTDtBQUZNLE9BQWQ7QUFJRDtBQUNGO0FBVDRDOztrQkFhaENKLGU7O0FBQ2ZMLFdBQVdlLGVBQVgsQ0FBMkIsQ0FBQ1YsZUFBRCxDQUEzQiIsImZpbGUiOiJCSU1PYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cblxuXG5cbmNsYXNzIFNwaW5hbEJJTU9iamVjdCBleHRlbmRzIGdsb2JhbFR5cGUuTW9kZWwge1xuICBjb25zdHJ1Y3RvcihfaWQsIF9uYW1lKSB7XG4gICAgc3VwZXIoKTtcbiAgICBpZiAoRmlsZVN5c3RlbS5fc2lnX3NlcnZlcikge1xuICAgICAgdGhpcy5hZGRfYXR0cih7XG4gICAgICAgIGlkOiBfaWQsXG4gICAgICAgIG5hbWU6IF9uYW1lXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBTcGluYWxCSU1PYmplY3Q7XG5zcGluYWxDb3JlLnJlZ2lzdGVyX21vZGVscyhbU3BpbmFsQklNT2JqZWN0XSk7Il19","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\n\n\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\n\nexport default SpinalBIMObject;\nspinalCore.register_models([SpinalBIMObject]);","import addBimObjectToGroup from \"./addBimObjectToGroup\";\nimport addBimRoomToGroup from \"./addBimRoomToGroup\";\nimport createContextGroup from \"./createContextGroup\";\nimport createElement from \"./createElement\";\nimport editBtn from \"./edit\";\nimport findBimObject from \"./findBimObject\";\nimport findBimRoom from \"./findBimRoom\";\nimport linkRooms from \"./linkRooms\";\nimport viewBtn from \"./viewBtn\";\n\n\n\nexport {\n   addBimObjectToGroup,\n   addBimRoomToGroup,\n   createContextGroup,\n   createElement,\n   editBtn,\n   findBimObject,\n   findBimRoom,\n   linkRooms,\n   viewBtn\n}","import { SpinalContextApp } from \"spinal-env-viewer-context-menu-service\";\nconst { spinalPanelManagerService } = require(\"spinal-env-viewer-panel-manager-service\");\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\n\n\nconst CIRCULARMENU = 'circularMenu';\n\n\nclass AddBimObjectToGroup extends SpinalContextApp {\n\n  constructor() {\n    super(\"add bim object to group\",\n      \"add bim object to group\", {\n        icon: 'add_location',\n        icon_type: 'in',\n        backgroundColor: '#356BAB',\n        fontColor: '#FFFFFF'\n      })\n  }\n\n  isShown(option) {  \n    return Promise.resolve(option.selectedNode !== \"undefined\" ? true : -1);\n  }\n\n  action(option) {\n    if (option.selectedNode) {\n      spinalPanelManagerService.openPanel(\"linkToGroupDialog\", {\n        type: option.selectedNode.type.get(),\n        itemSelected: [option.selectedNode.get()]\n      });\n    } else {\n      alert(\"not found\");\n    }\n\n  }\n\n}\n\nconst addBimObjectToGroup = new AddBimObjectToGroup()\n\nspinalContextMenuService.registerApp(CIRCULARMENU, addBimObjectToGroup, [3]);\nexport default addBimObjectToGroup;","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalContextMenuService = require(\"./SpinalContextMenuService\");\nconst SpinalContextApp = require(\"./SpinalContextApp\");\nconst Constant = require('./constants');\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalContextMenuService === \"undefined\")\n  G_root.spinal.spinalContextMenuService = new SpinalContextMenuService();\n\nmodule.exports = {\n  constants: Constant,\n  spinalContextMenuService: G_root.spinal.spinalContextMenuService,\n  SpinalContextApp,\n  install(Vue) {\n    Vue.prototype.$spinalContextMenuService =\n      G_root.spinal.spinalContextMenuService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport * as Q from 'q';\nvar debounce = require('lodash.debounce');\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} apps key = hookname, value array of apps\n * @class SpinalContextMenuService\n */\nclass SpinalContextMenuService {\n  /**\n   *Creates an instance of SpinalContextMenuService.\n   * @memberof SpinalContextMenuService\n   */\n  constructor() {\n    this.apps = {};\n    this.promiseByAppProfileId = {};\n    this.appRdy = Q.defer();\n    this.debouncedRdy = debounce(\n      () => {\n        this.appRdy.resolve();\n        this.debouncedRdy = () => {};\n      },\n      1000,\n      { leading: false, trailing: true }\n    );\n  }\n\n  // waitRdy() {\n  //   this.appRdy.promise;\n  // }\n\n  /**\n   * Return true if user has access to this appProfile\n   * @param appProfileId\n   * @return {PromiseLike<boolean > | Promise<boolean>}\n   */\n  async hasUserRight(appProfileId) {\n    this.debouncedRdy();\n    await window.spinal.spinalSystem.init();\n    const path =\n      '/etc/UserProfileDir/' + window.spinal.spinalSystem.getUser().username;\n    const userProfile = await window.spinal.spinalSystem.load(path);\n    let res = false;\n    if (userProfile) {\n      for (let i = 0; i < userProfile.appProfiles.length && !res; i++) {\n        res = ((1 << userProfile.appProfiles[i]) & appProfileId) !== 0;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * method to register the Application to a hook\n   *\n   * @param {string} hookname the place where is application button is located\n   * @param {SpinalContextApp} spinalContextApp the application\n   * @param {number} appProfileId id of the group that can use the application\n   * button\n   * @memberof SpinalContextMenuService\n   */\n  registerApp(hookname, spinalContextApp, appProfileId) {\n    this.debouncedRdy();\n    if (typeof appProfileId === 'undefined') {\n      console.warn(\n        'Deprecated: The usage of this function without the third' +\n          ' parameter appProfileId is deprecated your button is lock for admin' +\n          ' only until you set the third parameter'\n      );\n      appProfileId = 1;\n    }\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      appsInHooks = this.apps[hookname] = [];\n    }\n\n    if (!this.promiseByAppProfileId.hasOwnProperty(appProfileId)) {\n      this.promiseByAppProfileId[appProfileId] =\n        this.hasUserRight(appProfileId);\n    }\n\n    this.promiseByAppProfileId[appProfileId].then((hasAccess) => {\n      // push the app if not exist ans user has access to the button\n      if (hasAccess && appsInHooks.indexOf(spinalContextApp) === -1) {\n        appsInHooks.push(spinalContextApp);\n      }\n    });\n  }\n\n  /**\n   * method to get the applications registered to a hookname\n   *\n   * @param {String} hookname\n   * @param {object} option\n   * @memberof SpinalContextMenuService\n   * @returns {Promise} resolve : [spinalContextApp, ...]; reject: Error\n   */\n  async getApps(hookname, option) {\n    await this.appRdy.promise;\n    // get the array of apps of the hook\n    let appsInHooks = this.apps[hookname];\n\n    // create the array if not exist\n    if (!(appsInHooks instanceof Array)) {\n      return Promise.resolve([]);\n    }\n    let promises = appsInHooks.map(async function (e, idx) {\n      try {\n        const res = await e.isShown(option);\n        return res === -1 ? -1 : e;\n      } catch (error) {\n        console.error(error);\n        return -1;\n      }\n    });\n    try {\n      const appRes = await Promise.all(promises);\n      return appRes.filter((itm) => itm !== -1);\n    } catch (error) {\n      console.error(error);\n      return [];\n    }\n  }\n}\n\nmodule.exports = SpinalContextMenuService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Interface like class to define a Contextual Application button\n * @see https://material.io/tools/icons/?style=baseline for material icons\n *\n * @class SpinalContextApp\n * @property {string} label=notset short name to be shown in the application\n * @property {string} description description of what the Application button do\n * @property {object} buttonCfg Object configuration of the Application button\n * @property {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n * @property {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n * @property {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n * @property {string} buttonCfg.fontColor=#FFFFFF font color of the button\n * @property {objet} [badgeCfg] Object configuration of the Application button badge\n * @property {string} badgeCfg.label string shown in a badge; if empty it's not shown\n * @property {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n * @property {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n */\nclass SpinalContextApp {\n  /**\n   * Creates an instance of SpinalContextApp.\n   * @param {string} label=notset short name to be shown in the application\n   * @param {string} description description of what the Application button do\n   * @param {object} buttonCfg Object configuration of the Application button\n   * @param {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n   * @param {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n   * @param {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n   * @param {string} buttonCfg.fontColor=#FFFFFF font color of the button\n   * @param {objet} [badgeCfg] Object configuration of the Application button badge\n   * @param {string} badgeCfg.label string shown in a badge; if empty it's not shown\n   * @param {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n   * @param {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n   * @memberof SpinalContextApp\n   */\n  constructor(label, description, buttonCfg, badgeCfg = {}) {\n    this.label = label || \"notset\";\n    this.description = description || \"\";\n    this.buttonCfg = {\n      icon: buttonCfg.icon || \"tab\",\n      icon_type: buttonCfg.icon_type || \"in\",\n      backgroundColor: colorHash(buttonCfg.backgroundColor || \"#0000FF\"),\n      fontColor: colorHash(buttonCfg.fontColor || \"#FFFFFF\")\n    };\n\n    this.badgeCfg = {\n      label: badgeCfg.label || \"\",\n      backgroundColor: colorHash(badgeCfg.backgroundColor || \"#FF0000\"),\n      fontColor: colorHash(badgeCfg.fontColor || \"#FFFFFF\")\n    };\n  }\n\n  /**\n   * Method called by `SpinalContextMenuService.getApps`\n   * to filter the Application button to show in the context hook\n   *\n   * @param {object} option\n   * @memberof SpinalContextApp\n   * @returns {Promise} Resolve: not shown if === -1;\n   */\n  isShown(option) {}\n\n  /**\n   * Method to call on click of the application button\n   *\n   * @param {object} option {}\n   * @memberof SpinalContextApp\n   */\n  action(option) {}\n}\n\nmodule.exports = SpinalContextApp;\n\nfunction colorHash(color) {\n  if (color[0] === \"#\") return color;\n  return \"#\" + color;\n}\n","\n\nmodule.exports = {\n  ADMINISTRATEUR: 'ADMINISTRATEUR',\n  MAINTENEUR: 'MAINTENEUR',\n  INTEGRATEUR: 'INTEGRATEUR',\n  ASSET_MANAGEUR: 'ASSET MANAGER',\n};","import { SpinalContextApp } from \"spinal-env-viewer-context-menu-service\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport { EQUIPMENT_RELATION, REFERENCE_RELATION, ROOM_TYPE } from \"spinal-env-viewer-context-geographic-service/build/constants\";\nconst { spinalPanelManagerService } = require(\"spinal-env-viewer-panel-manager-service\");\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\n\n\nconst CIRCULARMENU = 'circularMenu';\n\nclass AddRoomToGroup extends SpinalContextApp {\n\n  constructor() {\n    super(\"add room to group\",\n      \"add room which linked to this object to group\", {\n        icon: 'playlist_add',\n        icon_type: 'in',\n        backgroundColor: '#356BAB',\n        fontColor: '#FFFFFF'\n      })\n  }\n\n  async isShown(option) {\n    // return Promise.resolve(true);\n    const room = await getRoom(option);\n\n    return typeof room !== \"undefined\" ? true : -1;\n\n  }\n\n  async action(option) {\n    const room = await getRoom(option);\n\n    if (room) {\n      spinalPanelManagerService.openPanel(\"linkToGroupDialog\", {\n        type: ROOM_TYPE,\n        itemSelected: [room.get()]\n      });\n    } else {\n      alert(\"no room found\");\n    }\n\n  }\n\n}\n\n\nconst getRoom = async (option) => {\n  if (option.selectedNode) {\n    const id = option.selectedNode.id.get();\n\n    const realNode = SpinalGraphService.getRealNode(id);\n\n    let parents = await realNode.getParents([EQUIPMENT_RELATION,\n      REFERENCE_RELATION\n    ]);\n\n    if (!parents || (parents && parents.length === 0)) return;\n\n    const found = parents.find(el => {\n      SpinalGraphService._addNode(el);\n      return el.getType().get() === ROOM_TYPE\n    });\n\n    if (found) return found.info;\n\n    // if (found) {\n    //   graphManagerStore.commit(\"SET_ACTIVE_NODE\", found.id.get())\n    // }\n\n  }\n}\n\nconst addRoomToGroup = new AddRoomToGroup();\n\nspinalContextMenuService.registerApp(CIRCULARMENU, addRoomToGroup, [3]);\n\nexport default addRoomToGroup;","import { SpinalContextApp } from \"spinal-env-viewer-context-menu-service\";\nimport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\n\nconst HEADERBAR = \"GraphManagerTopBar\";\n\nclass ContextGroupBtn extends SpinalContextApp {\n  constructor() {\n    super(\"create Group Context\", \"This Button creates a group context\", {\n      icon: \"add\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\"\n    });\n  }\n\n  isShown() {\n    return Promise.resolve(true);\n  }\n\n  action() {\n    spinalPanelManagerService.openPanel(\"selectGroupTypeDialog\");\n  }\n\n}\n\nconst contextGroupBtn = new ContextGroupBtn();\n\nspinalContextMenuService.registerApp(HEADERBAR, contextGroupBtn, [3]);\n\n\nexport default contextGroupBtn;","import { SpinalContextApp } from \"spinal-env-viewer-context-menu-service\";\nimport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\nimport { bimObjectManagerService } from \"spinal-env-viewer-bim-manager-service\";\n\nconst SIDEBAR = \"GraphManagerSideBar\";\n\nclass CreateElement extends SpinalContextApp {\n  constructor() {\n    super(\n      \"create Context/Category/Group\",\n      \"This Button creates a context, category or group\",\n      {\n        icon: \"add\",\n        icon_type: \"in\",\n        backgroundColor: \"#FF0000\",\n        fontColor: \"#FFFFFF\",\n      }\n    );\n  }\n\n  isShown(option) {\n    const type = option.selectedNode.type.get();\n\n    const isContext = groupManagerService.isContext(type);\n    if (isContext) {\n      this.label = \"Create Category\";\n      return Promise.resolve(true);\n    }\n\n    const isCategory = groupManagerService.isCategory(type);\n    if (isCategory) {\n      this.label = \"Create Group\";\n      return Promise.resolve(true);\n    }\n\n    const isGroup = groupManagerService.isGroup(type);\n    const isEquipmentGroup = groupManagerService.isEquipementGroup(type);\n\n    if (isGroup && isEquipmentGroup) {\n      this.label = \"Add equipments selected\";\n      return Promise.resolve(true);\n    }\n\n    return Promise.resolve(-1);\n  }\n\n  action(option) {\n    const nodeId = option.selectedNode.id.get();\n    const type = option.selectedNode.type.get();\n    const contextId = option.context.id.get();\n\n    const parameters = {\n      title: \"\",\n      contextId: option.context.id.get(),\n      selectedNode: option.selectedNode,\n    };\n\n    if (groupManagerService.isContext(type)) {\n      parameters.title = \"add Category\";\n      spinalPanelManagerService.openPanel(\"createCategoryDialog\", parameters);\n    } else if (groupManagerService.isCategory(type)) {\n      parameters.title = \"add Group\";\n      spinalPanelManagerService.openPanel(\"createGroupDialog\", parameters);\n    } else {\n      // addBimObject(contextId, nodeId);\n      spinalPanelManagerService.openPanel(\"addBimObjectToGroupDialog\", {\n        contextId,\n        nodeId,\n      });\n    }\n  }\n}\n\nconst addBimObject = (contextId, groupId) => {\n  let selections = window.spinal.ForgeViewer.viewer.getAggregateSelection();\n\n  if (selections.length === 0) {\n    alert(\"select an item\");\n    return;\n  }\n\n  selections = selections.map((el) => {\n    return bimObjectManagerService.getLeafDbIds(el.model, el.selection);\n  });\n\n  Promise.all(selections).then((selected) => {\n    for (let idx = 0; idx < selected.length; idx++) {\n      const { model, selection } = selected[idx];\n\n      model.getBulkProperties(\n        selection,\n        {\n          propFilter: [\"name\"],\n        },\n        (el) => {\n          el.forEach((element) => {\n            window.spinal.BimObjectService.createBIMObject(\n              element.dbId,\n              element.name,\n              model\n            ).then(() => {\n              window.spinal.BimObjectService.getBIMObject(\n                element.dbId,\n                model\n              ).then((bimObject) => {\n                if (bimObject) {\n                  const bimId = bimObject.id\n                    ? bimObject.id.get()\n                    : bimObject.info.id.get();\n\n                  groupManagerService.linkElementToGroup(\n                    contextId,\n                    groupId,\n                    bimId\n                  );\n                }\n              });\n            });\n          });\n        }\n      );\n    }\n  });\n};\n\nconst createElement = new CreateElement();\n\nspinalContextMenuService.registerApp(SIDEBAR, createElement, [3]);\n\nexport default createElement;\n","import { SpinalContextApp } from \"spinal-env-viewer-context-menu-service\";\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\nimport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\n\nconst SIDEBAR = \"GraphManagerSideBar\";\n\nclass Edit extends SpinalContextApp {\n  constructor() {\n    super(\"Edit\", \"This button allows  to edit group\", {\n      icon: \"edit\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\"\n    });\n  }\n\n  isShown(option) {\n    let contextType = option.context.type.get();\n    let selectedNodeType = option.selectedNode.type.get();\n\n    const isContext = groupManagerService.isContext(contextType);\n    const isCategory = groupManagerService.isCategory(selectedNodeType);\n    const isGroup = groupManagerService.isGroup(selectedNodeType);\n\n    if (isContext && (isGroup || isCategory)) {\n      return Promise.resolve(true);\n    }\n\n    return Promise.resolve(-1);\n  }\n\n  action(option) {\n    let type = option.selectedNode.type.get();\n\n    let params = {\n      edit: true,\n      title: `Edit ${option.selectedNode.name.get()}`,\n      contextId: option.context.id.get(),\n      selectedNode: option.selectedNode\n    };\n\n    if (groupManagerService.isGroup(type)) {\n      params[\"color\"] = option.selectedNode.color ? option.selectedNode\n        .color.get() : \"#000000\";\n      spinalPanelManagerService.openPanel(\"createGroupDialog\", params);\n\n    } else if (groupManagerService.isCategory(type)) {\n      params[\"iconSelected\"] = option.selectedNode.icon ? option.selectedNode\n        .icon.get() : undefined;\n\n      spinalPanelManagerService.openPanel(\"createCategoryDialog\", params);\n    }\n\n  }\n}\n\nconst edit = new Edit()\n\nspinalContextMenuService.registerApp(SIDEBAR, edit, [3]);\n\nexport default edit;","import { SpinalContextApp } from \"spinal-env-viewer-context-menu-service\";\nimport graphManagerStore from \"spinal-env-viewer-plugin-graph-manager/src/vue/store\";\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\n\nconst CIRCULARMENU = 'circularMenu';\n\nclass FindBimObject extends SpinalContextApp {\n\n  constructor() {\n    super(\"find Object in graph manager\", \"find object in graph manager\", {\n      icon: 'location_on',\n      icon_type: 'in',\n      backgroundColor: '#356BAB',\n      fontColor: '#FFFFFF'\n    })\n  }\n\n  isShown(option) {\n    return Promise.resolve(option.selectedNode ? true : -1);\n\n  }\n\n  action(option) {\n\n    if (option.selectedNode && option.selectedNode.id) {\n      graphManagerStore.commit(\"SET_ACTIVE_NODE\", option.selectedNode.id\n        .get());\n    } else {\n      alert(\"not found\");\n    }\n\n  }\n\n}\n\nconst findBimObject = new FindBimObject();\nspinalContextMenuService.registerApp(CIRCULARMENU, findBimObject, [3]);\n\nexport default findBimObject;","import { SpinalContextApp } from \"spinal-env-viewer-context-menu-service\";\nimport { SpinalGraphService } from \"spinal-env-viewer-graph-service\";\nimport { EQUIPMENT_RELATION, REFERENCE_RELATION, ROOM_TYPE } from \"spinal-env-viewer-context-geographic-service/build/constants\";\nimport graphManagerStore from \"spinal-env-viewer-plugin-graph-manager/src/vue/store\";\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\n\n\nconst CIRCULARMENU = 'circularMenu';\n\nclass FindBimRoom extends SpinalContextApp {\n\n  constructor() {\n    super(\"find room\", \"find room which linked to this object\", {\n      icon: 'store',\n      icon_type: 'in',\n      backgroundColor: '#356BAB',\n      fontColor: '#FFFFFF'\n    })\n  }\n\n  async isShown(option) {\n    // return Promise.resolve(true);\n    const room = await getRoom(option);\n\n    return typeof room !== \"undefined\" ? true : -1;\n\n  }\n\n  async action(option) {\n    const room = await getRoom(option);\n\n    if (room) {\n      graphManagerStore.commit(\"SET_ACTIVE_NODE\", room.id.get());\n    } else {\n      alert(\"no room found\");\n    }\n\n  }\n\n}\n\n\nconst getRoom = async (option) => {\n  if (option.selectedNode) {\n    const id = option.selectedNode.id.get();\n\n    const realNode = SpinalGraphService.getRealNode(id);\n\n    let parents = await realNode.getParents([EQUIPMENT_RELATION,\n      REFERENCE_RELATION\n    ]);\n\n    if (!parents || (parents && parents.length === 0)) return;\n\n    const found = parents.find(el => {\n      SpinalGraphService._addNode(el);\n      return el.getType().get() === ROOM_TYPE\n    });\n\n    if (found) return found.info;\n\n    // if (found) {\n    //   graphManagerStore.commit(\"SET_ACTIVE_NODE\", found.id.get())\n    // }\n\n  }\n}\n\nconst findBimRoom = new FindBimRoom();\nspinalContextMenuService.registerApp(CIRCULARMENU, findBimRoom, [3]);\n\nexport default findBimRoom;","import { SpinalContextApp } from \"spinal-env-viewer-context-menu-service\";\nimport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\nimport geographicService from \"spinal-env-viewer-context-geographic-service\";\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\n\nconst SIDEBAR = \"GraphManagerSideBar\";\n\nclass LinkRooms extends SpinalContextApp {\n  constructor() {\n    super(\"link Rooms\", \"This button allows to link rooms to space\", {\n      icon: \"settings_input_component\",\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\",\n    });\n  }\n\n  isShown(option) {\n    let nodeType = option.selectedNode.type.get();\n\n    let isRoomsGroup = groupManagerService.isRoomsGroup(nodeType);\n\n    return Promise.resolve(isRoomsGroup ? true : -1);\n  }\n\n  action(option) {\n    let nodeType = option.selectedNode.type.get();\n    let contextId = option.context.id.get();\n    let nodeId = option.selectedNode.id.get();\n\n    spinalPanelManagerService.openPanel(\"linkRoomPanel\", {\n      contextId: contextId,\n      nodeId: nodeId,\n      type: nodeType,\n      reference: {\n        context: geographicService.constants.ROOM_REFERENCE_CONTEXT,\n        relation: geographicService.constants.ROOM_RELATION,\n      },\n    });\n  }\n}\n\nconst linkRooms = new LinkRooms();\n\nspinalContextMenuService.registerApp(SIDEBAR, linkRooms, [3]);\n\nexport default linkRooms;\n","import { SpinalContextApp } from \"spinal-env-viewer-context-menu-service\";\nimport utilities from \"../js/utilities\";\nimport geographicService from \"spinal-env-viewer-context-geographic-service\";\nimport { groupManagerService } from \"spinal-env-viewer-plugin-group-manager-service\";\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\n\nconst SIDEBAR = \"GraphManagerSideBar\";\n\n\nclass ViewChildren extends SpinalContextApp {\n  constructor() {\n    super(\"color children\", \"color all bimobjects inside \", {\n      icon_type: \"in\",\n      backgroundColor: \"#FF0000\",\n      fontColor: \"#FFFFFF\"\n    })\n  }\n\n  isShown(option) {\n    const contextType = option.context.type.get();\n    const nodeType = option.selectedNode.type.get();\n\n\n    const isRoomOrEquipmentGroupContext = groupManagerService\n      .isRoomGroupContext(contextType) || groupManagerService\n      .isEquipmentGroupContext(contextType);\n\n\n    if (!isRoomOrEquipmentGroupContext || nodeType === geographicService\n      .constants.EQUIPMENT_TYPE) {\n      return Promise.resolve(-1);\n    }\n\n    return utilities.getIcon(option.selectedNode, option.context).then(\n      (isColored) => {\n        this.buttonCfg[\"isColored\"] = isColored;\n        this.buttonCfg.icon = isColored ? \"visibility_off\" : \"visibility\";\n        return true;\n      })\n\n  }\n\n  action(option) {\n    if (this.isColored) {\n      this.icon = \"visibility\";\n      this.isColored = false;\n      utilities.restoreItem(option.selectedNode);\n    } else {\n      this.icon = \"visibility_off\";\n      this.isColored = true;\n      utilities.colorItem(option.selectedNode);\n    }\n\n    window.NOP_VIEWER.impl.invalidate(0, 1, 0)\n  }\n\n}\n\nconst viewChildren = new ViewChildren();\n\nspinalContextMenuService.registerApp(SIDEBAR, viewChildren, [3]);\n\nexport default viewChildren;"],"names":["forgeFile","window","spinal","spinalSystem","getModel","hasOwnProperty","add_attr","graph","SpinalGraph","createGraph","getGraph","context","getContext","BIM_OBJECT_CONTEXT_TYPE","undefined","SpinalContext","addContext","createContext","BIM_OBJECT_NODE_TYPE","BIM_OBJECT_RELATION_NAME","REFERENCE_OBJECT_RELATION_NAME","BIM_OBJECT_RELATION_TYPE","SPINAL_RELATION_PTR_LST_TYPE","bimObjectService","call","createBIMObject","dbid","name","BIMObjNode","getBIMObject","BIMObject","SpinalBIMObject","SpinalNode","info","BIMObjectContext","addChildInContext","BIMObjectArray","getChildren","get","addBIMObject","parent","dbId","node","removeBIMObject","child","removeChild","deleteBIMObject","children","getChildrenInContext","find","Error","removeFromGraph","addReferenceObject","addChild","removeReferenceObject","constants","spinalCore","require","globalType","global","Model","constructor","_id","_name","FileSystem","_sig_server","id","register_models"],"version":3,"file":"spinal-env-viewer-room-manager.cebd4733.js.map"}