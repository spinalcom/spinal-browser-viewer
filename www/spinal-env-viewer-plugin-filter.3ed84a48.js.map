{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AACA;;AACA;;AAGA,MAAM,qBAAqB;AAE3B,MAAM,iBAAiB;AAIvB,MAAM,gBAAgB,CAAA,GAAA,6BAAqB,AAAD,EAAE;IAC1C,MAAM;IACN,MAAM;IACN,OAAO;IACP,gBAAgB;AAClB,GAAG;IAAC,CAAA,GAAA,gCAAgB,AAAD;IAAG,CAAA,GAAA,8BAAc,AAAD;CAAE;AAGrC,OAAO,QAAQ,CAAC,OAAO,CAAC,mBAAmB,CAAC,iBAAiB,CAC3D,gBACA;AAGF,OAAO,MAAM,CAAC,qBAAqB,CAAC,YAAY,CAAC;;;;ACzBjD;;AACA,SAAS;AACT;;AACA;;AAGA,QAAQ;AACR;;AAGA,MAAM,EACJ,oBAAoB,EACrB,GAAG,QAAQ;AAEZ,MAAM,EACJ,oBAAoB,EACrB,GAAG,QAAQ;AAEZ,MAAM,UAAU;IAAC;QACb,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,sCAAmB,AAAD;QAChD,iBAAiB,SAAS,IAAI;IAChC;IACA;QACE,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,uCAAoB,AAAD;QACjD,iBAAiB,SAAS,IAAI;IAChC;CACD;AAED,IAAK,IAAI,QAAQ,GAAG,QAAQ,QAAQ,MAAM,EAAE,QAC1C,qBAAqB,KAAK,CAAC,OAAO,CAAC,MAAM;AAG3C,2EAA2E;AAC3E,2EAA2E;AAC3E,2EAA2E;AAE3E,IAAI,SAAS;IAAC;QACZ,MAAM;QACN,mBAAmB,CAAA,GAAA,mBAAG,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,8BAAW,AAAD;QACxC,OAAO;YACL,OAAO;YACP,gBAAgB;QAClB;QACA,OAAO;YACL,QAAQ;YACR,MAAM;QACR;IACF;CAAE;AAEF,IAAK,IAAI,QAAQ,GAAG,QAAQ,OAAO,MAAM,EAAE,QAAS;IAClD,MAAM,UAAU,MAAM,CAAC,MAAM;IAC7B,MAAM,iBAAiB,qBAAqB,eAAe,CAAC;IAC5D,qBAAqB,iBAAiB,CAAC,QAAQ,IAAI,EAAE;AACvD;;;;;ACtDA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAsC,MAAM;IAC1D,OAAO,eAAe,GAAG,QAAQ,oBAAsC,eAAe;IACtF,OAAO,QAAQ,GAAG;IAG5B,QAAQ,oBAAoC,OAAO,CAAC;IACpD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A,I,gB;I,M;I,O;Q;K;I;Q,O;Y,Y;Y,Y;Q;I;I,S;Q,W;Q,S,M;Y,I,Q,C,G,yD,A,E,6B,C,O,M,C,W,C,M,C,K,E;gB;oB,M;oB,O,I,C,U;gB;a,E,I,C,C;gB,oB;gB,M,I,G,C,C,K,G,I;gB,O,M,C,W,C,M,C,M,C;YAUf;YAEA,IAAA,CAAA,UAAA,GAAA;QACA;QACA,aAAA,WAAA;YACA,IAAA,OAAA,IAAA,CAAA,SAAA,KAAA,YACA,IAAA,CAAA,SAAA,CAAA;QAEA;QACA;YACA,OACA,IAAA,CAAA,UAAA,CAAA,MAAA,KAAA,KACA,CAAA,IAAA,OAAA,SAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,IAAA;QAEA;IACA;AACA;AAEA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;A;A,O,c,C,S,c;I,O;A;AE7CA,MAAA,eAAA,QAAA;AAES,QAAA,uBAAA,GAFF,aAAA,OAAuB;;;A;A,I,Y,A,I,I,I,C,S,I,S,O,E,U,E,C,E,S;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,I,E,S,O;gB,Q,O,K;Y,G,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,O,c,C,S,c;I,O;A;AEA9B,MAAM;IACJ,aAAA,CA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CAAC,EAAE,CAAC,KAAK;YAC1C,MAAM,eAAe,UAAU,CAAC,EAAE,CAAC,IAAI;YAEvC,MAAM,QAAQ,IAAI,UAAU,CAAC,IAAI,CAAC,CAAA;gBAChC,OAAO,OAAO,mBAAmB,eAC/B,eAAe,MAAM,KAAK,IACxB,GAAG,WAAW,CAAC,WAAW,OACxB,aAAa,IAAI,GAAG,iBAAiB,KACvC,GAAG,WAAW,CAAC,WAAW,OACxB,aAAa,IAAI,GAAG,iBAAiB,MACrC,kBAAkB,GAAG,YAAY;YACzC;YAEA,IAAI,OAAO,UAAU,aACnB,OAAO;QAEV;QAED,OAAO;IACT;IAEA,SAAS,EAAE,EAAE,KAAK,EAAlB;QACE,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,IAAI,YAAY,KAAK,CAAC,EAAE,CAAC,SAAS;YAClC,IAAI,aAAa,KAAK,CAAC,EAAE,CAAC,UAAU;YAEpC,IAAI,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,CAAA;gBAC7B,IAAI,OAAO,eAAe,aACxB,OAAO,UAAU,IAAI,CAAC,IAAI,WAAW;gBAGvC,OACE,UAAU,IAAI,CAAC,IAAI,WAAW,KAAK,WAAW,IAAI,CAAC,IAAI,YAAY;YAEvE;YAEA,IAAI,OAAO,UAAU,aACnB,OAAO;QAEV;QAED,OAAO;IACT;AACD;AAED,QAAA,OAAA,GAAe,IAAI;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,I,E,C;S;Q,I,E,C;Q,G,qB;Y,G,Y;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,Y;oB,O;wB,a;oB;oB,O;wB,O,I,U;wB,U,S,G;4B,I,U,G;wB;wB,Y;oB;gB;a,E;S,E;Q,I,E,C;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,O;oB,Y,I,U;gB;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AJ7NnB,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AKJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAuC,MAAM;IAC3D,OAAO,eAAe,GAAG,QAAQ,oBAAuC,eAAe;IACvF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAoC,OAAO;IACzE,QAAQ,oBAAqC,OAAO,CAAC;IACrD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A;;A;;A,I,gB;I,M;I,O;Q;K;I,Y;Q,mB,C,G,uC,A;Q,iB,C,G,+B,A;Q,kB,C,G,gC,A;I;I;Q,I,C,Q;Q,I,C,I;Q,O;Y,Y;Y,M;Y,Y;Y,e;Y,W;Y,U,E;Y,O;Y,a;Y,gB;Y,W,E;Y,Y;Q;I;I,S;Q,Q,M;Y,I,C,I,G,O,M;Y,M;Y,I,C,U,G,O,M,C,M,C,I,C,M;Y,I,C,S,G,O,M,C,M,C,I,C,K;Y,I,C,Q,G,O,M,C,M,C,I,C,I;Y,O;Y,I,C,W,G,O,M,C,M,C,K,C,M;Y,I,C,U,G,O,M,C,M,C,K,C,K;Y,I,C,S,G,O,M,C,M,C,K,C,I;Q;Q,S,M;Y,I,Q;gB,M;gB,I,C,I,C,M,C,I,C,M,G,I,C,U;gB,I,C,I,C,M,C,I,C,K,G,I,C,S;gB,I,C,I,C,M,C,I,C,I,G,I,C,Q,G,I,C,Q,C,I,C,M;gB,O;gB,I,C,I,C,M,C,K,C,M,G,I,C,W;gB,I,C,I,C,M,C,K,C,K,G,I,C,U;gB,I,C,I,C,M,C,K,C,I,G,I,C,S,G,I,C,S,C,I,C,M;Y;Y,I,C,U,G;Q;Q,a,W;Y,I,O,I,C,S,K,Y,I,C,S,C;Q;Q,Q,K;Y,I,C,U,G;Y,I,I,C,U,K,O,I,C,U,K,K;gB,I,C,S,G;gB,I,C,Q,G;Y;Q;Q,iB,K;Y,I,C,S,G;Q;Q,gB,K;Y,I,C,Q,G;Q;Q,qB,K;Y,I,C,a,G;Q;Q,S,K;Y,I,C,W,G;Y,I,I,C,W,K,O,I,C,W,K,K;gB,I,C,U,G;gB,I,C,S,G;Y;Q;Q,kB,K;Y,I,C,U,G;Q;Q,iB,K;Y,I,C,S,G;Q;Q,sB,K;YAgFf,IAAA,CAAA,cAAA,GAAA;QACA;IACA;A;AAGA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;;;ACrGA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAuC,MAAM;IAC3D,OAAO,eAAe,GAAG,QAAQ,oBAAuC,eAAe;IACvF,OAAO,QAAQ,GAAG;IAG5B,QAAQ,mBAAqC,OAAO,CAAC;IACrD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A;;A,I,gB;I,M;I,O;Q,Y;Y,U;Q;Q,Y;Y,U;Q;Q,gB;Y,U;Q;I;I;Q,I,C,S,G,C,G,uB,A;Q,I,C,U,G,C,G,2B,A;Q,O;Y,O;Y,Y;Y,O,E;Q;I;I;Q,I,C,K,G,I,C,U;Q,I,C,K,G,E;Q,I,O,I,C,U,K,a,I,C,K,G,M,O,C,I,C,U,I,I,C,U,G,I,C,U,C,K,C;Q,I,C,U,G,I,C,c;I;I,S;Q,iB,S;Y,I,C,U,G;Q;I;I,O;Q,O,S,Q;Y,I,C,K,C,S;Q;Q,Y,S,Q;Y,I,C,K,C,a;Q;Q,O,S,Q;Y,I,C,K,C,S;QAqCf;IACA;A;AAGA,IAAA,UAAA,OAAA,kBAAA,aAAA,cAAA,OAAA,GAAA;kBACA,SAAA,wCAAA;;;;;kBC1De;IAEb;QACE,MAAM;QACN,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;IACf;CACD;;;;;kBCtBc;IACb;IAAK;IAAK;IAAK;IAAK;IAAK;CAC1B;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,W;Q,G,gB;Y,G,Y;gB,a;Y,G;gB,G,W;oB,G,a;wB,a;oB,G;wB,I,E,C,I,E,C,I,U,I;qB;iB,E;gB,I,E,C;gB,G,Y;oB,O;wB,e;oB;oB,O;wB,O,I,K;wB,U,S,G;4B,I,K,G;wB;wB,Y;oB;gB;gB,I,E,C;gB,G,Q;oB,a;gB,G;oB,I,E,C,I,E,C,I,U;iB;a,E;S,E;Q,I,E,C;Q,G,gB;Y,G,Y;gB,a;Y,G;gB,G,S;oB,I,E,C;iB;gB,I,E,C;gB,G,a;oB,O;wB,Q;wB,M;wB,Y;wB,Y;oB;oB,O;wB,O,I,K;wB,U,S,G;4B,I,K,G;wB;wB,Y;oB;gB,G,I,E,C,I,S,E,S,I,E,K;oB,O,G,a;wB,K;wB,O;4B,S,K,K;wB;oB,G;wB,I,E,C,I,E,C,K,I;qB;gB,I;a,E;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AFDD,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AGJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA+B,MAAM;IACnD,OAAO,eAAe,GAAG,QAAQ,oBAA+B,eAAe;IAC/E,OAAO,QAAQ,GAAG;IAG5B,QAAQ,oBAA6B,OAAO,CAAC;IAC7C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q,S;Y,U;Y,M;Q;I;I;Q,O;Y,Q;Q;I;I;Q,I,C,M,G,I,C,O;I;I,O;Q,Q,S,Q;Y,I,C,K,C,U;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,G,gB;Y,G,Y;gB,O;oB,S;gB;gB,O;oB,O,I,M;oB,U,S,G;wB,I,M,G;oB;oB,Y;gB;Y;Y,I,E,C;Y,G,Q;gB,a;Y,G;gB,I,E,C;a;S,E;Q,I,E,C;Q,G,gB;Y,G,Y;gB,O;oB,S;gB;gB,O;oB,O,I,M;oB,U,S,G;wB,I,M,G;oB;oB,Y;gB;Y;Y,I,E,C;Y,G,Q;gB,a;Y,G;gB,I,E,C;a;S,E;Q,I,E,C;Q,G,gB;Y,G,Y;gB,O;oB,S;gB;gB,O;oB,O,I,M;oB,U,S,G;wB,I,M,G;oB;oB,Y;gB;Y;Y,I,E,C;Y,G,Q;gB,a;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAgC,MAAM;IACpD,OAAO,eAAe,GAAG,QAAQ,oBAAgC,eAAe;IAChF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA6B,OAAO;IAClE,QAAQ,oBAA8B,OAAO,CAAC;IAC9C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A,I,gB;I,M;I;Q,I,C,K,G,C,G,oB,A;Q,O,C;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;AChBf,OAAO,OAAO,GAAG;IAEf;QACE,IAAI;QACJ,OAAO;QACP,aAAa;IACf;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;IACf;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;IACf;CAED;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,mB;Q,a;Y,W;Q;I,G,I,E,C,I,K,E,S,I,E,K;Q,O,G,gB;Y,K;Y,a;Q,G;Y,G,O;gB,a;Y,G;gB,G,Q;oB,a;gB,G;oB,I,E,C,I,E,C,K,K;iB;gB,I,E,C;gB,G,Q;oB,a;gB,G;oB,I,E,C,I,E,C,K,W;iB;a;S;I,I;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADjBD,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,a;Q,O;Y,a,I,U;Q;Q,I;Y,mB,S,M;gB,I,U,G;Y;Y,oB,S,M;gB,I,U,G;Y;Y,a,S,M;gB,O,I,W,C;Y;Q;I,G;Q,G,mB;Y,a;Q,G;Y,G,O;gB,I,E,C;a;Y,I,E,C;Y,G,W;gB,G,a;oB,a;oB,O;wB,mB;oB;gB,G;oB,G,W;wB,I,E,C;qB;iB,E;gB,I,E,C;gB,G;a,E;S,E;Q,I,E,C;Q,I,U,I,I,W,G,G,qB;Y,a;Q,G;Y,G,W;gB,a;Y,G;gB,G,gB;oB,a;wB,mB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,iB;oB,O;wB,W,I,U;oB;oB,I;wB,U,I,M;oB;gB;gB,I,E,C;gB,I,U,K,M,G,mB;oB,O;wB,c,I,S;wB,c,I,Q;wB,kB,I,a;oB;gB,K,I,E;a,E;Y,I,E,C;Y,G,W;gB,a;Y,G;gB,G,gB;oB,a;wB,mB;oB;gB,G;oB,I,E,C;iB;gB,I,E,C;gB,G,iB;oB,O;wB,W,I,W;oB;oB,I;wB,U,I,O;oB;gB;gB,I,E,C;gB,I,W,K,M,G,mB;oB,O;wB,c,I,U;wB,c,I,S;wB,kB,I,c;oB;oB,I;wB,S,I,gB;wB,S,I,e;wB,a,I,oB;oB;gB,K,I,E;a,E;S,E,K,I,E;Q,I,E,C;Q,G,qB;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,a;gB,a;gB,I;oB,S,S,M;wB,O,I,W,C;oB;gB;Y,G;gB,I,E,C;a;S,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ALJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AOJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA8B,MAAM;IAClD,OAAO,eAAe,GAAG,QAAQ,oBAA8B,eAAe;IAC9E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA2B,OAAO;IAChE,QAAQ,oBAA4B,OAAO,CAAC;IAC5C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;;A;A;A;;A;;A;;A,M,iB;I,I;I,M;I,O;I,U;I,Q;Q,M;Y,Q;Y,O;Y,M,E;Q;Q,O;Y,Q;Y,O;Y,M,E;Q;I;A;A,I,gB;I,M;I,Y;Q,yB,C,G,6B,A;Q,yB,C,G,uC,A;Q,2B,C,G,+B,A;I;I;Q,O;Y,M;gB,O,M,C,C,G;a;Y,Q;Y,Y;Y,Q;gB,a;gB,a,E;Y;Q;IA4Bf;I,S;QAEA;Y,I,C,U,G;QAEA;QAEA;YACA,IAAA,MAAA;gBACA,IAAA;gB,M;gBAEA,OAAA;gBACA,UAAA;gBACA,QAAA;oBACA,MAAA;wBACA,Q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d,IAAI,CAAC,SAAS,GAAG;oBACnB;gBACF;gBAEA,YAAY,GAAG,EAAE;oBACf,IAAI,IAAI,CAAC,MAAM,KAAK,MAClB,IAAI,CAAC,UAAU,CAAC;yBAEhB,IAAI,CAAC,SAAS,CAAC;gBAEnB;gBAEA;;SAEC,GACD,UAAU,WAAW,EAAE;oBACrB,IAAI,CAAC,UAAU,CAAC;gBAClB;YACF;YACA,IAAI,sBAAsB,IAAI;YAC9B,0BAA0B,aAAa,CAAC,IAAI,IAAI,EAAE;QACpD;IACF;AACF;;;;;AC/GA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA6B,MAAM;IACjD,OAAO,eAAe,GAAG,QAAQ,oBAA6B,eAAe;IAC7E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA0B,OAAO;IAC/D,QAAQ,oBAA2B,OAAO,CAAC;IAC3C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A,I,gB;I,M;I,O;Q,M;Y,M;Y,U;Q;Q,Q;Y,M;Y,U;Q;I;I,S;Q;Y,I,C,K,C;Q;Q;Y,I,C,K,C;Q;Q,Y,I;Y,I,C,K,C,U;Q;Q;Y,I,C,K,C;Q;Q,U,I;Y,I,C,K,C,U;Q;Q,Y,I,E,I;Y,I,W,K,M,C,K,C,M,I;Y,I,C,K,G,W,K,I,C,K;Y,O;Q;I;A;A,I,U,O,kB,a,c,O,G;kB,S,wC;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,a;gB,a;gB,I;oB,S,I,W;gB;Y,G;gB,G,W;oB,I,E,C;iB;gB,I,E,C;a,E;Y,I,E,C;Y,G,a;gB,a;gB,I;oB,S,I,K;gB;Y,G;gB,G,W;oB,I,E,C;iB;gB,I,E,C;a,E;S,E;Q,I,E,C;Q,G,c;Y,a;Q,G,I,E,C,I,I,E,S,I;Y,O,G,O;gB,K,K,E;gB,a;Y,G;gB,G,Y;oB,a;gB,G;oB,G,S;wB,I,E,C;qB;oB,I,E,C;oB,G,Y;wB,O;4B,e;4B,Y,I,U,C,M;wB;wB,O;4B,O,K,I;4B,U,S,G;gC,I,I,C,M,Q;4B;4B,Y;wB;oB;oB,I,E,C;oB,I,U,C,M,U,G,Q;wB,a;oB,G;wB,I,E,C;qB,I,I,E;iB,E;gB,I,E,C;gB,G,Y;oB,a;gB,G;oB,G,S;wB,I,E,C;qB;oB,I,E,C;oB,G,Y;wB,O;4B,e;4B,Y,I,U,C,M;wB;wB,O;4B,O,K,K;4B,U,S,G;gC,I,I,C,M,S;4B;4B,Y;wB;oB;oB,I,E,C;oB,I,U,C,M,W,G,Q;wB,a;oB,G;wB,I,E,C;qB,I,I,E;iB,E;gB,I,E,C;gB,G,O;oB,a;gB,G;oB,G,a;wB,a;wB,O;4B,S;wB;wB,I;4B,S,S,M;gC,O,I,Q,C;4B;wB;oB,G;wB,G,W;4B,a;wB,G;4B,I,E,C;yB;qB,E;oB,I,E,C;oB,K,E,K,I,G,a;wB,a;wB,O;4B,S;wB;wB,I;4B,S,S,M;gC,O,I,U,C;4B;wB;oB,G;wB,G,W;4B,a;wB,G;4B,I,E,C;yB;qB,E,K,I,E;iB,E;a,E;Q,I;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AAff,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;ACJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAAuC,MAAM;IAC3D,OAAO,eAAe,GAAG,QAAQ,oBAAuC,eAAe;IACvF,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAAoC,OAAO;IACzE,QAAQ,oBAAqC,OAAO,CAAC;IACrD,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;;;A;A;;A,wE;A,I,gB;I,M;I,Y;Q,mB,C,G,iC,A;I;I,O;Q,Y;Q,kB;Q,mB;Q,K;Q,Q;Y,M;Y,U;Q;I;I;Q,I,C,M,G,O,M,C,W,C,M;Q,I,C,Q,G,A,C;Y,I;gB,O,I,C,M,C,gB,G,G,C,C;oB,O,C,G,yD,A,E,Y,C;gB;Y,E,O,O;gB,O;oB,C,G,yD,A,E,Y,C,I,C,M,C,K;iB;Y;Q,C;Q,O,C;I;I,a;I,gB;I,yB;I,oB;I,yC;I,oB;I,Y;IAwBf,yCAAA;IACA,6DAAA;I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;gB;Y,G;gB,I,E,C;a;Y,I,E,C;Y,G,iB;gB,I,E,C;a;Y,I,E,C;Y,G;Y,I,E,C;Y,G;S,E;Q,I,E,C;Q,I,E,C,I,I,E,S,G,E,K;Y,O,G,gB;gB,K;Y,G;gB,G,iB;oB,O;wB,c;oB;gB,G;oB,I,E,C,I,E,C,I,I;iB;gB,I,E,C;gB,G,iB;oB,I,E,C,I,E,C,I,I;iB;gB,I,E,C;gB,G,iB;oB,G,a;wB,a;wB,I;4B,S,S,M;gC,O,I,O,C,I,I;4B;wB;oB,G;wB,G,W;4B,I,E,C;yB;qB,E;iB,E;gB,I,E,C;gB,G,iB;oB,G,a;wB,a;wB,I;4B,S,S,M;gC,O,I,U,C,I,I;4B;wB;oB,G;wB,G,W;4B,I,E,C;yB;qB,E;iB,E;a,E;Q;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AA/DA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,G,e;Y,a;Y,I;gB,U,I,U;Y;Y,O;gB,O,I,M,C,W;gB,U,S,G;oB,I,I,C,I,M,E,e;gB;gB,Y;Y;Q,G;Y,I,E,C;S;Q,I,E,C;Q,C,I,M,C,W,G,G,O;Y,G,a;gB,I;oB,S,I,Y;gB;Y,G;gB,G,W;oB,I,E,C;iB;gB,I,E,C;gB,G,c;oB,O;wB,Y;oB;gB,G;oB,I,E,C;iB;a,E;Y,I,E,C;Y,G,a;gB,I;oB,S,I,gB;gB;Y,G;gB,G,W;oB,I,E,C;iB;gB,I,E,C;gB,G,c;oB,O;wB,Y;oB;gB,G;oB,I,E,C;iB;a,E;Y,I,E,C;Y,G,a;gB,I;oB,S,I,e;gB;Y,G;gB,G,W;oB,I,E,C;iB;gB,I,E,C;gB,G,c;oB,O;wB,Y;oB;gB,G;oB,I,E,C;iB;a,E;Y,I,E,C;Y,G,O;gB,a;Y,G;gB,G,mB;oB,O;wB,e,I,M,C,W;oB;gB;a,E;S,E,K,I,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;ADJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;;;AEJA,IAAI;AACJ,IAAI,aAAa;IACf,SAAS,QAAQ;IACjB,IAAI,OAAO,UAAU,EAAE,SAAS,OAAO,OAAO;IAC9C,OAAO,MAAM,GAAG,QAAQ,oBAA+B,MAAM;IACnD,OAAO,eAAe,GAAG,QAAQ,oBAA+B,eAAe;IAC/E,OAAO,QAAQ,GAAG;IAE5B,OAAO,YAAY,GAAG,QAAQ,oBAA4B,OAAO;IACjE,QAAQ,oBAA6B,OAAO,CAAC;IAC7C,OAAO,SAAS,GAAG;IACnB,OAAO,MAAM,GAAG;AAClB;AACA;kBAEe;;;A,2C;;;A,I,gB;I,M;I,O;Q,M;Y,M;Y,S;Q;I;I;Q,O;Y,a;Y,0B;Q;I;I,S;Q;Y,I,Q,I,C,I,C,G,C,C;gB,O;oB,W,I,C,Q,C,K,I,E,K,M,C,I,C,M,E,K,M,C,I,C,I,E,K,M,C,I,C,K;oB,Y,I,C,Q,C,K,K,E,K,M,C,K,C,M,EAaf,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EACA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;gBAEA;YACA;YAEA,IAAA,IAAA,CAAA,WAAA,IAAA,IAAA,CAAA,wBAAA,EACA,IAAA,CAAA,KAAA,CAAA,UAAA;gBACA,OAAA;gBACA,eAAA,IAAA,CAAA,WAAA;gBACA,kBAAA,IAAA,CAAA,wBAAA;YACA;iBAEA,MAAA;QAEA;QACA,UAAA,KAAA,EAAA,MAAA,EAAA,IAAA,EAAA,QAAA;YACA,IAAA;YAEA,IAAA,WAAA,OAAA,SAAA,MAAA,IAAA,GAAA,MAAA,GAAA,GACA,OAAA;gBACA,KAAA;oBACA,kCAAA;oBACA,QAAA,IAAA,OAAA,CAAA,CAAA,EAAA,OAAA,MAAA,CAAA,MAAA,IAAA,IAAA,CAAA,CAAA,EAAA;oBACA;gBACA,KAAA;oBACA,gCAAA;oBACA,QAAA,IAAA,OAAA,CAAA,EAAA,OAAA,MAAA,CAAA,MAAA,IAAA,IAAA,CAAA,EAAA;oBAEA;gBACA,KAAA;oBACA,0BAAA;oBACA,wCAAA;oB,wD;oBAEA,kCAAA;oBACA,IAAA;oBACA,QAAA,IAAA,OAAA,UAAA;oBACA;YACA;YAGA,OAAA;QACA;IACA;AACA;A,I,U,O,kB,a,c,O,G;kBAGA,SAAA,wCAAA;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;I,G;Q,G,O;Y,a;Q,G;Y,G,O;gB,a;Y,G;gB,G,e;oB,a;oB,O;wB,O,I,W;wB,U,S,G;4B,I,W,G;wB;wB,Y;oB;gB,G;oB,I,E,C;iB;a,E;Y,I,E,C;Y,G,O;gB,a;Y,G;gB,G,e;oB,a;oB,O;wB,O,I,wB;wB,U,S,G;4B,I,wB,G;wB;wB,Y;oB;gB,G;oB,I,E,C;iB;a,E;S;Q,I,E,C;Q,G,O;Y,a;Q,G;Y,G,a;gB,a;gB,I;oB,S,I,M;gB;Y,G;gB,G,W;oB,I,E,C;iB;gB,I,E,C;a,E;S,E;K;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AA3EA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;A,I,S;I,I,M,I;I,I,K,I,c;I,I,K,I,K,C,E,I;I,O,G,O;Q,a;Y,U;Q;I,G;Q,C,I,M,G,G,e;Y,a;gB,S;gB,U;gB,Y;Y;Y,O;gB,M;gB,e;gB,kB,I,U;Y;Y,I;gB,uB,S,M;oB,I,U,G;gB;gB,yB,S,M;oB,I,U,G;gB;Y;Q,G;Y,G,W;gB,O;oB,M;oB,Y;gB;Y,G;gB,G,yB;oB,O;wB,U,I,M;oB;gB;a,E;Y,I,E,C;Y,G,W;gB,O;oB,M;oB,Y;gB;Y,G;gB,G,yB;oB,O;wB,Q,I,I;wB,U,I,M;oB;oB,I;wB,O,I,W;wB,S,I,K;wB,U,I,U;wB,U,I,Q;oB;gB;a,E;Y,I,E,C;Y,G,W;gB,O;oB,M;oB,Y;gB;Y,G;gB,G,2B;oB,O;wB,Q,I,I;oB;oB,I;wB,U,I,M;oB;gB;a,E;S,E,K,I,E;Q,I,E,C;Q,I,M,G,G,O;Y,a;Q,G;Y,G,uB;gB,a;gB,O;oB,W;gB;Y;S,E,K,I,E;K,E;A;A,I,kB,E;A,Q,M,G;A,Q,e,G;;;;;AbJA,IAAI,OAAO,KAAO;kBAEH,CAAA,UAEf;;;AcLA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAED,MAAM,EACJ,yBAAyB,EACzB,cAAc,EACf,GAAG,QAAQ;AAEZ,MAAM,uBAAuB,QAAQ,oBACnC,2BACA;AAGF,OAAO,OAAO,GAAG;IACf;AACF;;;ACpCA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAED,SAAS,WAAW,MAAM;IACxB,MAAM,MAAM,CAAC;IACb,IAAI,OAAO,OAAO,OAAO,KAAK,aAAa;QACzC,IAAI,OA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","sources":["node_modules/spinal-env-viewer-plugin-filter/index.js","node_modules/spinal-env-viewer-plugin-filter/js/registerDialog.js","node_modules/spinal-env-viewer-plugin-filter/vue/dialogs/filterByLevelDialog.vue","node_modules/spinal-env-viewer-bim-manager-service/dist/index.js","node_modules/spinal-env-viewer-bim-manager-service/src/index.ts","node_modules/spinal-env-viewer-bim-manager-service/dist/bimObjects/bimService.js","node_modules/spinal-env-viewer-bim-manager-service/src/bimObjects/bimService.ts","node_modules/spinal-env-viewer-plugin-filter/vue/dialogs/advancedParamsDialog.vue","node_modules/spinal-env-viewer-plugin-filter/vue/dialogs/components/filterAdvancedOption.vue","node_modules/spinal-env-viewer-plugin-filter/vue/dialogs/flags.js","node_modules/spinal-env-viewer-plugin-filter/vue/dialogs/delimiter.js","node_modules/spinal-env-viewer-plugin-filter/vue/dialogs/components/chooseOption.vue","node_modules/spinal-env-viewer-plugin-filter/vue/dialogs/components/infoComponent.vue","node_modules/spinal-env-viewer-plugin-filter/vue/dialogs/info.js","node_modules/spinal-env-viewer-plugin-filter/vue/panels/filterPanel.vue","node_modules/spinal-env-viewer-plugin-filter/js/utilities.js","node_modules/spinal-env-viewer-plugin-bimobjectservice/build/createGraphBimObject.js","node_modules/spinal-env-viewer-plugin-bimobjectservice/createGraphBimObject.js","node_modules/spinal-models-bimobject/build/BIMObject.js","node_modules/spinal-models-bimobject/BIMObject.js","node_modules/spinal-env-viewer-panel-manager-service/index.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelManagerService.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalPanelApp.js","node_modules/spinal-env-viewer-panel-manager-service/SpinalMountExtention.js","node_modules/spinal-env-viewer-plugin-filter/vue/panels/components/filterForm.vue","node_modules/spinal-env-viewer-plugin-filter/vue/panels/components/referentialSelection.vue","node_modules/spinal-env-viewer-plugin-filter/vue/panels/components/tableComponent.vue","node_modules/spinal-env-viewer-plugin-filter/vue/panels/components/launchSearch.vue","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/index.js","node_modules/spinal-env-viewer-panel-manager-service_spinalforgeextention/SpinalForgeExtention.js","node_modules/spinal-env-viewer-plugin-filter/js/createToolbar.js","node_modules/spinal-env-viewer-plugin-filter/js/filterByLevelBtn.js","node_modules/spinal-env-viewer-plugin-filter/js/createBtn.js","node_modules/spinal-env-viewer-plugin-filter/js/filterPanelBtn.js","node_modules/spinal-env-viewer-context-geographic-service/build/constants.js","node_modules/spinal-env-viewer-context-geographic-service/src/constants.ts"],"sourcesContent":["import \"./js/registerDialog\";\nimport SpinalWindowSelection from \"./js/createToolbar\";\nimport FilterByLevelBtn from \"./js/filterByLevelBtn\";\nimport FilterPanelBtn from \"./js/filterPanelBtn\"\n\n\nconst TOOLBAR_GROUP_NAME = \"spinalcom\";\n\nconst EXTENSION_NAME = \"spinal-viewer-filter\";\n\n\n\nconst filterManager = SpinalWindowSelection({\n  name: \"spinal-filter-extension\",\n  icon: \"filter_list_alt\",\n  label: \"filter\",\n  subToolbarName: TOOLBAR_GROUP_NAME\n}, [FilterByLevelBtn, FilterPanelBtn])\n\n\nwindow.Autodesk.Viewing.theExtensionManager.registerExtension(\n  EXTENSION_NAME,\n  filterManager\n);\n\nwindow.spinal.ForgeExtentionManager.addExtention(EXTENSION_NAME);","import vue from \"vue\";\n//Dialogs\nimport filterByLevelDialog from \"../vue/dialogs/filterByLevelDialog.vue\";\nimport advancedParamsDialog from \"../vue/dialogs/advancedParamsDialog.vue\";\n\n\n//Panels\nimport filterPanel from \"../vue/panels/filterPanel.vue\";\n\n\nconst {\n  SpinalMountExtention\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst {\n  SpinalForgeExtention\n} = require(\"spinal-env-viewer-panel-manager-service_spinalforgeextention\");\n\nconst dialogs = [{\n    name: \"filterByLevelDialog\",\n    vueMountComponent: vue.extend(filterByLevelDialog),\n    parentContainer: document.body\n  },\n  {\n    name: \"advancedParamsDialog\",\n    vueMountComponent: vue.extend(advancedParamsDialog),\n    parentContainer: document.body\n  }\n];\n\nfor (let index = 0; index < dialogs.length; index++) {\n  SpinalMountExtention.mount(dialogs[index]);\n}\n\n///////////////////////////////////////////////////////////////////////////\n//                     REGISTER PANEL                                    //\n///////////////////////////////////////////////////////////////////////////\n\nlet panels = [{\n  name: \"filterPanel\",\n  vueMountComponent: vue.extend(filterPanel),\n  panel: {\n    title: \"Filter By Attribute\",\n    closeBehaviour: \"hide\"\n  },\n  style: {\n    height: \"475px\",\n    left: \"400px\"\n  }\n}]\n\nfor (let index = 0; index < panels.length; index++) {\n  const element = panels[index];\n  const panelExtension = SpinalForgeExtention.createExtention(element);\n  SpinalForgeExtention.registerExtention(element.name, panelExtension);\n}","<template>\n  <md-dialog :md-active.sync=\"showDialog\"\n             @md-closed=\"closeDialog(false)\">\n    <md-dialog-title>Filter By Level</md-dialog-title>\n\n    <md-dialog-content>\n      <md-field>\n        <label>Level Number</label>\n        <md-input v-model=\"inputValue\"\n                  autofocus></md-input>\n      </md-field>\n\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(false)\">Close</md-button>\n      <md-button class=\"md-primary\"\n                 @click=\"closeDialog(true)\"\n                 :disabled=\"isDisabled()\">Save</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n\n<script>\nimport { bimObjectManagerService } from \"spinal-env-viewer-bim-manager-service\";\n\nexport default {\n  name: \"filterByLevelDialog\",\n  props: [\"onFinised\"],\n  data() {\n    return {\n      showDialog: true,\n      inputValue: \"\"\n    };\n  },\n  methods: {\n    opened() {},\n    removed(closed) {\n      if (closed) {\n        bimObjectManagerService\n          .getBimObjectsByPropertiesName(\n            window.spinal.ForgeViewer.viewer.model,\n            [{ name: \"Level\", value: this.inputValue }]\n          )\n          .then(res => {\n            // console.log(res);\n\n            res = res.map(el => el.dbId);\n            window.spinal.ForgeViewer.viewer.select(res);\n          });\n      }\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === \"function\") {\n        this.onFinised(closeResult);\n      }\n    },\n    isDisabled() {\n      return (\n        this.inputValue.length === 0 ||\n        !new RegExp(/^\\d+$/).test(this.inputValue.trim())\n      );\n    }\n  }\n};\n</script>","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bimService_1 = require(\"./bimObjects/bimService\");\nexports.bimObjectManagerService = bimService_1.default;\n//# sourceMappingURL=index.js.map",null,"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BimObjectManagerService {\n    constructor() { }\n    getAllBimObjectsProperties(model) {\n        return this.getBimObjectProperties([\n            {\n                model: model,\n                selection: this.getLeafDbIds(model).selection\n            }\n        ]);\n    }\n    getBimObjectProperties(argBimObjects) {\n        // let properties = [];\n        let bimOjects = Array.isArray(argBimObjects)\n            ? argBimObjects\n            : [argBimObjects];\n        let promises = bimOjects.map(el => {\n            return this._getProperties(el.model, el.selection);\n        });\n        return Promise.all(promises).then(res => {\n            return res;\n        });\n    }\n    getLeafDbIds(model, rootId) {\n        const tree = model.getInstanceTree();\n        const dbIds = [];\n        if (typeof rootId === \"undefined\") {\n            rootId = [tree.nodeAccess.rootId];\n        }\n        else {\n            rootId = Array.isArray(rootId) ? rootId : [rootId];\n        }\n        rootId.forEach(el => {\n            const queue = [el];\n            let hasChildren;\n            while (queue.length) {\n                let id = queue.pop();\n                hasChildren = false;\n                tree.enumNodeChildren(id, childId => {\n                    hasChildren = true;\n                    queue.push(childId);\n                });\n                if (!hasChildren) {\n                    dbIds.push(id);\n                }\n            }\n        });\n        return { model: model, selection: dbIds };\n    }\n    getBimObjectsByPropertiesName(model, properties) {\n        return this.getAllBimObjectsProperties(model).then(res => {\n            let result = [];\n            for (let i = 0; i < res.length; i++) {\n                const element = res[i];\n                for (let j = 0; j < element.properties.length; j++) {\n                    const property = element.properties[j];\n                    if (typeof this._getLabel(property, properties) !== \"undefined\") {\n                        result.push(property);\n                    }\n                    // }\n                }\n                return result;\n            }\n        });\n    }\n    getBimObjectsValidated(referential, regEx) {\n        return this.getBimObjectProperties(referential).then(res => {\n            return res.map(element => {\n                return {\n                    model: element.model,\n                    properties: element.properties.filter(el => {\n                        return this._isValid(el, regEx);\n                    })\n                };\n            });\n        });\n    }\n    getBimObjectsByName(model, bimObjectName, labelName) {\n        return new Promise(resolve => {\n            model.search(bimObjectName.trim(), (res) => __awaiter(this, void 0, void 0, function* () {\n                let properties = yield this.getBimObjectProperties([\n                    { model: model, selection: res }\n                ]);\n                resolve(properties);\n            }), () => {\n                resolve([]);\n            }, labelName);\n        });\n    }\n    ////////////////////////////////////////////////////////////////////////\n    //                             PRIVATES                               //\n    ////////////////////////////////////////////////////////////////////////\n    _getProperties(model, selection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let properties = selection.map(el => {\n                return new Promise(resolve => {\n                    model.getProperties(el, res => {\n                        // properties.push(res);\n                        resolve(res);\n                    }, err => {\n                        resolve(undefined);\n                    });\n                });\n            });\n            return {\n                model: model,\n                properties: yield Promise.all(properties)\n            };\n        });\n    }\n    _getAllDbIds(model) {\n        var instanceTree = model.getData().instanceTree;\n        var allDbIdsStr = Object.keys(instanceTree.nodeAccess.dbIdToIndex);\n        return allDbIdsStr.map(function (id) {\n            return parseInt(id);\n        });\n    }\n    _getLabel(bim, properties) {\n        for (let i = 0; i < properties.length; i++) {\n            const propertieValue = properties[i].value;\n            const propertyName = properties[i].name;\n            const found = bim.properties.find(el => {\n                return typeof propertieValue === \"undefined\" ||\n                    propertieValue.length === 0\n                    ? el.displayName.toLowerCase() ===\n                        propertyName.trim().toLocaleLowerCase()\n                    : el.displayName.toLowerCase() ===\n                        propertyName.trim().toLocaleLowerCase() &&\n                        propertieValue == el.displayValue;\n            });\n            if (typeof found === \"undefined\") {\n                return undefined;\n            }\n        }\n        return true;\n    }\n    _isValid(el, regEx) {\n        for (let i = 0; i < regEx.length; i++) {\n            let nameRegex = regEx[i].nameRegex;\n            let valueRegex = regEx[i].valueRegex;\n            let found = el.properties.find(res => {\n                if (typeof valueRegex === \"undefined\") {\n                    return nameRegex.test(res.displayName);\n                }\n                return (nameRegex.test(res.displayName) && valueRegex.test(res.displayValue));\n            });\n            if (typeof found === \"undefined\") {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.default = new BimObjectManagerService();\n//# sourceMappingURL=bimService.js.map",null,"<!--\nCopyright 2023 SpinalCom - www.spinalcom.com\n\nThis file is part of SpinalCore.\n\nPlease read all of the following terms and conditions\nof the Free Software license Agreement (\"Agreement\")\ncarefully.\n\nThis Agreement is a legally binding contract between\nthe Licensee (as defined below) and SpinalCom that\nsets forth the terms and conditions that govern your\nuse of the Program. By installing and/or using the\nProgram, you agree to abide by all the terms and\nconditions stated or referenced herein.\n\nIf you do not agree to abide by these terms and\nconditions, do not demonstrate your acceptance and do\nnot install or use the Program.\nYou should have received a copy of the license along\nwith this file. If not, see\n<http://resources.spinalcom.com/licenses.pdf>.\n-->\n\n<template>\n  <md-dialog :md-active.sync=\"showDialog\" @md-closed=\"closeDialog(false)\">\n    <md-dialog-title class=\"title\">\n      <div> ADVANCED FILTER </div>\n\n      <md-menu>\n        <md-button class=\"md-icon-button\" md-menu-trigger>\n          <md-icon>info</md-icon>\n        </md-button>\n\n        <info-component></info-component>\n      </md-menu>\n    </md-dialog-title>\n\n    <md-dialog-content\n      v-if=\"nameConfig && valueConfig\"\n      class=\"_dialogContent md-layout\"\n    >\n      <!--\n        ////////////////////////////////////////////////////////////////////////////\n        //                              Name                                      //\n        ////////////////////////////////////////////////////////////////////////////\n       -->\n      <md-list class=\"_leftSide md-layout-item md-size-50\">\n        <md-subheader style=\"justify-content: center\">Name</md-subheader>\n\n        <choose-option @change=\"onName\" :choosed=\"nameConfig\"> </choose-option>\n\n        <advanced-option\n          v-if=\"nameConfig === '3'\"\n          :regexValue=\"nameRegex\"\n          :flagsValue=\"nameFlag\"\n          :delimiterValue=\"nameDelimiter\"\n        ></advanced-option>\n        <!-- @regex=\"changeNameRegex\"\n          @flags=\"changeNameFlag\"\n          @delimiter=\"changeNameDelimiter\" -->\n      </md-list>\n\n      <!--\n        ////////////////////////////////////////////////////////////////////////////\n        //                              Value                                     //\n        ////////////////////////////////////////////////////////////////////////////\n       -->\n      <md-list class=\"md-layout-item md-size-50\">\n        <md-subheader style=\"justify-content: center\">Value</md-subheader>\n\n        <choose-option @change=\"onValue\" :choosed=\"valueConfig\">\n        </choose-option>\n\n        <advanced-option\n          v-if=\"valueConfig === '3'\"\n          :regexValue=\"valueRegex\"\n          :flagsValue=\"valueFlag\"\n          :delimiterValue=\"valueDelimiter\"\n          @regex=\"changeValueRegex\"\n          @flags=\"changeValueFlag\"\n          @delimiter=\"changeValueDelimiter\"\n        ></advanced-option>\n      </md-list>\n    </md-dialog-content>\n\n    <md-dialog-actions>\n      <md-button class=\"md-primary\" @click=\"closeDialog(false)\"\n        >Close</md-button\n      >\n      <md-button class=\"md-primary\" @click=\"closeDialog(true)\">Save</md-button>\n    </md-dialog-actions>\n  </md-dialog>\n</template>\n\n<script>\nimport AdvancedOption from './components/filterAdvancedOption.vue';\nimport ChooseOption from './components/chooseOption.vue';\nimport InfoComponent from './components/infoComponent.vue';\n\nexport default {\n  name: 'AdvancedParamsDialog',\n  props: ['onFinised'],\n  components: {\n    'advanced-option': AdvancedOption,\n    'choose-option': ChooseOption,\n    'info-component': InfoComponent,\n  },\n  data() {\n    this.callback;\n    this.item;\n    return {\n      showDialog: true,\n\n      //Name\n      nameConfig: null,\n      nameDelimiter: '/',\n      nameRegex: null,\n      nameFlag: [],\n\n      //Value\n      valueConfig: null,\n      valueDelimiter: '/',\n      valueFlag: [],\n      valueRegex: null,\n    };\n  },\n  methods: {\n    opened(option) {\n      this.item = option.params;\n      //Name\n      this.nameConfig = option.params.config.name.option;\n      this.nameRegex = option.params.config.name.regex;\n      this.nameFlag = option.params.config.name.flag;\n      //Value\n      this.valueConfig = option.params.config.value.option;\n      this.valueRegex = option.params.config.value.regex;\n      this.valueFlag = option.params.config.value.flag;\n    },\n    removed(closed) {\n      if (closed) {\n        //Name\n        this.item.config.name.option = this.nameConfig;\n        this.item.config.name.regex = this.nameRegex;\n        this.item.config.name.flag = this.nameFlag\n          ? this.nameFlag.join('')\n          : undefined;\n        //Value\n        this.item.config.value.option = this.valueConfig;\n        this.item.config.value.regex = this.valueRegex;\n        this.item.config.value.flag = this.valueFlag\n          ? this.valueFlag.join('')\n          : undefined;\n      }\n      this.showDialog = false;\n    },\n    closeDialog(closeResult) {\n      if (typeof this.onFinised === 'function') {\n        this.onFinised(closeResult);\n      }\n    },\n    onName(value) {\n      this.nameConfig = value;\n      if (this.nameConfig === '1' || this.nameConfig === '2') {\n        this.nameRegex = undefined;\n        this.nameFlag = undefined;\n      }\n    },\n    changeNameRegex(value) {\n      this.nameRegex = value;\n    },\n    changeNameFlag(value) {\n      this.nameFlag = value;\n    },\n    changeNameDelimiter(value) {\n      this.nameDelimiter = value;\n    },\n    onValue(value) {\n      this.valueConfig = value;\n      if (this.valueConfig === '1' || this.valueConfig === '2') {\n        this.valueRegex = undefined;\n        this.valueFlag = undefined;\n      }\n    },\n    changeValueRegex(value) {\n      this.valueRegex = value;\n    },\n    changeValueFlag(value) {\n      this.valueFlag = value;\n    },\n    changeValueDelimiter(value) {\n      this.valueDelimiter = value;\n    },\n  },\n};\n</script>\n\n<style scoped>\n._dialogContent {\n  width: 600px;\n}\n\n.title {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n._leftSide {\n  border-right: 1px solid;\n}\n\n.subTitle {\n  text-align: center;\n}\n</style>\n","\n<template>\n  <!-- Value Regex Form -->\n  <md-list>\n    <md-list-item>\n      <md-field class=\"_mdField\">\n\n        <md-menu>\n          <!-- md-menu-trigger -->\n          <md-button class=\"md-icon md-prefix\">{{delimiterV}}\n          </md-button>\n\n          <!-- <md-menu-content>\n            <md-menu-item v-for=\"(delimiter,index) in delimiters\"\n                          :key=\"index\"\n                          @click=\"changeDelimiter(delimiter)\">{{delimiter}}\n            </md-menu-item>\n          </md-menu-content> -->\n\n        </md-menu>\n\n        <md-input v-model=\"regex\"\n                  palceholder=\"Regex\"></md-input>\n\n        <span class=\"md-icon md-suffix\">{{delimiterV}}</span>\n\n      </md-field>\n    </md-list-item>\n\n    <md-list-item>\n      <md-field class=\"_mdField\">\n        <label>Flags</label>\n\n        <md-select v-model=\"flags\"\n                   name=\"flags\"\n                   id=\"flags\"\n                   md-dense\n                   multiple>\n\n          <md-option v-for=\"(flag,index) in flagsList\"\n                     :key=\"index\"\n                     :value=\"flag.value\">{{flag.name}}</md-option>\n\n        </md-select>\n\n      </md-field>\n\n    </md-list-item>\n  </md-list>\n  <!-- End Value Regex Form -->\n</template>\n\n<script>\nimport flagsList from \"../flags.js\";\nimport delimiter from \"../delimiter.js\";\n\nexport default {\n  name: \"advancedOption\",\n  props: {\n    regexValue: {\n      required: true\n    },\n    flagsValue: {\n      required: true\n    },\n    delimiterValue: {\n      required: true\n    }\n  },\n  data() {\n    this.flagsList = flagsList;\n    this.delimiters = delimiter;\n\n    return {\n      regex: \"\",\n      delimiterV: \"/\",\n      flags: []\n    };\n  },\n  mounted() {\n    this.regex = this.regexValue;\n    this.flags = [];\n\n    if (typeof this.flagsValue !== \"undefined\") {\n      this.flags = Array.isArray(this.flagsValue)\n        ? this.flagsValue\n        : this.flagsValue.split(\"\");\n    }\n\n    this.delimiterV = this.delimiterValue;\n  },\n  methods: {\n    changeDelimiter(delimiter) {\n      this.delimiterV = delimiter;\n    }\n  },\n  watch: {\n    regex: function(newValue) {\n      this.$emit(\"regex\", newValue);\n    },\n    delimiterV: function(newValue) {\n      this.$emit(\"delimiter\", newValue);\n    },\n    flags: function(newValue) {\n      this.$emit(\"flags\", newValue);\n    }\n  }\n};\n</script>","export default [\n\n  {\n    name: \"global\",\n    value: \"g\",\n    description: \"Don't return after first match\"\n  },\n  {\n    name: \"Multi line\",\n    value: \"m\",\n    description: \"^ and $ match start/end of line\"\n  },\n  {\n    name: \"Insensitive\",\n    value: \"i\",\n    description: \"Case insensitive match\"\n  },\n  {\n    name: \"unicode\",\n    value: \"u\",\n    description: \"Match with full unicode\"\n  }\n]\n","export default [\n  \"/\", \"~\", \"@\", \";\", \"%\", \"`\"\n]","\n<template>\n  <div>\n    <md-list-item>\n      <md-radio v-model=\"option\"\n                value=\"1\" />\n      <span class=\"md-list-item-text\">Equals</span>\n    </md-list-item>\n\n    <md-list-item>\n      <md-radio v-model=\"option\"\n                value=\"2\" />\n      <span class=\"md-list-item-text\">Contains</span>\n    </md-list-item>\n\n    <md-list-item>\n      <md-radio v-model=\"option\"\n                value=\"3\" />\n      <span class=\"md-list-item-text\">Advanced</span>\n\n    </md-list-item>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"chooseOption\",\n  props: {\n    choosed: {\n      required: true,\n      type: String\n    }\n  },\n  data() {\n    return {\n      option: \"1\"\n    };\n  },\n  mounted() {\n    this.option = this.choosed;\n  },\n  watch: {\n    option: function(newValue) {\n      this.$emit(\"change\", newValue);\n    }\n  }\n};\n</script>","<template>\n  <md-menu-content style=\"z-index: 9999 !important\">\n\n    <md-menu-item class=\"information\"\n                  v-for=\"(info,index) in infos\"\n                  :key=\"index\">\n      <!-- <md-avatar class=\"md-avatar-icon\">{{info.id}}</md-avatar> -->\n\n      <div class=\"md-list-item-text\">\n        <span class=\"title\">{{info.title}}</span>\n        <span class=\"description\">{{info.description}}</span>\n      </div>\n    </md-menu-item>\n\n  </md-menu-content>\n</template>\n\n<script>\nimport Infos from \"../info\";\n\nexport default {\n  name: \"infoComponent\",\n  data() {\n    this.infos = Infos;\n    return {};\n  }\n};\n</script>\n\n<style scoped>\n/* ._info {\n  height: 100px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n} */\n\n.information .title {\n  font-style: oblique !important;\n  font-weight: bold !important;\n}\n\n.information .description {\n  color: gray !important;\n}\n</style>\n","module.exports = [\n\n  {\n    id: 1,\n    title: \"Equals\",\n    description: \"Values must be equal\"\n  },\n  {\n    id: 2,\n    title: \"Contains\",\n    description: \" The property must contain the entered value\"\n  },\n  {\n    id: 3,\n    title: \"Advanced\",\n    description: \"Allows you to enter your own regex. \\n Regex allow to identify in a text, subsets respecting a particular pattern\"\n  }\n\n]","<template>\n  <div style=\"height : 100%\">\n    <md-steppers id=\"steppers\"\n                 style=\"width : 100%; height : 100%; overflow : hidden\"\n                 md-vertical\n                 :md-active-step.sync=\"activeStep\"\n                 v-if=\"!loaded\">\n      <md-step id=\"ref\"\n               md-label=\"Choose referential\">\n        <referential-selection :config=\"config\"></referential-selection>\n      </md-step>\n\n      <md-step id=\"layout\"\n               md-label=\"add proprieties\">\n\n        <filter-form-component :data=\"data\"\n                               :loaded=\"loaded\"\n                               @add=\"addProperty\"\n                               @reset=\"reset\"\n                               @delete=\"deleteItem\"\n                               @config=\"advanced\"></filter-form-component>\n\n      </md-step>\n\n      <md-step id=\"launch\"\n               md-label=\"Launch the Search\">\n        <launch-search-component :data=\"data\"\n                                 @filter=\"filter\"></launch-search-component>\n      </md-step>\n\n    </md-steppers>\n\n    <div v-if=\"loaded\"\n         class=\"isLoaded\">\n      <md-progress-spinner class=\"spiner\"\n                           md-mode=\"indeterminate\"></md-progress-spinner>\n    </div>\n\n  </div>\n</template>\n\n\n\n<script>\nimport utilities from \"../../js/utilities\";\n\nimport { bimObjectManagerService } from \"spinal-env-viewer-bim-manager-service\";\n\nimport { spinalPanelManagerService } from \"spinal-env-viewer-panel-manager-service\";\n\nimport filterFormComponent from \"./components/filterForm.vue\";\nimport referentialSelection from \"./components/referentialSelection.vue\";\nimport launchSearchComponent from \"./components/launchSearch.vue\";\n\nconst PROPERTY_MODEL = {\n  id: 1,\n  name: \"\",\n  value: \"\",\n  required: false,\n  config: {\n    name: {\n      option: \"1\",\n      regex: undefined,\n      flag: []\n    },\n    value: {\n      option: \"1\",\n      regex: undefined,\n      flag: []\n    }\n  }\n};\n\nexport default {\n  name: \"filterPanel\",\n  components: {\n    \"filter-form-component\": filterFormComponent,\n    \"referential-selection\": referentialSelection,\n    \"launch-search-component\": launchSearchComponent\n  },\n  data() {\n    return {\n      data: [Object.assign({}, PROPERTY_MODEL)],\n      loaded: false,\n      activeStep: \"\",\n      config: { useAllDbIds: true, referential: [] }\n    };\n  },\n  methods: {\n    opened() {\n      this.activeStep = \"ref\";\n    },\n\n    addProperty() {\n      let obj = {\n        id: 1,\n        name: \"\",\n        value: \"\",\n        required: false,\n        config: {\n          name: {\n            option: \"1\",\n            regex: undefined,\n            flag: []\n          },\n          value: {\n            option: \"1\",\n            regex: undefined,\n            flag: []\n          }\n        }\n      };\n\n      obj.id = this.data[this.data.length - 1].id + 1;\n\n      this.data.push(obj);\n    },\n    reset() {\n      this.data = [PROPERTY_MODEL];\n    },\n    deleteItem(item) {\n      this.data = this.data.filter(el => el.id !== item.id);\n    },\n\n    advanced(item) {\n      spinalPanelManagerService.openPanel(\"advancedParamsDialog\", {\n        params: item\n      });\n    },\n\n    getBimObjectNotValid(model, bimValidated) {\n      let found = this.config.referential.find(el => {\n        return el.model.id === model.id;\n      });\n\n      if (typeof found !== \"undefined\") {\n        return found.selection.filter(el => {\n          return bimValidated.indexOf(el) === -1;\n        });\n      }\n\n      return [];\n    },\n\n    checkOnSpinalAttributes(activated, regExp) {\n      let leaftBims = this.config.referential.map(select => {\n        return bimObjectManagerService.getLeafDbIds(\n          select.model,\n          select.selection\n        );\n      });\n\n      if (!activated) return Promise.resolve(leaftBims);\n\n      let promises = utilities.getValidatedBimOnSpinalAttribut(\n        leaftBims,\n        regExp\n      );\n\n      return Promise.all(promises).then(res => {\n        return res.map(el => {\n          el[\"selection\"] = this.getBimObjectNotValid(el.model, el.valid);\n          return el;\n        });\n      });\n    },\n\n    checkOnBimAttributes(activated, bimValidated, regExp) {\n      if (!activated) return Promise.resolve(bimValidated);\n\n      return bimObjectManagerService\n        .getBimObjectsValidated(this.config.referential, regExp)\n        .then(res => {\n          return res.map(el => {\n            let found = bimValidated.find(el2 => {\n              return el.model.id === el2.model.id;\n            });\n\n            return {\n              model: el.model,\n              ids:\n                typeof found !== \"undefined\"\n                  ? [...el.properties.map(el2 => el2.dbId), ...found.ids]\n                  : el.properties.map(el2 => el2.dbId)\n            };\n          });\n        });\n    },\n\n    filter(params) {\n      let regExp = params.regex.filter(el => {\n        return typeof el.nameRegex !== \"undefined\";\n      });\n\n      if (regExp.length > 0) {\n        this.loaded = true;\n        // // let bimValidated = this.config.referential.map(el => {\n        // //   return {\n        // //     model: el.model,\n        // //     ids: []\n        // //   };\n        // // });\n\n        this.checkOnSpinalAttributes(params.spinalAttributes, regExp)\n          .then(values => {\n            let bimValidated = values.map(el => {\n              return { model: el.model, ids: el.valid ? [...el.valid] : [] };\n            });\n\n            this.checkOnBimAttributes(\n              params.bimAttributes,\n              bimValidated,\n              regExp\n            )\n              .then(res => {\n                try {\n                  window.spinal.ForgeViewer.viewer.impl.selector.setAggregateSelection(\n                    res\n                  );\n                } catch (err) {\n                  let ids = [];\n                  res.forEach(el => {\n                    ids = [...el.ids];\n                  });\n\n                  window.spinal.ForgeViewer.viewer.select(ids);\n                }\n\n                this.loaded = false;\n              })\n              .catch(err => {\n                console.error(err);\n                this.loaded = false;\n              });\n          })\n          .catch(err => {\n            console.error(err);\n            this.loaded = false;\n          });\n\n        // this.loaded = true;\n        /*\n        bimObjectManagerService\n          .getBimObjectsValidated(this.config.referential, regExp)\n          .then(res => {\n            res = res.map(el => {\n              return {\n                model: el.model,\n                ids: el.properties.map(el2 => el2.dbId)\n              };\n            });\n\n            try {\n              window.spinal.ForgeViewer.viewer.impl.selector.setAggregateSelection(\n                res\n              );\n            } catch (err) {\n              let ids = [];\n              res.forEach(el => {\n                ids = [...el.ids];\n              });\n\n              window.spinal.ForgeViewer.viewer.select(ids);\n            }\n\n            this.loaded = false;\n          });\n\n\n\n      */\n      } else {\n        alert(\"Please add a valid filter\");\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.isLoaded {\n  display: flex;\n  margin: auto;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.spiner {\n  position: absolute;\n  top: calc(50% - 30px);\n  right: calc(50% - 30px);\n}\n</style>\n","import { serviceDocumentation } from \"spinal-env-viewer-plugin-documentation-service\";\nimport bimobjectservice from \"spinal-env-viewer-plugin-bimobjectservice\";\n\nconst utilities = {\n  getValidatedBimOnSpinalAttribut(argModel, argRegex) {\n    return argModel.map(async element => {\n      return {\n        model: element.model,\n        valid: (await Promise.all(\n          element.selection.map(dbId => {\n            return this._isValid(dbId, argRegex).then(isValid => {\n              if (isValid) return dbId;\n              return;\n            });\n          })\n        )).filter(el => typeof el !== \"undefined\")\n      };\n    });\n  },\n\n  _isValid(dbId, argRegex) {\n    return bimobjectservice.getBIMObject(dbId).then(bimNode => {\n      if (typeof bimNode === \"undefined\") return false;\n\n      return serviceDocumentation.getAllAttributes(bimNode).then(res => {\n        res = res.map(el => {\n          return {\n            label: el.label.get().trim(),\n            value: el.value.get().trim()\n          };\n        });\n\n        return this._execRegex(res, argRegex);\n      });\n    });\n  },\n\n  _execRegex(el, argRegex) {\n    for (let i = 0; i < argRegex.length; i++) {\n      let nameRegex = argRegex[i].nameRegex;\n      let valueRegex = argRegex[i].valueRegex;\n\n      let found = el.find(res => {\n        if (typeof valueRegex === \"undefined\") {\n          return nameRegex.test(res.label);\n        }\n\n        return nameRegex.test(res.label) && valueRegex.test(res.value);\n      });\n\n      if (typeof found === \"undefined\") {\n        return false;\n      }\n    }\n\n    return true;\n  }\n};\n\nexport default utilities;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nlet createGraph = (() => {\n  var _ref = _asyncToGenerator(function* () {\n    const forgeFile = yield window.spinal.spinalSystem.getModel();\n\n    if (!forgeFile.hasOwnProperty(\"graph\")) {\n      forgeFile.add_attr({\n        graph: new _spinalModelGraph.SpinalGraph()\n      });\n    }\n\n    return forgeFile.graph;\n  });\n\n  return function createGraph() {\n    return _ref.apply(this, arguments);\n  };\n})();\n\nlet createContext = (() => {\n  var _ref2 = _asyncToGenerator(function* () {\n    const graph = yield this.getGraph();\n    let context = yield graph.getContext(BIM_OBJECT_CONTEXT_TYPE);\n\n    if (context === undefined) {\n      context = new _spinalModelGraph.SpinalContext(BIM_OBJECT_CONTEXT_TYPE);\n      yield graph.addContext(context);\n    }\n\n    return context;\n  });\n\n  return function createContext() {\n    return _ref2.apply(this, arguments);\n  };\n})();\n\nvar _spinalModelGraph = require(\"spinal-model-graph\");\n\nvar _spinalModelsBimobject = require(\"spinal-models-bimobject\");\n\nvar _spinalModelsBimobject2 = _interopRequireDefault(_spinalModelsBimobject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst BIM_OBJECT_CONTEXT_TYPE = \"BIMObjectContext\";\nconst BIM_OBJECT_NODE_TYPE = \"BIMObject\";\nconst BIM_OBJECT_RELATION_NAME = \"hasBIMObject\";\nconst REFERENCE_OBJECT_RELATION_NAME = \"hasReferenceObject\";\nconst BIM_OBJECT_RELATION_TYPE = _spinalModelGraph.SPINAL_RELATION_PTR_LST_TYPE;\n\nconst bimObjectService = {\n  graph: null,\n  context: null,\n  getGraph() {\n    if (this.graph === null) {\n      this.graph = createGraph();\n    }\n\n    return this.graph;\n  },\n  getContext() {\n    if (this.context === null) {\n      this.context = createContext.call(this);\n    }\n\n    return this.context;\n  },\n  createBIMObject(dbid, name) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let BIMObjNode = yield _this.getBIMObject(dbid);\n\n      if (BIMObjNode === undefined) {\n        const BIMObject = new _spinalModelsBimobject2.default(dbid, name);\n\n        BIMObjNode = new _spinalModelGraph.SpinalNode(name, BIM_OBJECT_NODE_TYPE, BIMObject);\n        BIMObjNode.info.add_attr({\n          dbid: dbid\n        });\n\n        const BIMObjectContext = yield _this.getContext();\n\n        yield BIMObjectContext.addChildInContext(BIMObjNode, BIM_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE, BIMObjectContext);\n      }\n\n      return BIMObjNode;\n    })();\n  },\n  getBIMObject(dbid) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const BIMObjectContext = yield _this2.getContext(BIM_OBJECT_CONTEXT_TYPE);\n      const BIMObjectArray = yield BIMObjectContext.getChildren([BIM_OBJECT_RELATION_NAME]);\n\n      for (let BIMObject of BIMObjectArray) {\n        if (BIMObject.info.dbid.get() === dbid) {\n          return BIMObject;\n        }\n      }\n    })();\n  },\n  addBIMObject(context, parent, dbId, name) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let node;\n\n      if (dbId instanceof _spinalModelGraph.SpinalNode) {\n        node = dbId;\n      } else {\n        node = yield _this3.getBIMObject(dbId);\n\n        if (node === undefined) {\n          node = yield _this3.createBIMObject(dbId, name);\n        }\n      }\n\n      yield parent.addChildInContext(node, BIM_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE, context);\n\n      return node;\n    })();\n  },\n  removeBIMObject(parent, child) {\n    return parent.removeChild(child, BIM_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE);\n  },\n  deleteBIMObject(dbId) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const context = yield _this4.getContext();\n      const children = yield context.getChildrenInContext();\n      const child = children.find(function (node) {\n        return node.info.dbId === dbId;\n      });\n\n      if (child === undefined) {\n        throw Error(\"The dbId has no BIM object\");\n      }\n\n      return child.removeFromGraph();\n    })();\n  },\n  addReferenceObject(parent, dbId, name) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      let node;\n\n      if (dbId instanceof _spinalModelGraph.SpinalNode) {\n        node = dbId;\n      } else {\n        node = yield _this5.getBIMObject(dbId);\n\n        if (node === undefined) {\n          node = yield _this5.createBIMObject(dbId, name);\n        }\n      }\n\n      yield parent.addChild(node, REFERENCE_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE);\n\n      return node;\n    })();\n  },\n  removeReferenceObject(parent, child) {\n    return parent.removeChild(child, REFERENCE_OBJECT_RELATION_NAME, BIM_OBJECT_RELATION_TYPE);\n  }\n};\n\nbimObjectService.constants = {\n  BIM_OBJECT_CONTEXT_TYPE,\n  BIM_OBJECT_NODE_TYPE,\n  BIM_OBJECT_RELATION_NAME,\n  REFERENCE_OBJECT_RELATION_NAME,\n  BIM_OBJECT_RELATION_TYPE\n};\n\nexports.default = bimObjectService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import {\n  SpinalGraph,\n  SpinalContext,\n  SpinalNode,\n  SPINAL_RELATION_PTR_LST_TYPE\n} from \"spinal-model-graph\";\nimport SpinalBIMObject from \"spinal-models-bimobject\";\n\nconst BIM_OBJECT_CONTEXT_TYPE = \"BIMObjectContext\";\nconst BIM_OBJECT_NODE_TYPE = \"BIMObject\";\nconst BIM_OBJECT_RELATION_NAME = \"hasBIMObject\";\nconst REFERENCE_OBJECT_RELATION_NAME = \"hasReferenceObject\";\nconst BIM_OBJECT_RELATION_TYPE = SPINAL_RELATION_PTR_LST_TYPE;\n\nasync function createGraph() {\n  const forgeFile = await window.spinal.spinalSystem.getModel();\n\n  if (!forgeFile.hasOwnProperty(\"graph\")) {\n    forgeFile.add_attr({\n      graph: new SpinalGraph()\n    });\n  }\n\n  return forgeFile.graph;\n}\n\nasync function createContext() {\n  const graph = await this.getGraph();\n  let context = await graph.getContext(BIM_OBJECT_CONTEXT_TYPE);\n\n  if (context === undefined) {\n    context = new SpinalContext(BIM_OBJECT_CONTEXT_TYPE);\n    await graph.addContext(context);\n  }\n\n  return context;\n}\n\nconst bimObjectService = {\n  graph: null,\n  context: null,\n  getGraph() {\n    if (this.graph === null) {\n      this.graph = createGraph();\n    }\n\n    return this.graph;\n  },\n  getContext() {\n    if (this.context === null) {\n      this.context = createContext.call(this);\n    }\n\n    return this.context;\n  },\n  async createBIMObject(dbid, name) {\n    let BIMObjNode = await this.getBIMObject(dbid);\n\n    if (BIMObjNode === undefined) {\n      const BIMObject = new SpinalBIMObject(dbid, name);\n\n      BIMObjNode = new SpinalNode(name, BIM_OBJECT_NODE_TYPE, BIMObject);\n      BIMObjNode.info.add_attr({\n        dbid: dbid\n      });\n\n      const BIMObjectContext = await this.getContext();\n\n      await BIMObjectContext.addChildInContext(\n        BIMObjNode,\n        BIM_OBJECT_RELATION_NAME,\n        BIM_OBJECT_RELATION_TYPE,\n        BIMObjectContext\n      );\n    }\n\n    return BIMObjNode;\n  },\n  async getBIMObject(dbid) {\n    const BIMObjectContext = await this.getContext(BIM_OBJECT_CONTEXT_TYPE);\n    const BIMObjectArray = await BIMObjectContext.getChildren([\n      BIM_OBJECT_RELATION_NAME\n    ]);\n\n    for (let BIMObject of BIMObjectArray) {\n      if (BIMObject.info.dbid.get() === dbid) {\n        return BIMObject;\n      }\n    }\n  },\n  async addBIMObject(context, parent, dbId, name) {\n    let node;\n\n    if (dbId instanceof SpinalNode) {\n      node = dbId;\n    } else {\n      node = await this.getBIMObject(dbId);\n\n      if (node === undefined) {\n        node = await this.createBIMObject(dbId, name);\n      }\n    }\n\n    await parent.addChildInContext(\n      node,\n      BIM_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE,\n      context\n    );\n\n    return node;\n  },\n  removeBIMObject(parent, child) {\n    return parent.removeChild(\n      child,\n      BIM_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE\n    );\n  },\n  async deleteBIMObject(dbId) {\n    const context = await this.getContext();\n    const children = await context.getChildrenInContext();\n    const child = children.find(node => node.info.dbId === dbId);\n\n    if (child === undefined) {\n      throw Error(\"The dbId has no BIM object\");\n    }\n\n    return child.removeFromGraph();\n  },\n  async addReferenceObject(parent, dbId, name) {\n    let node;\n\n    if (dbId instanceof SpinalNode) {\n      node = dbId;\n    } else {\n      node = await this.getBIMObject(dbId);\n\n      if (node === undefined) {\n        node = await this.createBIMObject(dbId, name);\n      }\n    }\n\n    await parent.addChild(\n      node,\n      REFERENCE_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE\n    );\n\n    return node;\n  },\n  removeReferenceObject(parent, child) {\n    return parent.removeChild(\n      child,\n      REFERENCE_OBJECT_RELATION_NAME,\n      BIM_OBJECT_RELATION_TYPE\n    );\n  }\n};\n\nbimObjectService.constants = {\n  BIM_OBJECT_CONTEXT_TYPE,\n  BIM_OBJECT_NODE_TYPE,\n  BIM_OBJECT_RELATION_NAME,\n  REFERENCE_OBJECT_RELATION_NAME,\n  BIM_OBJECT_RELATION_TYPE\n};\n\nexport default bimObjectService;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\nexports.default = SpinalBIMObject;\n\nspinalCore.register_models([SpinalBIMObject]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL0JJTU9iamVjdC5qcyJdLCJuYW1lcyI6WyJzcGluYWxDb3JlIiwicmVxdWlyZSIsImdsb2JhbFR5cGUiLCJ3aW5kb3ciLCJnbG9iYWwiLCJTcGluYWxCSU1PYmplY3QiLCJNb2RlbCIsImNvbnN0cnVjdG9yIiwiX2lkIiwiX25hbWUiLCJGaWxlU3lzdGVtIiwiX3NpZ19zZXJ2ZXIiLCJhZGRfYXR0ciIsImlkIiwibmFtZSIsInJlZ2lzdGVyX21vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxhQUFhQyxRQUFRLHlCQUFSLENBQW5CO0FBQ0EsTUFBTUMsYUFBYSxPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLEdBQWdDQyxNQUFoQyxHQUF5Q0QsTUFBNUQ7O0FBS0EsTUFBTUUsZUFBTixTQUE4QkgsV0FBV0ksS0FBekMsQ0FBK0M7QUFDN0NDLGNBQVlDLEdBQVosRUFBaUJDLEtBQWpCLEVBQXdCO0FBQ3RCO0FBQ0EsUUFBSUMsV0FBV0MsV0FBZixFQUE0QjtBQUMxQixXQUFLQyxRQUFMLENBQWM7QUFDWkMsWUFBSUwsR0FEUTtBQUVaTSxjQUFNTDtBQUZNLE9BQWQ7QUFJRDtBQUNGO0FBVDRDOztrQkFhaENKLGU7O0FBQ2ZMLFdBQVdlLGVBQVgsQ0FBMkIsQ0FBQ1YsZUFBRCxDQUEzQiIsImZpbGUiOiJCSU1PYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcGluYWxDb3JlID0gcmVxdWlyZShcInNwaW5hbC1jb3JlLWNvbm5lY3RvcmpzXCIpO1xuY29uc3QgZ2xvYmFsVHlwZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB3aW5kb3c7XG5cblxuXG5cbmNsYXNzIFNwaW5hbEJJTU9iamVjdCBleHRlbmRzIGdsb2JhbFR5cGUuTW9kZWwge1xuICBjb25zdHJ1Y3RvcihfaWQsIF9uYW1lKSB7XG4gICAgc3VwZXIoKTtcbiAgICBpZiAoRmlsZVN5c3RlbS5fc2lnX3NlcnZlcikge1xuICAgICAgdGhpcy5hZGRfYXR0cih7XG4gICAgICAgIGlkOiBfaWQsXG4gICAgICAgIG5hbWU6IF9uYW1lXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBTcGluYWxCSU1PYmplY3Q7XG5zcGluYWxDb3JlLnJlZ2lzdGVyX21vZGVscyhbU3BpbmFsQklNT2JqZWN0XSk7Il19","const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\n\n\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\n\nexport default SpinalBIMObject;\nspinalCore.register_models([SpinalBIMObject]);","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst G_root = typeof window == \"undefined\" ? global : window;\nconst SpinalPanelManagerService = require(\"./SpinalPanelManagerService\");\nconst SpinalPanelApp = require(\"./SpinalPanelApp\");\n\nif (typeof G_root.spinal === \"undefined\") G_root.spinal = {};\nif (typeof G_root.spinal.spinalPanelManagerService === \"undefined\")\n  G_root.spinal.spinalPanelManagerService = new SpinalPanelManagerService();\nconst SpinalMountExtention = require(\"./SpinalMountExtention.js\")(\n  G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  spinalPanelManagerService: G_root.spinal.spinalPanelManagerService,\n  SpinalPanelApp,\n  SpinalMountExtention,\n  install(Vue) {\n    Vue.prototype.$spinalPanelManagerService =\n      G_root.spinal.spinalPanelManagerService;\n  }\n};\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Containter like service to register and get applications relative to a hookname\n *\n * @property {object} panels key = panelName, value = an instance of SpinalPanelApp\n * @class SpinalPanelManagerService\n */\nclass SpinalPanelManagerService {\n  /**\n   *Creates an instance of SpinalPanelManagerService.\n   * @memberof SpinalPanelManagerService\n   */\n  constructor() {\n    this.panels = {};\n  }\n\n  /**\n   * method to register an Panel Application\n   *\n   * @param {string} panelName the name of the panel\n   * @param {SpinalPanelApp} spinalPanelApp the application\n   * @memberof SpinalPanelManagerService\n   */\n  registerPanel(panelName, spinalPanelApp) {\n    this.panels[panelName] = spinalPanelApp;\n  }\n\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  openPanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].openPanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  closePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].closePanel(option);\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {*} panelName\n   * @param {*} option\n   * @returns {bool}\n   * @memberof SpinalPanelManagerService\n   */\n  tooglePanel(panelName, option) {\n    if (typeof this.panels[panelName] !== \"undefined\")\n      return this.panels[panelName].tooglePanel(option);\n    return false;\n  }\n}\n\nmodule.exports = SpinalPanelManagerService;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n * Base interface like class of a panel\n *\n * @class SpinalPanelApp\n */\nclass SpinalPanelApp {\n  constructor() {}\n\n  openPanel(option) {}\n  closePanel(option) {}\n  tooglePanel(option) {}\n}\n\nmodule.exports = SpinalPanelApp;\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (!option.vueMountComponent) {\n    throw new Error(\"mount : missing option vueMountComponent\");\n  }\n\n  cfg.name = option.name || \"SpinalMount\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.parentContainer = option.parentContainer || document.body;\n  return cfg;\n}\n\nfunction getDialog() {\n  if (!this.dialog) {\n    this.dialog = document.createElement(\"div\");\n    const _compo = document.createElement(\"div\");\n    this.dialog.className = \"spinal-modal-container\";\n    this.cfg.parentContainer.appendChild(this.dialog);\n    this.dialog.appendChild(_compo);\n    this.compoment = new this.cfg.vueMountComponent({\n      propsData: {\n        onFinised: this.onFinised.bind(this)\n      }\n    }).$mount(_compo);\n  }\n  return this.dialog;\n}\n\n/**\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { mount }\n */\nmodule.exports = function(spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n```js\n{\n  name: \"myCustomDialogName\",\n  vueMountComponent: Vue.extend(aVueCompomentDialog),\n  parentContainer: document.body\n}```\n     *\n     * @param {*} option\n     */\n    mount(option) {\n      let cfg = configInit(option);\n      const SpinalMount = class extends SpinalPanelApp {\n        constructor() {\n          super();\n          this.cfg = cfg;\n          this.dialog = null;\n          this.compoment = null;\n        }\n\n        openPanel(opt) {\n          getDialog.call(this);\n          this.compoment.opened(opt);\n        }\n        closePanel(opt) {\n          if (this.dialog !== null) {\n            this.compoment.removed(opt);\n            this.dialog.remove();\n            this.dialog = null;\n            this.compoment = null;\n          }\n        }\n\n        tooglePanel(opt) {\n          if (this.dialog !== null) {\n            this.closePanel(opt);\n          } else {\n            this.openPanel(opt);\n          }\n        }\n\n        /**\n         * called when dialog closed by the dialog itself\n         */\n        onFinised(closeResult) {\n          this.closePanel(closeResult);\n        }\n      };\n      let SpinalMountInstance = new SpinalMount();\n      spinalPanelManagerService.registerPanel(cfg.name, SpinalMountInstance);\n    }\n  };\n};\n","\n<template>\n  <!-- <div style=\"width : 100%; height : 100%; overflow : hidden\"> -->\n  <div class=\"_container\">\n    <div class=\"header\">\n\n      <md-button class=\"_btn md-dense md-primary\"\n                 @click=\"addProperty\">\n        <md-icon>add</md-icon>\n        ADD PROPERTY\n      </md-button>\n\n      <md-button class=\"_btn md-dense md-primary\"\n                 @click=\"reset\">\n        <md-icon>restore</md-icon>\n        RESET\n      </md-button>\n\n      <!-- <md-button class=\"_btn md-dense md-primary\"\n                 @click=\"filter\">\n        <md-icon>check</md-icon>\n        SEARCH\n      </md-button> -->\n\n    </div>\n\n    <md-content class=\"_content md-scrollbar\">\n\n      <div class=\"_items\"\n           v-for=\"item in data\"\n           :key=\"item.id\">\n\n        <md-field class=\"_mdField\">\n          <label>Name</label>\n\n          <md-input v-model=\"item.name\"\n                    palceholder=\"Name\"\n                    :disabled=\"isDisabled(item,'name')\"></md-input>\n\n          <span class=\"md-helper-text\"\n                v-if=\"isDisabled(item,'name')\">Personalized</span>\n        </md-field>\n\n        <md-field class=\"_mdField\">\n          <label>Value</label>\n\n          <md-input v-model=\"item.value\"\n                    palceholder=\"Value\"\n                    :disabled=\"isDisabled(item,'value')\"></md-input>\n\n          <span class=\"md-helper-text\"\n                v-if=\"isDisabled(item,'value')\">Personalized</span>\n        </md-field>\n\n        <!-- <div class=\"md-layout-item md-size-10\"></div> -->\n\n        <div class=\"_mdField iconButton\">\n\n          <md-button class=\"md-icon-button\"\n                     title=\"config\"\n                     @click=\"advanced(item)\">\n            <md-icon class=\"_icon\">tune</md-icon>\n          </md-button>\n\n          <md-button class=\"md-icon-button\"\n                     title=\"remove\"\n                     v-if=\"item.id !== 1\"\n                     @click=\"deleteItem(item)\">\n            <md-icon class=\"_icon\">clear</md-icon>\n          </md-button>\n        </div>\n\n      </div>\n    </md-content>\n\n  </div>\n\n  <!-- <div class=\"_container\"\n         v-if=\"loaded\">\n      <md-content class=\"content2\"\n                  v-if=\"loaded\">\n        loading...\n      </md-content>\n    </div> -->\n  <!-- </div> -->\n</template>\n\n\n<script>\nexport default {\n  name: \"filterFormComponent\",\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    loaded: {\n      type: Boolean,\n      required: true\n    }\n  },\n  methods: {\n    addProperty() {\n      this.$emit(\"add\");\n    },\n    reset() {\n      this.$emit(\"reset\");\n    },\n    deleteItem(item) {\n      this.$emit(\"delete\", item);\n    },\n    filter() {\n      this.$emit(\"validate\");\n    },\n\n    advanced(item) {\n      this.$emit(\"config\", item);\n    },\n    isDisabled(item, name) {\n      let disabled = item.config[name].option == 3;\n\n      item[name] = disabled ? \"\" : item[name];\n\n      return disabled;\n    }\n  }\n};\n</script>\n\n<style scoped>\n._container {\n  width: 100%;\n  height: 100%;\n}\n\n._container .header {\n  width: 100%;\n  height: calc(10%);\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n\n._container .header ._btn {\n  padding-right: 10px;\n  border: 1px solid #448aff;\n}\n\n._container ._content {\n  width: calc(100%);\n  height: 150px; /* calc(90% - 15px); */\n  overflow: auto;\n  padding-left: 10px;\n  padding-right: 10px;\n  background-color: transparent;\n  /* overflow-y: auto; */\n}\n\n._container ._content ._items {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n}\n\n._mdField {\n  margin-right: 15px;\n}\n\n.iconButton {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  /* align-items: center; */\n}\n\n._icon {\n  margin-left: -15px;\n}\n</style>\n","<template>\n  <div>\n    <md-checkbox v-model=\"config.useAllDbIds\"\n                 @change=\"changeMode\"\n                 class=\"md-primary\">\n      Use whole digital twin\n    </md-checkbox>\n\n    <div v-if=\"!config.useAllDbIds\">\n      <md-button @click=\"addSelection\">\n        <md-icon>add</md-icon>\n        <md-tooltip md-delay=\"300\">Add selection to referential</md-tooltip>\n      </md-button>\n\n      <!-- <md-button @click=\"addCategorySelected\">\n        <md-icon>add</md-icon>\n        Add Category selected\n        <md-tooltip md-delay=\"300\">Add Category selected to referential\n        </md-tooltip>\n      </md-button> -->\n\n      <md-button @click=\"clearReferential\">\n        <md-icon>clear</md-icon>\n        <md-tooltip md-delay=\"300\">Clear referential</md-tooltip>\n      </md-button>\n\n      <md-button @click=\"showReferential\">\n        <md-icon>visibility</md-icon>\n        <md-tooltip md-delay=\"300\">Show referential</md-tooltip>\n      </md-button>\n\n      <div class=\"historySelected\">\n        <table-component :bimSelected=\"config.referential\"></table-component>\n        <!--<p>{{getObjectsSelectedLength()}} objects selected</p>-->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { bimObjectManagerService } from \"spinal-env-viewer-bim-manager-service\";\nimport TableComponent from \"./tableComponent.vue\";\n// import { getAllLeafDbIds, getLeafDbIds } from \"../js/utilitiesDbIds\";\nexport default {\n  name: \"referentialSelection\",\n  components: {\n    \"table-component\": TableComponent\n  },\n  props: {\n    // update: {\n    //   type: String,\n    //   required: true\n    // },\n    config: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    this.viewer = window.spinal.ForgeViewer.viewer;\n    this.allDbIds = (() => {\n      try {\n        return this.viewer.getVisibleModels().map(el => {\n          return bimObjectManagerService.getLeafDbIds(el);\n        });\n      } catch (error) {\n        return [bimObjectManagerService.getLeafDbIds(this.viewer.model)];\n      }\n    })();\n\n    return {};\n  },\n  //   watch: {\n  //     update: {\n  //       immediate: true,\n  //       handler() {\n  //         if (this.update != \"opened\") {\n  //           return;\n  //         }\n  //         if (this.config.useAllDbIds) {\n  //           this.config.referential = this.allDbIds.slice();\n  //         }\n  //       }\n  //     }\n  //   },\n  mounted() {\n    this.config.referential = this.allDbIds;\n  },\n  methods: {\n    /**\n     * Updates the referential when the mode changes.\n     */\n    changeMode(newValue) {\n      if (!newValue) {\n        this.clearReferential();\n      } else {\n        this.config.referential = this.allDbIds;\n      }\n      //   this.$emit(\"configChanged\");\n    },\n    /**\n     * Adds the current selection to the referential. Discards all non-leaf dbIds.\n     */\n    addSelection() {\n      if (this.config.useAllDbIds) this.config.referential = [];\n      const aggregateSelection = this.viewer.getAggregateSelection();\n      let referentialCopy = Object.assign([], this.config.referential);\n\n      for (let select of aggregateSelection) {\n        // let leafs = bimObjectManagerService.getLeafDbIds(\n        //   select.model,\n        //   select.selection\n        // );\n\n        let found = referentialCopy.find(el => el.model.id === select.model.id);\n\n        if (found) {\n          found.selection.push(...select.selection);\n        } else {\n          referentialCopy.push(select);\n        }\n      }\n\n      this.config.referential = referentialCopy;\n\n      //   this.config.referential = [...new Set(this.config.referential)];\n      //   this.$emit(\"configChanged\");\n    },\n\n    /**\n     * Empties the referential.\n     */\n    clearReferential() {\n      this.config.referential = [];\n      //   this.$emit(\"configChanged\");\n    },\n    /**\n     * Selects all the dbIds in the referential.\n     */\n    showReferential() {\n      this.config.referential.forEach(el => {\n        this.viewer.impl.selector.setSelection(el.selection, el.model);\n      });\n    },\n    getObjectsSelectedLength() {\n      let length = 0;\n\n      this.config.referential.forEach(el => {\n        length += el.selection.length;\n      });\n\n      return length;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.historySelected {\n  height: 150px;\n  margin-top: 20px;\n  /* margin-left: 30px; */\n  color: green;\n  font-size: 20px;\n}\n</style>","<template>\n\n  <md-table class=\"_tableComponent md-scrollbar\">\n    <md-table-row>\n      <md-table-head md-numeric>dbId</md-table-head>\n      <md-table-head>Name</md-table-head>\n      <md-table-head></md-table-head>\n      <md-table-head></md-table-head>\n    </md-table-row>\n\n    <md-table-row v-for=\"(bim,index) in data\"\n                  :key=\"index\">\n      <md-table-cell md-numeric>{{bim.dbId}}</md-table-cell>\n      <md-table-cell>{{bim.name}}</md-table-cell>\n\n      <md-table-cell>\n        <md-button class=\"md-icon-button md-dense\"\n                   @click=\"seeItem(bim.dbId)\">\n          <md-icon>visibility</md-icon>\n        </md-button>\n      </md-table-cell>\n\n      <md-table-cell>\n        <md-button class=\"md-icon-button md-dense\"\n                   @click=\"deleteItem(bim.dbId)\">\n          <md-icon>clear</md-icon>\n        </md-button>\n      </md-table-cell>\n    </md-table-row>\n\n  </md-table>\n\n</template>\n\n<script>\nexport default {\n  name: \"tableComponent\",\n  props: [\"bimSelected\"],\n  data() {\n    return {\n      data: []\n    };\n  },\n\n  methods: {\n    getObjectsSelectedInfo() {\n      return this.bimSelected.map(el => {\n        const { model, selection } = el;\n        return new Promise(resolve => {\n          model.getBulkProperties(\n            selection,\n            {\n              propFilter: [\"name\"]\n            },\n            dbIds => {\n              return resolve(dbIds);\n            }\n          );\n        });\n      });\n    },\n    seeItem(dbId) {\n      let bimIds = this.bimSelected.filter(el => {\n        return el.selection.indexOf(dbId) !== -1;\n      });\n\n      bimIds.forEach(element => {\n        window.spinal.ForgeViewer.viewer.impl.selector.setSelection(\n          [dbId],\n          element.model\n        );\n      });\n    },\n    deleteItem(dbId) {\n      this.data = this.data.filter(el => el.dbId !== dbId);\n      for (let i = 0; i < this.bimSelected.length; i++) {\n        let index = this.bimSelected[i].selection.indexOf(dbId);\n        if (index !== -1) {\n          this.bimSelected[i].selection.splice(index, 1);\n          console.log(this.bimSelected);\n        }\n      }\n    }\n  },\n  watch: {\n    bimSelected() {\n      console.log(\"update\");\n      if (this.bimSelected) {\n        let values = this.getObjectsSelectedInfo();\n        Promise.all(values).then(dbIds => {\n          dbIds = dbIds.flat();\n          this.data = dbIds;\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n._tableComponent {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: transparent;\n}\n</style>","\n<template>\n  <div class=\"_container\">\n\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item md-size-50\">\n        <md-checkbox v-model=\"searchOnBim\"\n                     class=\"md-primary\">Search on Forge Attributes</md-checkbox>\n      </div>\n      <div class=\"md-layout-item md-size-50\">\n        <md-checkbox v-model=\"searchOnSpinalAttributes\"\n                     class=\"md-primary\">Search on spinal Attributes\n        </md-checkbox>\n      </div>\n\n    </div>\n\n    <div class=\"launchBtn md-layout\">\n      <md-button class=\"_btn md-layout-item md-size-100 md-dense md-primary\"\n                 @click=\"filter\">\n        <md-icon>check</md-icon>\n        SEARCH\n      </md-button>\n    </div>\n\n  </div>\n</template>\n\n<script>\n// import flags from \"../../dialogs/flags\";\nexport default {\n  name: \"launchSearchComponent\",\n  props: {\n    data: {\n      type: Array,\n      require: true\n    }\n  },\n  data() {\n    return {\n      searchOnBim: true,\n      searchOnSpinalAttributes: true\n    };\n  },\n  methods: {\n    filter() {\n      let regex = this.data.map(item => {\n        return {\n          nameRegex: this.getRegex(\n            item.name,\n            item.config.name.option,\n            item.config.name.flag,\n            item.config.name.regex\n          ),\n          valueRegex: this.getRegex(\n            item.value,\n            item.config.value.option,\n            item.config.value.flag,\n            item.config.value.regex\n          )\n        };\n      });\n\n      if (this.searchOnBim || this.searchOnSpinalAttributes) {\n        this.$emit(\"filter\", {\n          regex: regex,\n          bimAttributes: this.searchOnBim,\n          spinalAttributes: this.searchOnSpinalAttributes\n        });\n      } else {\n        alert(\"Sorry, you must select at least one element !!\");\n      }\n    },\n    getRegex(value, option, flag = undefined, argRegex = undefined) {\n      let regex;\n\n      if (option === \"3\" || (value && value.trim().length > 0)) {\n        switch (option) {\n          case \"1\":\n            // regex = `/^${value.trim()}$/i`;\n            regex = new RegExp(`^${RegExp.escape(value.trim())}$`, \"i\");\n            break;\n          case \"2\":\n            // regex = `/${value.trim()}/i`;\n            regex = new RegExp(`${RegExp.escape(value.trim())}`, \"i\");\n\n            break;\n          case \"3\":\n            // if (argRegex && flag) {\n            //   regex = new RegExp(argRegex, flag);\n            // } else if (argRegex && typeof flag === \"undefined\") {\n            //   regex = new RegExp(argRegex);\n            // }\n            regex = new RegExp(argRegex, flag);\n            break;\n        }\n      }\n\n      return regex;\n    }\n  }\n};\n</script>\n\n<style scoped>\n._container ._btn {\n  padding-right: 10px;\n  border: 1px solid #448aff;\n}\n\n._container .launchBtn {\n  margin-top: 30px;\n}\n</style>\n","/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst {\n  spinalPanelManagerService,\n  SpinalPanelApp\n} = require(\"spinal-env-viewer-panel-manager-service\");\n\nconst SpinalForgeExtention = require(\"./SpinalForgeExtention.js\")(\n  spinalPanelManagerService,\n  SpinalPanelApp\n);\n\nmodule.exports = {\n  SpinalForgeExtention\n};\n","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n * \n * This file is part of SpinalCore.\n * \n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n * \n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n * \n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nfunction configInit(option) {\n  const cfg = {};\n  if (typeof option.toolbar !== \"undefined\") {\n    cfg.toolbar = {\n      icon: option.toolbar.icon || \"done\",\n      label: option.toolbar.label || \"label\",\n      subToolbarName: option.toolbar.subToolbarName || \"spinalcom\",\n      styleBtn: {},\n      styleIcon: {}\n    };\n    Object.assign(cfg.toolbar.styleBtn, option.toolbar.styleBtn);\n    Object.assign(cfg.toolbar.styleIcon, option.toolbar.styleIcon);\n  }\n  if (typeof option.panel !== \"undefined\") {\n    cfg.panel = {\n      title: option.panel.title || \"Spinalcom Panel\",\n      classname: option.panel.classname || \"spinal-pannel\",\n      closeBehaviour: option.panel.closeBehaviour || \"hide\"\n    };\n    if (typeof option.style !== \"undefined\") {\n      cfg.style = {};\n      Object.assign(cfg.style, option.style);\n    }\n  }\n  cfg.name = option.name || \"spinalExtention\";\n  cfg.vueMountComponent = option.vueMountComponent;\n  cfg.onLoad = option.onLoad;\n  cfg.onUnLoad = option.onUnLoad;\n  return cfg;\n}\n\nfunction onToolbarCreated() {\n  this.viewer.removeEventListener(\n    window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n    this.onToolbarCreatedBinded\n  );\n  this.onToolbarCreatedBinded = null;\n  createToolbar.call(this);\n}\n\nfunction createToolbar() {\n  this.toolbarButton = new window.Autodesk.Viewing.UI.Button(\n    this.cfg.toolbar.label\n  );\n  this.toolbarButton.onClick = () => {\n    this.tooglePanel(this.cfg);\n  };\n  var icon = this.toolbarButton.container.firstChild;\n  icon.className = \"adsk-button-icon md-icon md-icon-font md-theme-default\";\n  icon.innerHTML = this.cfg.toolbar.icon;\n\n  for (var key in this.cfg.toolbar.styleIcon) {\n    if (this.cfg.toolbar.styleIcon.hasOwnProperty(key)) {\n      icon.style[key] = this.cfg.toolbar.styleIcon[key];\n    }\n  }\n  for (var key in this.cfg.toolbar.styleBtn) {\n    if (this.cfg.toolbar.styleBtn.hasOwnProperty(key)) {\n      this.toolbarButton.container.style[key] = this.cfg.toolbar.styleBtn[key];\n    }\n  }\n\n  this.toolbarButton.setToolTip(this.cfg.toolbar.label);\n  this.subToolbar = this.viewer.toolbar.getControl(\n    this.cfg.toolbar.subToolbarName\n  );\n  if (!this.subToolbar) {\n    this.subToolbar = new window.Autodesk.Viewing.UI.ControlGroup(\n      this.cfg.toolbar.subToolbarName\n    );\n    this.viewer.toolbar.addControl(this.subToolbar);\n  }\n  this.subToolbar.addControl(this.toolbarButton);\n}\n\nfunction closeComponent() {\n  if (this.cfg.panel.closeBehaviour !== \"hide\") {\n    try {\n      this.component.removed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n    this.panel.container.remove();\n    this.panel = null;\n  } else {\n    try {\n      this.component.closed.call(this.component);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction getPanel() {\n  if (this.panel === null) {\n    this.panel = new window.PanelClass(this.viewer, this.cfg.panel.title);\n    var _container = document.createElement(\"div\");\n    var _scrollContainer = this.panel.createScrollContainer();\n\n    _container.className +=\n      this.panel.container.id + \"-panelcontainer \" + this.cfg.panel.classname;\n    for (var key in this.cfg.style) {\n      if (this.cfg.style.hasOwnProperty(key)) {\n        this.panel.container.style[key] = this.cfg.style[key];\n      }\n    }\n\n    if (this.panel.container.style.left) {\n      this.panel.container.style.left = \"0\";\n    }\n\n    this.panel.container.appendChild(_scrollContainer);\n    _scrollContainer.style.height = \"calc(100% - 52px)\";\n    _scrollContainer.appendChild(_container);\n\n    var _footer = this.panel.createFooter();\n    this.panel.container.appendChild(_footer);\n\n    if (this.cfg.vueMountComponent) {\n      this.component = new this.cfg.vueMountComponent().$mount(_container);\n    }\n\n    const _this = this;\n    this.panel.addVisibilityListener(open => {\n      if (!open) {\n        closeComponent.call(_this);\n      }\n    });\n  }\n  return this.panel;\n}\n\n/**\n *\n *\n * @param {*} spinalPanelManagerService\n * @param {*} SpinalPanelApp\n * @returns {object} { createExtention, registerExtention }\n */\nmodule.exports = function (spinalPanelManagerService, SpinalPanelApp) {\n  return {\n    /**\n     * factory function to create a dynamic class that extends the `SpinalPanelApp` class\n     *```js\n{\n  name: \"extention_name\",\n  vueMountComponent: Vue.extend(aVueCompoment),\n  onLoad: () => {console.log(\"onLoad\");},\n  onUnLoad: () => {console.log(\"onUnLoad\");},\n  toolbar: {\n    icon: \"done\",\n    label: \"testLabel\",\n    subToolbarName: \"spinalcom\"\n  },\n  panel: {\n    title: \"Spinalcom Panel\",\n    classname: \"spinal-pannel\",\n    closeBehaviour: \"hide\"\n  },\n  style: {}\n}\n```\n     * @param {object} option see description\n     * @returns SpinalForgeExtention\n     */\n    createExtention(option) {\n      const cfg = configInit(option);\n      /**\n       * class returned by createExtention\n       * this extention is also registered in autodesk viweer\n       * @extends SpinalPanelApp\n       * @property {AutodeskViewer} viewer the autodesk view\n       * @property {AutodeskPanel} panel the panel\n       * @property {Vue.component} component the component mounted\n       * @property {Object} cfg the option given on creation\n       */\n      const SpinalForgeExtention = class extends SpinalPanelApp {\n        constructor(viewer, options) {\n          super();\n          window.Autodesk.Viewing.Extension.call(this, viewer, options);\n          this.viewer = viewer;\n          this.panel = null;\n          this.cfg = cfg;\n          spinalPanelManagerService.registerPanel(cfg.name, this);\n        }\n        /**\n         * method called on load of the extention (managed by the autodesk viewer)\n         * the method create a button in the toolbar if put in the option of `createExtention`.\n         */\n        load() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            // add toolbar\n            if (this.viewer.toolbar) {\n              createToolbar.call(this);\n            } else {\n              this.onToolbarCreatedBinded = onToolbarCreated.bind(this);\n              this.viewer.addEventListener(\n                window.Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n                this.onToolbarCreatedBinded\n              );\n            }\n          }\n          if (typeof cfg.onLoad !== \"undefined\") cfg.onLoad.call(this);\n          return true;\n        }\n        /**\n         * method called when the viewer unload of the extention\n         * (managed by the autodesk viewer)\n         */\n        unload() {\n          if (typeof cfg.toolbar !== \"undefined\") {\n            this.viewer.subToolbar.removeControl(this.toolbarButton);\n          }\n          if (typeof cfg.onUnLoad !== \"undefined\") cfg.onUnLoad.call(this);\n          return true;\n        }\n\n        activate() {\n          return this.load();\n        }\n\n        deactivate() {\n          return this.unload();\n        }\n\n        /**\n         *\n         * @param {*} option\n         */\n        openPanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(true);\n          try {\n            this.component.opened.call(this.component, option, this.viewer);\n          } catch (e) {\n            console.error(e);\n          }\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        closePanel(option) {\n          const panel = getPanel.call(this);\n          panel.setVisible(false);\n        }\n        /**\n         *\n         *\n         * @param {*} option\n         */\n        tooglePanel(option) {\n          if (this.panel === null || this.panel.isVisible() === false) {\n            this.openPanel.call(this, option);\n          } else { this.closePanel.call(this, option); }\n        }\n      };\n      return SpinalForgeExtention;\n    },\n\n    /**\n     * Method to register an extention to the viewer and the forge viewer\n     * @param {string} name name of the extention\n     * @param {*} classExtention an extention created by `createExtention`\n     */\n    registerExtention(name, classExtention) {\n      // register to forge\n      window.Autodesk.Viewing.theExtensionManager.registerExtension(\n        name,\n        classExtention\n      );\n      // register to viewer\n      window.spinal.ForgeExtentionManager.addExtention(name);\n    }\n  };\n};\n","export default function(params, listButton = []) {\n\n  const ViewerToolbarButtonManager = class {\n\n    constructor(viewer, options) {\n      this.viewer = viewer;\n      window.Autodesk.Viewing.Extension.call(this, viewer, options);\n    }\n\n    load() {\n      if (this.viewer.toolbar) {\n        // Toolbar is already available, create the UI\n        this.createUI();\n      } else {\n        // Toolbar hasn't been created yet, wait until we get notification of its creation\n        this.onToolbarCreatedBinded = this.onToolbarCreated.bind(this);\n        this.viewer.addEventListener(window.Autodesk.Viewing\n          .TOOLBAR_CREATED_EVENT,\n          this\n          .onToolbarCreatedBinded);\n      }\n\n      return true;\n    }\n\n\n    onToolbarCreated() {\n      this.viewer.removeEventListener(window.Autodesk.Viewing\n        .TOOLBAR_CREATED_EVENT, this\n        .onToolbarCreatedBinded);\n      this.onToolbarCreatedBinded = null;\n      this.createUI();\n    }\n\n    createUI() {\n\n      let comboButton = new window.Autodesk.Viewing.UI.ComboButton();\n      // var viewer = this.viewer;\n\n      // Button 1\n      // var button = new window.Autodesk.Viewing.UI.Button(params.name);\n      // button.onClick = () => {\n      //   callback();\n      // };\n\n      var icon = comboButton.container.firstChild;\n      icon.className =\n        \"adsk-button-icon md-icon md-icon-font md-theme-default\";\n\n      icon.innerHTML = params.icon;\n\n      if (typeof params.label !== \"undefined\")\n        comboButton.setToolTip(params.label);\n\n      this.subToolbar = this.viewer.toolbar.getControl(\n        params.subToolbarName\n      );\n\n      listButton.forEach(buttonClass => {\n        comboButton.addControl(buttonClass);\n      })\n\n      if (!this.subToolbar) {\n        this.subToolbar = new window.Autodesk.Viewing.UI.ControlGroup(\n          params.subToolbarName\n        );\n\n\n\n        this.viewer.toolbar.addControl(this.subToolbar);\n      }\n\n      this.subToolbar.addControl(comboButton);\n    }\n\n\n    unload() {\n      this.viewer.toolbar.removeControl(this.subToolbar);\n      return true;\n    }\n\n    // registerExtension(name, className) {\n    //   window.Autodesk.Viewing.theExtensionManager.registerExtension(\n    //     name,\n    //     className\n    //   );\n    // }\n\n  }\n  return ViewerToolbarButtonManager;\n}","import {\n  spinalPanelManagerService\n} from \"spinal-env-viewer-panel-manager-service\";\n\nimport createBtn from \"./createBtn\";\n\nexport default (function() {\n\n  return createBtn(\"Filter By Level\", \"location_city\", () => {\n    spinalPanelManagerService.openPanel(\"filterByLevelDialog\", {});\n  })\n\n})();","export default function createButton(buttonName, buttonIcon, buttonAction) {\n  let button = new window.Autodesk.Viewing.UI.Button(buttonName);\n\n  button.setToolTip(buttonName);\n\n  button.onClick = () => {\n    typeof buttonAction === \"function\" ? buttonAction() : console.log(\"\");\n  };\n\n  var icon = button.container.firstChild;\n  icon.className = \"adsk-button-icon md-icon md-icon-font md-theme-default\";\n\n  icon.innerHTML = buttonIcon;\n\n  return button;\n}\n","import {\n  spinalPanelManagerService\n} from \"spinal-env-viewer-panel-manager-service\";\n\nimport createBtn from \"./createBtn\";\n\nexport default (function() {\n\n  return createBtn(\"Filter Panel\", \"filter_list\", () => {\n    spinalPanelManagerService.openPanel(\"filterPanel\", {});\n  })\n\n})();","\"use strict\";\n/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REFERENCE_ROOM_RELATION = exports.ROOM_REFERENCE_CONTEXT = exports.ZONE_REFERENCE_CONTEXT = exports.FLOOR_REFERENCE_CONTEXT = exports.BUILDING_REFERENCE_CONTEXT = exports.SITE_REFERENCE_CONTEXT = exports.REFERENCE_RELATION = exports.REFERENCE_TYPE = exports.MAP_RELATION_TYPE = exports.MAP_TYPE_RELATION = exports.GEOGRAPHIC_RELATIONS_ORDER = exports.EQUIPMENT_RELATION = exports.GEOGRAPHIC_RELATIONS = exports.ROOM_RELATION = exports.ZONE_RELATION = exports.FLOOR_RELATION = exports.BUILDING_RELATION = exports.SITE_RELATION = exports.GEOGRAPHIC_TYPES_ORDER = exports.EQUIPMENT_TYPE = exports.GEOGRAPHIC_TYPES = exports.ROOM_TYPE = exports.ZONE_TYPE = exports.FLOOR_TYPE = exports.BUILDING_TYPE = exports.SITE_TYPE = exports.CONTEXT_TYPE = void 0;\nconst CONTEXT_TYPE = 'geographicContext';\nexports.CONTEXT_TYPE = CONTEXT_TYPE;\nconst SITE_TYPE = 'geographicSite';\nexports.SITE_TYPE = SITE_TYPE;\nconst BUILDING_TYPE = 'geographicBuilding';\nexports.BUILDING_TYPE = BUILDING_TYPE;\nconst FLOOR_TYPE = 'geographicFloor';\nexports.FLOOR_TYPE = FLOOR_TYPE;\nconst ZONE_TYPE = 'geographicZone';\nexports.ZONE_TYPE = ZONE_TYPE;\nconst ROOM_TYPE = 'geographicRoom';\nexports.ROOM_TYPE = ROOM_TYPE;\nconst EQUIPMENT_TYPE = 'BIMObject';\nexports.EQUIPMENT_TYPE = EQUIPMENT_TYPE;\nconst REFERENCE_TYPE = 'geographicReference';\nexports.REFERENCE_TYPE = REFERENCE_TYPE;\nconst SITE_RELATION = 'hasGeographicSite';\nexports.SITE_RELATION = SITE_RELATION;\nconst BUILDING_RELATION = 'hasGeographicBuilding';\nexports.BUILDING_RELATION = BUILDING_RELATION;\nconst FLOOR_RELATION = 'hasGeographicFloor';\nexports.FLOOR_RELATION = FLOOR_RELATION;\nconst ZONE_RELATION = 'hasGeographicZone';\nexports.ZONE_RELATION = ZONE_RELATION;\nconst ROOM_RELATION = 'hasGeographicRoom';\nexports.ROOM_RELATION = ROOM_RELATION;\nconst EQUIPMENT_RELATION = 'hasBimObject';\nexports.EQUIPMENT_RELATION = EQUIPMENT_RELATION;\nconst REFERENCE_RELATION = 'hasReferenceObject';\nexports.REFERENCE_RELATION = REFERENCE_RELATION;\nconst REFERENCE_ROOM_RELATION = 'hasReferenceObject.ROOM';\nexports.REFERENCE_ROOM_RELATION = REFERENCE_ROOM_RELATION;\nconst SITE_REFERENCE_CONTEXT = '.SiteContext';\nexports.SITE_REFERENCE_CONTEXT = SITE_REFERENCE_CONTEXT;\nconst BUILDING_REFERENCE_CONTEXT = '.BuildingContext';\nexports.BUILDING_REFERENCE_CONTEXT = BUILDING_REFERENCE_CONTEXT;\nconst FLOOR_REFERENCE_CONTEXT = '.FloorContext';\nexports.FLOOR_REFERENCE_CONTEXT = FLOOR_REFERENCE_CONTEXT;\nconst ZONE_REFERENCE_CONTEXT = '.ZoneContext';\nexports.ZONE_REFERENCE_CONTEXT = ZONE_REFERENCE_CONTEXT;\nconst ROOM_REFERENCE_CONTEXT = '.RoomContext';\nexports.ROOM_REFERENCE_CONTEXT = ROOM_REFERENCE_CONTEXT;\nconst GEOGRAPHIC_TYPES = Object.freeze([\n    SITE_TYPE,\n    BUILDING_TYPE,\n    FLOOR_TYPE,\n    ZONE_TYPE,\n    ROOM_TYPE,\n]);\nexports.GEOGRAPHIC_TYPES = GEOGRAPHIC_TYPES;\nconst GEOGRAPHIC_TYPES_ORDER = Object.freeze([\n    CONTEXT_TYPE,\n    SITE_TYPE,\n    BUILDING_TYPE,\n    FLOOR_TYPE,\n    ZONE_TYPE,\n    ROOM_TYPE,\n    EQUIPMENT_TYPE,\n]);\nexports.GEOGRAPHIC_TYPES_ORDER = GEOGRAPHIC_TYPES_ORDER;\nconst GEOGRAPHIC_RELATIONS = Object.freeze([\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n]);\nexports.GEOGRAPHIC_RELATIONS = GEOGRAPHIC_RELATIONS;\nconst GEOGRAPHIC_RELATIONS_ORDER = Object.freeze([\n    SITE_RELATION,\n    BUILDING_RELATION,\n    FLOOR_RELATION,\n    ZONE_RELATION,\n    ROOM_RELATION,\n    EQUIPMENT_RELATION,\n]);\nexports.GEOGRAPHIC_RELATIONS_ORDER = GEOGRAPHIC_RELATIONS_ORDER;\nconst MAP_TYPE_RELATION = Object.freeze(new Map([\n    [SITE_TYPE, SITE_RELATION],\n    [BUILDING_TYPE, BUILDING_RELATION],\n    [FLOOR_TYPE, FLOOR_RELATION],\n    [ZONE_TYPE, ZONE_RELATION],\n    [ROOM_TYPE, ROOM_RELATION],\n    [EQUIPMENT_TYPE, EQUIPMENT_RELATION],\n]));\nexports.MAP_TYPE_RELATION = MAP_TYPE_RELATION;\nconst MAP_RELATION_TYPE = Object.freeze(new Map([\n    [SITE_RELATION, SITE_TYPE],\n    [BUILDING_RELATION, BUILDING_TYPE],\n    [FLOOR_RELATION, FLOOR_TYPE],\n    [ZONE_RELATION, ZONE_TYPE],\n    [ROOM_RELATION, ROOM_TYPE],\n    [EQUIPMENT_RELATION, EQUIPMENT_TYPE],\n]));\nexports.MAP_RELATION_TYPE = MAP_RELATION_TYPE;\n//# sourceMappingURL=constants.js.map","/*\n * Copyright 2023 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nconst CONTEXT_TYPE = 'geographicContext';\nconst SITE_TYPE = 'geographicSite';\nconst BUILDING_TYPE = 'geographicBuilding';\nconst FLOOR_TYPE = 'geographicFloor';\nconst ZONE_TYPE = 'geographicZone';\nconst ROOM_TYPE = 'geographicRoom';\nconst EQUIPMENT_TYPE = 'BIMObject';\nconst REFERENCE_TYPE = 'geographicReference';\n\nconst SITE_RELATION = 'hasGeographicSite';\nconst BUILDING_RELATION = 'hasGeographicBuilding';\nconst FLOOR_RELATION = 'hasGeographicFloor';\nconst ZONE_RELATION = 'hasGeographicZone';\nconst ROOM_RELATION = 'hasGeographicRoom';\nconst EQUIPMENT_RELATION = 'hasBimObject';\nconst REFERENCE_RELATION = 'hasReferenceObject';\nconst REFERENCE_ROOM_RELATION = 'hasReferenceObject.ROOM';\n\nconst SITE_REFERENCE_CONTEXT = '.SiteContext';\nconst BUILDING_REFERENCE_CONTEXT = '.BuildingContext';\nconst FLOOR_REFERENCE_CONTEXT = '.FloorContext';\nconst ZONE_REFERENCE_CONTEXT = '.ZoneContext';\nconst ROOM_REFERENCE_CONTEXT = '.RoomContext';\n\nconst GEOGRAPHIC_TYPES = Object.freeze([\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n]) as string[];\n\nconst GEOGRAPHIC_TYPES_ORDER = Object.freeze([\n  CONTEXT_TYPE,\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  EQUIPMENT_TYPE,\n]) as string[];\n\nconst GEOGRAPHIC_RELATIONS = Object.freeze([\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n]) as string[];\n\nconst GEOGRAPHIC_RELATIONS_ORDER = Object.freeze([\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  EQUIPMENT_RELATION,\n]) as string[];\n\nconst MAP_TYPE_RELATION = Object.freeze(\n  new Map([\n    [SITE_TYPE, SITE_RELATION],\n    [BUILDING_TYPE, BUILDING_RELATION],\n    [FLOOR_TYPE, FLOOR_RELATION],\n    [ZONE_TYPE, ZONE_RELATION],\n    [ROOM_TYPE, ROOM_RELATION],\n    [EQUIPMENT_TYPE, EQUIPMENT_RELATION],\n  ])\n) as Map<string, string>;\n\nconst MAP_RELATION_TYPE = Object.freeze(\n  new Map([\n    [SITE_RELATION, SITE_TYPE],\n    [BUILDING_RELATION, BUILDING_TYPE],\n    [FLOOR_RELATION, FLOOR_TYPE],\n    [ZONE_RELATION, ZONE_TYPE],\n    [ROOM_RELATION, ROOM_TYPE],\n    [EQUIPMENT_RELATION, EQUIPMENT_TYPE],\n  ])\n) as Map<string, string>;\n\nexport {\n  CONTEXT_TYPE,\n  SITE_TYPE,\n  BUILDING_TYPE,\n  FLOOR_TYPE,\n  ZONE_TYPE,\n  ROOM_TYPE,\n  GEOGRAPHIC_TYPES,\n  EQUIPMENT_TYPE,\n  GEOGRAPHIC_TYPES_ORDER,\n  SITE_RELATION,\n  BUILDING_RELATION,\n  FLOOR_RELATION,\n  ZONE_RELATION,\n  ROOM_RELATION,\n  GEOGRAPHIC_RELATIONS,\n  EQUIPMENT_RELATION,\n  GEOGRAPHIC_RELATIONS_ORDER,\n  MAP_TYPE_RELATION,\n  MAP_RELATION_TYPE,\n  REFERENCE_TYPE,\n  REFERENCE_RELATION,\n  SITE_REFERENCE_CONTEXT,\n  BUILDING_REFERENCE_CONTEXT,\n  FLOOR_REFERENCE_CONTEXT,\n  ZONE_REFERENCE_CONTEXT,\n  ROOM_REFERENCE_CONTEXT,\n  REFERENCE_ROOM_RELATION\n};\n"],"names":["forgeFile","window","spinal","spinalSystem","getModel","hasOwnProperty","add_attr","graph","SpinalGraph","createGraph","getGraph","context","getContext","BIM_OBJECT_CONTEXT_TYPE","undefined","SpinalContext","addContext","createContext","BIM_OBJECT_NODE_TYPE","BIM_OBJECT_RELATION_NAME","REFERENCE_OBJECT_RELATION_NAME","BIM_OBJECT_RELATION_TYPE","SPINAL_RELATION_PTR_LST_TYPE","bimObjectService","call","createBIMObject","dbid","name","BIMObjNode","getBIMObject","BIMObject","SpinalBIMObject","SpinalNode","info","BIMObjectContext","addChildInContext","BIMObjectArray","getChildren","get","addBIMObject","parent","dbId","node","removeBIMObject","child","removeChild","deleteBIMObject","children","getChildrenInContext","find","Error","removeFromGraph","addReferenceObject","addChild","removeReferenceObject","constants","spinalCore","require","globalType","global","Model","constructor","_id","_name","FileSystem","_sig_server","id","register_models"],"version":3,"file":"spinal-env-viewer-plugin-filter.3ed84a48.js.map"}