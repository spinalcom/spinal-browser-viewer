{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAED,QAAQ;;;ACxBR;;;;;;;;;;;;;;;;;;;;;;CAsBC,GAED;AACA;AAEA,MAAM,qBAAqB;AAC3B,CAAA,GAAA,2DAAuB,EAAE,YAAY,oBAAoB,IAAI,CAAA,GAAA,0CAAmB,KAAK;IAAC;CAAE;;;AC5BxF;;;;;;;;;;;;;;;;;;;;;;CAsBC;;AAuCD,0DAAa;AArCb;AACA;AAEA,MAAM,QAAQ;AACd,MAAM,YAAY;AAElB,eAAe,kBAAkB,UAAU;IACzC,MAAM,mBAAmB,IAAI;IAC7B,MAAM,UAAU,EAAE;IAElB,SAAS,qBAAqB,KAAK;QACjC,IAAI,iBAAiB,IAAI,QAAQ,OAAO,iBAAiB,IAAI;QAC7D,MAAM,OAAO,IAAI,QAAQ,CAAC;YACxB,MAAM,qBAAqB,CAAC;gBAC1B,QAAQ;YACV;QACF;QACA,iBAAiB,IAAI,OAAO;QAC5B,OAAO;IACT;IAEA,QAAQ,IAAI,yCAAyC,WAAW;IAChE,KAAK,MAAM,UAAU,WAAY;QAC/B,MAAM,YAAY,OAAO,KAAK,UAAU;QACxC,MAAM,QAAQ,OAAO,OAAO,iBAAiB,kBAAkB;QAC/D,4CAA4C;QAC5C,MAAM,oBAAoB,MAAM,qBAAqB;QACrD,MAAM,aAAa,OAAO,KAAK,WAAW;QAC1C,IAAI,OAAO,KAAK,KAAK,UAAU,iBAAiB,CAAC,WAAW,EAAE;YAC5D,QAAQ,KAAK,iBAAiB,CAAC,WAAW;YAC1C,OAAO,KAAK,KAAK,IAAI,iBAAiB,CAAC,WAAW;QACpD;IACF;IACA,QAAQ,IAAI;IACZ,IAAI,QAAQ,SAAS,GAAG,QAAQ,IAAI,WAAW;AACjD;AAEO,MAAM,6BAA6B,CAAA,GAAA,mDAAe;IAEvD,aAAc;QACZ,KAAK,CAAC,OAAO,OAAO;YAClB,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,WAAW;QACb;IACF;IAEA,QAAQ,MAAM,EAAE;QACd,IAAI,OAAO,aAAa,KAAK,UAAU,WACrC,OAAO,QAAQ,QAAQ;QAEzB,OAAO,QAAQ,QAAQ;IACzB;IAEA,MAAM,OAAO,MAAM,EAAE;QACnB,MAAM,SAAS,OAAO,aAAa,GAAG;QACtC,MAAM,QAAQ,CAAA,GAAA,+CAAiB,EAAE,YAAY;QAC7C,MAAM,aAAa,EAAE;QACrB,MAAM,cAAc,MAAM,MAAM,YAAY;QAC5C,KAAK,MAAM,cAAc,YAAa;YACpC,4CAA4C;YAC5C,MAAM,SAAS,MAAM,WAAW,YAAY;YAC5C,WAAW,QAAQ;QACrB;QACA,OAAO,kBAAkB;IAC3B;AACF","sources":["node_modules/spinal-env-viewer-plugin-item_model_selector/index.js","node_modules/spinal-env-viewer-plugin-item_model_selector/src/index.js","node_modules/spinal-env-viewer-plugin-item_model_selector/src/btn/UpdateBimObjectIdBtn.js"],"sourcesContent":["/*\n * Copyright 2020 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nrequire(\"./src/index\");\n","/*\n * Copyright 2020 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { spinalContextMenuService } from \"spinal-env-viewer-context-menu-service\";\nimport { UpdateBimObjectIdBtn } from \"./btn/UpdateBimObjectIdBtn\";\n\nconst SIDE_BAR_HOOK_NAME = \"GraphManagerSideBar\";\nspinalContextMenuService.registerApp(SIDE_BAR_HOOK_NAME, new UpdateBimObjectIdBtn(), [7]);\n","/*\n * Copyright 2020 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nimport { SpinalContextApp } from 'spinal-env-viewer-context-menu-service';\nimport { SpinalGraphService } from 'spinal-env-viewer-graph-service';\n\nconst LABEL = 'Update BimObject Ids';\nconst NODE_TYPE = 'BimFile';\n\nasync function updateBimObjectId(bimObjects) {\n  const mapModelExternId = new Map();\n  const updated = [];\n\n  function getExternalIdMapping(model) {\n    if (mapModelExternId.has(model)) return mapModelExternId.get(model);\n    const prom = new Promise((resolve) => {\n      model.getExternalIdMapping((map) => {\n        resolve(map);\n      });\n    });\n    mapModelExternId.set(model, prom);\n    return prom;\n  }\n\n  console.log(\"updateBimObjectId - number of items :\", bimObjects.length);\n  for (const bimObj of bimObjects) {\n    const bimFileId = bimObj.info.bimFileId.get();\n    const model = window.spinal.BimObjectService.getModelByBimfile(bimFileId);\n    // eslint-disable-next-line no-await-in-loop\n    const externalIdMapping = await getExternalIdMapping(model);\n    const externalId = bimObj.info.externalId.get();\n    if (bimObj.info.dbid.get() !== externalIdMapping[externalId]) {\n      updated.push(externalIdMapping[externalId]);\n      bimObj.info.dbid.set(externalIdMapping[externalId]);\n    }\n  }\n  console.log(\"End\");\n  if (updated.length > 0) console.log('UPDATED', updated);\n}\n\nexport class UpdateBimObjectIdBtn extends SpinalContextApp {\n\n  constructor() {\n    super(LABEL, LABEL, {\n      icon: 'clear_all',\n      icon_type: 'in',\n      backgroundColor: '#000000',\n      fontColor: '#ffffff'\n    });\n  }\n\n  isShown(option) {\n    if (option.selectedNode.type.get() === NODE_TYPE) {\n      return Promise.resolve(true);\n    }\n    return Promise.resolve(-1);\n  }\n\n  async action(option) {\n    const nodeId = option.selectedNode.id.get();\n    const rNode = SpinalGraphService.getRealNode(nodeId);\n    const bimObjects = [];\n    const bimContexts = await rNode.getChildren(\"hasBimContext\");\n    for (const bimContext of bimContexts) {\n      // eslint-disable-next-line no-await-in-loop\n      const bimObj = await bimContext.getChildren(\"hasBimObject\");\n      bimObjects.push(...bimObj);\n    }\n    return updateBimObjectId(bimObjects);\n  }\n}\n"],"names":[],"version":3,"file":"spinal-env-viewer-plugin-item_model_selector.5d86f179.js.map"}